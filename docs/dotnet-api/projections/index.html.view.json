{"conceptual":"\n<p sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"7\" sourceendlinenumber=\"7\">The Event Store Client API includes helper methods that use the HTTP API to allow you to manage projections. This document describes the methods found in the <code>ProjectionsManager</code> class. All methods in this class are asynchronous.</p>\n<h2 id=\"methods\" sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"9\" sourceendlinenumber=\"9\">Methods</h2>\n<h3 id=\"enable-a-projection\" sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"11\" sourceendlinenumber=\"11\">Enable a Projection</h3>\n<p sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"13\" sourceendlinenumber=\"13\">Enables an existing projection by name. You must have access to a projection to enable it.</p>\n<pre sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"15\" sourceendlinenumber=\"17\"><code class=\"lang-csharp\">public Task EnableAsync(string name, UserCredentials userCredentials = null)\n</code></pre><h3 id=\"disable-a-projection\" sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"19\" sourceendlinenumber=\"19\">Disable a Projection</h3>\n<p sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"21\" sourceendlinenumber=\"21\">Disables an existing projection by name. You must have access to a projection to disable it.</p>\n<pre sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"23\" sourceendlinenumber=\"25\"><code class=\"lang-csharp\">public Task DisableAsync(string name, UserCredentials userCredentials = null)\n</code></pre><h3 id=\"abort-a-projection\" sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"27\" sourceendlinenumber=\"27\">Abort a Projection</h3>\n<p sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"29\" sourceendlinenumber=\"29\">Aborts an existing projection by name. You must have access to a projection to abort it.</p>\n<pre sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"31\" sourceendlinenumber=\"33\"><code class=\"lang-csharp\">public Task AbortAsync(string name, UserCredentials userCredentials = null)\n</code></pre><h3 id=\"create-a-one-time-projection\" sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"35\" sourceendlinenumber=\"35\">Create a One-Time Projection</h3>\n<p sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"37\" sourceendlinenumber=\"37\">Creates a projection that runs until the end of the log and then stops. The query parameter contains the JavaScript you want created as a one time projection.</p>\n<pre sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"39\" sourceendlinenumber=\"41\"><code class=\"lang-csharp\">public Task CreateOneTimeAsync(string query, UserCredentials userCredentials = null)\n</code></pre><h3 id=\"create-a-continuous-projection\" sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"43\" sourceendlinenumber=\"43\">Create a Continuous Projection</h3>\n<p sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"45\" sourceendlinenumber=\"45\">Creates a projection that runs until the end of the log and then continues running. The query parameter contains the JavaScript you want created as a one time projection. Continuous projections have explicit names and you can enable or disable them via this name.</p>\n<pre sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"47\" sourceendlinenumber=\"49\"><code class=\"lang-csharp\">public Task CreateContinuousAsync(string name, string query, UserCredentials userCredentials = null)\n</code></pre><h3 id=\"list-all-projections\" sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"51\" sourceendlinenumber=\"51\">List all Projections</h3>\n<p sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"53\" sourceendlinenumber=\"53\">Returns a list of all projections.</p>\n<pre sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"55\" sourceendlinenumber=\"57\"><code class=\"lang-csharp\">public Task&lt;List&lt;ProjectionDetails&gt;&gt; ListAllAsync(UserCredentials userCredentials = null)\n</code></pre><h3 id=\"list-one-time-projections\" sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"59\" sourceendlinenumber=\"59\">List One-Time Projections</h3>\n<p sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"61\" sourceendlinenumber=\"61\">Returns a list of all One-Time Projections.</p>\n<pre sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"63\" sourceendlinenumber=\"65\"><code class=\"lang-csharp\">public Task&lt;List&lt;ProjectionDetails&gt;&gt; ListOneTimeAsync(UserCredentials userCredentials = null)\n</code></pre><h3 id=\"get-statistics-on-a-projection\" sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"67\" sourceendlinenumber=\"67\">Get Statistics on a Projection</h3>\n<p sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"69\" sourceendlinenumber=\"69\">Returns the statistics associated with a named projection.</p>\n<pre sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"71\" sourceendlinenumber=\"73\"><code class=\"lang-csharp\">public Task&lt;string&gt; GetStatisticsAsync(string name, UserCredentials userCredentials = null)\n</code></pre><h3 id=\"delete-projection\" sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"75\" sourceendlinenumber=\"75\">Delete Projection</h3>\n<p sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"77\" sourceendlinenumber=\"77\">Deletes a named projection. You must have access to a projection to delete it.</p>\n<pre sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"79\" sourceendlinenumber=\"81\"><code class=\"lang-csharp\">public Task DeleteAsync(string name, UserCredentials userCredentials = null)\n</code></pre><h3 id=\"get-state\" sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"83\" sourceendlinenumber=\"83\">Get State</h3>\n<p sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"85\" sourceendlinenumber=\"85\">Retrieves the state of a projection.</p>\n<pre sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"87\" sourceendlinenumber=\"89\"><code class=\"lang-csharp\">public Task&lt;string&gt; GetState(string name, UserCredentials userCredentials = null)\n</code></pre><h3 id=\"get-partition-state\" sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"91\" sourceendlinenumber=\"91\">Get Partition State</h3>\n<p sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"93\" sourceendlinenumber=\"93\">Retrieves the state of the projection via the given partition.</p>\n<pre sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"95\" sourceendlinenumber=\"97\"><code class=\"lang-csharp\">public Task&lt;string&gt; GetPartitionStateAsync(string name, string partition, UserCredentials userCredentials = null)\n</code></pre><h3 id=\"get-result\" sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"99\" sourceendlinenumber=\"99\">Get Result</h3>\n<p sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"101\" sourceendlinenumber=\"101\">Retrieves the result of the projection.</p>\n<pre sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"103\" sourceendlinenumber=\"105\"><code class=\"lang-csharp\">public Task&lt;string&gt; GetResult(string name, UserCredentials userCredentials = null)\n</code></pre><h3 id=\"get-partition-result\" sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"107\" sourceendlinenumber=\"107\">Get Partition Result</h3>\n<p sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"109\" sourceendlinenumber=\"109\">Retrieves the result of the projection via the given partition.</p>\n<pre sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"111\" sourceendlinenumber=\"113\"><code class=\"lang-csharp\">public Task&lt;string&gt; GetPartitionResultAsync(string name, string partition, UserCredentials userCredentials = null)\n</code></pre>","type":"Conceptual","source":{"remote":{"path":"dotnet-api/projections.md","branch":"feature/stats-REST","repo":"git@github.com:EventStore/docs.geteventstore.com.git"},"startLine":0.0,"endLine":0.0,"isExternal":false},"path":"dotnet-api/projections.md","documentation":{"remote":{"path":"dotnet-api/projections.md","branch":"feature/stats-REST","repo":"git@github.com:EventStore/docs.geteventstore.com.git"},"startLine":0.0,"endLine":0.0,"isExternal":false},"_docfxVersion":"2.43.3.0","_disableBreadcrumb":true,"_enableSearch":true,"_gitContribute":{"branch":"master"},"_appFaviconPath":"assets/favicon.ico","_appTitle":"Event Store","_appFooter":"&copy; 2019 Event Store Limited","_disableNavbar":false,"_disableToc":true,"_systemKeys":["conceptual","type","source","path","documentation","title","rawTitle","wordCount"],"title":"Projections Management","rawTitle":"<h1 id=\"projections-management\" sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"5\" sourceendlinenumber=\"5\">Projections Management</h1>","outputFileName":"index.html","wordCount":370.0,"_lang":"csharp","_tocPath":"toc.html","_navPath":"toc.html","_rel":"../../","_path":"dotnet-api/projections/index.html","_key":"dotnet-api/projections.md","_navRel":"../../toc.html","_tocRel":"../../toc.html","_navKey":"~/toc.yml","_tocKey":"~/toc.yml","__global":{"classesInSubtitle":"Classes","structsInSubtitle":"Structs","interfacesInSubtitle":"Interfaces","enumsInSubtitle":"Enums","delegatesInSubtitle":"Delegates","constructorsInSubtitle":"Constructors","fieldsInSubtitle":"Fields","propertiesInSubtitle":"Properties","methodsInSubtitle":"Methods","eventsInSubtitle":"Events","operatorsInSubtitle":"Operators","eiisInSubtitle":"Explicit Interface Implementations","functionsInSubtitle":"Functions","membersInSubtitle":"Members","improveThisDoc":"Improve this Doc","viewSource":"View Source","inheritance":"Inheritance","inheritedMembers":"Inherited Members","namespace":"Namespace","assembly":"Assembly","syntax":"Syntax","overrides":"Overrides","implements":"Implements","remarks":"Remarks","examples":"Examples","seealso":"See Also","declaration":"Declaration","parameters":"Parameters","typeParameters":"Type Parameters","type":"Type","name":"Name","description":"Description","returns":"Returns","fieldValue":"Field Value","propertyValue":"Property Value","eventType":"Event Type","exceptions":"Exceptions","condition":"Condition","extensionMethods":"Extension Methods","note":"<h5>Note</h5>","warning":"<h5>Warning</h5>","tip":"<h5>Tip</h5>","important":"<h5>Important</h5>","caution":"<h5>Caution</h5>","next":"<h5>Next Steps</h5>","_shared":{}},"docurl":"https://github.com/EventStore/docs.geteventstore.com/blob/master/dotnet-api/projections.md/#L1"}