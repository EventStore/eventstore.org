{"uid":"EventStore.Transport.Tcp.Formatting.FormatterBase`1","isEii":false,"isExtensionMethod":false,"parent":{"uid":"EventStore.Transport.Tcp.Formatting","isEii":false,"isExtensionMethod":false,"name":[{"lang":"csharp","value":"EventStore.Transport.Tcp.Formatting"},{"lang":"vb","value":"EventStore.Transport.Tcp.Formatting"}],"nameWithType":[{"lang":"csharp","value":"EventStore.Transport.Tcp.Formatting"},{"lang":"vb","value":"EventStore.Transport.Tcp.Formatting"}],"fullName":[{"lang":"csharp","value":"EventStore.Transport.Tcp.Formatting"},{"lang":"vb","value":"EventStore.Transport.Tcp.Formatting"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Transport.Tcp.Formatting\" text=\"EventStore.Transport.Tcp.Formatting\" alt=\"EventStore.Transport.Tcp.Formatting\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Transport.Tcp.Formatting\" text=\"EventStore.Transport.Tcp.Formatting\" alt=\"EventStore.Transport.Tcp.Formatting\"/>"}],"level":0.0},"children":[{"inMethod":true,"typePropertyName":"inMethod","id":"methods","children":[{"uid":"EventStore.Transport.Tcp.Formatting.FormatterBase`1.From(EventStore.BufferManagement.BufferPool)","isEii":false,"isExtensionMethod":false,"parent":"EventStore.Transport.Tcp.Formatting.FormatterBase`1","isExternal":false,"name":[{"lang":"csharp","value":"From(BufferPool)"},{"lang":"vb","value":"From(BufferPool)"}],"nameWithType":[{"lang":"csharp","value":"FormatterBase<T>.From(BufferPool)"},{"lang":"vb","value":"FormatterBase(Of T).From(BufferPool)"}],"fullName":[{"lang":"csharp","value":"EventStore.Transport.Tcp.Formatting.FormatterBase<T>.From(EventStore.BufferManagement.BufferPool)"},{"lang":"vb","value":"EventStore.Transport.Tcp.Formatting.FormatterBase(Of T).From(EventStore.BufferManagement.BufferPool)"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Transport.Tcp.Formatting.FormatterBase`1.From(EventStore.BufferManagement.BufferPool)\" text=\"From(BufferPool)\" alt=\"EventStore.Transport.Tcp.Formatting.FormatterBase&lt;T&gt;.From(EventStore.BufferManagement.BufferPool)\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Transport.Tcp.Formatting.FormatterBase`1.From(EventStore.BufferManagement.BufferPool)\" text=\"From(BufferPool)\" alt=\"EventStore.Transport.Tcp.Formatting.FormatterBase&lt;T&gt;.From(EventStore.BufferManagement.BufferPool)\"/>"}],"syntax":{"content":[{"lang":"csharp","value":"public virtual T From(BufferPool bufferPool)"},{"lang":"vb","value":"Public Overridable Function From(bufferPool As BufferPool) As T"}],"parameters":[{"id":"bufferPool","type":{"uid":"EventStore.BufferManagement.BufferPool","name":[{"lang":"csharp","value":"BufferPool"},{"lang":"vb","value":"BufferPool"}],"nameWithType":[{"lang":"csharp","value":"BufferPool"},{"lang":"vb","value":"BufferPool"}],"fullName":[{"lang":"csharp","value":"EventStore.BufferManagement.BufferPool"},{"lang":"vb","value":"EventStore.BufferManagement.BufferPool"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.BufferManagement.BufferPool\" text=\"BufferPool\" alt=\"EventStore.BufferManagement.BufferPool\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.BufferManagement.BufferPool\" text=\"BufferPool\" alt=\"EventStore.BufferManagement.BufferPool\"/>"}]},"description":"<p sourcefile=\"dotnet-api/code/EventStore.Transport.Tcp.Formatting.FormatterBase-1.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"1\">The BufferPool to get data from.</p>\n"}],"return":{"type":{"uid":"{T}","definition":"T","name":[{"lang":"csharp","value":"T"},{"lang":"vb","value":"T"}],"nameWithType":[{"lang":"csharp","value":"T"},{"lang":"vb","value":"T"}],"fullName":[{"lang":"csharp","value":"T"},{"lang":"vb","value":"T"}],"specName":[{"lang":"csharp","value":"<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"},{"lang":"vb","value":"<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"}]},"description":""}},"source":{"id":"From","path":"/Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Transport.Tcp/Formatting/FormatterBase.cs","startLine":38.0,"endLine":0.0,"isExternal":false},"assemblies":["EventStore.Transport.Tcp"],"namespace":"EventStore.Transport.Tcp.Formatting","example":[],"overload":{"uid":"EventStore.Transport.Tcp.Formatting.FormatterBase`1.From*","name":[{"lang":"csharp","value":"From"},{"lang":"vb","value":"From"}],"nameWithType":[{"lang":"csharp","value":"FormatterBase<T>.From"},{"lang":"vb","value":"FormatterBase(Of T).From"}],"fullName":[{"lang":"csharp","value":"EventStore.Transport.Tcp.Formatting.FormatterBase<T>.From"},{"lang":"vb","value":"EventStore.Transport.Tcp.Formatting.FormatterBase(Of T).From"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Transport.Tcp.Formatting.FormatterBase`1.From*\" text=\"From\" alt=\"EventStore.Transport.Tcp.Formatting.FormatterBase&lt;T&gt;.From\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Transport.Tcp.Formatting.FormatterBase`1.From*\" text=\"From\" alt=\"EventStore.Transport.Tcp.Formatting.FormatterBase&lt;T&gt;.From\"/>"}],"id":"EventStore_Transport_Tcp_Formatting_FormatterBase_1_From_"},"level":0.0,"implements":[{"uid":"EventStore.Transport.Tcp.Formatting.IMessageFormatter{{T}}.From(EventStore.BufferManagement.BufferPool)","definition":"EventStore.Transport.Tcp.Formatting.IMessageFormatter`1.From(EventStore.BufferManagement.BufferPool)","name":[{"lang":"csharp","value":"From(BufferPool)"},{"lang":"vb","value":"From(BufferPool)"}],"nameWithType":[{"lang":"csharp","value":"IMessageFormatter<T>.From(BufferPool)"},{"lang":"vb","value":"IMessageFormatter(Of T).From(BufferPool)"}],"fullName":[{"lang":"csharp","value":"EventStore.Transport.Tcp.Formatting.IMessageFormatter<T>.From(EventStore.BufferManagement.BufferPool)"},{"lang":"vb","value":"EventStore.Transport.Tcp.Formatting.IMessageFormatter(Of T).From(EventStore.BufferManagement.BufferPool)"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Transport.Tcp.Formatting.IMessageFormatter`1.From(EventStore.BufferManagement.BufferPool)\" text=\"From\" alt=\"EventStore.Transport.Tcp.Formatting.IMessageFormatter&lt;T&gt;.From\"/>(<xref uid=\"EventStore.BufferManagement.BufferPool\" text=\"BufferPool\" alt=\"EventStore.BufferManagement.BufferPool\"/>)"},{"lang":"vb","value":"<xref uid=\"EventStore.Transport.Tcp.Formatting.IMessageFormatter`1.From(EventStore.BufferManagement.BufferPool)\" text=\"From\" alt=\"EventStore.Transport.Tcp.Formatting.IMessageFormatter(Of T).From\"/>(<xref uid=\"EventStore.BufferManagement.BufferPool\" text=\"BufferPool\" alt=\"EventStore.BufferManagement.BufferPool\"/>)"}]}],"modifiers.csharp":["public","virtual"],"modifiers.vb":["Public","Overridable"],"type":"method","summary":"<p sourcefile=\"dotnet-api/code/EventStore.Transport.Tcp.Formatting.FormatterBase-1.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">Gets a message from a <xref href=\"EventStore.BufferManagement.BufferPool\" data-throw-if-not-resolved=\"false\"></xref></p>\n","platform":null,"docurl":"","sourceurl":"","remarks":null,"conceptual":null,"seealso":null,"id":"EventStore_Transport_Tcp_Formatting_FormatterBase_1_From_EventStore_BufferManagement_BufferPool_","hideTitleType":false,"hideSubtitle":false},{"uid":"EventStore.Transport.Tcp.Formatting.FormatterBase`1.From(System.ArraySegment{System.Byte})","isEii":false,"isExtensionMethod":false,"parent":"EventStore.Transport.Tcp.Formatting.FormatterBase`1","isExternal":false,"name":[{"lang":"csharp","value":"From(ArraySegment<Byte>)"},{"lang":"vb","value":"From(ArraySegment(Of Byte))"}],"nameWithType":[{"lang":"csharp","value":"FormatterBase<T>.From(ArraySegment<Byte>)"},{"lang":"vb","value":"FormatterBase(Of T).From(ArraySegment(Of Byte))"}],"fullName":[{"lang":"csharp","value":"EventStore.Transport.Tcp.Formatting.FormatterBase<T>.From(System.ArraySegment<System.Byte>)"},{"lang":"vb","value":"EventStore.Transport.Tcp.Formatting.FormatterBase(Of T).From(System.ArraySegment(Of System.Byte))"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Transport.Tcp.Formatting.FormatterBase`1.From(System.ArraySegment{System.Byte})\" text=\"From(ArraySegment&lt;Byte&gt;)\" alt=\"EventStore.Transport.Tcp.Formatting.FormatterBase&lt;T&gt;.From(System.ArraySegment&lt;System.Byte&gt;)\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Transport.Tcp.Formatting.FormatterBase`1.From(System.ArraySegment{System.Byte})\" text=\"From(ArraySegment&lt;Byte&gt;)\" alt=\"EventStore.Transport.Tcp.Formatting.FormatterBase&lt;T&gt;.From(System.ArraySegment&lt;System.Byte&gt;)\"/>"}],"syntax":{"content":[{"lang":"csharp","value":"public virtual T From(ArraySegment<byte> segment)"},{"lang":"vb","value":"Public Overridable Function From(segment As ArraySegment(Of Byte)) As T"}],"parameters":[{"id":"segment","type":{"uid":"System.ArraySegment{System.Byte}","definition":"System.ArraySegment`1","name":[{"lang":"csharp","value":"ArraySegment<Byte>"},{"lang":"vb","value":"ArraySegment(Of Byte)"}],"nameWithType":[{"lang":"csharp","value":"ArraySegment<Byte>"},{"lang":"vb","value":"ArraySegment(Of Byte)"}],"fullName":[{"lang":"csharp","value":"System.ArraySegment<System.Byte>"},{"lang":"vb","value":"System.ArraySegment(Of System.Byte)"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.ArraySegment`1\" text=\"ArraySegment\" alt=\"System.ArraySegment\"/>&lt;<xref uid=\"System.Byte\" text=\"Byte\" alt=\"System.Byte\"/>&gt;"},{"lang":"vb","value":"<xref uid=\"System.ArraySegment`1\" text=\"ArraySegment\" alt=\"System.ArraySegment\"/>(Of <xref uid=\"System.Byte\" text=\"Byte\" alt=\"System.Byte\"/>)"}]},"description":"<p sourcefile=\"dotnet-api/code/EventStore.Transport.Tcp.Formatting.FormatterBase-1.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"1\">The segment containing the raw data.</p>\n"}],"return":{"type":{"uid":"{T}","definition":"T","name":[{"lang":"csharp","value":"T"},{"lang":"vb","value":"T"}],"nameWithType":[{"lang":"csharp","value":"T"},{"lang":"vb","value":"T"}],"fullName":[{"lang":"csharp","value":"T"},{"lang":"vb","value":"T"}],"specName":[{"lang":"csharp","value":"<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"},{"lang":"vb","value":"<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"}]},"description":""}},"source":{"id":"From","path":"/Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Transport.Tcp/Formatting/FormatterBase.cs","startLine":50.0,"endLine":0.0,"isExternal":false},"assemblies":["EventStore.Transport.Tcp"],"namespace":"EventStore.Transport.Tcp.Formatting","example":[],"overload":{"uid":"EventStore.Transport.Tcp.Formatting.FormatterBase`1.From*","name":[{"lang":"csharp","value":"From"},{"lang":"vb","value":"From"}],"nameWithType":[{"lang":"csharp","value":"FormatterBase<T>.From"},{"lang":"vb","value":"FormatterBase(Of T).From"}],"fullName":[{"lang":"csharp","value":"EventStore.Transport.Tcp.Formatting.FormatterBase<T>.From"},{"lang":"vb","value":"EventStore.Transport.Tcp.Formatting.FormatterBase(Of T).From"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Transport.Tcp.Formatting.FormatterBase`1.From*\" text=\"From\" alt=\"EventStore.Transport.Tcp.Formatting.FormatterBase&lt;T&gt;.From\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Transport.Tcp.Formatting.FormatterBase`1.From*\" text=\"From\" alt=\"EventStore.Transport.Tcp.Formatting.FormatterBase&lt;T&gt;.From\"/>"}],"id":"EventStore_Transport_Tcp_Formatting_FormatterBase_1_From_"},"level":0.0,"implements":[{"uid":"EventStore.Transport.Tcp.Formatting.IMessageFormatter{{T}}.From(System.ArraySegment{System.Byte})","definition":"EventStore.Transport.Tcp.Formatting.IMessageFormatter`1.From(System.ArraySegment{System.Byte})","name":[{"lang":"csharp","value":"From(ArraySegment<Byte>)"},{"lang":"vb","value":"From(ArraySegment(Of Byte))"}],"nameWithType":[{"lang":"csharp","value":"IMessageFormatter<T>.From(ArraySegment<Byte>)"},{"lang":"vb","value":"IMessageFormatter(Of T).From(ArraySegment(Of Byte))"}],"fullName":[{"lang":"csharp","value":"EventStore.Transport.Tcp.Formatting.IMessageFormatter<T>.From(System.ArraySegment<System.Byte>)"},{"lang":"vb","value":"EventStore.Transport.Tcp.Formatting.IMessageFormatter(Of T).From(System.ArraySegment(Of System.Byte))"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Transport.Tcp.Formatting.IMessageFormatter`1.From(System.ArraySegment{System.Byte})\" text=\"From\" alt=\"EventStore.Transport.Tcp.Formatting.IMessageFormatter&lt;T&gt;.From\"/>(<xref uid=\"System.ArraySegment`1\" text=\"ArraySegment\" alt=\"System.ArraySegment\"/>&lt;<xref uid=\"System.Byte\" text=\"Byte\" alt=\"System.Byte\"/>&gt;)"},{"lang":"vb","value":"<xref uid=\"EventStore.Transport.Tcp.Formatting.IMessageFormatter`1.From(System.ArraySegment{System.Byte})\" text=\"From\" alt=\"EventStore.Transport.Tcp.Formatting.IMessageFormatter(Of T).From\"/>(<xref uid=\"System.ArraySegment`1\" text=\"ArraySegment\" alt=\"System.ArraySegment\"/>(Of <xref uid=\"System.Byte\" text=\"Byte\" alt=\"System.Byte\"/>))"}]}],"modifiers.csharp":["public","virtual"],"modifiers.vb":["Public","Overridable"],"type":"method","summary":"<p sourcefile=\"dotnet-api/code/EventStore.Transport.Tcp.Formatting.FormatterBase-1.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">Gets a message from a <xref href=\"System.ArraySegment%601\" data-throw-if-not-resolved=\"false\"></xref></p>\n","platform":null,"docurl":"","sourceurl":"","remarks":null,"conceptual":null,"seealso":null,"id":"EventStore_Transport_Tcp_Formatting_FormatterBase_1_From_System_ArraySegment_System_Byte__","hideTitleType":false,"hideSubtitle":false},{"uid":"EventStore.Transport.Tcp.Formatting.FormatterBase`1.From(System.Byte[])","isEii":false,"isExtensionMethod":false,"parent":"EventStore.Transport.Tcp.Formatting.FormatterBase`1","isExternal":false,"name":[{"lang":"csharp","value":"From(Byte[])"},{"lang":"vb","value":"From(Byte())"}],"nameWithType":[{"lang":"csharp","value":"FormatterBase<T>.From(Byte[])"},{"lang":"vb","value":"FormatterBase(Of T).From(Byte())"}],"fullName":[{"lang":"csharp","value":"EventStore.Transport.Tcp.Formatting.FormatterBase<T>.From(System.Byte[])"},{"lang":"vb","value":"EventStore.Transport.Tcp.Formatting.FormatterBase(Of T).From(System.Byte())"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Transport.Tcp.Formatting.FormatterBase`1.From(System.Byte[])\" text=\"From(Byte[])\" alt=\"EventStore.Transport.Tcp.Formatting.FormatterBase&lt;T&gt;.From(System.Byte[])\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Transport.Tcp.Formatting.FormatterBase`1.From(System.Byte[])\" text=\"From(Byte[])\" alt=\"EventStore.Transport.Tcp.Formatting.FormatterBase&lt;T&gt;.From(System.Byte[])\"/>"}],"syntax":{"content":[{"lang":"csharp","value":"public virtual T From(byte[] array)"},{"lang":"vb","value":"Public Overridable Function From(array As Byte()) As T"}],"parameters":[{"id":"array","type":{"uid":"System.Byte[]","name":[{"lang":"csharp","value":"Byte[]"},{"lang":"vb","value":"Byte()"}],"nameWithType":[{"lang":"csharp","value":"Byte[]"},{"lang":"vb","value":"Byte()"}],"fullName":[{"lang":"csharp","value":"System.Byte[]"},{"lang":"vb","value":"System.Byte()"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Byte\" text=\"Byte\" alt=\"System.Byte\"/>[]"},{"lang":"vb","value":"<xref uid=\"System.Byte\" text=\"Byte\" alt=\"System.Byte\"/>()"}]},"description":"<p sourcefile=\"dotnet-api/code/EventStore.Transport.Tcp.Formatting.FormatterBase-1.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"1\">The byte array.</p>\n"}],"return":{"type":{"uid":"{T}","definition":"T","name":[{"lang":"csharp","value":"T"},{"lang":"vb","value":"T"}],"nameWithType":[{"lang":"csharp","value":"T"},{"lang":"vb","value":"T"}],"fullName":[{"lang":"csharp","value":"T"},{"lang":"vb","value":"T"}],"specName":[{"lang":"csharp","value":"<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"},{"lang":"vb","value":"<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"}]},"description":""}},"source":{"id":"From","path":"/Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Transport.Tcp/Formatting/FormatterBase.cs","startLine":61.0,"endLine":0.0,"isExternal":false},"assemblies":["EventStore.Transport.Tcp"],"namespace":"EventStore.Transport.Tcp.Formatting","example":[],"overload":{"uid":"EventStore.Transport.Tcp.Formatting.FormatterBase`1.From*","name":[{"lang":"csharp","value":"From"},{"lang":"vb","value":"From"}],"nameWithType":[{"lang":"csharp","value":"FormatterBase<T>.From"},{"lang":"vb","value":"FormatterBase(Of T).From"}],"fullName":[{"lang":"csharp","value":"EventStore.Transport.Tcp.Formatting.FormatterBase<T>.From"},{"lang":"vb","value":"EventStore.Transport.Tcp.Formatting.FormatterBase(Of T).From"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Transport.Tcp.Formatting.FormatterBase`1.From*\" text=\"From\" alt=\"EventStore.Transport.Tcp.Formatting.FormatterBase&lt;T&gt;.From\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Transport.Tcp.Formatting.FormatterBase`1.From*\" text=\"From\" alt=\"EventStore.Transport.Tcp.Formatting.FormatterBase&lt;T&gt;.From\"/>"}],"id":"EventStore_Transport_Tcp_Formatting_FormatterBase_1_From_"},"level":0.0,"implements":[{"uid":"EventStore.Transport.Tcp.Formatting.IMessageFormatter{{T}}.From(System.Byte[])","definition":"EventStore.Transport.Tcp.Formatting.IMessageFormatter`1.From(System.Byte[])","name":[{"lang":"csharp","value":"From(Byte[])"},{"lang":"vb","value":"From(Byte())"}],"nameWithType":[{"lang":"csharp","value":"IMessageFormatter<T>.From(Byte[])"},{"lang":"vb","value":"IMessageFormatter(Of T).From(Byte())"}],"fullName":[{"lang":"csharp","value":"EventStore.Transport.Tcp.Formatting.IMessageFormatter<T>.From(System.Byte[])"},{"lang":"vb","value":"EventStore.Transport.Tcp.Formatting.IMessageFormatter(Of T).From(System.Byte())"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Transport.Tcp.Formatting.IMessageFormatter`1.From(System.Byte[])\" text=\"From\" alt=\"EventStore.Transport.Tcp.Formatting.IMessageFormatter&lt;T&gt;.From\"/>(<xref uid=\"System.Byte\" text=\"Byte\" alt=\"System.Byte\"/>[])"},{"lang":"vb","value":"<xref uid=\"EventStore.Transport.Tcp.Formatting.IMessageFormatter`1.From(System.Byte[])\" text=\"From\" alt=\"EventStore.Transport.Tcp.Formatting.IMessageFormatter(Of T).From\"/>(<xref uid=\"System.Byte\" text=\"Byte\" alt=\"System.Byte\"/>())"}]}],"modifiers.csharp":["public","virtual"],"modifiers.vb":["Public","Overridable"],"type":"method","summary":"<p sourcefile=\"dotnet-api/code/EventStore.Transport.Tcp.Formatting.FormatterBase-1.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">Gets a message from a byte array</p>\n","platform":null,"docurl":"","sourceurl":"","remarks":null,"conceptual":null,"seealso":null,"id":"EventStore_Transport_Tcp_Formatting_FormatterBase_1_From_System_Byte___","hideTitleType":false,"hideSubtitle":false},{"uid":"EventStore.Transport.Tcp.Formatting.FormatterBase`1.From(System.IO.Stream)","isEii":false,"isExtensionMethod":false,"parent":"EventStore.Transport.Tcp.Formatting.FormatterBase`1","isExternal":false,"name":[{"lang":"csharp","value":"From(Stream)"},{"lang":"vb","value":"From(Stream)"}],"nameWithType":[{"lang":"csharp","value":"FormatterBase<T>.From(Stream)"},{"lang":"vb","value":"FormatterBase(Of T).From(Stream)"}],"fullName":[{"lang":"csharp","value":"EventStore.Transport.Tcp.Formatting.FormatterBase<T>.From(System.IO.Stream)"},{"lang":"vb","value":"EventStore.Transport.Tcp.Formatting.FormatterBase(Of T).From(System.IO.Stream)"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Transport.Tcp.Formatting.FormatterBase`1.From(System.IO.Stream)\" text=\"From(Stream)\" alt=\"EventStore.Transport.Tcp.Formatting.FormatterBase&lt;T&gt;.From(System.IO.Stream)\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Transport.Tcp.Formatting.FormatterBase`1.From(System.IO.Stream)\" text=\"From(Stream)\" alt=\"EventStore.Transport.Tcp.Formatting.FormatterBase&lt;T&gt;.From(System.IO.Stream)\"/>"}],"syntax":{"content":[{"lang":"csharp","value":"public abstract T From(Stream stream)"},{"lang":"vb","value":"Public MustOverride Function From(stream As Stream) As T"}],"parameters":[{"id":"stream","type":{"uid":"System.IO.Stream","name":[{"lang":"csharp","value":"Stream"},{"lang":"vb","value":"Stream"}],"nameWithType":[{"lang":"csharp","value":"Stream"},{"lang":"vb","value":"Stream"}],"fullName":[{"lang":"csharp","value":"System.IO.Stream"},{"lang":"vb","value":"System.IO.Stream"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.IO.Stream\" text=\"Stream\" alt=\"System.IO.Stream\"/>"},{"lang":"vb","value":"<xref uid=\"System.IO.Stream\" text=\"Stream\" alt=\"System.IO.Stream\"/>"}]},"description":"<p sourcefile=\"dotnet-api/code/EventStore.Transport.Tcp.Formatting.FormatterBase-1.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"1\">The stream.</p>\n"}],"return":{"type":{"uid":"{T}","definition":"T","name":[{"lang":"csharp","value":"T"},{"lang":"vb","value":"T"}],"nameWithType":[{"lang":"csharp","value":"T"},{"lang":"vb","value":"T"}],"fullName":[{"lang":"csharp","value":"T"},{"lang":"vb","value":"T"}],"specName":[{"lang":"csharp","value":"<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"},{"lang":"vb","value":"<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"}]},"description":""}},"source":{"id":"From","path":"/Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Transport.Tcp/Formatting/FormatterBase.cs","startLine":74.0,"endLine":0.0,"isExternal":false},"assemblies":["EventStore.Transport.Tcp"],"namespace":"EventStore.Transport.Tcp.Formatting","example":[],"overload":{"uid":"EventStore.Transport.Tcp.Formatting.FormatterBase`1.From*","name":[{"lang":"csharp","value":"From"},{"lang":"vb","value":"From"}],"nameWithType":[{"lang":"csharp","value":"FormatterBase<T>.From"},{"lang":"vb","value":"FormatterBase(Of T).From"}],"fullName":[{"lang":"csharp","value":"EventStore.Transport.Tcp.Formatting.FormatterBase<T>.From"},{"lang":"vb","value":"EventStore.Transport.Tcp.Formatting.FormatterBase(Of T).From"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Transport.Tcp.Formatting.FormatterBase`1.From*\" text=\"From\" alt=\"EventStore.Transport.Tcp.Formatting.FormatterBase&lt;T&gt;.From\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Transport.Tcp.Formatting.FormatterBase`1.From*\" text=\"From\" alt=\"EventStore.Transport.Tcp.Formatting.FormatterBase&lt;T&gt;.From\"/>"}],"id":"EventStore_Transport_Tcp_Formatting_FormatterBase_1_From_"},"level":0.0,"modifiers.csharp":["public","abstract"],"modifiers.vb":["Public","MustOverride"],"type":"method","summary":"<p sourcefile=\"dotnet-api/code/EventStore.Transport.Tcp.Formatting.FormatterBase-1.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">Creates a message object from the specified stream</p>\n","platform":null,"docurl":"","sourceurl":"","remarks":null,"conceptual":null,"implements":null,"seealso":null,"id":"EventStore_Transport_Tcp_Formatting_FormatterBase_1_From_System_IO_Stream_","hideTitleType":false,"hideSubtitle":false},{"uid":"EventStore.Transport.Tcp.Formatting.FormatterBase`1.ToArray(`0)","isEii":false,"isExtensionMethod":false,"parent":"EventStore.Transport.Tcp.Formatting.FormatterBase`1","isExternal":false,"name":[{"lang":"csharp","value":"ToArray(T)"},{"lang":"vb","value":"ToArray(T)"}],"nameWithType":[{"lang":"csharp","value":"FormatterBase<T>.ToArray(T)"},{"lang":"vb","value":"FormatterBase(Of T).ToArray(T)"}],"fullName":[{"lang":"csharp","value":"EventStore.Transport.Tcp.Formatting.FormatterBase<T>.ToArray(T)"},{"lang":"vb","value":"EventStore.Transport.Tcp.Formatting.FormatterBase(Of T).ToArray(T)"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Transport.Tcp.Formatting.FormatterBase`1.ToArray(`0)\" text=\"ToArray(T)\" alt=\"EventStore.Transport.Tcp.Formatting.FormatterBase&lt;T&gt;.ToArray(T)\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Transport.Tcp.Formatting.FormatterBase`1.ToArray(`0)\" text=\"ToArray(T)\" alt=\"EventStore.Transport.Tcp.Formatting.FormatterBase&lt;T&gt;.ToArray(T)\"/>"}],"syntax":{"content":[{"lang":"csharp","value":"public virtual byte[] ToArray(T message)"},{"lang":"vb","value":"Public Overridable Function ToArray(message As T) As Byte()"}],"parameters":[{"id":"message","type":{"uid":"{T}","definition":"T","name":[{"lang":"csharp","value":"T"},{"lang":"vb","value":"T"}],"nameWithType":[{"lang":"csharp","value":"T"},{"lang":"vb","value":"T"}],"fullName":[{"lang":"csharp","value":"T"},{"lang":"vb","value":"T"}],"specName":[{"lang":"csharp","value":"<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"},{"lang":"vb","value":"<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"}]},"description":"<p sourcefile=\"dotnet-api/code/EventStore.Transport.Tcp.Formatting.FormatterBase-1.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"1\">The message.</p>\n"}],"return":{"type":{"uid":"System.Byte[]","name":[{"lang":"csharp","value":"Byte[]"},{"lang":"vb","value":"Byte()"}],"nameWithType":[{"lang":"csharp","value":"Byte[]"},{"lang":"vb","value":"Byte()"}],"fullName":[{"lang":"csharp","value":"System.Byte[]"},{"lang":"vb","value":"System.Byte()"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Byte\" text=\"Byte\" alt=\"System.Byte\"/>[]"},{"lang":"vb","value":"<xref uid=\"System.Byte\" text=\"Byte\" alt=\"System.Byte\"/>()"}]},"description":""}},"source":{"id":"ToArray","path":"/Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Transport.Tcp/Formatting/FormatterBase.cs","startLine":27.0,"endLine":0.0,"isExternal":false},"assemblies":["EventStore.Transport.Tcp"],"namespace":"EventStore.Transport.Tcp.Formatting","example":[],"overload":{"uid":"EventStore.Transport.Tcp.Formatting.FormatterBase`1.ToArray*","name":[{"lang":"csharp","value":"ToArray"},{"lang":"vb","value":"ToArray"}],"nameWithType":[{"lang":"csharp","value":"FormatterBase<T>.ToArray"},{"lang":"vb","value":"FormatterBase(Of T).ToArray"}],"fullName":[{"lang":"csharp","value":"EventStore.Transport.Tcp.Formatting.FormatterBase<T>.ToArray"},{"lang":"vb","value":"EventStore.Transport.Tcp.Formatting.FormatterBase(Of T).ToArray"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Transport.Tcp.Formatting.FormatterBase`1.ToArray*\" text=\"ToArray\" alt=\"EventStore.Transport.Tcp.Formatting.FormatterBase&lt;T&gt;.ToArray\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Transport.Tcp.Formatting.FormatterBase`1.ToArray*\" text=\"ToArray\" alt=\"EventStore.Transport.Tcp.Formatting.FormatterBase&lt;T&gt;.ToArray\"/>"}],"id":"EventStore_Transport_Tcp_Formatting_FormatterBase_1_ToArray_"},"level":0.0,"implements":[{"uid":"EventStore.Transport.Tcp.Formatting.IMessageFormatter{{T}}.ToArray({T})","definition":"EventStore.Transport.Tcp.Formatting.IMessageFormatter`1.ToArray(`0)","name":[{"lang":"csharp","value":"ToArray(T)"},{"lang":"vb","value":"ToArray(T)"}],"nameWithType":[{"lang":"csharp","value":"IMessageFormatter<T>.ToArray(T)"},{"lang":"vb","value":"IMessageFormatter(Of T).ToArray(T)"}],"fullName":[{"lang":"csharp","value":"EventStore.Transport.Tcp.Formatting.IMessageFormatter<T>.ToArray(T)"},{"lang":"vb","value":"EventStore.Transport.Tcp.Formatting.IMessageFormatter(Of T).ToArray(T)"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Transport.Tcp.Formatting.IMessageFormatter`1.ToArray(`0)\" text=\"ToArray\" alt=\"EventStore.Transport.Tcp.Formatting.IMessageFormatter&lt;T&gt;.ToArray\"/>(T)"},{"lang":"vb","value":"<xref uid=\"EventStore.Transport.Tcp.Formatting.IMessageFormatter`1.ToArray(`0)\" text=\"ToArray\" alt=\"EventStore.Transport.Tcp.Formatting.IMessageFormatter(Of T).ToArray\"/>(T)"}]}],"modifiers.csharp":["public","virtual"],"modifiers.vb":["Public","Overridable"],"type":"method","summary":"<p sourcefile=\"dotnet-api/code/EventStore.Transport.Tcp.Formatting.FormatterBase-1.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">Converts the message to a byte array</p>\n","platform":null,"docurl":"","sourceurl":"","remarks":null,"conceptual":null,"seealso":null,"id":"EventStore_Transport_Tcp_Formatting_FormatterBase_1_ToArray__0_","hideTitleType":false,"hideSubtitle":false},{"uid":"EventStore.Transport.Tcp.Formatting.FormatterBase`1.ToArraySegment(`0)","isEii":false,"isExtensionMethod":false,"parent":"EventStore.Transport.Tcp.Formatting.FormatterBase`1","isExternal":false,"name":[{"lang":"csharp","value":"ToArraySegment(T)"},{"lang":"vb","value":"ToArraySegment(T)"}],"nameWithType":[{"lang":"csharp","value":"FormatterBase<T>.ToArraySegment(T)"},{"lang":"vb","value":"FormatterBase(Of T).ToArraySegment(T)"}],"fullName":[{"lang":"csharp","value":"EventStore.Transport.Tcp.Formatting.FormatterBase<T>.ToArraySegment(T)"},{"lang":"vb","value":"EventStore.Transport.Tcp.Formatting.FormatterBase(Of T).ToArraySegment(T)"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Transport.Tcp.Formatting.FormatterBase`1.ToArraySegment(`0)\" text=\"ToArraySegment(T)\" alt=\"EventStore.Transport.Tcp.Formatting.FormatterBase&lt;T&gt;.ToArraySegment(T)\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Transport.Tcp.Formatting.FormatterBase`1.ToArraySegment(`0)\" text=\"ToArraySegment(T)\" alt=\"EventStore.Transport.Tcp.Formatting.FormatterBase&lt;T&gt;.ToArraySegment(T)\"/>"}],"syntax":{"content":[{"lang":"csharp","value":"public virtual ArraySegment<byte> ToArraySegment(T message)"},{"lang":"vb","value":"Public Overridable Function ToArraySegment(message As T) As ArraySegment(Of Byte)"}],"parameters":[{"id":"message","type":{"uid":"{T}","definition":"T","name":[{"lang":"csharp","value":"T"},{"lang":"vb","value":"T"}],"nameWithType":[{"lang":"csharp","value":"T"},{"lang":"vb","value":"T"}],"fullName":[{"lang":"csharp","value":"T"},{"lang":"vb","value":"T"}],"specName":[{"lang":"csharp","value":"<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"},{"lang":"vb","value":"<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"}]},"description":"<p sourcefile=\"dotnet-api/code/EventStore.Transport.Tcp.Formatting.FormatterBase-1.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"1\">The message.</p>\n"}],"return":{"type":{"uid":"System.ArraySegment{System.Byte}","definition":"System.ArraySegment`1","name":[{"lang":"csharp","value":"ArraySegment<Byte>"},{"lang":"vb","value":"ArraySegment(Of Byte)"}],"nameWithType":[{"lang":"csharp","value":"ArraySegment<Byte>"},{"lang":"vb","value":"ArraySegment(Of Byte)"}],"fullName":[{"lang":"csharp","value":"System.ArraySegment<System.Byte>"},{"lang":"vb","value":"System.ArraySegment(Of System.Byte)"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.ArraySegment`1\" text=\"ArraySegment\" alt=\"System.ArraySegment\"/>&lt;<xref uid=\"System.Byte\" text=\"Byte\" alt=\"System.Byte\"/>&gt;"},{"lang":"vb","value":"<xref uid=\"System.ArraySegment`1\" text=\"ArraySegment\" alt=\"System.ArraySegment\"/>(Of <xref uid=\"System.Byte\" text=\"Byte\" alt=\"System.Byte\"/>)"}]},"description":""}},"source":{"id":"ToArraySegment","path":"/Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Transport.Tcp/Formatting/FormatterBase.cs","startLine":18.0,"endLine":0.0,"isExternal":false},"assemblies":["EventStore.Transport.Tcp"],"namespace":"EventStore.Transport.Tcp.Formatting","example":[],"overload":{"uid":"EventStore.Transport.Tcp.Formatting.FormatterBase`1.ToArraySegment*","name":[{"lang":"csharp","value":"ToArraySegment"},{"lang":"vb","value":"ToArraySegment"}],"nameWithType":[{"lang":"csharp","value":"FormatterBase<T>.ToArraySegment"},{"lang":"vb","value":"FormatterBase(Of T).ToArraySegment"}],"fullName":[{"lang":"csharp","value":"EventStore.Transport.Tcp.Formatting.FormatterBase<T>.ToArraySegment"},{"lang":"vb","value":"EventStore.Transport.Tcp.Formatting.FormatterBase(Of T).ToArraySegment"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Transport.Tcp.Formatting.FormatterBase`1.ToArraySegment*\" text=\"ToArraySegment\" alt=\"EventStore.Transport.Tcp.Formatting.FormatterBase&lt;T&gt;.ToArraySegment\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Transport.Tcp.Formatting.FormatterBase`1.ToArraySegment*\" text=\"ToArraySegment\" alt=\"EventStore.Transport.Tcp.Formatting.FormatterBase&lt;T&gt;.ToArraySegment\"/>"}],"id":"EventStore_Transport_Tcp_Formatting_FormatterBase_1_ToArraySegment_"},"level":0.0,"implements":[{"uid":"EventStore.Transport.Tcp.Formatting.IMessageFormatter{{T}}.ToArraySegment({T})","definition":"EventStore.Transport.Tcp.Formatting.IMessageFormatter`1.ToArraySegment(`0)","name":[{"lang":"csharp","value":"ToArraySegment(T)"},{"lang":"vb","value":"ToArraySegment(T)"}],"nameWithType":[{"lang":"csharp","value":"IMessageFormatter<T>.ToArraySegment(T)"},{"lang":"vb","value":"IMessageFormatter(Of T).ToArraySegment(T)"}],"fullName":[{"lang":"csharp","value":"EventStore.Transport.Tcp.Formatting.IMessageFormatter<T>.ToArraySegment(T)"},{"lang":"vb","value":"EventStore.Transport.Tcp.Formatting.IMessageFormatter(Of T).ToArraySegment(T)"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Transport.Tcp.Formatting.IMessageFormatter`1.ToArraySegment(`0)\" text=\"ToArraySegment\" alt=\"EventStore.Transport.Tcp.Formatting.IMessageFormatter&lt;T&gt;.ToArraySegment\"/>(T)"},{"lang":"vb","value":"<xref uid=\"EventStore.Transport.Tcp.Formatting.IMessageFormatter`1.ToArraySegment(`0)\" text=\"ToArraySegment\" alt=\"EventStore.Transport.Tcp.Formatting.IMessageFormatter(Of T).ToArraySegment\"/>(T)"}]}],"modifiers.csharp":["public","virtual"],"modifiers.vb":["Public","Overridable"],"type":"method","summary":"<p sourcefile=\"dotnet-api/code/EventStore.Transport.Tcp.Formatting.FormatterBase-1.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">converts the message to a <xref href=\"System.ArraySegment%601\" data-throw-if-not-resolved=\"false\"></xref></p>\n","platform":null,"docurl":"","sourceurl":"","remarks":null,"conceptual":null,"seealso":null,"id":"EventStore_Transport_Tcp_Formatting_FormatterBase_1_ToArraySegment__0_","hideTitleType":false,"hideSubtitle":false},{"uid":"EventStore.Transport.Tcp.Formatting.FormatterBase`1.ToBufferPool(`0)","isEii":false,"isExtensionMethod":false,"parent":"EventStore.Transport.Tcp.Formatting.FormatterBase`1","isExternal":false,"name":[{"lang":"csharp","value":"ToBufferPool(T)"},{"lang":"vb","value":"ToBufferPool(T)"}],"nameWithType":[{"lang":"csharp","value":"FormatterBase<T>.ToBufferPool(T)"},{"lang":"vb","value":"FormatterBase(Of T).ToBufferPool(T)"}],"fullName":[{"lang":"csharp","value":"EventStore.Transport.Tcp.Formatting.FormatterBase<T>.ToBufferPool(T)"},{"lang":"vb","value":"EventStore.Transport.Tcp.Formatting.FormatterBase(Of T).ToBufferPool(T)"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Transport.Tcp.Formatting.FormatterBase`1.ToBufferPool(`0)\" text=\"ToBufferPool(T)\" alt=\"EventStore.Transport.Tcp.Formatting.FormatterBase&lt;T&gt;.ToBufferPool(T)\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Transport.Tcp.Formatting.FormatterBase`1.ToBufferPool(`0)\" text=\"ToBufferPool(T)\" alt=\"EventStore.Transport.Tcp.Formatting.FormatterBase&lt;T&gt;.ToBufferPool(T)\"/>"}],"syntax":{"content":[{"lang":"csharp","value":"public abstract BufferPool ToBufferPool(T message)"},{"lang":"vb","value":"Public MustOverride Function ToBufferPool(message As T) As BufferPool"}],"parameters":[{"id":"message","type":{"uid":"{T}","definition":"T","name":[{"lang":"csharp","value":"T"},{"lang":"vb","value":"T"}],"nameWithType":[{"lang":"csharp","value":"T"},{"lang":"vb","value":"T"}],"fullName":[{"lang":"csharp","value":"T"},{"lang":"vb","value":"T"}],"specName":[{"lang":"csharp","value":"<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"},{"lang":"vb","value":"<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"}]},"description":"<p sourcefile=\"dotnet-api/code/EventStore.Transport.Tcp.Formatting.FormatterBase-1.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"1\">The message.</p>\n"}],"return":{"type":{"uid":"EventStore.BufferManagement.BufferPool","name":[{"lang":"csharp","value":"BufferPool"},{"lang":"vb","value":"BufferPool"}],"nameWithType":[{"lang":"csharp","value":"BufferPool"},{"lang":"vb","value":"BufferPool"}],"fullName":[{"lang":"csharp","value":"EventStore.BufferManagement.BufferPool"},{"lang":"vb","value":"EventStore.BufferManagement.BufferPool"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.BufferManagement.BufferPool\" text=\"BufferPool\" alt=\"EventStore.BufferManagement.BufferPool\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.BufferManagement.BufferPool\" text=\"BufferPool\" alt=\"EventStore.BufferManagement.BufferPool\"/>"}]},"description":"<p sourcefile=\"dotnet-api/code/EventStore.Transport.Tcp.Formatting.FormatterBase-1.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"1\">A <xref href=\"EventStore.BufferManagement.BufferPool\" data-throw-if-not-resolved=\"false\"></xref> with a representation of the message</p>\n"}},"source":{"id":"ToBufferPool","path":"/Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Transport.Tcp/Formatting/FormatterBase.cs","startLine":11.0,"endLine":0.0,"isExternal":false},"assemblies":["EventStore.Transport.Tcp"],"namespace":"EventStore.Transport.Tcp.Formatting","example":[],"overload":{"uid":"EventStore.Transport.Tcp.Formatting.FormatterBase`1.ToBufferPool*","name":[{"lang":"csharp","value":"ToBufferPool"},{"lang":"vb","value":"ToBufferPool"}],"nameWithType":[{"lang":"csharp","value":"FormatterBase<T>.ToBufferPool"},{"lang":"vb","value":"FormatterBase(Of T).ToBufferPool"}],"fullName":[{"lang":"csharp","value":"EventStore.Transport.Tcp.Formatting.FormatterBase<T>.ToBufferPool"},{"lang":"vb","value":"EventStore.Transport.Tcp.Formatting.FormatterBase(Of T).ToBufferPool"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Transport.Tcp.Formatting.FormatterBase`1.ToBufferPool*\" text=\"ToBufferPool\" alt=\"EventStore.Transport.Tcp.Formatting.FormatterBase&lt;T&gt;.ToBufferPool\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Transport.Tcp.Formatting.FormatterBase`1.ToBufferPool*\" text=\"ToBufferPool\" alt=\"EventStore.Transport.Tcp.Formatting.FormatterBase&lt;T&gt;.ToBufferPool\"/>"}],"id":"EventStore_Transport_Tcp_Formatting_FormatterBase_1_ToBufferPool_"},"level":0.0,"implements":[{"uid":"EventStore.Transport.Tcp.Formatting.IMessageFormatter{{T}}.ToBufferPool({T})","definition":"EventStore.Transport.Tcp.Formatting.IMessageFormatter`1.ToBufferPool(`0)","name":[{"lang":"csharp","value":"ToBufferPool(T)"},{"lang":"vb","value":"ToBufferPool(T)"}],"nameWithType":[{"lang":"csharp","value":"IMessageFormatter<T>.ToBufferPool(T)"},{"lang":"vb","value":"IMessageFormatter(Of T).ToBufferPool(T)"}],"fullName":[{"lang":"csharp","value":"EventStore.Transport.Tcp.Formatting.IMessageFormatter<T>.ToBufferPool(T)"},{"lang":"vb","value":"EventStore.Transport.Tcp.Formatting.IMessageFormatter(Of T).ToBufferPool(T)"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Transport.Tcp.Formatting.IMessageFormatter`1.ToBufferPool(`0)\" text=\"ToBufferPool\" alt=\"EventStore.Transport.Tcp.Formatting.IMessageFormatter&lt;T&gt;.ToBufferPool\"/>(T)"},{"lang":"vb","value":"<xref uid=\"EventStore.Transport.Tcp.Formatting.IMessageFormatter`1.ToBufferPool(`0)\" text=\"ToBufferPool\" alt=\"EventStore.Transport.Tcp.Formatting.IMessageFormatter(Of T).ToBufferPool\"/>(T)"}]}],"modifiers.csharp":["public","abstract"],"modifiers.vb":["Public","MustOverride"],"type":"method","summary":"<p sourcefile=\"dotnet-api/code/EventStore.Transport.Tcp.Formatting.FormatterBase-1.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">Gets a <xref href=\"EventStore.BufferManagement.BufferPool\" data-throw-if-not-resolved=\"false\"></xref> representing the IMessage provided.</p>\n","platform":null,"docurl":"","sourceurl":"","remarks":null,"conceptual":null,"seealso":null,"id":"EventStore_Transport_Tcp_Formatting_FormatterBase_1_ToBufferPool__0_","hideTitleType":false,"hideSubtitle":false}]}],"langs":["csharp","vb"],"name":[{"lang":"csharp","value":"FormatterBase<T>"},{"lang":"vb","value":"FormatterBase(Of T)"}],"nameWithType":[{"lang":"csharp","value":"FormatterBase<T>"},{"lang":"vb","value":"FormatterBase(Of T)"}],"fullName":[{"lang":"csharp","value":"EventStore.Transport.Tcp.Formatting.FormatterBase<T>"},{"lang":"vb","value":"EventStore.Transport.Tcp.Formatting.FormatterBase(Of T)"}],"type":"class","source":{"id":"FormatterBase","path":"/Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Transport.Tcp/Formatting/FormatterBase.cs","startLine":5.0,"endLine":0.0,"isExternal":false},"assemblies":["EventStore.Transport.Tcp"],"namespace":{"uid":"EventStore.Transport.Tcp.Formatting","isEii":false,"isExtensionMethod":false,"name":[{"lang":"csharp","value":"EventStore.Transport.Tcp.Formatting"},{"lang":"vb","value":"EventStore.Transport.Tcp.Formatting"}],"nameWithType":[{"lang":"csharp","value":"EventStore.Transport.Tcp.Formatting"},{"lang":"vb","value":"EventStore.Transport.Tcp.Formatting"}],"fullName":[{"lang":"csharp","value":"EventStore.Transport.Tcp.Formatting"},{"lang":"vb","value":"EventStore.Transport.Tcp.Formatting"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Transport.Tcp.Formatting\" text=\"EventStore.Transport.Tcp.Formatting\" alt=\"EventStore.Transport.Tcp.Formatting\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Transport.Tcp.Formatting\" text=\"EventStore.Transport.Tcp.Formatting\" alt=\"EventStore.Transport.Tcp.Formatting\"/>"}],"level":0.0},"syntax":{"content":[{"lang":"csharp","value":"public abstract class FormatterBase<T> : IMessageFormatter<T>"},{"lang":"vb","value":"Public MustInherit Class FormatterBase(Of T)\n\n    Implements IMessageFormatter(Of T)"}],"typeParameters":[{"id":"T"}]},"inheritance":[{"uid":"System.Object","isEii":false,"isExtensionMethod":false,"parent":"System","isExternal":true,"name":[{"lang":"csharp","value":"Object"},{"lang":"vb","value":"Object"}],"nameWithType":[{"lang":"csharp","value":"Object"},{"lang":"vb","value":"Object"}],"fullName":[{"lang":"csharp","value":"System.Object"},{"lang":"vb","value":"System.Object"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>"},{"lang":"vb","value":"<xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>"}],"level":0.0,"index":0.0}],"derivedClasses":[{"isEii":false,"isExtensionMethod":false,"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Transport.Tcp.Formatting.ProtoBufMessageFormatter`1\" displayProperty=\"name\" altProperty=\"fullName\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Transport.Tcp.Formatting.ProtoBufMessageFormatter`1\" displayProperty=\"name\" altProperty=\"fullName\"/>"}],"level":0.0,"index":2.0}],"level":1.0,"implements":[{"uid":"EventStore.Transport.Tcp.Formatting.IMessageFormatter{{T}}","definition":"EventStore.Transport.Tcp.Formatting.IMessageFormatter`1","name":[{"lang":"csharp","value":"IMessageFormatter<T>"},{"lang":"vb","value":"IMessageFormatter(Of T)"}],"nameWithType":[{"lang":"csharp","value":"IMessageFormatter<T>"},{"lang":"vb","value":"IMessageFormatter(Of T)"}],"fullName":[{"lang":"csharp","value":"EventStore.Transport.Tcp.Formatting.IMessageFormatter<T>"},{"lang":"vb","value":"EventStore.Transport.Tcp.Formatting.IMessageFormatter(Of T)"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Transport.Tcp.Formatting.IMessageFormatter`1\" text=\"IMessageFormatter\" alt=\"EventStore.Transport.Tcp.Formatting.IMessageFormatter\"/>&lt;T&gt;"},{"lang":"vb","value":"<xref uid=\"EventStore.Transport.Tcp.Formatting.IMessageFormatter`1\" text=\"IMessageFormatter\" alt=\"EventStore.Transport.Tcp.Formatting.IMessageFormatter\"/>(Of T)"}]}],"inheritedMembers":[{"uid":"System.Object.Equals(System.Object)","isEii":false,"isExtensionMethod":false,"parent":"System.Object","isExternal":true,"name":[{"lang":"csharp","value":"Equals(Object)"},{"lang":"vb","value":"Equals(Object)"}],"nameWithType":[{"lang":"csharp","value":"Object.Equals(Object)"},{"lang":"vb","value":"Object.Equals(Object)"}],"fullName":[{"lang":"csharp","value":"System.Object.Equals(System.Object)"},{"lang":"vb","value":"System.Object.Equals(System.Object)"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Object.Equals(System.Object)\" text=\"Equals\" alt=\"System.Object.Equals\"/>(<xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>)"},{"lang":"vb","value":"<xref uid=\"System.Object.Equals(System.Object)\" text=\"Equals\" alt=\"System.Object.Equals\"/>(<xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>)"}],"level":0.0},{"uid":"System.Object.Equals(System.Object,System.Object)","isEii":false,"isExtensionMethod":false,"parent":"System.Object","isExternal":true,"name":[{"lang":"csharp","value":"Equals(Object, Object)"},{"lang":"vb","value":"Equals(Object, Object)"}],"nameWithType":[{"lang":"csharp","value":"Object.Equals(Object, Object)"},{"lang":"vb","value":"Object.Equals(Object, Object)"}],"fullName":[{"lang":"csharp","value":"System.Object.Equals(System.Object, System.Object)"},{"lang":"vb","value":"System.Object.Equals(System.Object, System.Object)"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Object.Equals(System.Object,System.Object)\" text=\"Equals\" alt=\"System.Object.Equals\"/>(<xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>, <xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>)"},{"lang":"vb","value":"<xref uid=\"System.Object.Equals(System.Object,System.Object)\" text=\"Equals\" alt=\"System.Object.Equals\"/>(<xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>, <xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>)"}],"level":0.0},{"uid":"System.Object.GetHashCode","isEii":false,"isExtensionMethod":false,"parent":"System.Object","isExternal":true,"name":[{"lang":"csharp","value":"GetHashCode()"},{"lang":"vb","value":"GetHashCode()"}],"nameWithType":[{"lang":"csharp","value":"Object.GetHashCode()"},{"lang":"vb","value":"Object.GetHashCode()"}],"fullName":[{"lang":"csharp","value":"System.Object.GetHashCode()"},{"lang":"vb","value":"System.Object.GetHashCode()"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Object.GetHashCode\" text=\"GetHashCode\" alt=\"System.Object.GetHashCode\"/>()"},{"lang":"vb","value":"<xref uid=\"System.Object.GetHashCode\" text=\"GetHashCode\" alt=\"System.Object.GetHashCode\"/>()"}],"level":0.0},{"uid":"System.Object.GetType","isEii":false,"isExtensionMethod":false,"parent":"System.Object","isExternal":true,"name":[{"lang":"csharp","value":"GetType()"},{"lang":"vb","value":"GetType()"}],"nameWithType":[{"lang":"csharp","value":"Object.GetType()"},{"lang":"vb","value":"Object.GetType()"}],"fullName":[{"lang":"csharp","value":"System.Object.GetType()"},{"lang":"vb","value":"System.Object.GetType()"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Object.GetType\" text=\"GetType\" alt=\"System.Object.GetType\"/>()"},{"lang":"vb","value":"<xref uid=\"System.Object.GetType\" text=\"GetType\" alt=\"System.Object.GetType\"/>()"}],"level":0.0},{"uid":"System.Object.MemberwiseClone","isEii":false,"isExtensionMethod":false,"parent":"System.Object","isExternal":true,"name":[{"lang":"csharp","value":"MemberwiseClone()"},{"lang":"vb","value":"MemberwiseClone()"}],"nameWithType":[{"lang":"csharp","value":"Object.MemberwiseClone()"},{"lang":"vb","value":"Object.MemberwiseClone()"}],"fullName":[{"lang":"csharp","value":"System.Object.MemberwiseClone()"},{"lang":"vb","value":"System.Object.MemberwiseClone()"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Object.MemberwiseClone\" text=\"MemberwiseClone\" alt=\"System.Object.MemberwiseClone\"/>()"},{"lang":"vb","value":"<xref uid=\"System.Object.MemberwiseClone\" text=\"MemberwiseClone\" alt=\"System.Object.MemberwiseClone\"/>()"}],"level":0.0},{"uid":"System.Object.ReferenceEquals(System.Object,System.Object)","isEii":false,"isExtensionMethod":false,"parent":"System.Object","isExternal":true,"name":[{"lang":"csharp","value":"ReferenceEquals(Object, Object)"},{"lang":"vb","value":"ReferenceEquals(Object, Object)"}],"nameWithType":[{"lang":"csharp","value":"Object.ReferenceEquals(Object, Object)"},{"lang":"vb","value":"Object.ReferenceEquals(Object, Object)"}],"fullName":[{"lang":"csharp","value":"System.Object.ReferenceEquals(System.Object, System.Object)"},{"lang":"vb","value":"System.Object.ReferenceEquals(System.Object, System.Object)"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Object.ReferenceEquals(System.Object,System.Object)\" text=\"ReferenceEquals\" alt=\"System.Object.ReferenceEquals\"/>(<xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>, <xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>)"},{"lang":"vb","value":"<xref uid=\"System.Object.ReferenceEquals(System.Object,System.Object)\" text=\"ReferenceEquals\" alt=\"System.Object.ReferenceEquals\"/>(<xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>, <xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>)"}],"level":0.0},{"uid":"System.Object.ToString","isEii":false,"isExtensionMethod":false,"parent":"System.Object","isExternal":true,"name":[{"lang":"csharp","value":"ToString()"},{"lang":"vb","value":"ToString()"}],"nameWithType":[{"lang":"csharp","value":"Object.ToString()"},{"lang":"vb","value":"Object.ToString()"}],"fullName":[{"lang":"csharp","value":"System.Object.ToString()"},{"lang":"vb","value":"System.Object.ToString()"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Object.ToString\" text=\"ToString\" alt=\"System.Object.ToString\"/>()"},{"lang":"vb","value":"<xref uid=\"System.Object.ToString\" text=\"ToString\" alt=\"System.Object.ToString\"/>()"}],"level":0.0}],"extensionMethods":[{"uid":"System.Object.EventStore.Common.Utils.Json.ToJsonBytes","isEii":false,"isExtensionMethod":false,"parent":"EventStore.Common.Utils.Json","definition":"EventStore.Common.Utils.Json.ToJsonBytes(System.Object)","name":[{"lang":"csharp","value":"ToJsonBytes()"},{"lang":"vb","value":"ToJsonBytes()"}],"nameWithType":[{"lang":"csharp","value":"Json.ToJsonBytes()"},{"lang":"vb","value":"Json.ToJsonBytes()"}],"fullName":[{"lang":"csharp","value":"EventStore.Common.Utils.Json.ToJsonBytes()"},{"lang":"vb","value":"EventStore.Common.Utils.Json.ToJsonBytes()"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Common.Utils.Json.ToJsonBytes\" text=\"ToJsonBytes\" alt=\"EventStore.Common.Utils.Json.ToJsonBytes\"/>()"},{"lang":"vb","value":"<xref uid=\"EventStore.Common.Utils.Json.ToJsonBytes\" text=\"ToJsonBytes\" alt=\"EventStore.Common.Utils.Json.ToJsonBytes\"/>()"}],"level":0.0},{"uid":"System.Object.EventStore.Common.Utils.Json.ToJson","isEii":false,"isExtensionMethod":false,"parent":"EventStore.Common.Utils.Json","definition":"EventStore.Common.Utils.Json.ToJson(System.Object)","name":[{"lang":"csharp","value":"ToJson()"},{"lang":"vb","value":"ToJson()"}],"nameWithType":[{"lang":"csharp","value":"Json.ToJson()"},{"lang":"vb","value":"Json.ToJson()"}],"fullName":[{"lang":"csharp","value":"EventStore.Common.Utils.Json.ToJson()"},{"lang":"vb","value":"EventStore.Common.Utils.Json.ToJson()"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Common.Utils.Json.ToJson\" text=\"ToJson\" alt=\"EventStore.Common.Utils.Json.ToJson\"/>()"},{"lang":"vb","value":"<xref uid=\"EventStore.Common.Utils.Json.ToJson\" text=\"ToJson\" alt=\"EventStore.Common.Utils.Json.ToJson\"/>()"}],"level":0.0},{"uid":"System.Object.EventStore.Common.Utils.Json.ToCanonicalJson","isEii":false,"isExtensionMethod":false,"parent":"EventStore.Common.Utils.Json","definition":"EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)","name":[{"lang":"csharp","value":"ToCanonicalJson()"},{"lang":"vb","value":"ToCanonicalJson()"}],"nameWithType":[{"lang":"csharp","value":"Json.ToCanonicalJson()"},{"lang":"vb","value":"Json.ToCanonicalJson()"}],"fullName":[{"lang":"csharp","value":"EventStore.Common.Utils.Json.ToCanonicalJson()"},{"lang":"vb","value":"EventStore.Common.Utils.Json.ToCanonicalJson()"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Common.Utils.Json.ToCanonicalJson\" text=\"ToCanonicalJson\" alt=\"EventStore.Common.Utils.Json.ToCanonicalJson\"/>()"},{"lang":"vb","value":"<xref uid=\"EventStore.Common.Utils.Json.ToCanonicalJson\" text=\"ToCanonicalJson\" alt=\"EventStore.Common.Utils.Json.ToCanonicalJson\"/>()"}],"level":0.0},{"uid":"EventStore.Transport.Tcp.Formatting.FormatterBase`1.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1","isEii":false,"isExtensionMethod":false,"parent":"EventStore.Core.Services.Transport.Tcp.ProtobufExtensions","definition":"EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)","name":[{"lang":"csharp","value":"Serialize<FormatterBase<T>>()"},{"lang":"vb","value":"Serialize(Of FormatterBase(Of T))()"}],"nameWithType":[{"lang":"csharp","value":"ProtobufExtensions.Serialize<FormatterBase<T>>()"},{"lang":"vb","value":"ProtobufExtensions.Serialize(Of FormatterBase(Of T))()"}],"fullName":[{"lang":"csharp","value":"EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Transport.Tcp.Formatting.FormatterBase<T>>()"},{"lang":"vb","value":"EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Transport.Tcp.Formatting.FormatterBase(Of T))()"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1\" text=\"Serialize&lt;FormatterBase&lt;T&gt;&gt;\" alt=\"EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize&lt;EventStore.Transport.Tcp.Formatting.FormatterBase&lt;T&gt;&gt;\"/>()"},{"lang":"vb","value":"<xref uid=\"EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1\" text=\"Serialize(Of FormatterBase(Of T))\" alt=\"EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Transport.Tcp.Formatting.FormatterBase(Of T))\"/>()"}],"level":0.0},{"uid":"EventStore.Transport.Tcp.Formatting.FormatterBase`1.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1","isEii":false,"isExtensionMethod":false,"parent":"EventStore.Core.Services.Transport.Tcp.ProtobufExtensions","definition":"EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)","name":[{"lang":"csharp","value":"SerializeToArray<FormatterBase<T>>()"},{"lang":"vb","value":"SerializeToArray(Of FormatterBase(Of T))()"}],"nameWithType":[{"lang":"csharp","value":"ProtobufExtensions.SerializeToArray<FormatterBase<T>>()"},{"lang":"vb","value":"ProtobufExtensions.SerializeToArray(Of FormatterBase(Of T))()"}],"fullName":[{"lang":"csharp","value":"EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Transport.Tcp.Formatting.FormatterBase<T>>()"},{"lang":"vb","value":"EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Transport.Tcp.Formatting.FormatterBase(Of T))()"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1\" text=\"SerializeToArray&lt;FormatterBase&lt;T&gt;&gt;\" alt=\"EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray&lt;EventStore.Transport.Tcp.Formatting.FormatterBase&lt;T&gt;&gt;\"/>()"},{"lang":"vb","value":"<xref uid=\"EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1\" text=\"SerializeToArray(Of FormatterBase(Of T))\" alt=\"EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Transport.Tcp.Formatting.FormatterBase(Of T))\"/>()"}],"level":0.0}],"_docfxVersion":"2.43.3.0","_disableBreadcrumb":true,"_enableSearch":true,"_gitContribute":{"branch":"master"},"_appFaviconPath":"assets/favicon.ico","_appTitle":"Event Store","_appFooter":"&copy; 2019 Event Store Limited","_disableNavbar":false,"_disableToc":true,"_systemKeys":["uid","isEii","isExtensionMethod","parent","children","href","langs","name","nameWithType","fullName","type","source","documentation","assemblies","namespace","summary","remarks","example","syntax","overridden","overload","exceptions","seealso","see","inheritance","derivedClasses","level","implements","inheritedMembers","extensionMethods","conceptual","platform","attributes","additionalNotes"],"_lang":"csharp","_tocPath":"toc.html","_navPath":"toc.html","_rel":"../../","_path":"dotnet-api/code/EventStore.Transport.Tcp.Formatting.FormatterBase-1.html","_key":"dotnet-api/code/EventStore.Transport.Tcp.Formatting.FormatterBase-1.yml","_navRel":"../../toc.html","_tocRel":"../../toc.html","_navKey":"~/toc.yml","_tocKey":"~/toc.yml","__global":{"classesInSubtitle":"Classes","structsInSubtitle":"Structs","interfacesInSubtitle":"Interfaces","enumsInSubtitle":"Enums","delegatesInSubtitle":"Delegates","constructorsInSubtitle":"Constructors","fieldsInSubtitle":"Fields","propertiesInSubtitle":"Properties","methodsInSubtitle":"Methods","eventsInSubtitle":"Events","operatorsInSubtitle":"Operators","eiisInSubtitle":"Explicit Interface Implementations","functionsInSubtitle":"Functions","membersInSubtitle":"Members","improveThisDoc":"Improve this Doc","viewSource":"View Source","inheritance":"Inheritance","inheritedMembers":"Inherited Members","namespace":"Namespace","assembly":"Assembly","syntax":"Syntax","overrides":"Overrides","implements":"Implements","remarks":"Remarks","examples":"Examples","seealso":"See Also","declaration":"Declaration","parameters":"Parameters","typeParameters":"Type Parameters","type":"Type","name":"Name","description":"Description","returns":"Returns","fieldValue":"Field Value","propertyValue":"Property Value","eventType":"Event Type","exceptions":"Exceptions","condition":"Condition","extensionMethods":"Extension Methods","note":"<h5>Note</h5>","warning":"<h5>Warning</h5>","tip":"<h5>Tip</h5>","important":"<h5>Important</h5>","caution":"<h5>Caution</h5>","next":"<h5>Next Steps</h5>","_shared":{}},"docurl":"","sourceurl":"","summary":null,"remarks":null,"conceptual":null,"example":null,"seealso":null,"id":"EventStore_Transport_Tcp_Formatting_FormatterBase_1","hideTitleType":false,"hideSubtitle":false,"isClass":true,"inClass":true}