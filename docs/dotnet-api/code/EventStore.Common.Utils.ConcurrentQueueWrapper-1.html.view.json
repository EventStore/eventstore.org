{"uid":"EventStore.Common.Utils.ConcurrentQueueWrapper`1","isEii":false,"isExtensionMethod":false,"parent":{"uid":"EventStore.Common.Utils","isEii":false,"isExtensionMethod":false,"name":[{"lang":"csharp","value":"EventStore.Common.Utils"},{"lang":"vb","value":"EventStore.Common.Utils"}],"nameWithType":[{"lang":"csharp","value":"EventStore.Common.Utils"},{"lang":"vb","value":"EventStore.Common.Utils"}],"fullName":[{"lang":"csharp","value":"EventStore.Common.Utils"},{"lang":"vb","value":"EventStore.Common.Utils"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Common.Utils\" text=\"EventStore.Common.Utils\" alt=\"EventStore.Common.Utils\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Common.Utils\" text=\"EventStore.Common.Utils\" alt=\"EventStore.Common.Utils\"/>"}],"level":0.0},"children":[{"inProperty":true,"typePropertyName":"inProperty","id":"properties","children":[{"uid":"EventStore.Common.Utils.ConcurrentQueueWrapper`1.Count","isEii":false,"isExtensionMethod":false,"parent":"EventStore.Common.Utils.ConcurrentQueueWrapper`1","isExternal":false,"name":[{"lang":"csharp","value":"Count"},{"lang":"vb","value":"Count"}],"nameWithType":[{"lang":"csharp","value":"ConcurrentQueueWrapper<T>.Count"},{"lang":"vb","value":"ConcurrentQueueWrapper(Of T).Count"}],"fullName":[{"lang":"csharp","value":"EventStore.Common.Utils.ConcurrentQueueWrapper<T>.Count"},{"lang":"vb","value":"EventStore.Common.Utils.ConcurrentQueueWrapper(Of T).Count"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Common.Utils.ConcurrentQueueWrapper`1.Count\" text=\"Count\" alt=\"EventStore.Common.Utils.ConcurrentQueueWrapper&lt;T&gt;.Count\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Common.Utils.ConcurrentQueueWrapper`1.Count\" text=\"Count\" alt=\"EventStore.Common.Utils.ConcurrentQueueWrapper&lt;T&gt;.Count\"/>"}],"syntax":{"content":[{"lang":"csharp","value":"public int Count { get; }"},{"lang":"vb","value":"Public ReadOnly Property Count As Integer"}],"parameters":[],"return":null,"propertyValue":{"type":{"uid":"System.Int32","name":[{"lang":"csharp","value":"Int32"},{"lang":"vb","value":"Int32"}],"nameWithType":[{"lang":"csharp","value":"Int32"},{"lang":"vb","value":"Int32"}],"fullName":[{"lang":"csharp","value":"System.Int32"},{"lang":"vb","value":"System.Int32"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Int32\" text=\"Int32\" alt=\"System.Int32\"/>"},{"lang":"vb","value":"<xref uid=\"System.Int32\" text=\"Int32\" alt=\"System.Int32\"/>"}]}}},"source":{"id":"Count","path":"/Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Common/Utils/ConcurrentQueueWrapper.cs","startLine":15.0,"endLine":0.0,"isExternal":false},"assemblies":["EventStore.Common"],"namespace":"EventStore.Common.Utils","overload":{"uid":"EventStore.Common.Utils.ConcurrentQueueWrapper`1.Count*","name":[{"lang":"csharp","value":"Count"},{"lang":"vb","value":"Count"}],"nameWithType":[{"lang":"csharp","value":"ConcurrentQueueWrapper<T>.Count"},{"lang":"vb","value":"ConcurrentQueueWrapper(Of T).Count"}],"fullName":[{"lang":"csharp","value":"EventStore.Common.Utils.ConcurrentQueueWrapper<T>.Count"},{"lang":"vb","value":"EventStore.Common.Utils.ConcurrentQueueWrapper(Of T).Count"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Common.Utils.ConcurrentQueueWrapper`1.Count*\" text=\"Count\" alt=\"EventStore.Common.Utils.ConcurrentQueueWrapper&lt;T&gt;.Count\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Common.Utils.ConcurrentQueueWrapper`1.Count*\" text=\"Count\" alt=\"EventStore.Common.Utils.ConcurrentQueueWrapper&lt;T&gt;.Count\"/>"}],"id":"EventStore_Common_Utils_ConcurrentQueueWrapper_1_Count_"},"level":0.0,"modifiers.csharp":["public","get"],"modifiers.vb":["Public","ReadOnly"],"type":"property","summary":null,"platform":null,"docurl":"","sourceurl":"","remarks":null,"conceptual":null,"implements":null,"example":null,"seealso":null,"id":"EventStore_Common_Utils_ConcurrentQueueWrapper_1_Count","hideTitleType":false,"hideSubtitle":false},{"uid":"EventStore.Common.Utils.ConcurrentQueueWrapper`1.IsEmpty","isEii":false,"isExtensionMethod":false,"parent":"EventStore.Common.Utils.ConcurrentQueueWrapper`1","isExternal":false,"name":[{"lang":"csharp","value":"IsEmpty"},{"lang":"vb","value":"IsEmpty"}],"nameWithType":[{"lang":"csharp","value":"ConcurrentQueueWrapper<T>.IsEmpty"},{"lang":"vb","value":"ConcurrentQueueWrapper(Of T).IsEmpty"}],"fullName":[{"lang":"csharp","value":"EventStore.Common.Utils.ConcurrentQueueWrapper<T>.IsEmpty"},{"lang":"vb","value":"EventStore.Common.Utils.ConcurrentQueueWrapper(Of T).IsEmpty"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Common.Utils.ConcurrentQueueWrapper`1.IsEmpty\" text=\"IsEmpty\" alt=\"EventStore.Common.Utils.ConcurrentQueueWrapper&lt;T&gt;.IsEmpty\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Common.Utils.ConcurrentQueueWrapper`1.IsEmpty\" text=\"IsEmpty\" alt=\"EventStore.Common.Utils.ConcurrentQueueWrapper&lt;T&gt;.IsEmpty\"/>"}],"syntax":{"content":[{"lang":"csharp","value":"public bool IsEmpty { get; }"},{"lang":"vb","value":"Public ReadOnly Property IsEmpty As Boolean"}],"parameters":[],"return":null,"propertyValue":{"type":{"uid":"System.Boolean","name":[{"lang":"csharp","value":"Boolean"},{"lang":"vb","value":"Boolean"}],"nameWithType":[{"lang":"csharp","value":"Boolean"},{"lang":"vb","value":"Boolean"}],"fullName":[{"lang":"csharp","value":"System.Boolean"},{"lang":"vb","value":"System.Boolean"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Boolean\" text=\"Boolean\" alt=\"System.Boolean\"/>"},{"lang":"vb","value":"<xref uid=\"System.Boolean\" text=\"Boolean\" alt=\"System.Boolean\"/>"}]}}},"source":{"id":"IsEmpty","path":"/Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Common/Utils/ConcurrentQueueWrapper.cs","startLine":11.0,"endLine":0.0,"isExternal":false},"assemblies":["EventStore.Common"],"namespace":"EventStore.Common.Utils","overload":{"uid":"EventStore.Common.Utils.ConcurrentQueueWrapper`1.IsEmpty*","name":[{"lang":"csharp","value":"IsEmpty"},{"lang":"vb","value":"IsEmpty"}],"nameWithType":[{"lang":"csharp","value":"ConcurrentQueueWrapper<T>.IsEmpty"},{"lang":"vb","value":"ConcurrentQueueWrapper(Of T).IsEmpty"}],"fullName":[{"lang":"csharp","value":"EventStore.Common.Utils.ConcurrentQueueWrapper<T>.IsEmpty"},{"lang":"vb","value":"EventStore.Common.Utils.ConcurrentQueueWrapper(Of T).IsEmpty"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Common.Utils.ConcurrentQueueWrapper`1.IsEmpty*\" text=\"IsEmpty\" alt=\"EventStore.Common.Utils.ConcurrentQueueWrapper&lt;T&gt;.IsEmpty\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Common.Utils.ConcurrentQueueWrapper`1.IsEmpty*\" text=\"IsEmpty\" alt=\"EventStore.Common.Utils.ConcurrentQueueWrapper&lt;T&gt;.IsEmpty\"/>"}],"id":"EventStore_Common_Utils_ConcurrentQueueWrapper_1_IsEmpty_"},"level":0.0,"modifiers.csharp":["public","get"],"modifiers.vb":["Public","ReadOnly"],"type":"property","summary":null,"platform":null,"docurl":"","sourceurl":"","remarks":null,"conceptual":null,"implements":null,"example":null,"seealso":null,"id":"EventStore_Common_Utils_ConcurrentQueueWrapper_1_IsEmpty","hideTitleType":false,"hideSubtitle":false}]},{"inMethod":true,"typePropertyName":"inMethod","id":"methods","children":[{"uid":"EventStore.Common.Utils.ConcurrentQueueWrapper`1.Enqueue(`0)","isEii":false,"isExtensionMethod":false,"parent":"EventStore.Common.Utils.ConcurrentQueueWrapper`1","isExternal":false,"name":[{"lang":"csharp","value":"Enqueue(T)"},{"lang":"vb","value":"Enqueue(T)"}],"nameWithType":[{"lang":"csharp","value":"ConcurrentQueueWrapper<T>.Enqueue(T)"},{"lang":"vb","value":"ConcurrentQueueWrapper(Of T).Enqueue(T)"}],"fullName":[{"lang":"csharp","value":"EventStore.Common.Utils.ConcurrentQueueWrapper<T>.Enqueue(T)"},{"lang":"vb","value":"EventStore.Common.Utils.ConcurrentQueueWrapper(Of T).Enqueue(T)"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Common.Utils.ConcurrentQueueWrapper`1.Enqueue(`0)\" text=\"Enqueue(T)\" alt=\"EventStore.Common.Utils.ConcurrentQueueWrapper&lt;T&gt;.Enqueue(T)\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Common.Utils.ConcurrentQueueWrapper`1.Enqueue(`0)\" text=\"Enqueue(T)\" alt=\"EventStore.Common.Utils.ConcurrentQueueWrapper&lt;T&gt;.Enqueue(T)\"/>"}],"syntax":{"content":[{"lang":"csharp","value":"public void Enqueue(T item)"},{"lang":"vb","value":"Public Sub Enqueue(item As T)"}],"parameters":[{"id":"item","type":{"uid":"{T}","definition":"T","name":[{"lang":"csharp","value":"T"},{"lang":"vb","value":"T"}],"nameWithType":[{"lang":"csharp","value":"T"},{"lang":"vb","value":"T"}],"fullName":[{"lang":"csharp","value":"T"},{"lang":"vb","value":"T"}],"specName":[{"lang":"csharp","value":"<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"},{"lang":"vb","value":"<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"}]}}]},"source":{"id":"Enqueue","path":"/Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Common/Utils/ConcurrentQueueWrapper.cs","startLine":30.0,"endLine":0.0,"isExternal":false},"assemblies":["EventStore.Common"],"namespace":"EventStore.Common.Utils","overload":{"uid":"EventStore.Common.Utils.ConcurrentQueueWrapper`1.Enqueue*","name":[{"lang":"csharp","value":"Enqueue"},{"lang":"vb","value":"Enqueue"}],"nameWithType":[{"lang":"csharp","value":"ConcurrentQueueWrapper<T>.Enqueue"},{"lang":"vb","value":"ConcurrentQueueWrapper(Of T).Enqueue"}],"fullName":[{"lang":"csharp","value":"EventStore.Common.Utils.ConcurrentQueueWrapper<T>.Enqueue"},{"lang":"vb","value":"EventStore.Common.Utils.ConcurrentQueueWrapper(Of T).Enqueue"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Common.Utils.ConcurrentQueueWrapper`1.Enqueue*\" text=\"Enqueue\" alt=\"EventStore.Common.Utils.ConcurrentQueueWrapper&lt;T&gt;.Enqueue\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Common.Utils.ConcurrentQueueWrapper`1.Enqueue*\" text=\"Enqueue\" alt=\"EventStore.Common.Utils.ConcurrentQueueWrapper&lt;T&gt;.Enqueue\"/>"}],"id":"EventStore_Common_Utils_ConcurrentQueueWrapper_1_Enqueue_"},"level":0.0,"modifiers.csharp":["public"],"modifiers.vb":["Public"],"type":"method","summary":null,"platform":null,"docurl":"","sourceurl":"","remarks":null,"conceptual":null,"implements":null,"example":null,"seealso":null,"id":"EventStore_Common_Utils_ConcurrentQueueWrapper_1_Enqueue__0_","hideTitleType":false,"hideSubtitle":false},{"uid":"EventStore.Common.Utils.ConcurrentQueueWrapper`1.TryDequeue(`0@)","isEii":false,"isExtensionMethod":false,"parent":"EventStore.Common.Utils.ConcurrentQueueWrapper`1","isExternal":false,"name":[{"lang":"csharp","value":"TryDequeue(out T)"},{"lang":"vb","value":"TryDequeue(ByRef T)"}],"nameWithType":[{"lang":"csharp","value":"ConcurrentQueueWrapper<T>.TryDequeue(out T)"},{"lang":"vb","value":"ConcurrentQueueWrapper(Of T).TryDequeue(ByRef T)"}],"fullName":[{"lang":"csharp","value":"EventStore.Common.Utils.ConcurrentQueueWrapper<T>.TryDequeue(out T)"},{"lang":"vb","value":"EventStore.Common.Utils.ConcurrentQueueWrapper(Of T).TryDequeue(ByRef T)"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Common.Utils.ConcurrentQueueWrapper`1.TryDequeue(`0@)\" text=\"TryDequeue(out T)\" alt=\"EventStore.Common.Utils.ConcurrentQueueWrapper&lt;T&gt;.TryDequeue(out T)\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Common.Utils.ConcurrentQueueWrapper`1.TryDequeue(`0@)\" text=\"TryDequeue(out T)\" alt=\"EventStore.Common.Utils.ConcurrentQueueWrapper&lt;T&gt;.TryDequeue(out T)\"/>"}],"syntax":{"content":[{"lang":"csharp","value":"public bool TryDequeue(out T result)"},{"lang":"vb","value":"Public Function TryDequeue(ByRef result As T) As Boolean"}],"parameters":[{"id":"result","type":{"uid":"{T}","definition":"T","name":[{"lang":"csharp","value":"T"},{"lang":"vb","value":"T"}],"nameWithType":[{"lang":"csharp","value":"T"},{"lang":"vb","value":"T"}],"fullName":[{"lang":"csharp","value":"T"},{"lang":"vb","value":"T"}],"specName":[{"lang":"csharp","value":"<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"},{"lang":"vb","value":"<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"}]}}],"return":{"type":{"uid":"System.Boolean","name":[{"lang":"csharp","value":"Boolean"},{"lang":"vb","value":"Boolean"}],"nameWithType":[{"lang":"csharp","value":"Boolean"},{"lang":"vb","value":"Boolean"}],"fullName":[{"lang":"csharp","value":"System.Boolean"},{"lang":"vb","value":"System.Boolean"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Boolean\" text=\"Boolean\" alt=\"System.Boolean\"/>"},{"lang":"vb","value":"<xref uid=\"System.Boolean\" text=\"Boolean\" alt=\"System.Boolean\"/>"}]}}},"source":{"id":"TryDequeue","path":"/Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Common/Utils/ConcurrentQueueWrapper.cs","startLine":21.0,"endLine":0.0,"isExternal":false},"assemblies":["EventStore.Common"],"namespace":"EventStore.Common.Utils","overload":{"uid":"EventStore.Common.Utils.ConcurrentQueueWrapper`1.TryDequeue*","name":[{"lang":"csharp","value":"TryDequeue"},{"lang":"vb","value":"TryDequeue"}],"nameWithType":[{"lang":"csharp","value":"ConcurrentQueueWrapper<T>.TryDequeue"},{"lang":"vb","value":"ConcurrentQueueWrapper(Of T).TryDequeue"}],"fullName":[{"lang":"csharp","value":"EventStore.Common.Utils.ConcurrentQueueWrapper<T>.TryDequeue"},{"lang":"vb","value":"EventStore.Common.Utils.ConcurrentQueueWrapper(Of T).TryDequeue"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Common.Utils.ConcurrentQueueWrapper`1.TryDequeue*\" text=\"TryDequeue\" alt=\"EventStore.Common.Utils.ConcurrentQueueWrapper&lt;T&gt;.TryDequeue\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Common.Utils.ConcurrentQueueWrapper`1.TryDequeue*\" text=\"TryDequeue\" alt=\"EventStore.Common.Utils.ConcurrentQueueWrapper&lt;T&gt;.TryDequeue\"/>"}],"id":"EventStore_Common_Utils_ConcurrentQueueWrapper_1_TryDequeue_"},"level":0.0,"modifiers.csharp":["public"],"modifiers.vb":["Public"],"type":"method","summary":null,"platform":null,"docurl":"","sourceurl":"","remarks":null,"conceptual":null,"implements":null,"example":null,"seealso":null,"id":"EventStore_Common_Utils_ConcurrentQueueWrapper_1_TryDequeue__0__","hideTitleType":false,"hideSubtitle":false}]}],"langs":["csharp","vb"],"name":[{"lang":"csharp","value":"ConcurrentQueueWrapper<T>"},{"lang":"vb","value":"ConcurrentQueueWrapper(Of T)"}],"nameWithType":[{"lang":"csharp","value":"ConcurrentQueueWrapper<T>"},{"lang":"vb","value":"ConcurrentQueueWrapper(Of T)"}],"fullName":[{"lang":"csharp","value":"EventStore.Common.Utils.ConcurrentQueueWrapper<T>"},{"lang":"vb","value":"EventStore.Common.Utils.ConcurrentQueueWrapper(Of T)"}],"type":"class","source":{"id":"ConcurrentQueueWrapper","path":"/Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Common/Utils/ConcurrentQueueWrapper.cs","startLine":8.0,"endLine":0.0,"isExternal":false},"assemblies":["EventStore.Common"],"namespace":{"uid":"EventStore.Common.Utils","isEii":false,"isExtensionMethod":false,"name":[{"lang":"csharp","value":"EventStore.Common.Utils"},{"lang":"vb","value":"EventStore.Common.Utils"}],"nameWithType":[{"lang":"csharp","value":"EventStore.Common.Utils"},{"lang":"vb","value":"EventStore.Common.Utils"}],"fullName":[{"lang":"csharp","value":"EventStore.Common.Utils"},{"lang":"vb","value":"EventStore.Common.Utils"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Common.Utils\" text=\"EventStore.Common.Utils\" alt=\"EventStore.Common.Utils\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Common.Utils\" text=\"EventStore.Common.Utils\" alt=\"EventStore.Common.Utils\"/>"}],"level":0.0},"syntax":{"content":[{"lang":"csharp","value":"public class ConcurrentQueueWrapper<T> : ConcurrentQueue<T>, IProducerConsumerCollection<T>, ICollection, IReadOnlyCollection<T>, IEnumerable<T>, IEnumerable"},{"lang":"vb","value":"Public Class ConcurrentQueueWrapper(Of T)\n\n    Inherits ConcurrentQueue(Of T)\n\n    Implements IProducerConsumerCollection(Of T), ICollection, IReadOnlyCollection(Of T), IEnumerable(Of T), IEnumerable"}],"typeParameters":[{"id":"T"}]},"inheritance":[{"uid":"System.Object","isEii":false,"isExtensionMethod":false,"parent":"System","isExternal":true,"name":[{"lang":"csharp","value":"Object"},{"lang":"vb","value":"Object"}],"nameWithType":[{"lang":"csharp","value":"Object"},{"lang":"vb","value":"Object"}],"fullName":[{"lang":"csharp","value":"System.Object"},{"lang":"vb","value":"System.Object"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>"},{"lang":"vb","value":"<xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>"}],"level":0.0,"index":0.0},{"uid":"System.Collections.Concurrent.ConcurrentQueue{{T}}","isEii":false,"isExtensionMethod":false,"parent":"System.Collections.Concurrent","definition":"System.Collections.Concurrent.ConcurrentQueue`1","name":[{"lang":"csharp","value":"ConcurrentQueue<T>"},{"lang":"vb","value":"ConcurrentQueue(Of T)"}],"nameWithType":[{"lang":"csharp","value":"ConcurrentQueue<T>"},{"lang":"vb","value":"ConcurrentQueue(Of T)"}],"fullName":[{"lang":"csharp","value":"System.Collections.Concurrent.ConcurrentQueue<T>"},{"lang":"vb","value":"System.Collections.Concurrent.ConcurrentQueue(Of T)"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Collections.Concurrent.ConcurrentQueue`1\" text=\"ConcurrentQueue\" alt=\"System.Collections.Concurrent.ConcurrentQueue\"/>&lt;T&gt;"},{"lang":"vb","value":"<xref uid=\"System.Collections.Concurrent.ConcurrentQueue`1\" text=\"ConcurrentQueue\" alt=\"System.Collections.Concurrent.ConcurrentQueue\"/>(Of T)"}],"level":0.0,"index":1.0}],"level":2.0,"implements":[{"uid":"System.Collections.Concurrent.IProducerConsumerCollection{{T}}","definition":"System.Collections.Concurrent.IProducerConsumerCollection`1","name":[{"lang":"csharp","value":"IProducerConsumerCollection<T>"},{"lang":"vb","value":"IProducerConsumerCollection(Of T)"}],"nameWithType":[{"lang":"csharp","value":"IProducerConsumerCollection<T>"},{"lang":"vb","value":"IProducerConsumerCollection(Of T)"}],"fullName":[{"lang":"csharp","value":"System.Collections.Concurrent.IProducerConsumerCollection<T>"},{"lang":"vb","value":"System.Collections.Concurrent.IProducerConsumerCollection(Of T)"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Collections.Concurrent.IProducerConsumerCollection`1\" text=\"IProducerConsumerCollection\" alt=\"System.Collections.Concurrent.IProducerConsumerCollection\"/>&lt;T&gt;"},{"lang":"vb","value":"<xref uid=\"System.Collections.Concurrent.IProducerConsumerCollection`1\" text=\"IProducerConsumerCollection\" alt=\"System.Collections.Concurrent.IProducerConsumerCollection\"/>(Of T)"}]},{"uid":"System.Collections.ICollection","name":[{"lang":"csharp","value":"ICollection"},{"lang":"vb","value":"ICollection"}],"nameWithType":[{"lang":"csharp","value":"ICollection"},{"lang":"vb","value":"ICollection"}],"fullName":[{"lang":"csharp","value":"System.Collections.ICollection"},{"lang":"vb","value":"System.Collections.ICollection"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Collections.ICollection\" text=\"ICollection\" alt=\"System.Collections.ICollection\"/>"},{"lang":"vb","value":"<xref uid=\"System.Collections.ICollection\" text=\"ICollection\" alt=\"System.Collections.ICollection\"/>"}]},{"uid":"System.Collections.Generic.IReadOnlyCollection{{T}}","definition":"System.Collections.Generic.IReadOnlyCollection`1","name":[{"lang":"csharp","value":"IReadOnlyCollection<T>"},{"lang":"vb","value":"IReadOnlyCollection(Of T)"}],"nameWithType":[{"lang":"csharp","value":"IReadOnlyCollection<T>"},{"lang":"vb","value":"IReadOnlyCollection(Of T)"}],"fullName":[{"lang":"csharp","value":"System.Collections.Generic.IReadOnlyCollection<T>"},{"lang":"vb","value":"System.Collections.Generic.IReadOnlyCollection(Of T)"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Collections.Generic.IReadOnlyCollection`1\" text=\"IReadOnlyCollection\" alt=\"System.Collections.Generic.IReadOnlyCollection\"/>&lt;T&gt;"},{"lang":"vb","value":"<xref uid=\"System.Collections.Generic.IReadOnlyCollection`1\" text=\"IReadOnlyCollection\" alt=\"System.Collections.Generic.IReadOnlyCollection\"/>(Of T)"}]},{"uid":"System.Collections.Generic.IEnumerable{{T}}","definition":"System.Collections.Generic.IEnumerable`1","name":[{"lang":"csharp","value":"IEnumerable<T>"},{"lang":"vb","value":"IEnumerable(Of T)"}],"nameWithType":[{"lang":"csharp","value":"IEnumerable<T>"},{"lang":"vb","value":"IEnumerable(Of T)"}],"fullName":[{"lang":"csharp","value":"System.Collections.Generic.IEnumerable<T>"},{"lang":"vb","value":"System.Collections.Generic.IEnumerable(Of T)"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Collections.Generic.IEnumerable`1\" text=\"IEnumerable\" alt=\"System.Collections.Generic.IEnumerable\"/>&lt;T&gt;"},{"lang":"vb","value":"<xref uid=\"System.Collections.Generic.IEnumerable`1\" text=\"IEnumerable\" alt=\"System.Collections.Generic.IEnumerable\"/>(Of T)"}]},{"uid":"System.Collections.IEnumerable","name":[{"lang":"csharp","value":"IEnumerable"},{"lang":"vb","value":"IEnumerable"}],"nameWithType":[{"lang":"csharp","value":"IEnumerable"},{"lang":"vb","value":"IEnumerable"}],"fullName":[{"lang":"csharp","value":"System.Collections.IEnumerable"},{"lang":"vb","value":"System.Collections.IEnumerable"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Collections.IEnumerable\" text=\"IEnumerable\" alt=\"System.Collections.IEnumerable\"/>"},{"lang":"vb","value":"<xref uid=\"System.Collections.IEnumerable\" text=\"IEnumerable\" alt=\"System.Collections.IEnumerable\"/>"}]}],"inheritedMembers":[{"uid":"System.Collections.Concurrent.ConcurrentQueue{{T}}.CopyTo({T}[],System.Int32)","isEii":false,"isExtensionMethod":false,"parent":"System.Collections.Concurrent.ConcurrentQueue{{T}}","definition":"System.Collections.Concurrent.ConcurrentQueue`1.CopyTo(`0[],System.Int32)","name":[{"lang":"csharp","value":"CopyTo(T[], Int32)"},{"lang":"vb","value":"CopyTo(T(), Int32)"}],"nameWithType":[{"lang":"csharp","value":"ConcurrentQueue<T>.CopyTo(T[], Int32)"},{"lang":"vb","value":"ConcurrentQueue(Of T).CopyTo(T(), Int32)"}],"fullName":[{"lang":"csharp","value":"System.Collections.Concurrent.ConcurrentQueue<T>.CopyTo(T[], System.Int32)"},{"lang":"vb","value":"System.Collections.Concurrent.ConcurrentQueue(Of T).CopyTo(T(), System.Int32)"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Collections.Concurrent.ConcurrentQueue`1.CopyTo(`0[],System.Int32)\" text=\"CopyTo\" alt=\"System.Collections.Concurrent.ConcurrentQueue&lt;T&gt;.CopyTo\"/>(T[], <xref uid=\"System.Int32\" text=\"Int32\" alt=\"System.Int32\"/>)"},{"lang":"vb","value":"<xref uid=\"System.Collections.Concurrent.ConcurrentQueue`1.CopyTo(`0[],System.Int32)\" text=\"CopyTo\" alt=\"System.Collections.Concurrent.ConcurrentQueue(Of T).CopyTo\"/>(T(), <xref uid=\"System.Int32\" text=\"Int32\" alt=\"System.Int32\"/>)"}],"level":0.0},{"uid":"System.Collections.Concurrent.ConcurrentQueue{{T}}.GetEnumerator","isEii":false,"isExtensionMethod":false,"parent":"System.Collections.Concurrent.ConcurrentQueue{{T}}","definition":"System.Collections.Concurrent.ConcurrentQueue`1.GetEnumerator","name":[{"lang":"csharp","value":"GetEnumerator()"},{"lang":"vb","value":"GetEnumerator()"}],"nameWithType":[{"lang":"csharp","value":"ConcurrentQueue<T>.GetEnumerator()"},{"lang":"vb","value":"ConcurrentQueue(Of T).GetEnumerator()"}],"fullName":[{"lang":"csharp","value":"System.Collections.Concurrent.ConcurrentQueue<T>.GetEnumerator()"},{"lang":"vb","value":"System.Collections.Concurrent.ConcurrentQueue(Of T).GetEnumerator()"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Collections.Concurrent.ConcurrentQueue`1.GetEnumerator\" text=\"GetEnumerator\" alt=\"System.Collections.Concurrent.ConcurrentQueue&lt;T&gt;.GetEnumerator\"/>()"},{"lang":"vb","value":"<xref uid=\"System.Collections.Concurrent.ConcurrentQueue`1.GetEnumerator\" text=\"GetEnumerator\" alt=\"System.Collections.Concurrent.ConcurrentQueue(Of T).GetEnumerator\"/>()"}],"level":0.0},{"uid":"System.Collections.Concurrent.ConcurrentQueue{{T}}.System#Collections#Concurrent#IProducerConsumerCollection{T}#TryAdd({T})","isEii":false,"isExtensionMethod":false,"parent":"System.Collections.Concurrent.ConcurrentQueue{{T}}","definition":"System.Collections.Concurrent.ConcurrentQueue`1.System#Collections#Concurrent#IProducerConsumerCollection{T}#TryAdd(`0)","name":[{"lang":"csharp","value":"IProducerConsumerCollection<T>.TryAdd(T)"},{"lang":"vb","value":"System.Collections.Concurrent.IProducerConsumerCollection<T>.TryAdd(T)"}],"nameWithType":[{"lang":"csharp","value":"ConcurrentQueue<T>.IProducerConsumerCollection<T>.TryAdd(T)"},{"lang":"vb","value":"ConcurrentQueue(Of T).System.Collections.Concurrent.IProducerConsumerCollection<T>.TryAdd(T)"}],"fullName":[{"lang":"csharp","value":"System.Collections.Concurrent.ConcurrentQueue<T>.System.Collections.Concurrent.IProducerConsumerCollection<T>.TryAdd(T)"},{"lang":"vb","value":"System.Collections.Concurrent.ConcurrentQueue(Of T).System.Collections.Concurrent.IProducerConsumerCollection<T>.TryAdd(T)"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Collections.Concurrent.ConcurrentQueue`1.System#Collections#Concurrent#IProducerConsumerCollection{T}#TryAdd(`0)\" text=\"IProducerConsumerCollection&lt;T&gt;.TryAdd\" alt=\"System.Collections.Concurrent.ConcurrentQueue&lt;T&gt;.System.Collections.Concurrent.IProducerConsumerCollection&lt;T&gt;.TryAdd\"/>(T)"},{"lang":"vb","value":"<xref uid=\"System.Collections.Concurrent.ConcurrentQueue`1.System#Collections#Concurrent#IProducerConsumerCollection{T}#TryAdd(`0)\" text=\"System.Collections.Concurrent.IProducerConsumerCollection&lt;T&gt;.TryAdd\" alt=\"System.Collections.Concurrent.ConcurrentQueue(Of T).System.Collections.Concurrent.IProducerConsumerCollection&lt;T&gt;.TryAdd\"/>(T)"}],"level":0.0},{"uid":"System.Collections.Concurrent.ConcurrentQueue{{T}}.System#Collections#Concurrent#IProducerConsumerCollection{T}#TryTake({T}@)","isEii":false,"isExtensionMethod":false,"parent":"System.Collections.Concurrent.ConcurrentQueue{{T}}","definition":"System.Collections.Concurrent.ConcurrentQueue`1.System#Collections#Concurrent#IProducerConsumerCollection{T}#TryTake(`0@)","name":[{"lang":"csharp","value":"IProducerConsumerCollection<T>.TryTake(T)"},{"lang":"vb","value":"System.Collections.Concurrent.IProducerConsumerCollection<T>.TryTake(T)"}],"nameWithType":[{"lang":"csharp","value":"ConcurrentQueue<T>.IProducerConsumerCollection<T>.TryTake(T)"},{"lang":"vb","value":"ConcurrentQueue(Of T).System.Collections.Concurrent.IProducerConsumerCollection<T>.TryTake(T)"}],"fullName":[{"lang":"csharp","value":"System.Collections.Concurrent.ConcurrentQueue<T>.System.Collections.Concurrent.IProducerConsumerCollection<T>.TryTake(T)"},{"lang":"vb","value":"System.Collections.Concurrent.ConcurrentQueue(Of T).System.Collections.Concurrent.IProducerConsumerCollection<T>.TryTake(T)"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Collections.Concurrent.ConcurrentQueue`1.System#Collections#Concurrent#IProducerConsumerCollection{T}#TryTake(`0@)\" text=\"IProducerConsumerCollection&lt;T&gt;.TryTake\" alt=\"System.Collections.Concurrent.ConcurrentQueue&lt;T&gt;.System.Collections.Concurrent.IProducerConsumerCollection&lt;T&gt;.TryTake\"/>(T)"},{"lang":"vb","value":"<xref uid=\"System.Collections.Concurrent.ConcurrentQueue`1.System#Collections#Concurrent#IProducerConsumerCollection{T}#TryTake(`0@)\" text=\"System.Collections.Concurrent.IProducerConsumerCollection&lt;T&gt;.TryTake\" alt=\"System.Collections.Concurrent.ConcurrentQueue(Of T).System.Collections.Concurrent.IProducerConsumerCollection&lt;T&gt;.TryTake\"/>(T)"}],"level":0.0},{"uid":"System.Collections.Concurrent.ConcurrentQueue{{T}}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)","isEii":false,"isExtensionMethod":false,"parent":"System.Collections.Concurrent.ConcurrentQueue{{T}}","definition":"System.Collections.Concurrent.ConcurrentQueue`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)","name":[{"lang":"csharp","value":"ICollection.CopyTo(Array, Int32)"},{"lang":"vb","value":"System.Collections.ICollection.CopyTo(Array, Int32)"}],"nameWithType":[{"lang":"csharp","value":"ConcurrentQueue<T>.ICollection.CopyTo(Array, Int32)"},{"lang":"vb","value":"ConcurrentQueue(Of T).System.Collections.ICollection.CopyTo(Array, Int32)"}],"fullName":[{"lang":"csharp","value":"System.Collections.Concurrent.ConcurrentQueue<T>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)"},{"lang":"vb","value":"System.Collections.Concurrent.ConcurrentQueue(Of T).System.Collections.ICollection.CopyTo(System.Array, System.Int32)"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Collections.Concurrent.ConcurrentQueue`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\" text=\"ICollection.CopyTo\" alt=\"System.Collections.Concurrent.ConcurrentQueue&lt;T&gt;.System.Collections.ICollection.CopyTo\"/>(<xref uid=\"System.Array\" text=\"Array\" alt=\"System.Array\"/>, <xref uid=\"System.Int32\" text=\"Int32\" alt=\"System.Int32\"/>)"},{"lang":"vb","value":"<xref uid=\"System.Collections.Concurrent.ConcurrentQueue`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\" text=\"System.Collections.ICollection.CopyTo\" alt=\"System.Collections.Concurrent.ConcurrentQueue(Of T).System.Collections.ICollection.CopyTo\"/>(<xref uid=\"System.Array\" text=\"Array\" alt=\"System.Array\"/>, <xref uid=\"System.Int32\" text=\"Int32\" alt=\"System.Int32\"/>)"}],"level":0.0},{"uid":"System.Collections.Concurrent.ConcurrentQueue{{T}}.System#Collections#IEnumerable#GetEnumerator","isEii":false,"isExtensionMethod":false,"parent":"System.Collections.Concurrent.ConcurrentQueue{{T}}","definition":"System.Collections.Concurrent.ConcurrentQueue`1.System#Collections#IEnumerable#GetEnumerator","name":[{"lang":"csharp","value":"IEnumerable.GetEnumerator()"},{"lang":"vb","value":"System.Collections.IEnumerable.GetEnumerator()"}],"nameWithType":[{"lang":"csharp","value":"ConcurrentQueue<T>.IEnumerable.GetEnumerator()"},{"lang":"vb","value":"ConcurrentQueue(Of T).System.Collections.IEnumerable.GetEnumerator()"}],"fullName":[{"lang":"csharp","value":"System.Collections.Concurrent.ConcurrentQueue<T>.System.Collections.IEnumerable.GetEnumerator()"},{"lang":"vb","value":"System.Collections.Concurrent.ConcurrentQueue(Of T).System.Collections.IEnumerable.GetEnumerator()"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Collections.Concurrent.ConcurrentQueue`1.System#Collections#IEnumerable#GetEnumerator\" text=\"IEnumerable.GetEnumerator\" alt=\"System.Collections.Concurrent.ConcurrentQueue&lt;T&gt;.System.Collections.IEnumerable.GetEnumerator\"/>()"},{"lang":"vb","value":"<xref uid=\"System.Collections.Concurrent.ConcurrentQueue`1.System#Collections#IEnumerable#GetEnumerator\" text=\"System.Collections.IEnumerable.GetEnumerator\" alt=\"System.Collections.Concurrent.ConcurrentQueue(Of T).System.Collections.IEnumerable.GetEnumerator\"/>()"}],"level":0.0},{"uid":"System.Collections.Concurrent.ConcurrentQueue{{T}}.ToArray","isEii":false,"isExtensionMethod":false,"parent":"System.Collections.Concurrent.ConcurrentQueue{{T}}","definition":"System.Collections.Concurrent.ConcurrentQueue`1.ToArray","name":[{"lang":"csharp","value":"ToArray()"},{"lang":"vb","value":"ToArray()"}],"nameWithType":[{"lang":"csharp","value":"ConcurrentQueue<T>.ToArray()"},{"lang":"vb","value":"ConcurrentQueue(Of T).ToArray()"}],"fullName":[{"lang":"csharp","value":"System.Collections.Concurrent.ConcurrentQueue<T>.ToArray()"},{"lang":"vb","value":"System.Collections.Concurrent.ConcurrentQueue(Of T).ToArray()"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Collections.Concurrent.ConcurrentQueue`1.ToArray\" text=\"ToArray\" alt=\"System.Collections.Concurrent.ConcurrentQueue&lt;T&gt;.ToArray\"/>()"},{"lang":"vb","value":"<xref uid=\"System.Collections.Concurrent.ConcurrentQueue`1.ToArray\" text=\"ToArray\" alt=\"System.Collections.Concurrent.ConcurrentQueue(Of T).ToArray\"/>()"}],"level":0.0},{"uid":"System.Collections.Concurrent.ConcurrentQueue{{T}}.TryPeek({T}@)","isEii":false,"isExtensionMethod":false,"parent":"System.Collections.Concurrent.ConcurrentQueue{{T}}","definition":"System.Collections.Concurrent.ConcurrentQueue`1.TryPeek(`0@)","name":[{"lang":"csharp","value":"TryPeek(T)"},{"lang":"vb","value":"TryPeek(T)"}],"nameWithType":[{"lang":"csharp","value":"ConcurrentQueue<T>.TryPeek(T)"},{"lang":"vb","value":"ConcurrentQueue(Of T).TryPeek(T)"}],"fullName":[{"lang":"csharp","value":"System.Collections.Concurrent.ConcurrentQueue<T>.TryPeek(T)"},{"lang":"vb","value":"System.Collections.Concurrent.ConcurrentQueue(Of T).TryPeek(T)"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Collections.Concurrent.ConcurrentQueue`1.TryPeek(`0@)\" text=\"TryPeek\" alt=\"System.Collections.Concurrent.ConcurrentQueue&lt;T&gt;.TryPeek\"/>(T)"},{"lang":"vb","value":"<xref uid=\"System.Collections.Concurrent.ConcurrentQueue`1.TryPeek(`0@)\" text=\"TryPeek\" alt=\"System.Collections.Concurrent.ConcurrentQueue(Of T).TryPeek\"/>(T)"}],"level":0.0},{"uid":"System.Collections.Concurrent.ConcurrentQueue{{T}}.System#Collections#ICollection#IsSynchronized","isEii":false,"isExtensionMethod":false,"parent":"System.Collections.Concurrent.ConcurrentQueue{{T}}","definition":"System.Collections.Concurrent.ConcurrentQueue`1.System#Collections#ICollection#IsSynchronized","name":[{"lang":"csharp","value":"ICollection.IsSynchronized"},{"lang":"vb","value":"System.Collections.ICollection.IsSynchronized"}],"nameWithType":[{"lang":"csharp","value":"ConcurrentQueue<T>.ICollection.IsSynchronized"},{"lang":"vb","value":"ConcurrentQueue(Of T).System.Collections.ICollection.IsSynchronized"}],"fullName":[{"lang":"csharp","value":"System.Collections.Concurrent.ConcurrentQueue<T>.System.Collections.ICollection.IsSynchronized"},{"lang":"vb","value":"System.Collections.Concurrent.ConcurrentQueue(Of T).System.Collections.ICollection.IsSynchronized"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Collections.Concurrent.ConcurrentQueue{{T}}.System#Collections#ICollection#IsSynchronized\" text=\"ICollection.IsSynchronized\" alt=\"System.Collections.Concurrent.ConcurrentQueue&lt;T&gt;.System.Collections.ICollection.IsSynchronized\"/>"},{"lang":"vb","value":"<xref uid=\"System.Collections.Concurrent.ConcurrentQueue{{T}}.System#Collections#ICollection#IsSynchronized\" text=\"ICollection.IsSynchronized\" alt=\"System.Collections.Concurrent.ConcurrentQueue&lt;T&gt;.System.Collections.ICollection.IsSynchronized\"/>"}],"level":0.0},{"uid":"System.Collections.Concurrent.ConcurrentQueue{{T}}.System#Collections#ICollection#SyncRoot","isEii":false,"isExtensionMethod":false,"parent":"System.Collections.Concurrent.ConcurrentQueue{{T}}","definition":"System.Collections.Concurrent.ConcurrentQueue`1.System#Collections#ICollection#SyncRoot","name":[{"lang":"csharp","value":"ICollection.SyncRoot"},{"lang":"vb","value":"System.Collections.ICollection.SyncRoot"}],"nameWithType":[{"lang":"csharp","value":"ConcurrentQueue<T>.ICollection.SyncRoot"},{"lang":"vb","value":"ConcurrentQueue(Of T).System.Collections.ICollection.SyncRoot"}],"fullName":[{"lang":"csharp","value":"System.Collections.Concurrent.ConcurrentQueue<T>.System.Collections.ICollection.SyncRoot"},{"lang":"vb","value":"System.Collections.Concurrent.ConcurrentQueue(Of T).System.Collections.ICollection.SyncRoot"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Collections.Concurrent.ConcurrentQueue{{T}}.System#Collections#ICollection#SyncRoot\" text=\"ICollection.SyncRoot\" alt=\"System.Collections.Concurrent.ConcurrentQueue&lt;T&gt;.System.Collections.ICollection.SyncRoot\"/>"},{"lang":"vb","value":"<xref uid=\"System.Collections.Concurrent.ConcurrentQueue{{T}}.System#Collections#ICollection#SyncRoot\" text=\"ICollection.SyncRoot\" alt=\"System.Collections.Concurrent.ConcurrentQueue&lt;T&gt;.System.Collections.ICollection.SyncRoot\"/>"}],"level":0.0},{"uid":"System.Object.Equals(System.Object)","isEii":false,"isExtensionMethod":false,"parent":"System.Object","isExternal":true,"name":[{"lang":"csharp","value":"Equals(Object)"},{"lang":"vb","value":"Equals(Object)"}],"nameWithType":[{"lang":"csharp","value":"Object.Equals(Object)"},{"lang":"vb","value":"Object.Equals(Object)"}],"fullName":[{"lang":"csharp","value":"System.Object.Equals(System.Object)"},{"lang":"vb","value":"System.Object.Equals(System.Object)"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Object.Equals(System.Object)\" text=\"Equals\" alt=\"System.Object.Equals\"/>(<xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>)"},{"lang":"vb","value":"<xref uid=\"System.Object.Equals(System.Object)\" text=\"Equals\" alt=\"System.Object.Equals\"/>(<xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>)"}],"level":0.0},{"uid":"System.Object.Equals(System.Object,System.Object)","isEii":false,"isExtensionMethod":false,"parent":"System.Object","isExternal":true,"name":[{"lang":"csharp","value":"Equals(Object, Object)"},{"lang":"vb","value":"Equals(Object, Object)"}],"nameWithType":[{"lang":"csharp","value":"Object.Equals(Object, Object)"},{"lang":"vb","value":"Object.Equals(Object, Object)"}],"fullName":[{"lang":"csharp","value":"System.Object.Equals(System.Object, System.Object)"},{"lang":"vb","value":"System.Object.Equals(System.Object, System.Object)"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Object.Equals(System.Object,System.Object)\" text=\"Equals\" alt=\"System.Object.Equals\"/>(<xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>, <xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>)"},{"lang":"vb","value":"<xref uid=\"System.Object.Equals(System.Object,System.Object)\" text=\"Equals\" alt=\"System.Object.Equals\"/>(<xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>, <xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>)"}],"level":0.0},{"uid":"System.Object.GetHashCode","isEii":false,"isExtensionMethod":false,"parent":"System.Object","isExternal":true,"name":[{"lang":"csharp","value":"GetHashCode()"},{"lang":"vb","value":"GetHashCode()"}],"nameWithType":[{"lang":"csharp","value":"Object.GetHashCode()"},{"lang":"vb","value":"Object.GetHashCode()"}],"fullName":[{"lang":"csharp","value":"System.Object.GetHashCode()"},{"lang":"vb","value":"System.Object.GetHashCode()"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Object.GetHashCode\" text=\"GetHashCode\" alt=\"System.Object.GetHashCode\"/>()"},{"lang":"vb","value":"<xref uid=\"System.Object.GetHashCode\" text=\"GetHashCode\" alt=\"System.Object.GetHashCode\"/>()"}],"level":0.0},{"uid":"System.Object.GetType","isEii":false,"isExtensionMethod":false,"parent":"System.Object","isExternal":true,"name":[{"lang":"csharp","value":"GetType()"},{"lang":"vb","value":"GetType()"}],"nameWithType":[{"lang":"csharp","value":"Object.GetType()"},{"lang":"vb","value":"Object.GetType()"}],"fullName":[{"lang":"csharp","value":"System.Object.GetType()"},{"lang":"vb","value":"System.Object.GetType()"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Object.GetType\" text=\"GetType\" alt=\"System.Object.GetType\"/>()"},{"lang":"vb","value":"<xref uid=\"System.Object.GetType\" text=\"GetType\" alt=\"System.Object.GetType\"/>()"}],"level":0.0},{"uid":"System.Object.MemberwiseClone","isEii":false,"isExtensionMethod":false,"parent":"System.Object","isExternal":true,"name":[{"lang":"csharp","value":"MemberwiseClone()"},{"lang":"vb","value":"MemberwiseClone()"}],"nameWithType":[{"lang":"csharp","value":"Object.MemberwiseClone()"},{"lang":"vb","value":"Object.MemberwiseClone()"}],"fullName":[{"lang":"csharp","value":"System.Object.MemberwiseClone()"},{"lang":"vb","value":"System.Object.MemberwiseClone()"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Object.MemberwiseClone\" text=\"MemberwiseClone\" alt=\"System.Object.MemberwiseClone\"/>()"},{"lang":"vb","value":"<xref uid=\"System.Object.MemberwiseClone\" text=\"MemberwiseClone\" alt=\"System.Object.MemberwiseClone\"/>()"}],"level":0.0},{"uid":"System.Object.ReferenceEquals(System.Object,System.Object)","isEii":false,"isExtensionMethod":false,"parent":"System.Object","isExternal":true,"name":[{"lang":"csharp","value":"ReferenceEquals(Object, Object)"},{"lang":"vb","value":"ReferenceEquals(Object, Object)"}],"nameWithType":[{"lang":"csharp","value":"Object.ReferenceEquals(Object, Object)"},{"lang":"vb","value":"Object.ReferenceEquals(Object, Object)"}],"fullName":[{"lang":"csharp","value":"System.Object.ReferenceEquals(System.Object, System.Object)"},{"lang":"vb","value":"System.Object.ReferenceEquals(System.Object, System.Object)"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Object.ReferenceEquals(System.Object,System.Object)\" text=\"ReferenceEquals\" alt=\"System.Object.ReferenceEquals\"/>(<xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>, <xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>)"},{"lang":"vb","value":"<xref uid=\"System.Object.ReferenceEquals(System.Object,System.Object)\" text=\"ReferenceEquals\" alt=\"System.Object.ReferenceEquals\"/>(<xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>, <xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>)"}],"level":0.0},{"uid":"System.Object.ToString","isEii":false,"isExtensionMethod":false,"parent":"System.Object","isExternal":true,"name":[{"lang":"csharp","value":"ToString()"},{"lang":"vb","value":"ToString()"}],"nameWithType":[{"lang":"csharp","value":"Object.ToString()"},{"lang":"vb","value":"Object.ToString()"}],"fullName":[{"lang":"csharp","value":"System.Object.ToString()"},{"lang":"vb","value":"System.Object.ToString()"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Object.ToString\" text=\"ToString\" alt=\"System.Object.ToString\"/>()"},{"lang":"vb","value":"<xref uid=\"System.Object.ToString\" text=\"ToString\" alt=\"System.Object.ToString\"/>()"}],"level":0.0}],"extensionMethods":[{"uid":"System.Collections.Generic.IEnumerable{`0}.EventStore.Common.Utils.EnumerableExtensions.Safe``1","isEii":false,"isExtensionMethod":false,"parent":"EventStore.Common.Utils.EnumerableExtensions","definition":"EventStore.Common.Utils.EnumerableExtensions.Safe``1(System.Collections.Generic.IEnumerable{``0})","name":[{"lang":"csharp","value":"Safe<T>()"},{"lang":"vb","value":"Safe(Of T)()"}],"nameWithType":[{"lang":"csharp","value":"EnumerableExtensions.Safe<T>()"},{"lang":"vb","value":"EnumerableExtensions.Safe(Of T)()"}],"fullName":[{"lang":"csharp","value":"EventStore.Common.Utils.EnumerableExtensions.Safe<T>()"},{"lang":"vb","value":"EventStore.Common.Utils.EnumerableExtensions.Safe(Of T)()"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Common.Utils.EnumerableExtensions.Safe``1\" text=\"Safe&lt;T&gt;\" alt=\"EventStore.Common.Utils.EnumerableExtensions.Safe&lt;T&gt;\"/>()"},{"lang":"vb","value":"<xref uid=\"EventStore.Common.Utils.EnumerableExtensions.Safe``1\" text=\"Safe(Of T)\" alt=\"EventStore.Common.Utils.EnumerableExtensions.Safe(Of T)\"/>()"}],"level":0.0},{"uid":"System.Collections.Generic.IEnumerable{`0}.EventStore.Common.Utils.EnumerableExtensions.Contains``1(System.Predicate{{T}})","isEii":false,"isExtensionMethod":false,"parent":"EventStore.Common.Utils.EnumerableExtensions","definition":"EventStore.Common.Utils.EnumerableExtensions.Contains``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0})","name":[{"lang":"csharp","value":"Contains<T>(Predicate<T>)"},{"lang":"vb","value":"Contains(Of T)(Predicate(Of T))"}],"nameWithType":[{"lang":"csharp","value":"EnumerableExtensions.Contains<T>(Predicate<T>)"},{"lang":"vb","value":"EnumerableExtensions.Contains(Of T)(Predicate(Of T))"}],"fullName":[{"lang":"csharp","value":"EventStore.Common.Utils.EnumerableExtensions.Contains<T>(System.Predicate<T>)"},{"lang":"vb","value":"EventStore.Common.Utils.EnumerableExtensions.Contains(Of T)(System.Predicate(Of T))"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Common.Utils.EnumerableExtensions.Contains``1(System.Predicate{``0})\" text=\"Contains&lt;T&gt;\" alt=\"EventStore.Common.Utils.EnumerableExtensions.Contains&lt;T&gt;\"/>(<xref uid=\"System.Predicate`1\" text=\"Predicate\" alt=\"System.Predicate\"/>&lt;T&gt;)"},{"lang":"vb","value":"<xref uid=\"EventStore.Common.Utils.EnumerableExtensions.Contains``1(System.Predicate{``0})\" text=\"Contains(Of T)\" alt=\"EventStore.Common.Utils.EnumerableExtensions.Contains(Of T)\"/>(<xref uid=\"System.Predicate`1\" text=\"Predicate\" alt=\"System.Predicate\"/>(Of T))"}],"level":0.0},{"uid":"System.Collections.Generic.IEnumerable{`0}.EventStore.Common.Utils.EnumerableExtensions.IsEmpty``1","isEii":false,"isExtensionMethod":false,"parent":"EventStore.Common.Utils.EnumerableExtensions","definition":"EventStore.Common.Utils.EnumerableExtensions.IsEmpty``1(System.Collections.Generic.IEnumerable{``0})","name":[{"lang":"csharp","value":"IsEmpty<T>()"},{"lang":"vb","value":"IsEmpty(Of T)()"}],"nameWithType":[{"lang":"csharp","value":"EnumerableExtensions.IsEmpty<T>()"},{"lang":"vb","value":"EnumerableExtensions.IsEmpty(Of T)()"}],"fullName":[{"lang":"csharp","value":"EventStore.Common.Utils.EnumerableExtensions.IsEmpty<T>()"},{"lang":"vb","value":"EventStore.Common.Utils.EnumerableExtensions.IsEmpty(Of T)()"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Common.Utils.EnumerableExtensions.IsEmpty``1\" text=\"IsEmpty&lt;T&gt;\" alt=\"EventStore.Common.Utils.EnumerableExtensions.IsEmpty&lt;T&gt;\"/>()"},{"lang":"vb","value":"<xref uid=\"EventStore.Common.Utils.EnumerableExtensions.IsEmpty``1\" text=\"IsEmpty(Of T)\" alt=\"EventStore.Common.Utils.EnumerableExtensions.IsEmpty(Of T)\"/>()"}],"level":0.0},{"uid":"System.Collections.Generic.IEnumerable{`0}.EventStore.Common.Utils.EnumerableExtensions.IsNotEmpty``1","isEii":false,"isExtensionMethod":false,"parent":"EventStore.Common.Utils.EnumerableExtensions","definition":"EventStore.Common.Utils.EnumerableExtensions.IsNotEmpty``1(System.Collections.Generic.IEnumerable{``0})","name":[{"lang":"csharp","value":"IsNotEmpty<T>()"},{"lang":"vb","value":"IsNotEmpty(Of T)()"}],"nameWithType":[{"lang":"csharp","value":"EnumerableExtensions.IsNotEmpty<T>()"},{"lang":"vb","value":"EnumerableExtensions.IsNotEmpty(Of T)()"}],"fullName":[{"lang":"csharp","value":"EventStore.Common.Utils.EnumerableExtensions.IsNotEmpty<T>()"},{"lang":"vb","value":"EventStore.Common.Utils.EnumerableExtensions.IsNotEmpty(Of T)()"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Common.Utils.EnumerableExtensions.IsNotEmpty``1\" text=\"IsNotEmpty&lt;T&gt;\" alt=\"EventStore.Common.Utils.EnumerableExtensions.IsNotEmpty&lt;T&gt;\"/>()"},{"lang":"vb","value":"<xref uid=\"EventStore.Common.Utils.EnumerableExtensions.IsNotEmpty``1\" text=\"IsNotEmpty(Of T)\" alt=\"EventStore.Common.Utils.EnumerableExtensions.IsNotEmpty(Of T)\"/>()"}],"level":0.0},{"uid":"System.Object.EventStore.Common.Utils.Json.ToJsonBytes","isEii":false,"isExtensionMethod":false,"parent":"EventStore.Common.Utils.Json","definition":"EventStore.Common.Utils.Json.ToJsonBytes(System.Object)","name":[{"lang":"csharp","value":"ToJsonBytes()"},{"lang":"vb","value":"ToJsonBytes()"}],"nameWithType":[{"lang":"csharp","value":"Json.ToJsonBytes()"},{"lang":"vb","value":"Json.ToJsonBytes()"}],"fullName":[{"lang":"csharp","value":"EventStore.Common.Utils.Json.ToJsonBytes()"},{"lang":"vb","value":"EventStore.Common.Utils.Json.ToJsonBytes()"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Common.Utils.Json.ToJsonBytes\" text=\"ToJsonBytes\" alt=\"EventStore.Common.Utils.Json.ToJsonBytes\"/>()"},{"lang":"vb","value":"<xref uid=\"EventStore.Common.Utils.Json.ToJsonBytes\" text=\"ToJsonBytes\" alt=\"EventStore.Common.Utils.Json.ToJsonBytes\"/>()"}],"level":0.0},{"uid":"System.Object.EventStore.Common.Utils.Json.ToJson","isEii":false,"isExtensionMethod":false,"parent":"EventStore.Common.Utils.Json","definition":"EventStore.Common.Utils.Json.ToJson(System.Object)","name":[{"lang":"csharp","value":"ToJson()"},{"lang":"vb","value":"ToJson()"}],"nameWithType":[{"lang":"csharp","value":"Json.ToJson()"},{"lang":"vb","value":"Json.ToJson()"}],"fullName":[{"lang":"csharp","value":"EventStore.Common.Utils.Json.ToJson()"},{"lang":"vb","value":"EventStore.Common.Utils.Json.ToJson()"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Common.Utils.Json.ToJson\" text=\"ToJson\" alt=\"EventStore.Common.Utils.Json.ToJson\"/>()"},{"lang":"vb","value":"<xref uid=\"EventStore.Common.Utils.Json.ToJson\" text=\"ToJson\" alt=\"EventStore.Common.Utils.Json.ToJson\"/>()"}],"level":0.0},{"uid":"System.Object.EventStore.Common.Utils.Json.ToCanonicalJson","isEii":false,"isExtensionMethod":false,"parent":"EventStore.Common.Utils.Json","definition":"EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)","name":[{"lang":"csharp","value":"ToCanonicalJson()"},{"lang":"vb","value":"ToCanonicalJson()"}],"nameWithType":[{"lang":"csharp","value":"Json.ToCanonicalJson()"},{"lang":"vb","value":"Json.ToCanonicalJson()"}],"fullName":[{"lang":"csharp","value":"EventStore.Common.Utils.Json.ToCanonicalJson()"},{"lang":"vb","value":"EventStore.Common.Utils.Json.ToCanonicalJson()"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Common.Utils.Json.ToCanonicalJson\" text=\"ToCanonicalJson\" alt=\"EventStore.Common.Utils.Json.ToCanonicalJson\"/>()"},{"lang":"vb","value":"<xref uid=\"EventStore.Common.Utils.Json.ToCanonicalJson\" text=\"ToCanonicalJson\" alt=\"EventStore.Common.Utils.Json.ToCanonicalJson\"/>()"}],"level":0.0},{"uid":"EventStore.Common.Utils.ConcurrentQueueWrapper`1.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1","isEii":false,"isExtensionMethod":false,"parent":"EventStore.Core.Services.Transport.Tcp.ProtobufExtensions","definition":"EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)","name":[{"lang":"csharp","value":"Serialize<ConcurrentQueueWrapper<T>>()"},{"lang":"vb","value":"Serialize(Of ConcurrentQueueWrapper(Of T))()"}],"nameWithType":[{"lang":"csharp","value":"ProtobufExtensions.Serialize<ConcurrentQueueWrapper<T>>()"},{"lang":"vb","value":"ProtobufExtensions.Serialize(Of ConcurrentQueueWrapper(Of T))()"}],"fullName":[{"lang":"csharp","value":"EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Common.Utils.ConcurrentQueueWrapper<T>>()"},{"lang":"vb","value":"EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Common.Utils.ConcurrentQueueWrapper(Of T))()"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1\" text=\"Serialize&lt;ConcurrentQueueWrapper&lt;T&gt;&gt;\" alt=\"EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize&lt;EventStore.Common.Utils.ConcurrentQueueWrapper&lt;T&gt;&gt;\"/>()"},{"lang":"vb","value":"<xref uid=\"EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1\" text=\"Serialize(Of ConcurrentQueueWrapper(Of T))\" alt=\"EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Common.Utils.ConcurrentQueueWrapper(Of T))\"/>()"}],"level":0.0},{"uid":"EventStore.Common.Utils.ConcurrentQueueWrapper`1.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1","isEii":false,"isExtensionMethod":false,"parent":"EventStore.Core.Services.Transport.Tcp.ProtobufExtensions","definition":"EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)","name":[{"lang":"csharp","value":"SerializeToArray<ConcurrentQueueWrapper<T>>()"},{"lang":"vb","value":"SerializeToArray(Of ConcurrentQueueWrapper(Of T))()"}],"nameWithType":[{"lang":"csharp","value":"ProtobufExtensions.SerializeToArray<ConcurrentQueueWrapper<T>>()"},{"lang":"vb","value":"ProtobufExtensions.SerializeToArray(Of ConcurrentQueueWrapper(Of T))()"}],"fullName":[{"lang":"csharp","value":"EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Common.Utils.ConcurrentQueueWrapper<T>>()"},{"lang":"vb","value":"EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Common.Utils.ConcurrentQueueWrapper(Of T))()"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1\" text=\"SerializeToArray&lt;ConcurrentQueueWrapper&lt;T&gt;&gt;\" alt=\"EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray&lt;EventStore.Common.Utils.ConcurrentQueueWrapper&lt;T&gt;&gt;\"/>()"},{"lang":"vb","value":"<xref uid=\"EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1\" text=\"SerializeToArray(Of ConcurrentQueueWrapper(Of T))\" alt=\"EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Common.Utils.ConcurrentQueueWrapper(Of T))\"/>()"}],"level":0.0}],"_docfxVersion":"2.43.3.0","_disableBreadcrumb":true,"_enableSearch":true,"_gitContribute":{"branch":"master"},"_appFaviconPath":"assets/favicon.ico","_appTitle":"Event Store","_appFooter":"&copy; 2019 Event Store Limited","_disableNavbar":false,"_disableToc":true,"_systemKeys":["uid","isEii","isExtensionMethod","parent","children","href","langs","name","nameWithType","fullName","type","source","documentation","assemblies","namespace","summary","remarks","example","syntax","overridden","overload","exceptions","seealso","see","inheritance","derivedClasses","level","implements","inheritedMembers","extensionMethods","conceptual","platform","attributes","additionalNotes"],"_lang":"csharp","_tocPath":"toc.html","_navPath":"toc.html","_rel":"../../","_path":"dotnet-api/code/EventStore.Common.Utils.ConcurrentQueueWrapper-1.html","_key":"dotnet-api/code/EventStore.Common.Utils.ConcurrentQueueWrapper-1.yml","_navRel":"../../toc.html","_tocRel":"../../toc.html","_navKey":"~/toc.yml","_tocKey":"~/toc.yml","__global":{"classesInSubtitle":"Classes","structsInSubtitle":"Structs","interfacesInSubtitle":"Interfaces","enumsInSubtitle":"Enums","delegatesInSubtitle":"Delegates","constructorsInSubtitle":"Constructors","fieldsInSubtitle":"Fields","propertiesInSubtitle":"Properties","methodsInSubtitle":"Methods","eventsInSubtitle":"Events","operatorsInSubtitle":"Operators","eiisInSubtitle":"Explicit Interface Implementations","functionsInSubtitle":"Functions","membersInSubtitle":"Members","improveThisDoc":"Improve this Doc","viewSource":"View Source","inheritance":"Inheritance","inheritedMembers":"Inherited Members","namespace":"Namespace","assembly":"Assembly","syntax":"Syntax","overrides":"Overrides","implements":"Implements","remarks":"Remarks","examples":"Examples","seealso":"See Also","declaration":"Declaration","parameters":"Parameters","typeParameters":"Type Parameters","type":"Type","name":"Name","description":"Description","returns":"Returns","fieldValue":"Field Value","propertyValue":"Property Value","eventType":"Event Type","exceptions":"Exceptions","condition":"Condition","extensionMethods":"Extension Methods","note":"<h5>Note</h5>","warning":"<h5>Warning</h5>","tip":"<h5>Tip</h5>","important":"<h5>Important</h5>","caution":"<h5>Caution</h5>","next":"<h5>Next Steps</h5>","_shared":{}},"docurl":"","sourceurl":"","summary":null,"remarks":null,"conceptual":null,"example":null,"seealso":null,"id":"EventStore_Common_Utils_ConcurrentQueueWrapper_1","hideTitleType":false,"hideSubtitle":false,"isClass":true,"inClass":true}