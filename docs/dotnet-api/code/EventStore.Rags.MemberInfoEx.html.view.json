{"uid":"EventStore.Rags.MemberInfoEx","isEii":false,"isExtensionMethod":false,"parent":{"uid":"EventStore.Rags","isEii":false,"isExtensionMethod":false,"name":[{"lang":"csharp","value":"EventStore.Rags"},{"lang":"vb","value":"EventStore.Rags"}],"nameWithType":[{"lang":"csharp","value":"EventStore.Rags"},{"lang":"vb","value":"EventStore.Rags"}],"fullName":[{"lang":"csharp","value":"EventStore.Rags"},{"lang":"vb","value":"EventStore.Rags"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Rags\" text=\"EventStore.Rags\" alt=\"EventStore.Rags\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Rags\" text=\"EventStore.Rags\" alt=\"EventStore.Rags\"/>"}],"level":0.0},"children":[{"inMethod":true,"typePropertyName":"inMethod","id":"methods","children":[{"uid":"EventStore.Rags.MemberInfoEx.Attr``1(System.Reflection.MemberInfo)","isEii":false,"isExtensionMethod":true,"parent":"EventStore.Rags.MemberInfoEx","isExternal":false,"name":[{"lang":"csharp","value":"Attr<T>(MemberInfo)"},{"lang":"vb","value":"Attr(Of T)(MemberInfo)"}],"nameWithType":[{"lang":"csharp","value":"MemberInfoEx.Attr<T>(MemberInfo)"},{"lang":"vb","value":"MemberInfoEx.Attr(Of T)(MemberInfo)"}],"fullName":[{"lang":"csharp","value":"EventStore.Rags.MemberInfoEx.Attr<T>(System.Reflection.MemberInfo)"},{"lang":"vb","value":"EventStore.Rags.MemberInfoEx.Attr(Of T)(System.Reflection.MemberInfo)"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Rags.MemberInfoEx.Attr``1(System.Reflection.MemberInfo)\" text=\"Attr&lt;T&gt;(MemberInfo)\" alt=\"EventStore.Rags.MemberInfoEx.Attr&lt;T&gt;(System.Reflection.MemberInfo)\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Rags.MemberInfoEx.Attr``1(System.Reflection.MemberInfo)\" text=\"Attr&lt;T&gt;(MemberInfo)\" alt=\"EventStore.Rags.MemberInfoEx.Attr&lt;T&gt;(System.Reflection.MemberInfo)\"/>"}],"syntax":{"content":[{"lang":"csharp","value":"public static T Attr<T>(this MemberInfo info)"},{"lang":"vb","value":"<ExtensionAttribute>\nPublic Shared Function Attr(Of T)(info As MemberInfo) As T"}],"parameters":[{"id":"info","type":{"uid":"System.Reflection.MemberInfo","name":[{"lang":"csharp","value":"MemberInfo"},{"lang":"vb","value":"MemberInfo"}],"nameWithType":[{"lang":"csharp","value":"MemberInfo"},{"lang":"vb","value":"MemberInfo"}],"fullName":[{"lang":"csharp","value":"System.Reflection.MemberInfo"},{"lang":"vb","value":"System.Reflection.MemberInfo"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Reflection.MemberInfo\" text=\"MemberInfo\" alt=\"System.Reflection.MemberInfo\"/>"},{"lang":"vb","value":"<xref uid=\"System.Reflection.MemberInfo\" text=\"MemberInfo\" alt=\"System.Reflection.MemberInfo\"/>"}]},"description":"<p sourcefile=\"dotnet-api/code/EventStore.Rags.MemberInfoEx.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"1\">The member to inspect</p>\n"}],"typeParameters":[{"id":"T","description":"<p sourcefile=\"dotnet-api/code/EventStore.Rags.MemberInfoEx.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"1\">The type of attribute to search for</p>\n"}],"return":{"type":{"uid":"{T}","definition":"T","name":[{"lang":"csharp","value":"T"},{"lang":"vb","value":"T"}],"nameWithType":[{"lang":"csharp","value":"T"},{"lang":"vb","value":"T"}],"fullName":[{"lang":"csharp","value":"T"},{"lang":"vb","value":"T"}],"specName":[{"lang":"csharp","value":"<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"},{"lang":"vb","value":"<xref uid=\"{T}\" text=\"T\" alt=\"T\"/>"}]},"description":"<p sourcefile=\"dotnet-api/code/EventStore.Rags.MemberInfoEx.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"1\">The desired attribute or null if it is not present</p>\n"}},"source":{"id":"Attr","path":"/Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Rags/Extensions.cs","startLine":33.0,"endLine":0.0,"isExternal":false},"assemblies":["EventStore.Rags"],"namespace":"EventStore.Rags","example":[],"overload":{"uid":"EventStore.Rags.MemberInfoEx.Attr*","name":[{"lang":"csharp","value":"Attr"},{"lang":"vb","value":"Attr"}],"nameWithType":[{"lang":"csharp","value":"MemberInfoEx.Attr"},{"lang":"vb","value":"MemberInfoEx.Attr"}],"fullName":[{"lang":"csharp","value":"EventStore.Rags.MemberInfoEx.Attr"},{"lang":"vb","value":"EventStore.Rags.MemberInfoEx.Attr"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Rags.MemberInfoEx.Attr*\" text=\"Attr\" alt=\"EventStore.Rags.MemberInfoEx.Attr\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Rags.MemberInfoEx.Attr*\" text=\"Attr\" alt=\"EventStore.Rags.MemberInfoEx.Attr\"/>"}],"id":"EventStore_Rags_MemberInfoEx_Attr_"},"level":0.0,"modifiers.csharp":["public","static"],"modifiers.vb":["Public","Shared"],"type":"method","summary":"<p sourcefile=\"dotnet-api/code/EventStore.Rags.MemberInfoEx.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"6\">Gets the attribute of the given type or null if the member does not have this attribute defined.  The standard reflection helper GetCustomAttributes will\ngive you a new instance of the attribute every time you call it.  This helper caches it&apos;s results so if you ask for the same attibute twice you will actually\nget back the same attribute.  Note that the cache key is based off of the type T that you provide.  So asking for Attr() where T : BaseType&gt; and then asking for Attr() where T : ConcreteType \nwill result in two different objects being returned.  If you ask for Attr() where T : BaseType and then Attr() where T :BaseType the caching will work and you&apos;ll get the same object back\nthe second time.</p>\n","platform":null,"docurl":"","sourceurl":"","remarks":null,"conceptual":null,"implements":null,"seealso":null,"id":"EventStore_Rags_MemberInfoEx_Attr__1_System_Reflection_MemberInfo_","hideTitleType":false,"hideSubtitle":false},{"uid":"EventStore.Rags.MemberInfoEx.Attrs``1(System.Reflection.MemberInfo)","isEii":false,"isExtensionMethod":true,"parent":"EventStore.Rags.MemberInfoEx","isExternal":false,"name":[{"lang":"csharp","value":"Attrs<T>(MemberInfo)"},{"lang":"vb","value":"Attrs(Of T)(MemberInfo)"}],"nameWithType":[{"lang":"csharp","value":"MemberInfoEx.Attrs<T>(MemberInfo)"},{"lang":"vb","value":"MemberInfoEx.Attrs(Of T)(MemberInfo)"}],"fullName":[{"lang":"csharp","value":"EventStore.Rags.MemberInfoEx.Attrs<T>(System.Reflection.MemberInfo)"},{"lang":"vb","value":"EventStore.Rags.MemberInfoEx.Attrs(Of T)(System.Reflection.MemberInfo)"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Rags.MemberInfoEx.Attrs``1(System.Reflection.MemberInfo)\" text=\"Attrs&lt;T&gt;(MemberInfo)\" alt=\"EventStore.Rags.MemberInfoEx.Attrs&lt;T&gt;(System.Reflection.MemberInfo)\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Rags.MemberInfoEx.Attrs``1(System.Reflection.MemberInfo)\" text=\"Attrs&lt;T&gt;(MemberInfo)\" alt=\"EventStore.Rags.MemberInfoEx.Attrs&lt;T&gt;(System.Reflection.MemberInfo)\"/>"}],"syntax":{"content":[{"lang":"csharp","value":"public static List<T> Attrs<T>(this MemberInfo info)"},{"lang":"vb","value":"<ExtensionAttribute>\nPublic Shared Function Attrs(Of T)(info As MemberInfo) As List(Of T)"}],"parameters":[{"id":"info","type":{"uid":"System.Reflection.MemberInfo","name":[{"lang":"csharp","value":"MemberInfo"},{"lang":"vb","value":"MemberInfo"}],"nameWithType":[{"lang":"csharp","value":"MemberInfo"},{"lang":"vb","value":"MemberInfo"}],"fullName":[{"lang":"csharp","value":"System.Reflection.MemberInfo"},{"lang":"vb","value":"System.Reflection.MemberInfo"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Reflection.MemberInfo\" text=\"MemberInfo\" alt=\"System.Reflection.MemberInfo\"/>"},{"lang":"vb","value":"<xref uid=\"System.Reflection.MemberInfo\" text=\"MemberInfo\" alt=\"System.Reflection.MemberInfo\"/>"}]},"description":"<p sourcefile=\"dotnet-api/code/EventStore.Rags.MemberInfoEx.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"1\">The member to inspect</p>\n"}],"typeParameters":[{"id":"T","description":"<p sourcefile=\"dotnet-api/code/EventStore.Rags.MemberInfoEx.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"1\">The type of attribute to search for</p>\n"}],"return":{"type":{"uid":"System.Collections.Generic.List{{T}}","definition":"System.Collections.Generic.List`1","name":[{"lang":"csharp","value":"List<T>"},{"lang":"vb","value":"List(Of T)"}],"nameWithType":[{"lang":"csharp","value":"List<T>"},{"lang":"vb","value":"List(Of T)"}],"fullName":[{"lang":"csharp","value":"System.Collections.Generic.List<T>"},{"lang":"vb","value":"System.Collections.Generic.List(Of T)"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Collections.Generic.List`1\" text=\"List\" alt=\"System.Collections.Generic.List\"/>&lt;T&gt;"},{"lang":"vb","value":"<xref uid=\"System.Collections.Generic.List`1\" text=\"List\" alt=\"System.Collections.Generic.List\"/>(Of T)"}]},"description":"<p sourcefile=\"dotnet-api/code/EventStore.Rags.MemberInfoEx.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"1\">The list of attributes that you asked for</p>\n"}},"source":{"id":"Attrs","path":"/Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Rags/Extensions.cs","startLine":51.0,"endLine":0.0,"isExternal":false},"assemblies":["EventStore.Rags"],"namespace":"EventStore.Rags","example":[],"overload":{"uid":"EventStore.Rags.MemberInfoEx.Attrs*","name":[{"lang":"csharp","value":"Attrs"},{"lang":"vb","value":"Attrs"}],"nameWithType":[{"lang":"csharp","value":"MemberInfoEx.Attrs"},{"lang":"vb","value":"MemberInfoEx.Attrs"}],"fullName":[{"lang":"csharp","value":"EventStore.Rags.MemberInfoEx.Attrs"},{"lang":"vb","value":"EventStore.Rags.MemberInfoEx.Attrs"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Rags.MemberInfoEx.Attrs*\" text=\"Attrs\" alt=\"EventStore.Rags.MemberInfoEx.Attrs\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Rags.MemberInfoEx.Attrs*\" text=\"Attrs\" alt=\"EventStore.Rags.MemberInfoEx.Attrs\"/>"}],"id":"EventStore_Rags_MemberInfoEx_Attrs_"},"level":0.0,"modifiers.csharp":["public","static"],"modifiers.vb":["Public","Shared"],"type":"method","summary":"<p sourcefile=\"dotnet-api/code/EventStore.Rags.MemberInfoEx.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"6\">Gets the attributes of the given type.  The standard reflection helper GetCustomAttributes will give you new instances of the attributes every time you call it.<br>This helper caches it&apos;s results so if you ask for the same attibutes twice you will actually get back the same attributes.  Note that the cache key is based off \nof the type T that you provide.  So asking for Attrs() where T : BaseType and then asking for Attrs() where T : ConcreteType\nwill result in two different sets of objects being returned.  If you ask for Attrs() where T : BaseType and then Attrs() where T : BaseType the caching will work and you&apos;ll get the\nsame results back the second time.</p>\n","platform":null,"docurl":"","sourceurl":"","remarks":null,"conceptual":null,"implements":null,"seealso":null,"id":"EventStore_Rags_MemberInfoEx_Attrs__1_System_Reflection_MemberInfo_","hideTitleType":false,"hideSubtitle":false},{"uid":"EventStore.Rags.MemberInfoEx.HasAttr``1(System.Reflection.MemberInfo)","isEii":false,"isExtensionMethod":true,"parent":"EventStore.Rags.MemberInfoEx","isExternal":false,"name":[{"lang":"csharp","value":"HasAttr<T>(MemberInfo)"},{"lang":"vb","value":"HasAttr(Of T)(MemberInfo)"}],"nameWithType":[{"lang":"csharp","value":"MemberInfoEx.HasAttr<T>(MemberInfo)"},{"lang":"vb","value":"MemberInfoEx.HasAttr(Of T)(MemberInfo)"}],"fullName":[{"lang":"csharp","value":"EventStore.Rags.MemberInfoEx.HasAttr<T>(System.Reflection.MemberInfo)"},{"lang":"vb","value":"EventStore.Rags.MemberInfoEx.HasAttr(Of T)(System.Reflection.MemberInfo)"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Rags.MemberInfoEx.HasAttr``1(System.Reflection.MemberInfo)\" text=\"HasAttr&lt;T&gt;(MemberInfo)\" alt=\"EventStore.Rags.MemberInfoEx.HasAttr&lt;T&gt;(System.Reflection.MemberInfo)\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Rags.MemberInfoEx.HasAttr``1(System.Reflection.MemberInfo)\" text=\"HasAttr&lt;T&gt;(MemberInfo)\" alt=\"EventStore.Rags.MemberInfoEx.HasAttr&lt;T&gt;(System.Reflection.MemberInfo)\"/>"}],"syntax":{"content":[{"lang":"csharp","value":"public static bool HasAttr<T>(this MemberInfo info)"},{"lang":"vb","value":"<ExtensionAttribute>\nPublic Shared Function HasAttr(Of T)(info As MemberInfo) As Boolean"}],"parameters":[{"id":"info","type":{"uid":"System.Reflection.MemberInfo","name":[{"lang":"csharp","value":"MemberInfo"},{"lang":"vb","value":"MemberInfo"}],"nameWithType":[{"lang":"csharp","value":"MemberInfo"},{"lang":"vb","value":"MemberInfo"}],"fullName":[{"lang":"csharp","value":"System.Reflection.MemberInfo"},{"lang":"vb","value":"System.Reflection.MemberInfo"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Reflection.MemberInfo\" text=\"MemberInfo\" alt=\"System.Reflection.MemberInfo\"/>"},{"lang":"vb","value":"<xref uid=\"System.Reflection.MemberInfo\" text=\"MemberInfo\" alt=\"System.Reflection.MemberInfo\"/>"}]},"description":"<p sourcefile=\"dotnet-api/code/EventStore.Rags.MemberInfoEx.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"1\">The member to test</p>\n"}],"typeParameters":[{"id":"T","description":"<p sourcefile=\"dotnet-api/code/EventStore.Rags.MemberInfoEx.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"1\">The type of attribute to test for (will return true for attributes that inherit from this type)</p>\n"}],"return":{"type":{"uid":"System.Boolean","name":[{"lang":"csharp","value":"Boolean"},{"lang":"vb","value":"Boolean"}],"nameWithType":[{"lang":"csharp","value":"Boolean"},{"lang":"vb","value":"Boolean"}],"fullName":[{"lang":"csharp","value":"System.Boolean"},{"lang":"vb","value":"System.Boolean"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Boolean\" text=\"Boolean\" alt=\"System.Boolean\"/>"},{"lang":"vb","value":"<xref uid=\"System.Boolean\" text=\"Boolean\" alt=\"System.Boolean\"/>"}]},"description":"<p sourcefile=\"dotnet-api/code/EventStore.Rags.MemberInfoEx.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"1\">true if a matching attribute was found, false otherwise</p>\n"}},"source":{"id":"HasAttr","path":"/Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Rags/Extensions.cs","startLine":19.0,"endLine":0.0,"isExternal":false},"assemblies":["EventStore.Rags"],"namespace":"EventStore.Rags","example":[],"overload":{"uid":"EventStore.Rags.MemberInfoEx.HasAttr*","name":[{"lang":"csharp","value":"HasAttr"},{"lang":"vb","value":"HasAttr"}],"nameWithType":[{"lang":"csharp","value":"MemberInfoEx.HasAttr"},{"lang":"vb","value":"MemberInfoEx.HasAttr"}],"fullName":[{"lang":"csharp","value":"EventStore.Rags.MemberInfoEx.HasAttr"},{"lang":"vb","value":"EventStore.Rags.MemberInfoEx.HasAttr"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Rags.MemberInfoEx.HasAttr*\" text=\"HasAttr\" alt=\"EventStore.Rags.MemberInfoEx.HasAttr\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Rags.MemberInfoEx.HasAttr*\" text=\"HasAttr\" alt=\"EventStore.Rags.MemberInfoEx.HasAttr\"/>"}],"id":"EventStore_Rags_MemberInfoEx_HasAttr_"},"level":0.0,"modifiers.csharp":["public","static"],"modifiers.vb":["Public","Shared"],"type":"method","summary":"<p sourcefile=\"dotnet-api/code/EventStore.Rags.MemberInfoEx.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">Returns true if the given member has an attribute of the given type (including inherited types).</p>\n","platform":null,"docurl":"","sourceurl":"","remarks":null,"conceptual":null,"implements":null,"seealso":null,"id":"EventStore_Rags_MemberInfoEx_HasAttr__1_System_Reflection_MemberInfo_","hideTitleType":false,"hideSubtitle":false}]}],"langs":["csharp","vb"],"name":[{"lang":"csharp","value":"MemberInfoEx"},{"lang":"vb","value":"MemberInfoEx"}],"nameWithType":[{"lang":"csharp","value":"MemberInfoEx"},{"lang":"vb","value":"MemberInfoEx"}],"fullName":[{"lang":"csharp","value":"EventStore.Rags.MemberInfoEx"},{"lang":"vb","value":"EventStore.Rags.MemberInfoEx"}],"type":"class","source":{"id":"MemberInfoEx","path":"/Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Rags/Extensions.cs","startLine":10.0,"endLine":0.0,"isExternal":false},"assemblies":["EventStore.Rags"],"namespace":{"uid":"EventStore.Rags","isEii":false,"isExtensionMethod":false,"name":[{"lang":"csharp","value":"EventStore.Rags"},{"lang":"vb","value":"EventStore.Rags"}],"nameWithType":[{"lang":"csharp","value":"EventStore.Rags"},{"lang":"vb","value":"EventStore.Rags"}],"fullName":[{"lang":"csharp","value":"EventStore.Rags"},{"lang":"vb","value":"EventStore.Rags"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Rags\" text=\"EventStore.Rags\" alt=\"EventStore.Rags\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Rags\" text=\"EventStore.Rags\" alt=\"EventStore.Rags\"/>"}],"level":0.0},"summary":"<p sourcefile=\"dotnet-api/code/EventStore.Rags.MemberInfoEx.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">Provides some reflection helpers in the form of extension methods for the MemberInfo type.</p>\n","example":[],"syntax":{"content":[{"lang":"csharp","value":"public static class MemberInfoEx"},{"lang":"vb","value":"Public Module MemberInfoEx"}]},"inheritance":[{"uid":"System.Object","isEii":false,"isExtensionMethod":false,"parent":"System","isExternal":true,"name":[{"lang":"csharp","value":"Object"},{"lang":"vb","value":"Object"}],"nameWithType":[{"lang":"csharp","value":"Object"},{"lang":"vb","value":"Object"}],"fullName":[{"lang":"csharp","value":"System.Object"},{"lang":"vb","value":"System.Object"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>"},{"lang":"vb","value":"<xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>"}],"level":0.0,"index":0.0}],"level":1.0,"inheritedMembers":[{"uid":"System.Object.Equals(System.Object)","isEii":false,"isExtensionMethod":false,"parent":"System.Object","isExternal":true,"name":[{"lang":"csharp","value":"Equals(Object)"},{"lang":"vb","value":"Equals(Object)"}],"nameWithType":[{"lang":"csharp","value":"Object.Equals(Object)"},{"lang":"vb","value":"Object.Equals(Object)"}],"fullName":[{"lang":"csharp","value":"System.Object.Equals(System.Object)"},{"lang":"vb","value":"System.Object.Equals(System.Object)"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Object.Equals(System.Object)\" text=\"Equals\" alt=\"System.Object.Equals\"/>(<xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>)"},{"lang":"vb","value":"<xref uid=\"System.Object.Equals(System.Object)\" text=\"Equals\" alt=\"System.Object.Equals\"/>(<xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>)"}],"level":0.0},{"uid":"System.Object.Equals(System.Object,System.Object)","isEii":false,"isExtensionMethod":false,"parent":"System.Object","isExternal":true,"name":[{"lang":"csharp","value":"Equals(Object, Object)"},{"lang":"vb","value":"Equals(Object, Object)"}],"nameWithType":[{"lang":"csharp","value":"Object.Equals(Object, Object)"},{"lang":"vb","value":"Object.Equals(Object, Object)"}],"fullName":[{"lang":"csharp","value":"System.Object.Equals(System.Object, System.Object)"},{"lang":"vb","value":"System.Object.Equals(System.Object, System.Object)"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Object.Equals(System.Object,System.Object)\" text=\"Equals\" alt=\"System.Object.Equals\"/>(<xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>, <xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>)"},{"lang":"vb","value":"<xref uid=\"System.Object.Equals(System.Object,System.Object)\" text=\"Equals\" alt=\"System.Object.Equals\"/>(<xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>, <xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>)"}],"level":0.0},{"uid":"System.Object.GetHashCode","isEii":false,"isExtensionMethod":false,"parent":"System.Object","isExternal":true,"name":[{"lang":"csharp","value":"GetHashCode()"},{"lang":"vb","value":"GetHashCode()"}],"nameWithType":[{"lang":"csharp","value":"Object.GetHashCode()"},{"lang":"vb","value":"Object.GetHashCode()"}],"fullName":[{"lang":"csharp","value":"System.Object.GetHashCode()"},{"lang":"vb","value":"System.Object.GetHashCode()"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Object.GetHashCode\" text=\"GetHashCode\" alt=\"System.Object.GetHashCode\"/>()"},{"lang":"vb","value":"<xref uid=\"System.Object.GetHashCode\" text=\"GetHashCode\" alt=\"System.Object.GetHashCode\"/>()"}],"level":0.0},{"uid":"System.Object.GetType","isEii":false,"isExtensionMethod":false,"parent":"System.Object","isExternal":true,"name":[{"lang":"csharp","value":"GetType()"},{"lang":"vb","value":"GetType()"}],"nameWithType":[{"lang":"csharp","value":"Object.GetType()"},{"lang":"vb","value":"Object.GetType()"}],"fullName":[{"lang":"csharp","value":"System.Object.GetType()"},{"lang":"vb","value":"System.Object.GetType()"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Object.GetType\" text=\"GetType\" alt=\"System.Object.GetType\"/>()"},{"lang":"vb","value":"<xref uid=\"System.Object.GetType\" text=\"GetType\" alt=\"System.Object.GetType\"/>()"}],"level":0.0},{"uid":"System.Object.MemberwiseClone","isEii":false,"isExtensionMethod":false,"parent":"System.Object","isExternal":true,"name":[{"lang":"csharp","value":"MemberwiseClone()"},{"lang":"vb","value":"MemberwiseClone()"}],"nameWithType":[{"lang":"csharp","value":"Object.MemberwiseClone()"},{"lang":"vb","value":"Object.MemberwiseClone()"}],"fullName":[{"lang":"csharp","value":"System.Object.MemberwiseClone()"},{"lang":"vb","value":"System.Object.MemberwiseClone()"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Object.MemberwiseClone\" text=\"MemberwiseClone\" alt=\"System.Object.MemberwiseClone\"/>()"},{"lang":"vb","value":"<xref uid=\"System.Object.MemberwiseClone\" text=\"MemberwiseClone\" alt=\"System.Object.MemberwiseClone\"/>()"}],"level":0.0},{"uid":"System.Object.ReferenceEquals(System.Object,System.Object)","isEii":false,"isExtensionMethod":false,"parent":"System.Object","isExternal":true,"name":[{"lang":"csharp","value":"ReferenceEquals(Object, Object)"},{"lang":"vb","value":"ReferenceEquals(Object, Object)"}],"nameWithType":[{"lang":"csharp","value":"Object.ReferenceEquals(Object, Object)"},{"lang":"vb","value":"Object.ReferenceEquals(Object, Object)"}],"fullName":[{"lang":"csharp","value":"System.Object.ReferenceEquals(System.Object, System.Object)"},{"lang":"vb","value":"System.Object.ReferenceEquals(System.Object, System.Object)"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Object.ReferenceEquals(System.Object,System.Object)\" text=\"ReferenceEquals\" alt=\"System.Object.ReferenceEquals\"/>(<xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>, <xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>)"},{"lang":"vb","value":"<xref uid=\"System.Object.ReferenceEquals(System.Object,System.Object)\" text=\"ReferenceEquals\" alt=\"System.Object.ReferenceEquals\"/>(<xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>, <xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>)"}],"level":0.0},{"uid":"System.Object.ToString","isEii":false,"isExtensionMethod":false,"parent":"System.Object","isExternal":true,"name":[{"lang":"csharp","value":"ToString()"},{"lang":"vb","value":"ToString()"}],"nameWithType":[{"lang":"csharp","value":"Object.ToString()"},{"lang":"vb","value":"Object.ToString()"}],"fullName":[{"lang":"csharp","value":"System.Object.ToString()"},{"lang":"vb","value":"System.Object.ToString()"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Object.ToString\" text=\"ToString\" alt=\"System.Object.ToString\"/>()"},{"lang":"vb","value":"<xref uid=\"System.Object.ToString\" text=\"ToString\" alt=\"System.Object.ToString\"/>()"}],"level":0.0}],"_docfxVersion":"2.43.3.0","_disableBreadcrumb":true,"_enableSearch":true,"_gitContribute":{"branch":"master"},"_appFaviconPath":"assets/favicon.ico","_appTitle":"Event Store","_appFooter":"&copy; 2019 Event Store Limited","_disableNavbar":false,"_disableToc":true,"_systemKeys":["uid","isEii","isExtensionMethod","parent","children","href","langs","name","nameWithType","fullName","type","source","documentation","assemblies","namespace","summary","remarks","example","syntax","overridden","overload","exceptions","seealso","see","inheritance","derivedClasses","level","implements","inheritedMembers","extensionMethods","conceptual","platform","attributes","additionalNotes"],"_lang":"csharp","_tocPath":"toc.html","_navPath":"toc.html","_rel":"../../","_path":"dotnet-api/code/EventStore.Rags.MemberInfoEx.html","_key":"dotnet-api/code/EventStore.Rags.MemberInfoEx.yml","_navRel":"../../toc.html","_tocRel":"../../toc.html","_navKey":"~/toc.yml","_tocKey":"~/toc.yml","__global":{"classesInSubtitle":"Classes","structsInSubtitle":"Structs","interfacesInSubtitle":"Interfaces","enumsInSubtitle":"Enums","delegatesInSubtitle":"Delegates","constructorsInSubtitle":"Constructors","fieldsInSubtitle":"Fields","propertiesInSubtitle":"Properties","methodsInSubtitle":"Methods","eventsInSubtitle":"Events","operatorsInSubtitle":"Operators","eiisInSubtitle":"Explicit Interface Implementations","functionsInSubtitle":"Functions","membersInSubtitle":"Members","improveThisDoc":"Improve this Doc","viewSource":"View Source","inheritance":"Inheritance","inheritedMembers":"Inherited Members","namespace":"Namespace","assembly":"Assembly","syntax":"Syntax","overrides":"Overrides","implements":"Implements","remarks":"Remarks","examples":"Examples","seealso":"See Also","declaration":"Declaration","parameters":"Parameters","typeParameters":"Type Parameters","type":"Type","name":"Name","description":"Description","returns":"Returns","fieldValue":"Field Value","propertyValue":"Property Value","eventType":"Event Type","exceptions":"Exceptions","condition":"Condition","extensionMethods":"Extension Methods","note":"<h5>Note</h5>","warning":"<h5>Warning</h5>","tip":"<h5>Tip</h5>","important":"<h5>Important</h5>","caution":"<h5>Caution</h5>","next":"<h5>Next Steps</h5>","_shared":{}},"docurl":"","sourceurl":"","remarks":null,"conceptual":null,"implements":null,"seealso":null,"id":"EventStore_Rags_MemberInfoEx","hideTitleType":false,"hideSubtitle":false,"isClass":true,"inClass":true}