{"uid":"EventStore.Transport.Tcp.TcpClientConnector","isEii":false,"isExtensionMethod":false,"parent":{"uid":"EventStore.Transport.Tcp","isEii":false,"isExtensionMethod":false,"name":[{"lang":"csharp","value":"EventStore.Transport.Tcp"},{"lang":"vb","value":"EventStore.Transport.Tcp"}],"nameWithType":[{"lang":"csharp","value":"EventStore.Transport.Tcp"},{"lang":"vb","value":"EventStore.Transport.Tcp"}],"fullName":[{"lang":"csharp","value":"EventStore.Transport.Tcp"},{"lang":"vb","value":"EventStore.Transport.Tcp"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Transport.Tcp\" text=\"EventStore.Transport.Tcp\" alt=\"EventStore.Transport.Tcp\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Transport.Tcp\" text=\"EventStore.Transport.Tcp\" alt=\"EventStore.Transport.Tcp\"/>"}],"level":0.0},"children":[{"inConstructor":true,"typePropertyName":"inConstructor","id":"constructors","children":[{"uid":"EventStore.Transport.Tcp.TcpClientConnector.#ctor","isEii":false,"isExtensionMethod":false,"parent":"EventStore.Transport.Tcp.TcpClientConnector","isExternal":false,"name":[{"lang":"csharp","value":"TcpClientConnector()"},{"lang":"vb","value":"TcpClientConnector()"}],"nameWithType":[{"lang":"csharp","value":"TcpClientConnector.TcpClientConnector()"},{"lang":"vb","value":"TcpClientConnector.TcpClientConnector()"}],"fullName":[{"lang":"csharp","value":"EventStore.Transport.Tcp.TcpClientConnector.TcpClientConnector()"},{"lang":"vb","value":"EventStore.Transport.Tcp.TcpClientConnector.TcpClientConnector()"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Transport.Tcp.TcpClientConnector.#ctor\" text=\"TcpClientConnector()\" alt=\"EventStore.Transport.Tcp.TcpClientConnector.TcpClientConnector()\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Transport.Tcp.TcpClientConnector.#ctor\" text=\"TcpClientConnector()\" alt=\"EventStore.Transport.Tcp.TcpClientConnector.TcpClientConnector()\"/>"}],"syntax":{"content":[{"lang":"csharp","value":"public TcpClientConnector()"},{"lang":"vb","value":"Public Sub New"}]},"source":{"id":".ctor","path":"/Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Transport.Tcp/TcpClientConnector.cs","startLine":18.0,"endLine":0.0,"isExternal":false},"assemblies":["EventStore.Transport.Tcp"],"namespace":"EventStore.Transport.Tcp","overload":{"uid":"EventStore.Transport.Tcp.TcpClientConnector.#ctor*","name":[{"lang":"csharp","value":"TcpClientConnector"},{"lang":"vb","value":"TcpClientConnector"}],"nameWithType":[{"lang":"csharp","value":"TcpClientConnector.TcpClientConnector"},{"lang":"vb","value":"TcpClientConnector.TcpClientConnector"}],"fullName":[{"lang":"csharp","value":"EventStore.Transport.Tcp.TcpClientConnector.TcpClientConnector"},{"lang":"vb","value":"EventStore.Transport.Tcp.TcpClientConnector.TcpClientConnector"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Transport.Tcp.TcpClientConnector.#ctor*\" text=\"TcpClientConnector\" alt=\"EventStore.Transport.Tcp.TcpClientConnector.TcpClientConnector\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Transport.Tcp.TcpClientConnector.#ctor*\" text=\"TcpClientConnector\" alt=\"EventStore.Transport.Tcp.TcpClientConnector.TcpClientConnector\"/>"}],"id":"EventStore_Transport_Tcp_TcpClientConnector__ctor_"},"level":0.0,"modifiers.csharp":["public"],"modifiers.vb":["Public"],"type":"constructor","summary":null,"platform":null,"docurl":"","sourceurl":"","remarks":null,"conceptual":null,"implements":null,"example":null,"seealso":null,"id":"EventStore_Transport_Tcp_TcpClientConnector__ctor","hideTitleType":false,"hideSubtitle":false}]},{"inMethod":true,"typePropertyName":"inMethod","id":"methods","children":[{"uid":"EventStore.Transport.Tcp.TcpClientConnector.ConnectSslTo(System.Guid,System.Net.IPEndPoint,System.TimeSpan,System.String,System.Boolean,System.Action{EventStore.Transport.Tcp.ITcpConnection},System.Action{EventStore.Transport.Tcp.ITcpConnection,System.Net.Sockets.SocketError},System.Boolean)","isEii":false,"isExtensionMethod":false,"parent":"EventStore.Transport.Tcp.TcpClientConnector","isExternal":false,"name":[{"lang":"csharp","value":"ConnectSslTo(Guid, IPEndPoint, TimeSpan, String, Boolean, Action<ITcpConnection>, Action<ITcpConnection, SocketError>, Boolean)"},{"lang":"vb","value":"ConnectSslTo(Guid, IPEndPoint, TimeSpan, String, Boolean, Action(Of ITcpConnection), Action(Of ITcpConnection, SocketError), Boolean)"}],"nameWithType":[{"lang":"csharp","value":"TcpClientConnector.ConnectSslTo(Guid, IPEndPoint, TimeSpan, String, Boolean, Action<ITcpConnection>, Action<ITcpConnection, SocketError>, Boolean)"},{"lang":"vb","value":"TcpClientConnector.ConnectSslTo(Guid, IPEndPoint, TimeSpan, String, Boolean, Action(Of ITcpConnection), Action(Of ITcpConnection, SocketError), Boolean)"}],"fullName":[{"lang":"csharp","value":"EventStore.Transport.Tcp.TcpClientConnector.ConnectSslTo(System.Guid, System.Net.IPEndPoint, System.TimeSpan, System.String, System.Boolean, System.Action<EventStore.Transport.Tcp.ITcpConnection>, System.Action<EventStore.Transport.Tcp.ITcpConnection, System.Net.Sockets.SocketError>, System.Boolean)"},{"lang":"vb","value":"EventStore.Transport.Tcp.TcpClientConnector.ConnectSslTo(System.Guid, System.Net.IPEndPoint, System.TimeSpan, System.String, System.Boolean, System.Action(Of EventStore.Transport.Tcp.ITcpConnection), System.Action(Of EventStore.Transport.Tcp.ITcpConnection, System.Net.Sockets.SocketError), System.Boolean)"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Transport.Tcp.TcpClientConnector.ConnectSslTo(System.Guid,System.Net.IPEndPoint,System.TimeSpan,System.String,System.Boolean,System.Action{EventStore.Transport.Tcp.ITcpConnection},System.Action{EventStore.Transport.Tcp.ITcpConnection,System.Net.Sockets.SocketError},System.Boolean)\" text=\"ConnectSslTo(Guid, IPEndPoint, TimeSpan, String, Boolean, Action&lt;ITcpConnection&gt;, Action&lt;ITcpConnection, SocketError&gt;, Boolean)\" alt=\"EventStore.Transport.Tcp.TcpClientConnector.ConnectSslTo(System.Guid, System.Net.IPEndPoint, System.TimeSpan, System.String, System.Boolean, System.Action&lt;EventStore.Transport.Tcp.ITcpConnection&gt;, System.Action&lt;EventStore.Transport.Tcp.ITcpConnection, System.Net.Sockets.SocketError&gt;, System.Boolean)\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Transport.Tcp.TcpClientConnector.ConnectSslTo(System.Guid,System.Net.IPEndPoint,System.TimeSpan,System.String,System.Boolean,System.Action{EventStore.Transport.Tcp.ITcpConnection},System.Action{EventStore.Transport.Tcp.ITcpConnection,System.Net.Sockets.SocketError},System.Boolean)\" text=\"ConnectSslTo(Guid, IPEndPoint, TimeSpan, String, Boolean, Action&lt;ITcpConnection&gt;, Action&lt;ITcpConnection, SocketError&gt;, Boolean)\" alt=\"EventStore.Transport.Tcp.TcpClientConnector.ConnectSslTo(System.Guid, System.Net.IPEndPoint, System.TimeSpan, System.String, System.Boolean, System.Action&lt;EventStore.Transport.Tcp.ITcpConnection&gt;, System.Action&lt;EventStore.Transport.Tcp.ITcpConnection, System.Net.Sockets.SocketError&gt;, System.Boolean)\"/>"}],"syntax":{"content":[{"lang":"csharp","value":"public ITcpConnection ConnectSslTo(Guid connectionId, IPEndPoint remoteEndPoint, TimeSpan connectionTimeout, string targetHost, bool validateServer, Action<ITcpConnection> onConnectionEstablished = null, Action<ITcpConnection, SocketError> onConnectionFailed = null, bool verbose = true)"},{"lang":"vb","value":"Public Function ConnectSslTo(connectionId As Guid, remoteEndPoint As IPEndPoint, connectionTimeout As TimeSpan, targetHost As String, validateServer As Boolean, onConnectionEstablished As Action(Of ITcpConnection) = Nothing, onConnectionFailed As Action(Of ITcpConnection, SocketError) = Nothing, verbose As Boolean = True) As ITcpConnection"}],"parameters":[{"id":"connectionId","type":{"uid":"System.Guid","name":[{"lang":"csharp","value":"Guid"},{"lang":"vb","value":"Guid"}],"nameWithType":[{"lang":"csharp","value":"Guid"},{"lang":"vb","value":"Guid"}],"fullName":[{"lang":"csharp","value":"System.Guid"},{"lang":"vb","value":"System.Guid"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Guid\" text=\"Guid\" alt=\"System.Guid\"/>"},{"lang":"vb","value":"<xref uid=\"System.Guid\" text=\"Guid\" alt=\"System.Guid\"/>"}]}},{"id":"remoteEndPoint","type":{"uid":"System.Net.IPEndPoint","name":[{"lang":"csharp","value":"IPEndPoint"},{"lang":"vb","value":"IPEndPoint"}],"nameWithType":[{"lang":"csharp","value":"IPEndPoint"},{"lang":"vb","value":"IPEndPoint"}],"fullName":[{"lang":"csharp","value":"System.Net.IPEndPoint"},{"lang":"vb","value":"System.Net.IPEndPoint"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Net.IPEndPoint\" text=\"IPEndPoint\" alt=\"System.Net.IPEndPoint\"/>"},{"lang":"vb","value":"<xref uid=\"System.Net.IPEndPoint\" text=\"IPEndPoint\" alt=\"System.Net.IPEndPoint\"/>"}]}},{"id":"connectionTimeout","type":{"uid":"System.TimeSpan","name":[{"lang":"csharp","value":"TimeSpan"},{"lang":"vb","value":"TimeSpan"}],"nameWithType":[{"lang":"csharp","value":"TimeSpan"},{"lang":"vb","value":"TimeSpan"}],"fullName":[{"lang":"csharp","value":"System.TimeSpan"},{"lang":"vb","value":"System.TimeSpan"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.TimeSpan\" text=\"TimeSpan\" alt=\"System.TimeSpan\"/>"},{"lang":"vb","value":"<xref uid=\"System.TimeSpan\" text=\"TimeSpan\" alt=\"System.TimeSpan\"/>"}]}},{"id":"targetHost","type":{"uid":"System.String","name":[{"lang":"csharp","value":"String"},{"lang":"vb","value":"String"}],"nameWithType":[{"lang":"csharp","value":"String"},{"lang":"vb","value":"String"}],"fullName":[{"lang":"csharp","value":"System.String"},{"lang":"vb","value":"System.String"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.String\" text=\"String\" alt=\"System.String\"/>"},{"lang":"vb","value":"<xref uid=\"System.String\" text=\"String\" alt=\"System.String\"/>"}]}},{"id":"validateServer","type":{"uid":"System.Boolean","name":[{"lang":"csharp","value":"Boolean"},{"lang":"vb","value":"Boolean"}],"nameWithType":[{"lang":"csharp","value":"Boolean"},{"lang":"vb","value":"Boolean"}],"fullName":[{"lang":"csharp","value":"System.Boolean"},{"lang":"vb","value":"System.Boolean"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Boolean\" text=\"Boolean\" alt=\"System.Boolean\"/>"},{"lang":"vb","value":"<xref uid=\"System.Boolean\" text=\"Boolean\" alt=\"System.Boolean\"/>"}]}},{"id":"onConnectionEstablished","type":{"uid":"System.Action{EventStore.Transport.Tcp.ITcpConnection}","definition":"System.Action`1","name":[{"lang":"csharp","value":"Action<ITcpConnection>"},{"lang":"vb","value":"Action(Of ITcpConnection)"}],"nameWithType":[{"lang":"csharp","value":"Action<ITcpConnection>"},{"lang":"vb","value":"Action(Of ITcpConnection)"}],"fullName":[{"lang":"csharp","value":"System.Action<EventStore.Transport.Tcp.ITcpConnection>"},{"lang":"vb","value":"System.Action(Of EventStore.Transport.Tcp.ITcpConnection)"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Action`1\" text=\"Action\" alt=\"System.Action\"/>&lt;<xref uid=\"EventStore.Transport.Tcp.ITcpConnection\" text=\"ITcpConnection\" alt=\"EventStore.Transport.Tcp.ITcpConnection\"/>&gt;"},{"lang":"vb","value":"<xref uid=\"System.Action`1\" text=\"Action\" alt=\"System.Action\"/>(Of <xref uid=\"EventStore.Transport.Tcp.ITcpConnection\" text=\"ITcpConnection\" alt=\"EventStore.Transport.Tcp.ITcpConnection\"/>)"}]}},{"id":"onConnectionFailed","type":{"uid":"System.Action{EventStore.Transport.Tcp.ITcpConnection,System.Net.Sockets.SocketError}","definition":"System.Action`2","name":[{"lang":"csharp","value":"Action<ITcpConnection, SocketError>"},{"lang":"vb","value":"Action(Of ITcpConnection, SocketError)"}],"nameWithType":[{"lang":"csharp","value":"Action<ITcpConnection, SocketError>"},{"lang":"vb","value":"Action(Of ITcpConnection, SocketError)"}],"fullName":[{"lang":"csharp","value":"System.Action<EventStore.Transport.Tcp.ITcpConnection, System.Net.Sockets.SocketError>"},{"lang":"vb","value":"System.Action(Of EventStore.Transport.Tcp.ITcpConnection, System.Net.Sockets.SocketError)"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Action`2\" text=\"Action\" alt=\"System.Action\"/>&lt;<xref uid=\"EventStore.Transport.Tcp.ITcpConnection\" text=\"ITcpConnection\" alt=\"EventStore.Transport.Tcp.ITcpConnection\"/>, <xref uid=\"System.Net.Sockets.SocketError\" text=\"SocketError\" alt=\"System.Net.Sockets.SocketError\"/>&gt;"},{"lang":"vb","value":"<xref uid=\"System.Action`2\" text=\"Action\" alt=\"System.Action\"/>(Of <xref uid=\"EventStore.Transport.Tcp.ITcpConnection\" text=\"ITcpConnection\" alt=\"EventStore.Transport.Tcp.ITcpConnection\"/>, <xref uid=\"System.Net.Sockets.SocketError\" text=\"SocketError\" alt=\"System.Net.Sockets.SocketError\"/>)"}]}},{"id":"verbose","type":{"uid":"System.Boolean","name":[{"lang":"csharp","value":"Boolean"},{"lang":"vb","value":"Boolean"}],"nameWithType":[{"lang":"csharp","value":"Boolean"},{"lang":"vb","value":"Boolean"}],"fullName":[{"lang":"csharp","value":"System.Boolean"},{"lang":"vb","value":"System.Boolean"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Boolean\" text=\"Boolean\" alt=\"System.Boolean\"/>"},{"lang":"vb","value":"<xref uid=\"System.Boolean\" text=\"Boolean\" alt=\"System.Boolean\"/>"}]}}],"return":{"type":{"uid":"EventStore.Transport.Tcp.ITcpConnection","name":[{"lang":"csharp","value":"ITcpConnection"},{"lang":"vb","value":"ITcpConnection"}],"nameWithType":[{"lang":"csharp","value":"ITcpConnection"},{"lang":"vb","value":"ITcpConnection"}],"fullName":[{"lang":"csharp","value":"EventStore.Transport.Tcp.ITcpConnection"},{"lang":"vb","value":"EventStore.Transport.Tcp.ITcpConnection"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Transport.Tcp.ITcpConnection\" text=\"ITcpConnection\" alt=\"EventStore.Transport.Tcp.ITcpConnection\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Transport.Tcp.ITcpConnection\" text=\"ITcpConnection\" alt=\"EventStore.Transport.Tcp.ITcpConnection\"/>"}]}}},"source":{"id":"ConnectSslTo","path":"/Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Transport.Tcp/TcpClientConnector.cs","startLine":44.0,"endLine":0.0,"isExternal":false},"assemblies":["EventStore.Transport.Tcp"],"namespace":"EventStore.Transport.Tcp","overload":{"uid":"EventStore.Transport.Tcp.TcpClientConnector.ConnectSslTo*","name":[{"lang":"csharp","value":"ConnectSslTo"},{"lang":"vb","value":"ConnectSslTo"}],"nameWithType":[{"lang":"csharp","value":"TcpClientConnector.ConnectSslTo"},{"lang":"vb","value":"TcpClientConnector.ConnectSslTo"}],"fullName":[{"lang":"csharp","value":"EventStore.Transport.Tcp.TcpClientConnector.ConnectSslTo"},{"lang":"vb","value":"EventStore.Transport.Tcp.TcpClientConnector.ConnectSslTo"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Transport.Tcp.TcpClientConnector.ConnectSslTo*\" text=\"ConnectSslTo\" alt=\"EventStore.Transport.Tcp.TcpClientConnector.ConnectSslTo\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Transport.Tcp.TcpClientConnector.ConnectSslTo*\" text=\"ConnectSslTo\" alt=\"EventStore.Transport.Tcp.TcpClientConnector.ConnectSslTo\"/>"}],"id":"EventStore_Transport_Tcp_TcpClientConnector_ConnectSslTo_"},"level":0.0,"modifiers.csharp":["public"],"modifiers.vb":["Public"],"type":"method","summary":null,"platform":null,"docurl":"","sourceurl":"","remarks":null,"conceptual":null,"implements":null,"example":null,"seealso":null,"id":"EventStore_Transport_Tcp_TcpClientConnector_ConnectSslTo_System_Guid_System_Net_IPEndPoint_System_TimeSpan_System_String_System_Boolean_System_Action_EventStore_Transport_Tcp_ITcpConnection__System_Action_EventStore_Transport_Tcp_ITcpConnection_System_Net_Sockets_SocketError__System_Boolean_","hideTitleType":false,"hideSubtitle":false},{"uid":"EventStore.Transport.Tcp.TcpClientConnector.ConnectTo(System.Guid,System.Net.IPEndPoint,System.TimeSpan,System.Action{EventStore.Transport.Tcp.ITcpConnection},System.Action{EventStore.Transport.Tcp.ITcpConnection,System.Net.Sockets.SocketError},System.Boolean)","isEii":false,"isExtensionMethod":false,"parent":"EventStore.Transport.Tcp.TcpClientConnector","isExternal":false,"name":[{"lang":"csharp","value":"ConnectTo(Guid, IPEndPoint, TimeSpan, Action<ITcpConnection>, Action<ITcpConnection, SocketError>, Boolean)"},{"lang":"vb","value":"ConnectTo(Guid, IPEndPoint, TimeSpan, Action(Of ITcpConnection), Action(Of ITcpConnection, SocketError), Boolean)"}],"nameWithType":[{"lang":"csharp","value":"TcpClientConnector.ConnectTo(Guid, IPEndPoint, TimeSpan, Action<ITcpConnection>, Action<ITcpConnection, SocketError>, Boolean)"},{"lang":"vb","value":"TcpClientConnector.ConnectTo(Guid, IPEndPoint, TimeSpan, Action(Of ITcpConnection), Action(Of ITcpConnection, SocketError), Boolean)"}],"fullName":[{"lang":"csharp","value":"EventStore.Transport.Tcp.TcpClientConnector.ConnectTo(System.Guid, System.Net.IPEndPoint, System.TimeSpan, System.Action<EventStore.Transport.Tcp.ITcpConnection>, System.Action<EventStore.Transport.Tcp.ITcpConnection, System.Net.Sockets.SocketError>, System.Boolean)"},{"lang":"vb","value":"EventStore.Transport.Tcp.TcpClientConnector.ConnectTo(System.Guid, System.Net.IPEndPoint, System.TimeSpan, System.Action(Of EventStore.Transport.Tcp.ITcpConnection), System.Action(Of EventStore.Transport.Tcp.ITcpConnection, System.Net.Sockets.SocketError), System.Boolean)"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Transport.Tcp.TcpClientConnector.ConnectTo(System.Guid,System.Net.IPEndPoint,System.TimeSpan,System.Action{EventStore.Transport.Tcp.ITcpConnection},System.Action{EventStore.Transport.Tcp.ITcpConnection,System.Net.Sockets.SocketError},System.Boolean)\" text=\"ConnectTo(Guid, IPEndPoint, TimeSpan, Action&lt;ITcpConnection&gt;, Action&lt;ITcpConnection, SocketError&gt;, Boolean)\" alt=\"EventStore.Transport.Tcp.TcpClientConnector.ConnectTo(System.Guid, System.Net.IPEndPoint, System.TimeSpan, System.Action&lt;EventStore.Transport.Tcp.ITcpConnection&gt;, System.Action&lt;EventStore.Transport.Tcp.ITcpConnection, System.Net.Sockets.SocketError&gt;, System.Boolean)\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Transport.Tcp.TcpClientConnector.ConnectTo(System.Guid,System.Net.IPEndPoint,System.TimeSpan,System.Action{EventStore.Transport.Tcp.ITcpConnection},System.Action{EventStore.Transport.Tcp.ITcpConnection,System.Net.Sockets.SocketError},System.Boolean)\" text=\"ConnectTo(Guid, IPEndPoint, TimeSpan, Action&lt;ITcpConnection&gt;, Action&lt;ITcpConnection, SocketError&gt;, Boolean)\" alt=\"EventStore.Transport.Tcp.TcpClientConnector.ConnectTo(System.Guid, System.Net.IPEndPoint, System.TimeSpan, System.Action&lt;EventStore.Transport.Tcp.ITcpConnection&gt;, System.Action&lt;EventStore.Transport.Tcp.ITcpConnection, System.Net.Sockets.SocketError&gt;, System.Boolean)\"/>"}],"syntax":{"content":[{"lang":"csharp","value":"public ITcpConnection ConnectTo(Guid connectionId, IPEndPoint remoteEndPoint, TimeSpan connectionTimeout, Action<ITcpConnection> onConnectionEstablished = null, Action<ITcpConnection, SocketError> onConnectionFailed = null, bool verbose = true)"},{"lang":"vb","value":"Public Function ConnectTo(connectionId As Guid, remoteEndPoint As IPEndPoint, connectionTimeout As TimeSpan, onConnectionEstablished As Action(Of ITcpConnection) = Nothing, onConnectionFailed As Action(Of ITcpConnection, SocketError) = Nothing, verbose As Boolean = True) As ITcpConnection"}],"parameters":[{"id":"connectionId","type":{"uid":"System.Guid","name":[{"lang":"csharp","value":"Guid"},{"lang":"vb","value":"Guid"}],"nameWithType":[{"lang":"csharp","value":"Guid"},{"lang":"vb","value":"Guid"}],"fullName":[{"lang":"csharp","value":"System.Guid"},{"lang":"vb","value":"System.Guid"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Guid\" text=\"Guid\" alt=\"System.Guid\"/>"},{"lang":"vb","value":"<xref uid=\"System.Guid\" text=\"Guid\" alt=\"System.Guid\"/>"}]}},{"id":"remoteEndPoint","type":{"uid":"System.Net.IPEndPoint","name":[{"lang":"csharp","value":"IPEndPoint"},{"lang":"vb","value":"IPEndPoint"}],"nameWithType":[{"lang":"csharp","value":"IPEndPoint"},{"lang":"vb","value":"IPEndPoint"}],"fullName":[{"lang":"csharp","value":"System.Net.IPEndPoint"},{"lang":"vb","value":"System.Net.IPEndPoint"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Net.IPEndPoint\" text=\"IPEndPoint\" alt=\"System.Net.IPEndPoint\"/>"},{"lang":"vb","value":"<xref uid=\"System.Net.IPEndPoint\" text=\"IPEndPoint\" alt=\"System.Net.IPEndPoint\"/>"}]}},{"id":"connectionTimeout","type":{"uid":"System.TimeSpan","name":[{"lang":"csharp","value":"TimeSpan"},{"lang":"vb","value":"TimeSpan"}],"nameWithType":[{"lang":"csharp","value":"TimeSpan"},{"lang":"vb","value":"TimeSpan"}],"fullName":[{"lang":"csharp","value":"System.TimeSpan"},{"lang":"vb","value":"System.TimeSpan"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.TimeSpan\" text=\"TimeSpan\" alt=\"System.TimeSpan\"/>"},{"lang":"vb","value":"<xref uid=\"System.TimeSpan\" text=\"TimeSpan\" alt=\"System.TimeSpan\"/>"}]}},{"id":"onConnectionEstablished","type":{"uid":"System.Action{EventStore.Transport.Tcp.ITcpConnection}","definition":"System.Action`1","name":[{"lang":"csharp","value":"Action<ITcpConnection>"},{"lang":"vb","value":"Action(Of ITcpConnection)"}],"nameWithType":[{"lang":"csharp","value":"Action<ITcpConnection>"},{"lang":"vb","value":"Action(Of ITcpConnection)"}],"fullName":[{"lang":"csharp","value":"System.Action<EventStore.Transport.Tcp.ITcpConnection>"},{"lang":"vb","value":"System.Action(Of EventStore.Transport.Tcp.ITcpConnection)"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Action`1\" text=\"Action\" alt=\"System.Action\"/>&lt;<xref uid=\"EventStore.Transport.Tcp.ITcpConnection\" text=\"ITcpConnection\" alt=\"EventStore.Transport.Tcp.ITcpConnection\"/>&gt;"},{"lang":"vb","value":"<xref uid=\"System.Action`1\" text=\"Action\" alt=\"System.Action\"/>(Of <xref uid=\"EventStore.Transport.Tcp.ITcpConnection\" text=\"ITcpConnection\" alt=\"EventStore.Transport.Tcp.ITcpConnection\"/>)"}]}},{"id":"onConnectionFailed","type":{"uid":"System.Action{EventStore.Transport.Tcp.ITcpConnection,System.Net.Sockets.SocketError}","definition":"System.Action`2","name":[{"lang":"csharp","value":"Action<ITcpConnection, SocketError>"},{"lang":"vb","value":"Action(Of ITcpConnection, SocketError)"}],"nameWithType":[{"lang":"csharp","value":"Action<ITcpConnection, SocketError>"},{"lang":"vb","value":"Action(Of ITcpConnection, SocketError)"}],"fullName":[{"lang":"csharp","value":"System.Action<EventStore.Transport.Tcp.ITcpConnection, System.Net.Sockets.SocketError>"},{"lang":"vb","value":"System.Action(Of EventStore.Transport.Tcp.ITcpConnection, System.Net.Sockets.SocketError)"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Action`2\" text=\"Action\" alt=\"System.Action\"/>&lt;<xref uid=\"EventStore.Transport.Tcp.ITcpConnection\" text=\"ITcpConnection\" alt=\"EventStore.Transport.Tcp.ITcpConnection\"/>, <xref uid=\"System.Net.Sockets.SocketError\" text=\"SocketError\" alt=\"System.Net.Sockets.SocketError\"/>&gt;"},{"lang":"vb","value":"<xref uid=\"System.Action`2\" text=\"Action\" alt=\"System.Action\"/>(Of <xref uid=\"EventStore.Transport.Tcp.ITcpConnection\" text=\"ITcpConnection\" alt=\"EventStore.Transport.Tcp.ITcpConnection\"/>, <xref uid=\"System.Net.Sockets.SocketError\" text=\"SocketError\" alt=\"System.Net.Sockets.SocketError\"/>)"}]}},{"id":"verbose","type":{"uid":"System.Boolean","name":[{"lang":"csharp","value":"Boolean"},{"lang":"vb","value":"Boolean"}],"nameWithType":[{"lang":"csharp","value":"Boolean"},{"lang":"vb","value":"Boolean"}],"fullName":[{"lang":"csharp","value":"System.Boolean"},{"lang":"vb","value":"System.Boolean"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Boolean\" text=\"Boolean\" alt=\"System.Boolean\"/>"},{"lang":"vb","value":"<xref uid=\"System.Boolean\" text=\"Boolean\" alt=\"System.Boolean\"/>"}]}}],"return":{"type":{"uid":"EventStore.Transport.Tcp.ITcpConnection","name":[{"lang":"csharp","value":"ITcpConnection"},{"lang":"vb","value":"ITcpConnection"}],"nameWithType":[{"lang":"csharp","value":"ITcpConnection"},{"lang":"vb","value":"ITcpConnection"}],"fullName":[{"lang":"csharp","value":"EventStore.Transport.Tcp.ITcpConnection"},{"lang":"vb","value":"EventStore.Transport.Tcp.ITcpConnection"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Transport.Tcp.ITcpConnection\" text=\"ITcpConnection\" alt=\"EventStore.Transport.Tcp.ITcpConnection\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Transport.Tcp.ITcpConnection\" text=\"ITcpConnection\" alt=\"EventStore.Transport.Tcp.ITcpConnection\"/>"}]}}},"source":{"id":"ConnectTo","path":"/Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Transport.Tcp/TcpClientConnector.cs","startLine":33.0,"endLine":0.0,"isExternal":false},"assemblies":["EventStore.Transport.Tcp"],"namespace":"EventStore.Transport.Tcp","overload":{"uid":"EventStore.Transport.Tcp.TcpClientConnector.ConnectTo*","name":[{"lang":"csharp","value":"ConnectTo"},{"lang":"vb","value":"ConnectTo"}],"nameWithType":[{"lang":"csharp","value":"TcpClientConnector.ConnectTo"},{"lang":"vb","value":"TcpClientConnector.ConnectTo"}],"fullName":[{"lang":"csharp","value":"EventStore.Transport.Tcp.TcpClientConnector.ConnectTo"},{"lang":"vb","value":"EventStore.Transport.Tcp.TcpClientConnector.ConnectTo"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Transport.Tcp.TcpClientConnector.ConnectTo*\" text=\"ConnectTo\" alt=\"EventStore.Transport.Tcp.TcpClientConnector.ConnectTo\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Transport.Tcp.TcpClientConnector.ConnectTo*\" text=\"ConnectTo\" alt=\"EventStore.Transport.Tcp.TcpClientConnector.ConnectTo\"/>"}],"id":"EventStore_Transport_Tcp_TcpClientConnector_ConnectTo_"},"level":0.0,"modifiers.csharp":["public"],"modifiers.vb":["Public"],"type":"method","summary":null,"platform":null,"docurl":"","sourceurl":"","remarks":null,"conceptual":null,"implements":null,"example":null,"seealso":null,"id":"EventStore_Transport_Tcp_TcpClientConnector_ConnectTo_System_Guid_System_Net_IPEndPoint_System_TimeSpan_System_Action_EventStore_Transport_Tcp_ITcpConnection__System_Action_EventStore_Transport_Tcp_ITcpConnection_System_Net_Sockets_SocketError__System_Boolean_","hideTitleType":false,"hideSubtitle":false}]}],"langs":["csharp","vb"],"name":[{"lang":"csharp","value":"TcpClientConnector"},{"lang":"vb","value":"TcpClientConnector"}],"nameWithType":[{"lang":"csharp","value":"TcpClientConnector"},{"lang":"vb","value":"TcpClientConnector"}],"fullName":[{"lang":"csharp","value":"EventStore.Transport.Tcp.TcpClientConnector"},{"lang":"vb","value":"EventStore.Transport.Tcp.TcpClientConnector"}],"type":"class","source":{"id":"TcpClientConnector","path":"/Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Transport.Tcp/TcpClientConnector.cs","startLine":9.0,"endLine":0.0,"isExternal":false},"assemblies":["EventStore.Transport.Tcp"],"namespace":{"uid":"EventStore.Transport.Tcp","isEii":false,"isExtensionMethod":false,"name":[{"lang":"csharp","value":"EventStore.Transport.Tcp"},{"lang":"vb","value":"EventStore.Transport.Tcp"}],"nameWithType":[{"lang":"csharp","value":"EventStore.Transport.Tcp"},{"lang":"vb","value":"EventStore.Transport.Tcp"}],"fullName":[{"lang":"csharp","value":"EventStore.Transport.Tcp"},{"lang":"vb","value":"EventStore.Transport.Tcp"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Transport.Tcp\" text=\"EventStore.Transport.Tcp\" alt=\"EventStore.Transport.Tcp\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Transport.Tcp\" text=\"EventStore.Transport.Tcp\" alt=\"EventStore.Transport.Tcp\"/>"}],"level":0.0},"syntax":{"content":[{"lang":"csharp","value":"public class TcpClientConnector"},{"lang":"vb","value":"Public Class TcpClientConnector"}]},"inheritance":[{"uid":"System.Object","isEii":false,"isExtensionMethod":false,"parent":"System","isExternal":true,"name":[{"lang":"csharp","value":"Object"},{"lang":"vb","value":"Object"}],"nameWithType":[{"lang":"csharp","value":"Object"},{"lang":"vb","value":"Object"}],"fullName":[{"lang":"csharp","value":"System.Object"},{"lang":"vb","value":"System.Object"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>"},{"lang":"vb","value":"<xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>"}],"level":0.0,"index":0.0}],"level":1.0,"inheritedMembers":[{"uid":"System.Object.Equals(System.Object)","isEii":false,"isExtensionMethod":false,"parent":"System.Object","isExternal":true,"name":[{"lang":"csharp","value":"Equals(Object)"},{"lang":"vb","value":"Equals(Object)"}],"nameWithType":[{"lang":"csharp","value":"Object.Equals(Object)"},{"lang":"vb","value":"Object.Equals(Object)"}],"fullName":[{"lang":"csharp","value":"System.Object.Equals(System.Object)"},{"lang":"vb","value":"System.Object.Equals(System.Object)"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Object.Equals(System.Object)\" text=\"Equals\" alt=\"System.Object.Equals\"/>(<xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>)"},{"lang":"vb","value":"<xref uid=\"System.Object.Equals(System.Object)\" text=\"Equals\" alt=\"System.Object.Equals\"/>(<xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>)"}],"level":0.0},{"uid":"System.Object.Equals(System.Object,System.Object)","isEii":false,"isExtensionMethod":false,"parent":"System.Object","isExternal":true,"name":[{"lang":"csharp","value":"Equals(Object, Object)"},{"lang":"vb","value":"Equals(Object, Object)"}],"nameWithType":[{"lang":"csharp","value":"Object.Equals(Object, Object)"},{"lang":"vb","value":"Object.Equals(Object, Object)"}],"fullName":[{"lang":"csharp","value":"System.Object.Equals(System.Object, System.Object)"},{"lang":"vb","value":"System.Object.Equals(System.Object, System.Object)"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Object.Equals(System.Object,System.Object)\" text=\"Equals\" alt=\"System.Object.Equals\"/>(<xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>, <xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>)"},{"lang":"vb","value":"<xref uid=\"System.Object.Equals(System.Object,System.Object)\" text=\"Equals\" alt=\"System.Object.Equals\"/>(<xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>, <xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>)"}],"level":0.0},{"uid":"System.Object.GetHashCode","isEii":false,"isExtensionMethod":false,"parent":"System.Object","isExternal":true,"name":[{"lang":"csharp","value":"GetHashCode()"},{"lang":"vb","value":"GetHashCode()"}],"nameWithType":[{"lang":"csharp","value":"Object.GetHashCode()"},{"lang":"vb","value":"Object.GetHashCode()"}],"fullName":[{"lang":"csharp","value":"System.Object.GetHashCode()"},{"lang":"vb","value":"System.Object.GetHashCode()"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Object.GetHashCode\" text=\"GetHashCode\" alt=\"System.Object.GetHashCode\"/>()"},{"lang":"vb","value":"<xref uid=\"System.Object.GetHashCode\" text=\"GetHashCode\" alt=\"System.Object.GetHashCode\"/>()"}],"level":0.0},{"uid":"System.Object.GetType","isEii":false,"isExtensionMethod":false,"parent":"System.Object","isExternal":true,"name":[{"lang":"csharp","value":"GetType()"},{"lang":"vb","value":"GetType()"}],"nameWithType":[{"lang":"csharp","value":"Object.GetType()"},{"lang":"vb","value":"Object.GetType()"}],"fullName":[{"lang":"csharp","value":"System.Object.GetType()"},{"lang":"vb","value":"System.Object.GetType()"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Object.GetType\" text=\"GetType\" alt=\"System.Object.GetType\"/>()"},{"lang":"vb","value":"<xref uid=\"System.Object.GetType\" text=\"GetType\" alt=\"System.Object.GetType\"/>()"}],"level":0.0},{"uid":"System.Object.MemberwiseClone","isEii":false,"isExtensionMethod":false,"parent":"System.Object","isExternal":true,"name":[{"lang":"csharp","value":"MemberwiseClone()"},{"lang":"vb","value":"MemberwiseClone()"}],"nameWithType":[{"lang":"csharp","value":"Object.MemberwiseClone()"},{"lang":"vb","value":"Object.MemberwiseClone()"}],"fullName":[{"lang":"csharp","value":"System.Object.MemberwiseClone()"},{"lang":"vb","value":"System.Object.MemberwiseClone()"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Object.MemberwiseClone\" text=\"MemberwiseClone\" alt=\"System.Object.MemberwiseClone\"/>()"},{"lang":"vb","value":"<xref uid=\"System.Object.MemberwiseClone\" text=\"MemberwiseClone\" alt=\"System.Object.MemberwiseClone\"/>()"}],"level":0.0},{"uid":"System.Object.ReferenceEquals(System.Object,System.Object)","isEii":false,"isExtensionMethod":false,"parent":"System.Object","isExternal":true,"name":[{"lang":"csharp","value":"ReferenceEquals(Object, Object)"},{"lang":"vb","value":"ReferenceEquals(Object, Object)"}],"nameWithType":[{"lang":"csharp","value":"Object.ReferenceEquals(Object, Object)"},{"lang":"vb","value":"Object.ReferenceEquals(Object, Object)"}],"fullName":[{"lang":"csharp","value":"System.Object.ReferenceEquals(System.Object, System.Object)"},{"lang":"vb","value":"System.Object.ReferenceEquals(System.Object, System.Object)"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Object.ReferenceEquals(System.Object,System.Object)\" text=\"ReferenceEquals\" alt=\"System.Object.ReferenceEquals\"/>(<xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>, <xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>)"},{"lang":"vb","value":"<xref uid=\"System.Object.ReferenceEquals(System.Object,System.Object)\" text=\"ReferenceEquals\" alt=\"System.Object.ReferenceEquals\"/>(<xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>, <xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>)"}],"level":0.0},{"uid":"System.Object.ToString","isEii":false,"isExtensionMethod":false,"parent":"System.Object","isExternal":true,"name":[{"lang":"csharp","value":"ToString()"},{"lang":"vb","value":"ToString()"}],"nameWithType":[{"lang":"csharp","value":"Object.ToString()"},{"lang":"vb","value":"Object.ToString()"}],"fullName":[{"lang":"csharp","value":"System.Object.ToString()"},{"lang":"vb","value":"System.Object.ToString()"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Object.ToString\" text=\"ToString\" alt=\"System.Object.ToString\"/>()"},{"lang":"vb","value":"<xref uid=\"System.Object.ToString\" text=\"ToString\" alt=\"System.Object.ToString\"/>()"}],"level":0.0}],"extensionMethods":[{"uid":"System.Object.EventStore.Common.Utils.Json.ToJsonBytes","isEii":false,"isExtensionMethod":false,"parent":"EventStore.Common.Utils.Json","definition":"EventStore.Common.Utils.Json.ToJsonBytes(System.Object)","name":[{"lang":"csharp","value":"ToJsonBytes()"},{"lang":"vb","value":"ToJsonBytes()"}],"nameWithType":[{"lang":"csharp","value":"Json.ToJsonBytes()"},{"lang":"vb","value":"Json.ToJsonBytes()"}],"fullName":[{"lang":"csharp","value":"EventStore.Common.Utils.Json.ToJsonBytes()"},{"lang":"vb","value":"EventStore.Common.Utils.Json.ToJsonBytes()"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Common.Utils.Json.ToJsonBytes\" text=\"ToJsonBytes\" alt=\"EventStore.Common.Utils.Json.ToJsonBytes\"/>()"},{"lang":"vb","value":"<xref uid=\"EventStore.Common.Utils.Json.ToJsonBytes\" text=\"ToJsonBytes\" alt=\"EventStore.Common.Utils.Json.ToJsonBytes\"/>()"}],"level":0.0},{"uid":"System.Object.EventStore.Common.Utils.Json.ToJson","isEii":false,"isExtensionMethod":false,"parent":"EventStore.Common.Utils.Json","definition":"EventStore.Common.Utils.Json.ToJson(System.Object)","name":[{"lang":"csharp","value":"ToJson()"},{"lang":"vb","value":"ToJson()"}],"nameWithType":[{"lang":"csharp","value":"Json.ToJson()"},{"lang":"vb","value":"Json.ToJson()"}],"fullName":[{"lang":"csharp","value":"EventStore.Common.Utils.Json.ToJson()"},{"lang":"vb","value":"EventStore.Common.Utils.Json.ToJson()"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Common.Utils.Json.ToJson\" text=\"ToJson\" alt=\"EventStore.Common.Utils.Json.ToJson\"/>()"},{"lang":"vb","value":"<xref uid=\"EventStore.Common.Utils.Json.ToJson\" text=\"ToJson\" alt=\"EventStore.Common.Utils.Json.ToJson\"/>()"}],"level":0.0},{"uid":"System.Object.EventStore.Common.Utils.Json.ToCanonicalJson","isEii":false,"isExtensionMethod":false,"parent":"EventStore.Common.Utils.Json","definition":"EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)","name":[{"lang":"csharp","value":"ToCanonicalJson()"},{"lang":"vb","value":"ToCanonicalJson()"}],"nameWithType":[{"lang":"csharp","value":"Json.ToCanonicalJson()"},{"lang":"vb","value":"Json.ToCanonicalJson()"}],"fullName":[{"lang":"csharp","value":"EventStore.Common.Utils.Json.ToCanonicalJson()"},{"lang":"vb","value":"EventStore.Common.Utils.Json.ToCanonicalJson()"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Common.Utils.Json.ToCanonicalJson\" text=\"ToCanonicalJson\" alt=\"EventStore.Common.Utils.Json.ToCanonicalJson\"/>()"},{"lang":"vb","value":"<xref uid=\"EventStore.Common.Utils.Json.ToCanonicalJson\" text=\"ToCanonicalJson\" alt=\"EventStore.Common.Utils.Json.ToCanonicalJson\"/>()"}],"level":0.0},{"uid":"EventStore.Transport.Tcp.TcpClientConnector.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1","isEii":false,"isExtensionMethod":false,"parent":"EventStore.Core.Services.Transport.Tcp.ProtobufExtensions","definition":"EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)","name":[{"lang":"csharp","value":"Serialize<TcpClientConnector>()"},{"lang":"vb","value":"Serialize(Of TcpClientConnector)()"}],"nameWithType":[{"lang":"csharp","value":"ProtobufExtensions.Serialize<TcpClientConnector>()"},{"lang":"vb","value":"ProtobufExtensions.Serialize(Of TcpClientConnector)()"}],"fullName":[{"lang":"csharp","value":"EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Transport.Tcp.TcpClientConnector>()"},{"lang":"vb","value":"EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Transport.Tcp.TcpClientConnector)()"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1\" text=\"Serialize&lt;TcpClientConnector&gt;\" alt=\"EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize&lt;EventStore.Transport.Tcp.TcpClientConnector&gt;\"/>()"},{"lang":"vb","value":"<xref uid=\"EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1\" text=\"Serialize(Of TcpClientConnector)\" alt=\"EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Transport.Tcp.TcpClientConnector)\"/>()"}],"level":0.0},{"uid":"EventStore.Transport.Tcp.TcpClientConnector.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1","isEii":false,"isExtensionMethod":false,"parent":"EventStore.Core.Services.Transport.Tcp.ProtobufExtensions","definition":"EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)","name":[{"lang":"csharp","value":"SerializeToArray<TcpClientConnector>()"},{"lang":"vb","value":"SerializeToArray(Of TcpClientConnector)()"}],"nameWithType":[{"lang":"csharp","value":"ProtobufExtensions.SerializeToArray<TcpClientConnector>()"},{"lang":"vb","value":"ProtobufExtensions.SerializeToArray(Of TcpClientConnector)()"}],"fullName":[{"lang":"csharp","value":"EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Transport.Tcp.TcpClientConnector>()"},{"lang":"vb","value":"EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Transport.Tcp.TcpClientConnector)()"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1\" text=\"SerializeToArray&lt;TcpClientConnector&gt;\" alt=\"EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray&lt;EventStore.Transport.Tcp.TcpClientConnector&gt;\"/>()"},{"lang":"vb","value":"<xref uid=\"EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1\" text=\"SerializeToArray(Of TcpClientConnector)\" alt=\"EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Transport.Tcp.TcpClientConnector)\"/>()"}],"level":0.0}],"_docfxVersion":"2.43.3.0","_disableBreadcrumb":true,"_enableSearch":true,"_gitContribute":{"branch":"master"},"_appFaviconPath":"assets/favicon.ico","_appTitle":"Event Store","_appFooter":"&copy; 2019 Event Store Limited","_disableNavbar":false,"_disableToc":true,"_systemKeys":["uid","isEii","isExtensionMethod","parent","children","href","langs","name","nameWithType","fullName","type","source","documentation","assemblies","namespace","summary","remarks","example","syntax","overridden","overload","exceptions","seealso","see","inheritance","derivedClasses","level","implements","inheritedMembers","extensionMethods","conceptual","platform","attributes","additionalNotes"],"_lang":"csharp","_tocPath":"toc.html","_navPath":"toc.html","_rel":"../../","_path":"dotnet-api/code/EventStore.Transport.Tcp.TcpClientConnector.html","_key":"dotnet-api/code/EventStore.Transport.Tcp.TcpClientConnector.yml","_navRel":"../../toc.html","_tocRel":"../../toc.html","_navKey":"~/toc.yml","_tocKey":"~/toc.yml","__global":{"classesInSubtitle":"Classes","structsInSubtitle":"Structs","interfacesInSubtitle":"Interfaces","enumsInSubtitle":"Enums","delegatesInSubtitle":"Delegates","constructorsInSubtitle":"Constructors","fieldsInSubtitle":"Fields","propertiesInSubtitle":"Properties","methodsInSubtitle":"Methods","eventsInSubtitle":"Events","operatorsInSubtitle":"Operators","eiisInSubtitle":"Explicit Interface Implementations","functionsInSubtitle":"Functions","membersInSubtitle":"Members","improveThisDoc":"Improve this Doc","viewSource":"View Source","inheritance":"Inheritance","inheritedMembers":"Inherited Members","namespace":"Namespace","assembly":"Assembly","syntax":"Syntax","overrides":"Overrides","implements":"Implements","remarks":"Remarks","examples":"Examples","seealso":"See Also","declaration":"Declaration","parameters":"Parameters","typeParameters":"Type Parameters","type":"Type","name":"Name","description":"Description","returns":"Returns","fieldValue":"Field Value","propertyValue":"Property Value","eventType":"Event Type","exceptions":"Exceptions","condition":"Condition","extensionMethods":"Extension Methods","note":"<h5>Note</h5>","warning":"<h5>Warning</h5>","tip":"<h5>Tip</h5>","important":"<h5>Important</h5>","caution":"<h5>Caution</h5>","next":"<h5>Next Steps</h5>","_shared":{}},"docurl":"","sourceurl":"","summary":null,"remarks":null,"conceptual":null,"implements":null,"example":null,"seealso":null,"id":"EventStore_Transport_Tcp_TcpClientConnector","hideTitleType":false,"hideSubtitle":false,"isClass":true,"inClass":true}