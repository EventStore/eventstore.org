{"uid":"EventStore.Transport.Tcp.Framing","isEii":false,"isExtensionMethod":false,"children":[{"inClass":true,"typePropertyName":"inClass","id":"classes","children":[{"uid":"EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer","isExtensionMethod":false,"name":[{"lang":"csharp","value":"LengthPrefixMessageFramer"},{"lang":"vb","value":"LengthPrefixMessageFramer"}],"nameWithType":[{"lang":"csharp","value":"LengthPrefixMessageFramer"},{"lang":"vb","value":"LengthPrefixMessageFramer"}],"fullName":[{"lang":"csharp","value":"EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer"},{"lang":"vb","value":"EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer\" text=\"LengthPrefixMessageFramer\" alt=\"EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer\" text=\"LengthPrefixMessageFramer\" alt=\"EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer\"/>"}],"level":0.0,"summary":"<p sourcefile=\"dotnet-api/code/EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"4\">Uses length-prefixed framing to encode outgoing messages and decode\nincoming messages, using internal state and raising a callback once \nfull message arrives.</p>\n","type":"class","platform":null,"isEii":false,"docurl":"","sourceurl":"","remarks":null,"conceptual":null,"syntax":null,"implements":null,"example":null,"seealso":null,"id":"EventStore_Transport_Tcp_Framing_LengthPrefixMessageFramer","hideTitleType":false,"hideSubtitle":false},{"uid":"EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramerWithBufferPool","isExtensionMethod":false,"name":[{"lang":"csharp","value":"LengthPrefixMessageFramerWithBufferPool"},{"lang":"vb","value":"LengthPrefixMessageFramerWithBufferPool"}],"nameWithType":[{"lang":"csharp","value":"LengthPrefixMessageFramerWithBufferPool"},{"lang":"vb","value":"LengthPrefixMessageFramerWithBufferPool"}],"fullName":[{"lang":"csharp","value":"EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramerWithBufferPool"},{"lang":"vb","value":"EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramerWithBufferPool"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramerWithBufferPool\" text=\"LengthPrefixMessageFramerWithBufferPool\" alt=\"EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramerWithBufferPool\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramerWithBufferPool\" text=\"LengthPrefixMessageFramerWithBufferPool\" alt=\"EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramerWithBufferPool\"/>"}],"level":0.0,"summary":null,"type":"class","platform":null,"isEii":false,"docurl":"","sourceurl":"","remarks":null,"conceptual":null,"syntax":null,"implements":null,"example":null,"seealso":null,"id":"EventStore_Transport_Tcp_Framing_LengthPrefixMessageFramerWithBufferPool","hideTitleType":false,"hideSubtitle":false},{"uid":"EventStore.Transport.Tcp.Framing.PackageFramingException","isExtensionMethod":false,"name":[{"lang":"csharp","value":"PackageFramingException"},{"lang":"vb","value":"PackageFramingException"}],"nameWithType":[{"lang":"csharp","value":"PackageFramingException"},{"lang":"vb","value":"PackageFramingException"}],"fullName":[{"lang":"csharp","value":"EventStore.Transport.Tcp.Framing.PackageFramingException"},{"lang":"vb","value":"EventStore.Transport.Tcp.Framing.PackageFramingException"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Transport.Tcp.Framing.PackageFramingException\" text=\"PackageFramingException\" alt=\"EventStore.Transport.Tcp.Framing.PackageFramingException\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Transport.Tcp.Framing.PackageFramingException\" text=\"PackageFramingException\" alt=\"EventStore.Transport.Tcp.Framing.PackageFramingException\"/>"}],"level":0.0,"summary":null,"type":"class","platform":null,"isEii":false,"docurl":"","sourceurl":"","remarks":null,"conceptual":null,"syntax":null,"implements":null,"example":null,"seealso":null,"id":"EventStore_Transport_Tcp_Framing_PackageFramingException","hideTitleType":false,"hideSubtitle":false},{"uid":"EventStore.Transport.Tcp.Framing.StxEtxMessageFramer","isExtensionMethod":false,"name":[{"lang":"csharp","value":"StxEtxMessageFramer"},{"lang":"vb","value":"StxEtxMessageFramer"}],"nameWithType":[{"lang":"csharp","value":"StxEtxMessageFramer"},{"lang":"vb","value":"StxEtxMessageFramer"}],"fullName":[{"lang":"csharp","value":"EventStore.Transport.Tcp.Framing.StxEtxMessageFramer"},{"lang":"vb","value":"EventStore.Transport.Tcp.Framing.StxEtxMessageFramer"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Transport.Tcp.Framing.StxEtxMessageFramer\" text=\"StxEtxMessageFramer\" alt=\"EventStore.Transport.Tcp.Framing.StxEtxMessageFramer\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Transport.Tcp.Framing.StxEtxMessageFramer\" text=\"StxEtxMessageFramer\" alt=\"EventStore.Transport.Tcp.Framing.StxEtxMessageFramer\"/>"}],"level":0.0,"summary":null,"type":"class","platform":null,"isEii":false,"docurl":"","sourceurl":"","remarks":null,"conceptual":null,"syntax":null,"implements":null,"example":null,"seealso":null,"id":"EventStore_Transport_Tcp_Framing_StxEtxMessageFramer","hideTitleType":false,"hideSubtitle":false}]},{"inInterface":true,"typePropertyName":"inInterface","id":"interfaces","children":[{"uid":"EventStore.Transport.Tcp.Framing.IMessageFramer","isExtensionMethod":false,"parent":"EventStore.Transport.Tcp.Framing","name":[{"lang":"csharp","value":"IMessageFramer"},{"lang":"vb","value":"IMessageFramer"}],"nameWithType":[{"lang":"csharp","value":"IMessageFramer"},{"lang":"vb","value":"IMessageFramer"}],"fullName":[{"lang":"csharp","value":"EventStore.Transport.Tcp.Framing.IMessageFramer"},{"lang":"vb","value":"EventStore.Transport.Tcp.Framing.IMessageFramer"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Transport.Tcp.Framing.IMessageFramer\" text=\"IMessageFramer\" alt=\"EventStore.Transport.Tcp.Framing.IMessageFramer\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Transport.Tcp.Framing.IMessageFramer\" text=\"IMessageFramer\" alt=\"EventStore.Transport.Tcp.Framing.IMessageFramer\"/>"}],"level":0.0,"summary":"<p sourcefile=\"dotnet-api/code/EventStore.Transport.Tcp.Framing.IMessageFramer.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"4\">Encodes outgoing messages in frames and decodes incoming frames. \nFor decoding it uses an internal state, raising a registered \ncallback, once full message arrives</p>\n","type":"interface","platform":null,"isEii":false,"docurl":"","sourceurl":"","remarks":null,"conceptual":null,"syntax":null,"implements":null,"example":null,"seealso":null,"id":"EventStore_Transport_Tcp_Framing_IMessageFramer","hideTitleType":false,"hideSubtitle":false}]}],"langs":["csharp","vb"],"name":[{"lang":"csharp","value":"EventStore.Transport.Tcp.Framing"},{"lang":"vb","value":"EventStore.Transport.Tcp.Framing"}],"nameWithType":[{"lang":"csharp","value":"EventStore.Transport.Tcp.Framing"},{"lang":"vb","value":"EventStore.Transport.Tcp.Framing"}],"fullName":[{"lang":"csharp","value":"EventStore.Transport.Tcp.Framing"},{"lang":"vb","value":"EventStore.Transport.Tcp.Framing"}],"type":"namespace","assemblies":["EventStore.Transport.Tcp"],"level":0.0,"_docfxVersion":"2.43.3.0","_disableBreadcrumb":true,"_enableSearch":true,"_gitContribute":{"branch":"master"},"_appFaviconPath":"assets/favicon.ico","_appTitle":"Event Store","_appFooter":"&copy; 2019 Event Store Limited","_disableNavbar":false,"_disableToc":true,"_systemKeys":["uid","isEii","isExtensionMethod","parent","children","href","langs","name","nameWithType","fullName","type","source","documentation","assemblies","namespace","summary","remarks","example","syntax","overridden","overload","exceptions","seealso","see","inheritance","derivedClasses","level","implements","inheritedMembers","extensionMethods","conceptual","platform","attributes","additionalNotes"],"_lang":"csharp","_tocPath":"toc.html","_navPath":"toc.html","_rel":"../../","_path":"dotnet-api/code/EventStore.Transport.Tcp.Framing.html","_key":"dotnet-api/code/EventStore.Transport.Tcp.Framing.yml","_navRel":"../../toc.html","_tocRel":"../../toc.html","_navKey":"~/toc.yml","_tocKey":"~/toc.yml","__global":{"classesInSubtitle":"Classes","structsInSubtitle":"Structs","interfacesInSubtitle":"Interfaces","enumsInSubtitle":"Enums","delegatesInSubtitle":"Delegates","constructorsInSubtitle":"Constructors","fieldsInSubtitle":"Fields","propertiesInSubtitle":"Properties","methodsInSubtitle":"Methods","eventsInSubtitle":"Events","operatorsInSubtitle":"Operators","eiisInSubtitle":"Explicit Interface Implementations","functionsInSubtitle":"Functions","membersInSubtitle":"Members","improveThisDoc":"Improve this Doc","viewSource":"View Source","inheritance":"Inheritance","inheritedMembers":"Inherited Members","namespace":"Namespace","assembly":"Assembly","syntax":"Syntax","overrides":"Overrides","implements":"Implements","remarks":"Remarks","examples":"Examples","seealso":"See Also","declaration":"Declaration","parameters":"Parameters","typeParameters":"Type Parameters","type":"Type","name":"Name","description":"Description","returns":"Returns","fieldValue":"Field Value","propertyValue":"Property Value","eventType":"Event Type","exceptions":"Exceptions","condition":"Condition","extensionMethods":"Extension Methods","note":"<h5>Note</h5>","warning":"<h5>Warning</h5>","tip":"<h5>Tip</h5>","important":"<h5>Important</h5>","caution":"<h5>Caution</h5>","next":"<h5>Next Steps</h5>","_shared":{}},"docurl":"","sourceurl":"","summary":null,"remarks":null,"conceptual":null,"syntax":null,"implements":null,"example":null,"seealso":null,"id":"EventStore_Transport_Tcp_Framing","hideTitleType":false,"hideSubtitle":false,"isNamespace":true}