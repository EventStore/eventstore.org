{"uid":"EventStore.Core.Services.TimerService.TimerBasedScheduler","isEii":false,"isExtensionMethod":false,"parent":{"uid":"EventStore.Core.Services.TimerService","isEii":false,"isExtensionMethod":false,"name":[{"lang":"csharp","value":"EventStore.Core.Services.TimerService"},{"lang":"vb","value":"EventStore.Core.Services.TimerService"}],"nameWithType":[{"lang":"csharp","value":"EventStore.Core.Services.TimerService"},{"lang":"vb","value":"EventStore.Core.Services.TimerService"}],"fullName":[{"lang":"csharp","value":"EventStore.Core.Services.TimerService"},{"lang":"vb","value":"EventStore.Core.Services.TimerService"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Core.Services.TimerService\" text=\"EventStore.Core.Services.TimerService\" alt=\"EventStore.Core.Services.TimerService\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Core.Services.TimerService\" text=\"EventStore.Core.Services.TimerService\" alt=\"EventStore.Core.Services.TimerService\"/>"}],"level":0.0},"children":[{"inConstructor":true,"typePropertyName":"inConstructor","id":"constructors","children":[{"uid":"EventStore.Core.Services.TimerService.TimerBasedScheduler.#ctor(EventStore.Core.Services.TimerService.ITimer,EventStore.Core.Services.TimerService.ITimeProvider)","isEii":false,"isExtensionMethod":false,"parent":"EventStore.Core.Services.TimerService.TimerBasedScheduler","isExternal":false,"name":[{"lang":"csharp","value":"TimerBasedScheduler(ITimer, ITimeProvider)"},{"lang":"vb","value":"TimerBasedScheduler(ITimer, ITimeProvider)"}],"nameWithType":[{"lang":"csharp","value":"TimerBasedScheduler.TimerBasedScheduler(ITimer, ITimeProvider)"},{"lang":"vb","value":"TimerBasedScheduler.TimerBasedScheduler(ITimer, ITimeProvider)"}],"fullName":[{"lang":"csharp","value":"EventStore.Core.Services.TimerService.TimerBasedScheduler.TimerBasedScheduler(EventStore.Core.Services.TimerService.ITimer, EventStore.Core.Services.TimerService.ITimeProvider)"},{"lang":"vb","value":"EventStore.Core.Services.TimerService.TimerBasedScheduler.TimerBasedScheduler(EventStore.Core.Services.TimerService.ITimer, EventStore.Core.Services.TimerService.ITimeProvider)"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Core.Services.TimerService.TimerBasedScheduler.#ctor(EventStore.Core.Services.TimerService.ITimer,EventStore.Core.Services.TimerService.ITimeProvider)\" text=\"TimerBasedScheduler(ITimer, ITimeProvider)\" alt=\"EventStore.Core.Services.TimerService.TimerBasedScheduler.TimerBasedScheduler(EventStore.Core.Services.TimerService.ITimer, EventStore.Core.Services.TimerService.ITimeProvider)\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Core.Services.TimerService.TimerBasedScheduler.#ctor(EventStore.Core.Services.TimerService.ITimer,EventStore.Core.Services.TimerService.ITimeProvider)\" text=\"TimerBasedScheduler(ITimer, ITimeProvider)\" alt=\"EventStore.Core.Services.TimerService.TimerBasedScheduler.TimerBasedScheduler(EventStore.Core.Services.TimerService.ITimer, EventStore.Core.Services.TimerService.ITimeProvider)\"/>"}],"syntax":{"content":[{"lang":"csharp","value":"public TimerBasedScheduler(ITimer timer, ITimeProvider timeProvider)"},{"lang":"vb","value":"Public Sub New(timer As ITimer, timeProvider As ITimeProvider)"}],"parameters":[{"id":"timer","type":{"uid":"EventStore.Core.Services.TimerService.ITimer","name":[{"lang":"csharp","value":"ITimer"},{"lang":"vb","value":"ITimer"}],"nameWithType":[{"lang":"csharp","value":"ITimer"},{"lang":"vb","value":"ITimer"}],"fullName":[{"lang":"csharp","value":"EventStore.Core.Services.TimerService.ITimer"},{"lang":"vb","value":"EventStore.Core.Services.TimerService.ITimer"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Core.Services.TimerService.ITimer\" text=\"ITimer\" alt=\"EventStore.Core.Services.TimerService.ITimer\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Core.Services.TimerService.ITimer\" text=\"ITimer\" alt=\"EventStore.Core.Services.TimerService.ITimer\"/>"}]}},{"id":"timeProvider","type":{"uid":"EventStore.Core.Services.TimerService.ITimeProvider","name":[{"lang":"csharp","value":"ITimeProvider"},{"lang":"vb","value":"ITimeProvider"}],"nameWithType":[{"lang":"csharp","value":"ITimeProvider"},{"lang":"vb","value":"ITimeProvider"}],"fullName":[{"lang":"csharp","value":"EventStore.Core.Services.TimerService.ITimeProvider"},{"lang":"vb","value":"EventStore.Core.Services.TimerService.ITimeProvider"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Core.Services.TimerService.ITimeProvider\" text=\"ITimeProvider\" alt=\"EventStore.Core.Services.TimerService.ITimeProvider\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Core.Services.TimerService.ITimeProvider\" text=\"ITimeProvider\" alt=\"EventStore.Core.Services.TimerService.ITimeProvider\"/>"}]}}]},"source":{"id":".ctor","path":"/Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/TimerService/TimerBasedScheduler.cs","startLine":15.0,"endLine":0.0,"isExternal":false},"assemblies":["EventStore.Core"],"namespace":"EventStore.Core.Services.TimerService","overload":{"uid":"EventStore.Core.Services.TimerService.TimerBasedScheduler.#ctor*","name":[{"lang":"csharp","value":"TimerBasedScheduler"},{"lang":"vb","value":"TimerBasedScheduler"}],"nameWithType":[{"lang":"csharp","value":"TimerBasedScheduler.TimerBasedScheduler"},{"lang":"vb","value":"TimerBasedScheduler.TimerBasedScheduler"}],"fullName":[{"lang":"csharp","value":"EventStore.Core.Services.TimerService.TimerBasedScheduler.TimerBasedScheduler"},{"lang":"vb","value":"EventStore.Core.Services.TimerService.TimerBasedScheduler.TimerBasedScheduler"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Core.Services.TimerService.TimerBasedScheduler.#ctor*\" text=\"TimerBasedScheduler\" alt=\"EventStore.Core.Services.TimerService.TimerBasedScheduler.TimerBasedScheduler\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Core.Services.TimerService.TimerBasedScheduler.#ctor*\" text=\"TimerBasedScheduler\" alt=\"EventStore.Core.Services.TimerService.TimerBasedScheduler.TimerBasedScheduler\"/>"}],"id":"EventStore_Core_Services_TimerService_TimerBasedScheduler__ctor_"},"level":0.0,"modifiers.csharp":["public"],"modifiers.vb":["Public"],"type":"constructor","summary":null,"platform":null,"docurl":"","sourceurl":"","remarks":null,"conceptual":null,"implements":null,"example":null,"seealso":null,"id":"EventStore_Core_Services_TimerService_TimerBasedScheduler__ctor_EventStore_Core_Services_TimerService_ITimer_EventStore_Core_Services_TimerService_ITimeProvider_","hideTitleType":false,"hideSubtitle":false}]},{"inMethod":true,"typePropertyName":"inMethod","id":"methods","children":[{"uid":"EventStore.Core.Services.TimerService.TimerBasedScheduler.Dispose","isEii":false,"isExtensionMethod":false,"parent":"EventStore.Core.Services.TimerService.TimerBasedScheduler","isExternal":false,"name":[{"lang":"csharp","value":"Dispose()"},{"lang":"vb","value":"Dispose()"}],"nameWithType":[{"lang":"csharp","value":"TimerBasedScheduler.Dispose()"},{"lang":"vb","value":"TimerBasedScheduler.Dispose()"}],"fullName":[{"lang":"csharp","value":"EventStore.Core.Services.TimerService.TimerBasedScheduler.Dispose()"},{"lang":"vb","value":"EventStore.Core.Services.TimerService.TimerBasedScheduler.Dispose()"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Core.Services.TimerService.TimerBasedScheduler.Dispose\" text=\"Dispose()\" alt=\"EventStore.Core.Services.TimerService.TimerBasedScheduler.Dispose()\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Core.Services.TimerService.TimerBasedScheduler.Dispose\" text=\"Dispose()\" alt=\"EventStore.Core.Services.TimerService.TimerBasedScheduler.Dispose()\"/>"}],"syntax":{"content":[{"lang":"csharp","value":"public void Dispose()"},{"lang":"vb","value":"Public Sub Dispose"}]},"source":{"id":"Dispose","path":"/Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/TimerService/TimerBasedScheduler.cs","startLine":57.0,"endLine":0.0,"isExternal":false},"assemblies":["EventStore.Core"],"namespace":"EventStore.Core.Services.TimerService","overload":{"uid":"EventStore.Core.Services.TimerService.TimerBasedScheduler.Dispose*","name":[{"lang":"csharp","value":"Dispose"},{"lang":"vb","value":"Dispose"}],"nameWithType":[{"lang":"csharp","value":"TimerBasedScheduler.Dispose"},{"lang":"vb","value":"TimerBasedScheduler.Dispose"}],"fullName":[{"lang":"csharp","value":"EventStore.Core.Services.TimerService.TimerBasedScheduler.Dispose"},{"lang":"vb","value":"EventStore.Core.Services.TimerService.TimerBasedScheduler.Dispose"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Core.Services.TimerService.TimerBasedScheduler.Dispose*\" text=\"Dispose\" alt=\"EventStore.Core.Services.TimerService.TimerBasedScheduler.Dispose\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Core.Services.TimerService.TimerBasedScheduler.Dispose*\" text=\"Dispose\" alt=\"EventStore.Core.Services.TimerService.TimerBasedScheduler.Dispose\"/>"}],"id":"EventStore_Core_Services_TimerService_TimerBasedScheduler_Dispose_"},"level":0.0,"implements":[{"uid":"System.IDisposable.Dispose","name":[{"lang":"csharp","value":"Dispose()"},{"lang":"vb","value":"Dispose()"}],"nameWithType":[{"lang":"csharp","value":"IDisposable.Dispose()"},{"lang":"vb","value":"IDisposable.Dispose()"}],"fullName":[{"lang":"csharp","value":"System.IDisposable.Dispose()"},{"lang":"vb","value":"System.IDisposable.Dispose()"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.IDisposable.Dispose\" text=\"Dispose\" alt=\"System.IDisposable.Dispose\"/>()"},{"lang":"vb","value":"<xref uid=\"System.IDisposable.Dispose\" text=\"Dispose\" alt=\"System.IDisposable.Dispose\"/>()"}]}],"modifiers.csharp":["public"],"modifiers.vb":["Public"],"type":"method","summary":null,"platform":null,"docurl":"","sourceurl":"","remarks":null,"conceptual":null,"example":null,"seealso":null,"id":"EventStore_Core_Services_TimerService_TimerBasedScheduler_Dispose","hideTitleType":false,"hideSubtitle":false},{"uid":"EventStore.Core.Services.TimerService.TimerBasedScheduler.ProcessOperations","isEii":false,"isExtensionMethod":false,"parent":"EventStore.Core.Services.TimerService.TimerBasedScheduler","isExternal":false,"name":[{"lang":"csharp","value":"ProcessOperations()"},{"lang":"vb","value":"ProcessOperations()"}],"nameWithType":[{"lang":"csharp","value":"TimerBasedScheduler.ProcessOperations()"},{"lang":"vb","value":"TimerBasedScheduler.ProcessOperations()"}],"fullName":[{"lang":"csharp","value":"EventStore.Core.Services.TimerService.TimerBasedScheduler.ProcessOperations()"},{"lang":"vb","value":"EventStore.Core.Services.TimerService.TimerBasedScheduler.ProcessOperations()"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Core.Services.TimerService.TimerBasedScheduler.ProcessOperations\" text=\"ProcessOperations()\" alt=\"EventStore.Core.Services.TimerService.TimerBasedScheduler.ProcessOperations()\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Core.Services.TimerService.TimerBasedScheduler.ProcessOperations\" text=\"ProcessOperations()\" alt=\"EventStore.Core.Services.TimerService.TimerBasedScheduler.ProcessOperations()\"/>"}],"syntax":{"content":[{"lang":"csharp","value":"protected void ProcessOperations()"},{"lang":"vb","value":"Protected Sub ProcessOperations"}]},"source":{"id":"ProcessOperations","path":"/Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/TimerService/TimerBasedScheduler.cs","startLine":34.0,"endLine":0.0,"isExternal":false},"assemblies":["EventStore.Core"],"namespace":"EventStore.Core.Services.TimerService","overload":{"uid":"EventStore.Core.Services.TimerService.TimerBasedScheduler.ProcessOperations*","name":[{"lang":"csharp","value":"ProcessOperations"},{"lang":"vb","value":"ProcessOperations"}],"nameWithType":[{"lang":"csharp","value":"TimerBasedScheduler.ProcessOperations"},{"lang":"vb","value":"TimerBasedScheduler.ProcessOperations"}],"fullName":[{"lang":"csharp","value":"EventStore.Core.Services.TimerService.TimerBasedScheduler.ProcessOperations"},{"lang":"vb","value":"EventStore.Core.Services.TimerService.TimerBasedScheduler.ProcessOperations"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Core.Services.TimerService.TimerBasedScheduler.ProcessOperations*\" text=\"ProcessOperations\" alt=\"EventStore.Core.Services.TimerService.TimerBasedScheduler.ProcessOperations\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Core.Services.TimerService.TimerBasedScheduler.ProcessOperations*\" text=\"ProcessOperations\" alt=\"EventStore.Core.Services.TimerService.TimerBasedScheduler.ProcessOperations\"/>"}],"id":"EventStore_Core_Services_TimerService_TimerBasedScheduler_ProcessOperations_"},"level":0.0,"modifiers.csharp":["protected"],"modifiers.vb":["Protected"],"type":"method","summary":null,"platform":null,"docurl":"","sourceurl":"","remarks":null,"conceptual":null,"implements":null,"example":null,"seealso":null,"id":"EventStore_Core_Services_TimerService_TimerBasedScheduler_ProcessOperations","hideTitleType":false,"hideSubtitle":false},{"uid":"EventStore.Core.Services.TimerService.TimerBasedScheduler.Schedule(System.TimeSpan,System.Action{EventStore.Core.Services.TimerService.IScheduler,System.Object},System.Object)","isEii":false,"isExtensionMethod":false,"parent":"EventStore.Core.Services.TimerService.TimerBasedScheduler","isExternal":false,"name":[{"lang":"csharp","value":"Schedule(TimeSpan, Action<IScheduler, Object>, Object)"},{"lang":"vb","value":"Schedule(TimeSpan, Action(Of IScheduler, Object), Object)"}],"nameWithType":[{"lang":"csharp","value":"TimerBasedScheduler.Schedule(TimeSpan, Action<IScheduler, Object>, Object)"},{"lang":"vb","value":"TimerBasedScheduler.Schedule(TimeSpan, Action(Of IScheduler, Object), Object)"}],"fullName":[{"lang":"csharp","value":"EventStore.Core.Services.TimerService.TimerBasedScheduler.Schedule(System.TimeSpan, System.Action<EventStore.Core.Services.TimerService.IScheduler, System.Object>, System.Object)"},{"lang":"vb","value":"EventStore.Core.Services.TimerService.TimerBasedScheduler.Schedule(System.TimeSpan, System.Action(Of EventStore.Core.Services.TimerService.IScheduler, System.Object), System.Object)"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Core.Services.TimerService.TimerBasedScheduler.Schedule(System.TimeSpan,System.Action{EventStore.Core.Services.TimerService.IScheduler,System.Object},System.Object)\" text=\"Schedule(TimeSpan, Action&lt;IScheduler, Object&gt;, Object)\" alt=\"EventStore.Core.Services.TimerService.TimerBasedScheduler.Schedule(System.TimeSpan, System.Action&lt;EventStore.Core.Services.TimerService.IScheduler, System.Object&gt;, System.Object)\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Core.Services.TimerService.TimerBasedScheduler.Schedule(System.TimeSpan,System.Action{EventStore.Core.Services.TimerService.IScheduler,System.Object},System.Object)\" text=\"Schedule(TimeSpan, Action&lt;IScheduler, Object&gt;, Object)\" alt=\"EventStore.Core.Services.TimerService.TimerBasedScheduler.Schedule(System.TimeSpan, System.Action&lt;EventStore.Core.Services.TimerService.IScheduler, System.Object&gt;, System.Object)\"/>"}],"syntax":{"content":[{"lang":"csharp","value":"public void Schedule(TimeSpan after, Action<IScheduler, object> callback, object state)"},{"lang":"vb","value":"Public Sub Schedule(after As TimeSpan, callback As Action(Of IScheduler, Object), state As Object)"}],"parameters":[{"id":"after","type":{"uid":"System.TimeSpan","name":[{"lang":"csharp","value":"TimeSpan"},{"lang":"vb","value":"TimeSpan"}],"nameWithType":[{"lang":"csharp","value":"TimeSpan"},{"lang":"vb","value":"TimeSpan"}],"fullName":[{"lang":"csharp","value":"System.TimeSpan"},{"lang":"vb","value":"System.TimeSpan"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.TimeSpan\" text=\"TimeSpan\" alt=\"System.TimeSpan\"/>"},{"lang":"vb","value":"<xref uid=\"System.TimeSpan\" text=\"TimeSpan\" alt=\"System.TimeSpan\"/>"}]}},{"id":"callback","type":{"uid":"System.Action{EventStore.Core.Services.TimerService.IScheduler,System.Object}","definition":"System.Action`2","name":[{"lang":"csharp","value":"Action<IScheduler, Object>"},{"lang":"vb","value":"Action(Of IScheduler, Object)"}],"nameWithType":[{"lang":"csharp","value":"Action<IScheduler, Object>"},{"lang":"vb","value":"Action(Of IScheduler, Object)"}],"fullName":[{"lang":"csharp","value":"System.Action<EventStore.Core.Services.TimerService.IScheduler, System.Object>"},{"lang":"vb","value":"System.Action(Of EventStore.Core.Services.TimerService.IScheduler, System.Object)"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Action`2\" text=\"Action\" alt=\"System.Action\"/>&lt;<xref uid=\"EventStore.Core.Services.TimerService.IScheduler\" text=\"IScheduler\" alt=\"EventStore.Core.Services.TimerService.IScheduler\"/>, <xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>&gt;"},{"lang":"vb","value":"<xref uid=\"System.Action`2\" text=\"Action\" alt=\"System.Action\"/>(Of <xref uid=\"EventStore.Core.Services.TimerService.IScheduler\" text=\"IScheduler\" alt=\"EventStore.Core.Services.TimerService.IScheduler\"/>, <xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>)"}]}},{"id":"state","type":{"uid":"System.Object","name":[{"lang":"csharp","value":"Object"},{"lang":"vb","value":"Object"}],"nameWithType":[{"lang":"csharp","value":"Object"},{"lang":"vb","value":"Object"}],"fullName":[{"lang":"csharp","value":"System.Object"},{"lang":"vb","value":"System.Object"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>"},{"lang":"vb","value":"<xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>"}]}}]},"source":{"id":"Schedule","path":"/Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/TimerService/TimerBasedScheduler.cs","startLine":27.0,"endLine":0.0,"isExternal":false},"assemblies":["EventStore.Core"],"namespace":"EventStore.Core.Services.TimerService","overload":{"uid":"EventStore.Core.Services.TimerService.TimerBasedScheduler.Schedule*","name":[{"lang":"csharp","value":"Schedule"},{"lang":"vb","value":"Schedule"}],"nameWithType":[{"lang":"csharp","value":"TimerBasedScheduler.Schedule"},{"lang":"vb","value":"TimerBasedScheduler.Schedule"}],"fullName":[{"lang":"csharp","value":"EventStore.Core.Services.TimerService.TimerBasedScheduler.Schedule"},{"lang":"vb","value":"EventStore.Core.Services.TimerService.TimerBasedScheduler.Schedule"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Core.Services.TimerService.TimerBasedScheduler.Schedule*\" text=\"Schedule\" alt=\"EventStore.Core.Services.TimerService.TimerBasedScheduler.Schedule\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Core.Services.TimerService.TimerBasedScheduler.Schedule*\" text=\"Schedule\" alt=\"EventStore.Core.Services.TimerService.TimerBasedScheduler.Schedule\"/>"}],"id":"EventStore_Core_Services_TimerService_TimerBasedScheduler_Schedule_"},"level":0.0,"implements":[{"uid":"EventStore.Core.Services.TimerService.IScheduler.Schedule(System.TimeSpan,System.Action{EventStore.Core.Services.TimerService.IScheduler,System.Object},System.Object)","name":[{"lang":"csharp","value":"Schedule(TimeSpan, Action<IScheduler, Object>, Object)"},{"lang":"vb","value":"Schedule(TimeSpan, Action(Of IScheduler, Object), Object)"}],"nameWithType":[{"lang":"csharp","value":"IScheduler.Schedule(TimeSpan, Action<IScheduler, Object>, Object)"},{"lang":"vb","value":"IScheduler.Schedule(TimeSpan, Action(Of IScheduler, Object), Object)"}],"fullName":[{"lang":"csharp","value":"EventStore.Core.Services.TimerService.IScheduler.Schedule(System.TimeSpan, System.Action<EventStore.Core.Services.TimerService.IScheduler, System.Object>, System.Object)"},{"lang":"vb","value":"EventStore.Core.Services.TimerService.IScheduler.Schedule(System.TimeSpan, System.Action(Of EventStore.Core.Services.TimerService.IScheduler, System.Object), System.Object)"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Core.Services.TimerService.IScheduler.Schedule(System.TimeSpan,System.Action{EventStore.Core.Services.TimerService.IScheduler,System.Object},System.Object)\" text=\"Schedule\" alt=\"EventStore.Core.Services.TimerService.IScheduler.Schedule\"/>(<xref uid=\"System.TimeSpan\" text=\"TimeSpan\" alt=\"System.TimeSpan\"/>, <xref uid=\"System.Action`2\" text=\"Action\" alt=\"System.Action\"/>&lt;<xref uid=\"EventStore.Core.Services.TimerService.IScheduler\" text=\"IScheduler\" alt=\"EventStore.Core.Services.TimerService.IScheduler\"/>, <xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>&gt;, <xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>)"},{"lang":"vb","value":"<xref uid=\"EventStore.Core.Services.TimerService.IScheduler.Schedule(System.TimeSpan,System.Action{EventStore.Core.Services.TimerService.IScheduler,System.Object},System.Object)\" text=\"Schedule\" alt=\"EventStore.Core.Services.TimerService.IScheduler.Schedule\"/>(<xref uid=\"System.TimeSpan\" text=\"TimeSpan\" alt=\"System.TimeSpan\"/>, <xref uid=\"System.Action`2\" text=\"Action\" alt=\"System.Action\"/>(Of <xref uid=\"EventStore.Core.Services.TimerService.IScheduler\" text=\"IScheduler\" alt=\"EventStore.Core.Services.TimerService.IScheduler\"/>, <xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>), <xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>)"}]}],"modifiers.csharp":["public"],"modifiers.vb":["Public"],"type":"method","summary":null,"platform":null,"docurl":"","sourceurl":"","remarks":null,"conceptual":null,"example":null,"seealso":null,"id":"EventStore_Core_Services_TimerService_TimerBasedScheduler_Schedule_System_TimeSpan_System_Action_EventStore_Core_Services_TimerService_IScheduler_System_Object__System_Object_","hideTitleType":false,"hideSubtitle":false},{"uid":"EventStore.Core.Services.TimerService.TimerBasedScheduler.Stop","isEii":false,"isExtensionMethod":false,"parent":"EventStore.Core.Services.TimerService.TimerBasedScheduler","isExternal":false,"name":[{"lang":"csharp","value":"Stop()"},{"lang":"vb","value":"Stop()"}],"nameWithType":[{"lang":"csharp","value":"TimerBasedScheduler.Stop()"},{"lang":"vb","value":"TimerBasedScheduler.Stop()"}],"fullName":[{"lang":"csharp","value":"EventStore.Core.Services.TimerService.TimerBasedScheduler.Stop()"},{"lang":"vb","value":"EventStore.Core.Services.TimerService.TimerBasedScheduler.Stop()"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Core.Services.TimerService.TimerBasedScheduler.Stop\" text=\"Stop()\" alt=\"EventStore.Core.Services.TimerService.TimerBasedScheduler.Stop()\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Core.Services.TimerService.TimerBasedScheduler.Stop\" text=\"Stop()\" alt=\"EventStore.Core.Services.TimerService.TimerBasedScheduler.Stop()\"/>"}],"syntax":{"content":[{"lang":"csharp","value":"public void Stop()"},{"lang":"vb","value":"Public Sub Stop"}]},"source":{"id":"Stop","path":"/Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/TimerService/TimerBasedScheduler.cs","startLine":23.0,"endLine":0.0,"isExternal":false},"assemblies":["EventStore.Core"],"namespace":"EventStore.Core.Services.TimerService","overload":{"uid":"EventStore.Core.Services.TimerService.TimerBasedScheduler.Stop*","name":[{"lang":"csharp","value":"Stop"},{"lang":"vb","value":"Stop"}],"nameWithType":[{"lang":"csharp","value":"TimerBasedScheduler.Stop"},{"lang":"vb","value":"TimerBasedScheduler.Stop"}],"fullName":[{"lang":"csharp","value":"EventStore.Core.Services.TimerService.TimerBasedScheduler.Stop"},{"lang":"vb","value":"EventStore.Core.Services.TimerService.TimerBasedScheduler.Stop"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Core.Services.TimerService.TimerBasedScheduler.Stop*\" text=\"Stop\" alt=\"EventStore.Core.Services.TimerService.TimerBasedScheduler.Stop\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Core.Services.TimerService.TimerBasedScheduler.Stop*\" text=\"Stop\" alt=\"EventStore.Core.Services.TimerService.TimerBasedScheduler.Stop\"/>"}],"id":"EventStore_Core_Services_TimerService_TimerBasedScheduler_Stop_"},"level":0.0,"implements":[{"uid":"EventStore.Core.Services.TimerService.IScheduler.Stop","name":[{"lang":"csharp","value":"Stop()"},{"lang":"vb","value":"Stop()"}],"nameWithType":[{"lang":"csharp","value":"IScheduler.Stop()"},{"lang":"vb","value":"IScheduler.Stop()"}],"fullName":[{"lang":"csharp","value":"EventStore.Core.Services.TimerService.IScheduler.Stop()"},{"lang":"vb","value":"EventStore.Core.Services.TimerService.IScheduler.Stop()"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Core.Services.TimerService.IScheduler.Stop\" text=\"Stop\" alt=\"EventStore.Core.Services.TimerService.IScheduler.Stop\"/>()"},{"lang":"vb","value":"<xref uid=\"EventStore.Core.Services.TimerService.IScheduler.Stop\" text=\"Stop\" alt=\"EventStore.Core.Services.TimerService.IScheduler.Stop\"/>()"}]}],"modifiers.csharp":["public"],"modifiers.vb":["Public"],"type":"method","summary":null,"platform":null,"docurl":"","sourceurl":"","remarks":null,"conceptual":null,"example":null,"seealso":null,"id":"EventStore_Core_Services_TimerService_TimerBasedScheduler_Stop","hideTitleType":false,"hideSubtitle":false}]}],"langs":["csharp","vb"],"name":[{"lang":"csharp","value":"TimerBasedScheduler"},{"lang":"vb","value":"TimerBasedScheduler"}],"nameWithType":[{"lang":"csharp","value":"TimerBasedScheduler"},{"lang":"vb","value":"TimerBasedScheduler"}],"fullName":[{"lang":"csharp","value":"EventStore.Core.Services.TimerService.TimerBasedScheduler"},{"lang":"vb","value":"EventStore.Core.Services.TimerService.TimerBasedScheduler"}],"type":"class","source":{"id":"TimerBasedScheduler","path":"/Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Core/Services/TimerService/TimerBasedScheduler.cs","startLine":6.0,"endLine":0.0,"isExternal":false},"assemblies":["EventStore.Core"],"namespace":{"uid":"EventStore.Core.Services.TimerService","isEii":false,"isExtensionMethod":false,"name":[{"lang":"csharp","value":"EventStore.Core.Services.TimerService"},{"lang":"vb","value":"EventStore.Core.Services.TimerService"}],"nameWithType":[{"lang":"csharp","value":"EventStore.Core.Services.TimerService"},{"lang":"vb","value":"EventStore.Core.Services.TimerService"}],"fullName":[{"lang":"csharp","value":"EventStore.Core.Services.TimerService"},{"lang":"vb","value":"EventStore.Core.Services.TimerService"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Core.Services.TimerService\" text=\"EventStore.Core.Services.TimerService\" alt=\"EventStore.Core.Services.TimerService\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Core.Services.TimerService\" text=\"EventStore.Core.Services.TimerService\" alt=\"EventStore.Core.Services.TimerService\"/>"}],"level":0.0},"syntax":{"content":[{"lang":"csharp","value":"public class TimerBasedScheduler : IScheduler, IDisposable"},{"lang":"vb","value":"Public Class TimerBasedScheduler\n\n    Implements IScheduler, IDisposable"}]},"inheritance":[{"uid":"System.Object","isEii":false,"isExtensionMethod":false,"parent":"System","isExternal":true,"name":[{"lang":"csharp","value":"Object"},{"lang":"vb","value":"Object"}],"nameWithType":[{"lang":"csharp","value":"Object"},{"lang":"vb","value":"Object"}],"fullName":[{"lang":"csharp","value":"System.Object"},{"lang":"vb","value":"System.Object"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>"},{"lang":"vb","value":"<xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>"}],"level":0.0,"index":0.0}],"level":1.0,"implements":[{"uid":"EventStore.Core.Services.TimerService.IScheduler","name":[{"lang":"csharp","value":"IScheduler"},{"lang":"vb","value":"IScheduler"}],"nameWithType":[{"lang":"csharp","value":"IScheduler"},{"lang":"vb","value":"IScheduler"}],"fullName":[{"lang":"csharp","value":"EventStore.Core.Services.TimerService.IScheduler"},{"lang":"vb","value":"EventStore.Core.Services.TimerService.IScheduler"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Core.Services.TimerService.IScheduler\" text=\"IScheduler\" alt=\"EventStore.Core.Services.TimerService.IScheduler\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Core.Services.TimerService.IScheduler\" text=\"IScheduler\" alt=\"EventStore.Core.Services.TimerService.IScheduler\"/>"}]},{"uid":"System.IDisposable","name":[{"lang":"csharp","value":"IDisposable"},{"lang":"vb","value":"IDisposable"}],"nameWithType":[{"lang":"csharp","value":"IDisposable"},{"lang":"vb","value":"IDisposable"}],"fullName":[{"lang":"csharp","value":"System.IDisposable"},{"lang":"vb","value":"System.IDisposable"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.IDisposable\" text=\"IDisposable\" alt=\"System.IDisposable\"/>"},{"lang":"vb","value":"<xref uid=\"System.IDisposable\" text=\"IDisposable\" alt=\"System.IDisposable\"/>"}]}],"inheritedMembers":[{"uid":"System.Object.Equals(System.Object)","isEii":false,"isExtensionMethod":false,"parent":"System.Object","isExternal":true,"name":[{"lang":"csharp","value":"Equals(Object)"},{"lang":"vb","value":"Equals(Object)"}],"nameWithType":[{"lang":"csharp","value":"Object.Equals(Object)"},{"lang":"vb","value":"Object.Equals(Object)"}],"fullName":[{"lang":"csharp","value":"System.Object.Equals(System.Object)"},{"lang":"vb","value":"System.Object.Equals(System.Object)"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Object.Equals(System.Object)\" text=\"Equals\" alt=\"System.Object.Equals\"/>(<xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>)"},{"lang":"vb","value":"<xref uid=\"System.Object.Equals(System.Object)\" text=\"Equals\" alt=\"System.Object.Equals\"/>(<xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>)"}],"level":0.0},{"uid":"System.Object.Equals(System.Object,System.Object)","isEii":false,"isExtensionMethod":false,"parent":"System.Object","isExternal":true,"name":[{"lang":"csharp","value":"Equals(Object, Object)"},{"lang":"vb","value":"Equals(Object, Object)"}],"nameWithType":[{"lang":"csharp","value":"Object.Equals(Object, Object)"},{"lang":"vb","value":"Object.Equals(Object, Object)"}],"fullName":[{"lang":"csharp","value":"System.Object.Equals(System.Object, System.Object)"},{"lang":"vb","value":"System.Object.Equals(System.Object, System.Object)"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Object.Equals(System.Object,System.Object)\" text=\"Equals\" alt=\"System.Object.Equals\"/>(<xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>, <xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>)"},{"lang":"vb","value":"<xref uid=\"System.Object.Equals(System.Object,System.Object)\" text=\"Equals\" alt=\"System.Object.Equals\"/>(<xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>, <xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>)"}],"level":0.0},{"uid":"System.Object.GetHashCode","isEii":false,"isExtensionMethod":false,"parent":"System.Object","isExternal":true,"name":[{"lang":"csharp","value":"GetHashCode()"},{"lang":"vb","value":"GetHashCode()"}],"nameWithType":[{"lang":"csharp","value":"Object.GetHashCode()"},{"lang":"vb","value":"Object.GetHashCode()"}],"fullName":[{"lang":"csharp","value":"System.Object.GetHashCode()"},{"lang":"vb","value":"System.Object.GetHashCode()"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Object.GetHashCode\" text=\"GetHashCode\" alt=\"System.Object.GetHashCode\"/>()"},{"lang":"vb","value":"<xref uid=\"System.Object.GetHashCode\" text=\"GetHashCode\" alt=\"System.Object.GetHashCode\"/>()"}],"level":0.0},{"uid":"System.Object.GetType","isEii":false,"isExtensionMethod":false,"parent":"System.Object","isExternal":true,"name":[{"lang":"csharp","value":"GetType()"},{"lang":"vb","value":"GetType()"}],"nameWithType":[{"lang":"csharp","value":"Object.GetType()"},{"lang":"vb","value":"Object.GetType()"}],"fullName":[{"lang":"csharp","value":"System.Object.GetType()"},{"lang":"vb","value":"System.Object.GetType()"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Object.GetType\" text=\"GetType\" alt=\"System.Object.GetType\"/>()"},{"lang":"vb","value":"<xref uid=\"System.Object.GetType\" text=\"GetType\" alt=\"System.Object.GetType\"/>()"}],"level":0.0},{"uid":"System.Object.MemberwiseClone","isEii":false,"isExtensionMethod":false,"parent":"System.Object","isExternal":true,"name":[{"lang":"csharp","value":"MemberwiseClone()"},{"lang":"vb","value":"MemberwiseClone()"}],"nameWithType":[{"lang":"csharp","value":"Object.MemberwiseClone()"},{"lang":"vb","value":"Object.MemberwiseClone()"}],"fullName":[{"lang":"csharp","value":"System.Object.MemberwiseClone()"},{"lang":"vb","value":"System.Object.MemberwiseClone()"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Object.MemberwiseClone\" text=\"MemberwiseClone\" alt=\"System.Object.MemberwiseClone\"/>()"},{"lang":"vb","value":"<xref uid=\"System.Object.MemberwiseClone\" text=\"MemberwiseClone\" alt=\"System.Object.MemberwiseClone\"/>()"}],"level":0.0},{"uid":"System.Object.ReferenceEquals(System.Object,System.Object)","isEii":false,"isExtensionMethod":false,"parent":"System.Object","isExternal":true,"name":[{"lang":"csharp","value":"ReferenceEquals(Object, Object)"},{"lang":"vb","value":"ReferenceEquals(Object, Object)"}],"nameWithType":[{"lang":"csharp","value":"Object.ReferenceEquals(Object, Object)"},{"lang":"vb","value":"Object.ReferenceEquals(Object, Object)"}],"fullName":[{"lang":"csharp","value":"System.Object.ReferenceEquals(System.Object, System.Object)"},{"lang":"vb","value":"System.Object.ReferenceEquals(System.Object, System.Object)"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Object.ReferenceEquals(System.Object,System.Object)\" text=\"ReferenceEquals\" alt=\"System.Object.ReferenceEquals\"/>(<xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>, <xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>)"},{"lang":"vb","value":"<xref uid=\"System.Object.ReferenceEquals(System.Object,System.Object)\" text=\"ReferenceEquals\" alt=\"System.Object.ReferenceEquals\"/>(<xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>, <xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>)"}],"level":0.0},{"uid":"System.Object.ToString","isEii":false,"isExtensionMethod":false,"parent":"System.Object","isExternal":true,"name":[{"lang":"csharp","value":"ToString()"},{"lang":"vb","value":"ToString()"}],"nameWithType":[{"lang":"csharp","value":"Object.ToString()"},{"lang":"vb","value":"Object.ToString()"}],"fullName":[{"lang":"csharp","value":"System.Object.ToString()"},{"lang":"vb","value":"System.Object.ToString()"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Object.ToString\" text=\"ToString\" alt=\"System.Object.ToString\"/>()"},{"lang":"vb","value":"<xref uid=\"System.Object.ToString\" text=\"ToString\" alt=\"System.Object.ToString\"/>()"}],"level":0.0}],"extensionMethods":[{"uid":"System.Object.EventStore.Common.Utils.Json.ToJsonBytes","isEii":false,"isExtensionMethod":false,"parent":"EventStore.Common.Utils.Json","definition":"EventStore.Common.Utils.Json.ToJsonBytes(System.Object)","name":[{"lang":"csharp","value":"ToJsonBytes()"},{"lang":"vb","value":"ToJsonBytes()"}],"nameWithType":[{"lang":"csharp","value":"Json.ToJsonBytes()"},{"lang":"vb","value":"Json.ToJsonBytes()"}],"fullName":[{"lang":"csharp","value":"EventStore.Common.Utils.Json.ToJsonBytes()"},{"lang":"vb","value":"EventStore.Common.Utils.Json.ToJsonBytes()"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Common.Utils.Json.ToJsonBytes\" text=\"ToJsonBytes\" alt=\"EventStore.Common.Utils.Json.ToJsonBytes\"/>()"},{"lang":"vb","value":"<xref uid=\"EventStore.Common.Utils.Json.ToJsonBytes\" text=\"ToJsonBytes\" alt=\"EventStore.Common.Utils.Json.ToJsonBytes\"/>()"}],"level":0.0},{"uid":"System.Object.EventStore.Common.Utils.Json.ToJson","isEii":false,"isExtensionMethod":false,"parent":"EventStore.Common.Utils.Json","definition":"EventStore.Common.Utils.Json.ToJson(System.Object)","name":[{"lang":"csharp","value":"ToJson()"},{"lang":"vb","value":"ToJson()"}],"nameWithType":[{"lang":"csharp","value":"Json.ToJson()"},{"lang":"vb","value":"Json.ToJson()"}],"fullName":[{"lang":"csharp","value":"EventStore.Common.Utils.Json.ToJson()"},{"lang":"vb","value":"EventStore.Common.Utils.Json.ToJson()"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Common.Utils.Json.ToJson\" text=\"ToJson\" alt=\"EventStore.Common.Utils.Json.ToJson\"/>()"},{"lang":"vb","value":"<xref uid=\"EventStore.Common.Utils.Json.ToJson\" text=\"ToJson\" alt=\"EventStore.Common.Utils.Json.ToJson\"/>()"}],"level":0.0},{"uid":"System.Object.EventStore.Common.Utils.Json.ToCanonicalJson","isEii":false,"isExtensionMethod":false,"parent":"EventStore.Common.Utils.Json","definition":"EventStore.Common.Utils.Json.ToCanonicalJson(System.Object)","name":[{"lang":"csharp","value":"ToCanonicalJson()"},{"lang":"vb","value":"ToCanonicalJson()"}],"nameWithType":[{"lang":"csharp","value":"Json.ToCanonicalJson()"},{"lang":"vb","value":"Json.ToCanonicalJson()"}],"fullName":[{"lang":"csharp","value":"EventStore.Common.Utils.Json.ToCanonicalJson()"},{"lang":"vb","value":"EventStore.Common.Utils.Json.ToCanonicalJson()"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Common.Utils.Json.ToCanonicalJson\" text=\"ToCanonicalJson\" alt=\"EventStore.Common.Utils.Json.ToCanonicalJson\"/>()"},{"lang":"vb","value":"<xref uid=\"EventStore.Common.Utils.Json.ToCanonicalJson\" text=\"ToCanonicalJson\" alt=\"EventStore.Common.Utils.Json.ToCanonicalJson\"/>()"}],"level":0.0},{"uid":"EventStore.Core.Services.TimerService.TimerBasedScheduler.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1","isEii":false,"isExtensionMethod":false,"parent":"EventStore.Core.Services.Transport.Tcp.ProtobufExtensions","definition":"EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1(``0)","name":[{"lang":"csharp","value":"Serialize<TimerBasedScheduler>()"},{"lang":"vb","value":"Serialize(Of TimerBasedScheduler)()"}],"nameWithType":[{"lang":"csharp","value":"ProtobufExtensions.Serialize<TimerBasedScheduler>()"},{"lang":"vb","value":"ProtobufExtensions.Serialize(Of TimerBasedScheduler)()"}],"fullName":[{"lang":"csharp","value":"EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize<EventStore.Core.Services.TimerService.TimerBasedScheduler>()"},{"lang":"vb","value":"EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.TimerService.TimerBasedScheduler)()"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1\" text=\"Serialize&lt;TimerBasedScheduler&gt;\" alt=\"EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize&lt;EventStore.Core.Services.TimerService.TimerBasedScheduler&gt;\"/>()"},{"lang":"vb","value":"<xref uid=\"EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize``1\" text=\"Serialize(Of TimerBasedScheduler)\" alt=\"EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.Serialize(Of EventStore.Core.Services.TimerService.TimerBasedScheduler)\"/>()"}],"level":0.0},{"uid":"EventStore.Core.Services.TimerService.TimerBasedScheduler.EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1","isEii":false,"isExtensionMethod":false,"parent":"EventStore.Core.Services.Transport.Tcp.ProtobufExtensions","definition":"EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1(``0)","name":[{"lang":"csharp","value":"SerializeToArray<TimerBasedScheduler>()"},{"lang":"vb","value":"SerializeToArray(Of TimerBasedScheduler)()"}],"nameWithType":[{"lang":"csharp","value":"ProtobufExtensions.SerializeToArray<TimerBasedScheduler>()"},{"lang":"vb","value":"ProtobufExtensions.SerializeToArray(Of TimerBasedScheduler)()"}],"fullName":[{"lang":"csharp","value":"EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray<EventStore.Core.Services.TimerService.TimerBasedScheduler>()"},{"lang":"vb","value":"EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.TimerService.TimerBasedScheduler)()"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1\" text=\"SerializeToArray&lt;TimerBasedScheduler&gt;\" alt=\"EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray&lt;EventStore.Core.Services.TimerService.TimerBasedScheduler&gt;\"/>()"},{"lang":"vb","value":"<xref uid=\"EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray``1\" text=\"SerializeToArray(Of TimerBasedScheduler)\" alt=\"EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.SerializeToArray(Of EventStore.Core.Services.TimerService.TimerBasedScheduler)\"/>()"}],"level":0.0}],"_docfxVersion":"2.43.3.0","_disableBreadcrumb":true,"_enableSearch":true,"_gitContribute":{"branch":"master"},"_appFaviconPath":"assets/favicon.ico","_appTitle":"Event Store","_appFooter":"&copy; 2019 Event Store Limited","_disableNavbar":false,"_disableToc":true,"_systemKeys":["uid","isEii","isExtensionMethod","parent","children","href","langs","name","nameWithType","fullName","type","source","documentation","assemblies","namespace","summary","remarks","example","syntax","overridden","overload","exceptions","seealso","see","inheritance","derivedClasses","level","implements","inheritedMembers","extensionMethods","conceptual","platform","attributes","additionalNotes"],"_lang":"csharp","_tocPath":"toc.html","_navPath":"toc.html","_rel":"../../","_path":"dotnet-api/code/EventStore.Core.Services.TimerService.TimerBasedScheduler.html","_key":"dotnet-api/code/EventStore.Core.Services.TimerService.TimerBasedScheduler.yml","_navRel":"../../toc.html","_tocRel":"../../toc.html","_navKey":"~/toc.yml","_tocKey":"~/toc.yml","__global":{"classesInSubtitle":"Classes","structsInSubtitle":"Structs","interfacesInSubtitle":"Interfaces","enumsInSubtitle":"Enums","delegatesInSubtitle":"Delegates","constructorsInSubtitle":"Constructors","fieldsInSubtitle":"Fields","propertiesInSubtitle":"Properties","methodsInSubtitle":"Methods","eventsInSubtitle":"Events","operatorsInSubtitle":"Operators","eiisInSubtitle":"Explicit Interface Implementations","functionsInSubtitle":"Functions","membersInSubtitle":"Members","improveThisDoc":"Improve this Doc","viewSource":"View Source","inheritance":"Inheritance","inheritedMembers":"Inherited Members","namespace":"Namespace","assembly":"Assembly","syntax":"Syntax","overrides":"Overrides","implements":"Implements","remarks":"Remarks","examples":"Examples","seealso":"See Also","declaration":"Declaration","parameters":"Parameters","typeParameters":"Type Parameters","type":"Type","name":"Name","description":"Description","returns":"Returns","fieldValue":"Field Value","propertyValue":"Property Value","eventType":"Event Type","exceptions":"Exceptions","condition":"Condition","extensionMethods":"Extension Methods","note":"<h5>Note</h5>","warning":"<h5>Warning</h5>","tip":"<h5>Tip</h5>","important":"<h5>Important</h5>","caution":"<h5>Caution</h5>","next":"<h5>Next Steps</h5>","_shared":{}},"docurl":"","sourceurl":"","summary":null,"remarks":null,"conceptual":null,"example":null,"seealso":null,"id":"EventStore_Core_Services_TimerService_TimerBasedScheduler","hideTitleType":false,"hideSubtitle":false,"isClass":true,"inClass":true}