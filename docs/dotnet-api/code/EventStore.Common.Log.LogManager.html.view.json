{"uid":"EventStore.Common.Log.LogManager","isEii":false,"isExtensionMethod":false,"parent":{"uid":"EventStore.Common.Log","isEii":false,"isExtensionMethod":false,"name":[{"lang":"csharp","value":"EventStore.Common.Log"},{"lang":"vb","value":"EventStore.Common.Log"}],"nameWithType":[{"lang":"csharp","value":"EventStore.Common.Log"},{"lang":"vb","value":"EventStore.Common.Log"}],"fullName":[{"lang":"csharp","value":"EventStore.Common.Log"},{"lang":"vb","value":"EventStore.Common.Log"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Common.Log\" text=\"EventStore.Common.Log\" alt=\"EventStore.Common.Log\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Common.Log\" text=\"EventStore.Common.Log\" alt=\"EventStore.Common.Log\"/>"}],"level":0.0},"children":[{"inProperty":true,"typePropertyName":"inProperty","id":"properties","children":[{"uid":"EventStore.Common.Log.LogManager.Initialized","isEii":false,"isExtensionMethod":false,"parent":"EventStore.Common.Log.LogManager","isExternal":false,"name":[{"lang":"csharp","value":"Initialized"},{"lang":"vb","value":"Initialized"}],"nameWithType":[{"lang":"csharp","value":"LogManager.Initialized"},{"lang":"vb","value":"LogManager.Initialized"}],"fullName":[{"lang":"csharp","value":"EventStore.Common.Log.LogManager.Initialized"},{"lang":"vb","value":"EventStore.Common.Log.LogManager.Initialized"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Common.Log.LogManager.Initialized\" text=\"Initialized\" alt=\"EventStore.Common.Log.LogManager.Initialized\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Common.Log.LogManager.Initialized\" text=\"Initialized\" alt=\"EventStore.Common.Log.LogManager.Initialized\"/>"}],"syntax":{"content":[{"lang":"csharp","value":"public static bool Initialized { get; }"},{"lang":"vb","value":"Public Shared ReadOnly Property Initialized As Boolean"}],"parameters":[],"return":null,"propertyValue":{"type":{"uid":"System.Boolean","name":[{"lang":"csharp","value":"Boolean"},{"lang":"vb","value":"Boolean"}],"nameWithType":[{"lang":"csharp","value":"Boolean"},{"lang":"vb","value":"Boolean"}],"fullName":[{"lang":"csharp","value":"System.Boolean"},{"lang":"vb","value":"System.Boolean"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Boolean\" text=\"Boolean\" alt=\"System.Boolean\"/>"},{"lang":"vb","value":"<xref uid=\"System.Boolean\" text=\"Boolean\" alt=\"System.Boolean\"/>"}]}}},"source":{"id":"Initialized","path":"/Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Common/Log/LogManager.cs","startLine":16.0,"endLine":0.0,"isExternal":false},"assemblies":["EventStore.Common"],"namespace":"EventStore.Common.Log","overload":{"uid":"EventStore.Common.Log.LogManager.Initialized*","name":[{"lang":"csharp","value":"Initialized"},{"lang":"vb","value":"Initialized"}],"nameWithType":[{"lang":"csharp","value":"LogManager.Initialized"},{"lang":"vb","value":"LogManager.Initialized"}],"fullName":[{"lang":"csharp","value":"EventStore.Common.Log.LogManager.Initialized"},{"lang":"vb","value":"EventStore.Common.Log.LogManager.Initialized"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Common.Log.LogManager.Initialized*\" text=\"Initialized\" alt=\"EventStore.Common.Log.LogManager.Initialized\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Common.Log.LogManager.Initialized*\" text=\"Initialized\" alt=\"EventStore.Common.Log.LogManager.Initialized\"/>"}],"id":"EventStore_Common_Log_LogManager_Initialized_"},"level":0.0,"modifiers.csharp":["public","static","get"],"modifiers.vb":["Public","Shared","ReadOnly"],"type":"property","summary":null,"platform":null,"docurl":"","sourceurl":"","remarks":null,"conceptual":null,"implements":null,"example":null,"seealso":null,"id":"EventStore_Common_Log_LogManager_Initialized","hideTitleType":false,"hideSubtitle":false},{"uid":"EventStore.Common.Log.LogManager.LogsDirectory","isEii":false,"isExtensionMethod":false,"parent":"EventStore.Common.Log.LogManager","isExternal":false,"name":[{"lang":"csharp","value":"LogsDirectory"},{"lang":"vb","value":"LogsDirectory"}],"nameWithType":[{"lang":"csharp","value":"LogManager.LogsDirectory"},{"lang":"vb","value":"LogManager.LogsDirectory"}],"fullName":[{"lang":"csharp","value":"EventStore.Common.Log.LogManager.LogsDirectory"},{"lang":"vb","value":"EventStore.Common.Log.LogManager.LogsDirectory"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Common.Log.LogManager.LogsDirectory\" text=\"LogsDirectory\" alt=\"EventStore.Common.Log.LogManager.LogsDirectory\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Common.Log.LogManager.LogsDirectory\" text=\"LogsDirectory\" alt=\"EventStore.Common.Log.LogManager.LogsDirectory\"/>"}],"syntax":{"content":[{"lang":"csharp","value":"public static string LogsDirectory { get; }"},{"lang":"vb","value":"Public Shared ReadOnly Property LogsDirectory As String"}],"parameters":[],"return":null,"propertyValue":{"type":{"uid":"System.String","name":[{"lang":"csharp","value":"String"},{"lang":"vb","value":"String"}],"nameWithType":[{"lang":"csharp","value":"String"},{"lang":"vb","value":"String"}],"fullName":[{"lang":"csharp","value":"System.String"},{"lang":"vb","value":"System.String"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.String\" text=\"String\" alt=\"System.String\"/>"},{"lang":"vb","value":"<xref uid=\"System.String\" text=\"String\" alt=\"System.String\"/>"}]}}},"source":{"id":"LogsDirectory","path":"/Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Common/Log/LogManager.cs","startLine":8.0,"endLine":0.0,"isExternal":false},"assemblies":["EventStore.Common"],"namespace":"EventStore.Common.Log","overload":{"uid":"EventStore.Common.Log.LogManager.LogsDirectory*","name":[{"lang":"csharp","value":"LogsDirectory"},{"lang":"vb","value":"LogsDirectory"}],"nameWithType":[{"lang":"csharp","value":"LogManager.LogsDirectory"},{"lang":"vb","value":"LogManager.LogsDirectory"}],"fullName":[{"lang":"csharp","value":"EventStore.Common.Log.LogManager.LogsDirectory"},{"lang":"vb","value":"EventStore.Common.Log.LogManager.LogsDirectory"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Common.Log.LogManager.LogsDirectory*\" text=\"LogsDirectory\" alt=\"EventStore.Common.Log.LogManager.LogsDirectory\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Common.Log.LogManager.LogsDirectory*\" text=\"LogsDirectory\" alt=\"EventStore.Common.Log.LogManager.LogsDirectory\"/>"}],"id":"EventStore_Common_Log_LogManager_LogsDirectory_"},"level":0.0,"modifiers.csharp":["public","static","get"],"modifiers.vb":["Public","Shared","ReadOnly"],"type":"property","summary":null,"platform":null,"docurl":"","sourceurl":"","remarks":null,"conceptual":null,"implements":null,"example":null,"seealso":null,"id":"EventStore_Common_Log_LogManager_LogsDirectory","hideTitleType":false,"hideSubtitle":false},{"uid":"EventStore.Common.Log.LogManager.StructuredLog","isEii":false,"isExtensionMethod":false,"parent":"EventStore.Common.Log.LogManager","isExternal":false,"name":[{"lang":"csharp","value":"StructuredLog"},{"lang":"vb","value":"StructuredLog"}],"nameWithType":[{"lang":"csharp","value":"LogManager.StructuredLog"},{"lang":"vb","value":"LogManager.StructuredLog"}],"fullName":[{"lang":"csharp","value":"EventStore.Common.Log.LogManager.StructuredLog"},{"lang":"vb","value":"EventStore.Common.Log.LogManager.StructuredLog"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Common.Log.LogManager.StructuredLog\" text=\"StructuredLog\" alt=\"EventStore.Common.Log.LogManager.StructuredLog\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Common.Log.LogManager.StructuredLog\" text=\"StructuredLog\" alt=\"EventStore.Common.Log.LogManager.StructuredLog\"/>"}],"syntax":{"content":[{"lang":"csharp","value":"public static bool StructuredLog { get; }"},{"lang":"vb","value":"Public Shared ReadOnly Property StructuredLog As Boolean"}],"parameters":[],"return":null,"propertyValue":{"type":{"uid":"System.Boolean","name":[{"lang":"csharp","value":"Boolean"},{"lang":"vb","value":"Boolean"}],"nameWithType":[{"lang":"csharp","value":"Boolean"},{"lang":"vb","value":"Boolean"}],"fullName":[{"lang":"csharp","value":"System.Boolean"},{"lang":"vb","value":"System.Boolean"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Boolean\" text=\"Boolean\" alt=\"System.Boolean\"/>"},{"lang":"vb","value":"<xref uid=\"System.Boolean\" text=\"Boolean\" alt=\"System.Boolean\"/>"}]}}},"source":{"id":"StructuredLog","path":"/Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Common/Log/LogManager.cs","startLine":20.0,"endLine":0.0,"isExternal":false},"assemblies":["EventStore.Common"],"namespace":"EventStore.Common.Log","overload":{"uid":"EventStore.Common.Log.LogManager.StructuredLog*","name":[{"lang":"csharp","value":"StructuredLog"},{"lang":"vb","value":"StructuredLog"}],"nameWithType":[{"lang":"csharp","value":"LogManager.StructuredLog"},{"lang":"vb","value":"LogManager.StructuredLog"}],"fullName":[{"lang":"csharp","value":"EventStore.Common.Log.LogManager.StructuredLog"},{"lang":"vb","value":"EventStore.Common.Log.LogManager.StructuredLog"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Common.Log.LogManager.StructuredLog*\" text=\"StructuredLog\" alt=\"EventStore.Common.Log.LogManager.StructuredLog\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Common.Log.LogManager.StructuredLog*\" text=\"StructuredLog\" alt=\"EventStore.Common.Log.LogManager.StructuredLog\"/>"}],"id":"EventStore_Common_Log_LogManager_StructuredLog_"},"level":0.0,"modifiers.csharp":["public","static","get"],"modifiers.vb":["Public","Shared","ReadOnly"],"type":"property","summary":null,"platform":null,"docurl":"","sourceurl":"","remarks":null,"conceptual":null,"implements":null,"example":null,"seealso":null,"id":"EventStore_Common_Log_LogManager_StructuredLog","hideTitleType":false,"hideSubtitle":false}]},{"inMethod":true,"typePropertyName":"inMethod","id":"methods","children":[{"uid":"EventStore.Common.Log.LogManager.Finish","isEii":false,"isExtensionMethod":false,"parent":"EventStore.Common.Log.LogManager","isExternal":false,"name":[{"lang":"csharp","value":"Finish()"},{"lang":"vb","value":"Finish()"}],"nameWithType":[{"lang":"csharp","value":"LogManager.Finish()"},{"lang":"vb","value":"LogManager.Finish()"}],"fullName":[{"lang":"csharp","value":"EventStore.Common.Log.LogManager.Finish()"},{"lang":"vb","value":"EventStore.Common.Log.LogManager.Finish()"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Common.Log.LogManager.Finish\" text=\"Finish()\" alt=\"EventStore.Common.Log.LogManager.Finish()\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Common.Log.LogManager.Finish\" text=\"Finish()\" alt=\"EventStore.Common.Log.LogManager.Finish()\"/>"}],"syntax":{"content":[{"lang":"csharp","value":"public static void Finish()"},{"lang":"vb","value":"Public Shared Sub Finish"}]},"source":{"id":"Finish","path":"/Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Common/Log/LogManager.cs","startLine":107.0,"endLine":0.0,"isExternal":false},"assemblies":["EventStore.Common"],"namespace":"EventStore.Common.Log","overload":{"uid":"EventStore.Common.Log.LogManager.Finish*","name":[{"lang":"csharp","value":"Finish"},{"lang":"vb","value":"Finish"}],"nameWithType":[{"lang":"csharp","value":"LogManager.Finish"},{"lang":"vb","value":"LogManager.Finish"}],"fullName":[{"lang":"csharp","value":"EventStore.Common.Log.LogManager.Finish"},{"lang":"vb","value":"EventStore.Common.Log.LogManager.Finish"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Common.Log.LogManager.Finish*\" text=\"Finish\" alt=\"EventStore.Common.Log.LogManager.Finish\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Common.Log.LogManager.Finish*\" text=\"Finish\" alt=\"EventStore.Common.Log.LogManager.Finish\"/>"}],"id":"EventStore_Common_Log_LogManager_Finish_"},"level":0.0,"modifiers.csharp":["public","static"],"modifiers.vb":["Public","Shared"],"type":"method","summary":null,"platform":null,"docurl":"","sourceurl":"","remarks":null,"conceptual":null,"implements":null,"example":null,"seealso":null,"id":"EventStore_Common_Log_LogManager_Finish","hideTitleType":false,"hideSubtitle":false},{"uid":"EventStore.Common.Log.LogManager.GetLogger(System.String)","isEii":false,"isExtensionMethod":false,"parent":"EventStore.Common.Log.LogManager","isExternal":false,"name":[{"lang":"csharp","value":"GetLogger(String)"},{"lang":"vb","value":"GetLogger(String)"}],"nameWithType":[{"lang":"csharp","value":"LogManager.GetLogger(String)"},{"lang":"vb","value":"LogManager.GetLogger(String)"}],"fullName":[{"lang":"csharp","value":"EventStore.Common.Log.LogManager.GetLogger(System.String)"},{"lang":"vb","value":"EventStore.Common.Log.LogManager.GetLogger(System.String)"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Common.Log.LogManager.GetLogger(System.String)\" text=\"GetLogger(String)\" alt=\"EventStore.Common.Log.LogManager.GetLogger(System.String)\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Common.Log.LogManager.GetLogger(System.String)\" text=\"GetLogger(String)\" alt=\"EventStore.Common.Log.LogManager.GetLogger(System.String)\"/>"}],"syntax":{"content":[{"lang":"csharp","value":"public static ILogger GetLogger(string logName)"},{"lang":"vb","value":"Public Shared Function GetLogger(logName As String) As ILogger"}],"parameters":[{"id":"logName","type":{"uid":"System.String","name":[{"lang":"csharp","value":"String"},{"lang":"vb","value":"String"}],"nameWithType":[{"lang":"csharp","value":"String"},{"lang":"vb","value":"String"}],"fullName":[{"lang":"csharp","value":"System.String"},{"lang":"vb","value":"System.String"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.String\" text=\"String\" alt=\"System.String\"/>"},{"lang":"vb","value":"<xref uid=\"System.String\" text=\"String\" alt=\"System.String\"/>"}]}}],"return":{"type":{"uid":"EventStore.Common.Log.ILogger","name":[{"lang":"csharp","value":"ILogger"},{"lang":"vb","value":"ILogger"}],"nameWithType":[{"lang":"csharp","value":"ILogger"},{"lang":"vb","value":"ILogger"}],"fullName":[{"lang":"csharp","value":"EventStore.Common.Log.ILogger"},{"lang":"vb","value":"EventStore.Common.Log.ILogger"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Common.Log.ILogger\" text=\"ILogger\" alt=\"EventStore.Common.Log.ILogger\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Common.Log.ILogger\" text=\"ILogger\" alt=\"EventStore.Common.Log.ILogger\"/>"}]}}},"source":{"id":"GetLogger","path":"/Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Common/Log/LogManager.cs","startLine":48.0,"endLine":0.0,"isExternal":false},"assemblies":["EventStore.Common"],"namespace":"EventStore.Common.Log","overload":{"uid":"EventStore.Common.Log.LogManager.GetLogger*","name":[{"lang":"csharp","value":"GetLogger"},{"lang":"vb","value":"GetLogger"}],"nameWithType":[{"lang":"csharp","value":"LogManager.GetLogger"},{"lang":"vb","value":"LogManager.GetLogger"}],"fullName":[{"lang":"csharp","value":"EventStore.Common.Log.LogManager.GetLogger"},{"lang":"vb","value":"EventStore.Common.Log.LogManager.GetLogger"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Common.Log.LogManager.GetLogger*\" text=\"GetLogger\" alt=\"EventStore.Common.Log.LogManager.GetLogger\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Common.Log.LogManager.GetLogger*\" text=\"GetLogger\" alt=\"EventStore.Common.Log.LogManager.GetLogger\"/>"}],"id":"EventStore_Common_Log_LogManager_GetLogger_"},"level":0.0,"modifiers.csharp":["public","static"],"modifiers.vb":["Public","Shared"],"type":"method","summary":null,"platform":null,"docurl":"","sourceurl":"","remarks":null,"conceptual":null,"implements":null,"example":null,"seealso":null,"id":"EventStore_Common_Log_LogManager_GetLogger_System_String_","hideTitleType":false,"hideSubtitle":false},{"uid":"EventStore.Common.Log.LogManager.GetLoggerFor(System.Type)","isEii":false,"isExtensionMethod":false,"parent":"EventStore.Common.Log.LogManager","isExternal":false,"name":[{"lang":"csharp","value":"GetLoggerFor(Type)"},{"lang":"vb","value":"GetLoggerFor(Type)"}],"nameWithType":[{"lang":"csharp","value":"LogManager.GetLoggerFor(Type)"},{"lang":"vb","value":"LogManager.GetLoggerFor(Type)"}],"fullName":[{"lang":"csharp","value":"EventStore.Common.Log.LogManager.GetLoggerFor(System.Type)"},{"lang":"vb","value":"EventStore.Common.Log.LogManager.GetLoggerFor(System.Type)"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Common.Log.LogManager.GetLoggerFor(System.Type)\" text=\"GetLoggerFor(Type)\" alt=\"EventStore.Common.Log.LogManager.GetLoggerFor(System.Type)\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Common.Log.LogManager.GetLoggerFor(System.Type)\" text=\"GetLoggerFor(Type)\" alt=\"EventStore.Common.Log.LogManager.GetLoggerFor(System.Type)\"/>"}],"syntax":{"content":[{"lang":"csharp","value":"public static ILogger GetLoggerFor(Type type)"},{"lang":"vb","value":"Public Shared Function GetLoggerFor(type As Type) As ILogger"}],"parameters":[{"id":"type","type":{"uid":"System.Type","name":[{"lang":"csharp","value":"Type"},{"lang":"vb","value":"Type"}],"nameWithType":[{"lang":"csharp","value":"Type"},{"lang":"vb","value":"Type"}],"fullName":[{"lang":"csharp","value":"System.Type"},{"lang":"vb","value":"System.Type"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Type\" text=\"Type\" alt=\"System.Type\"/>"},{"lang":"vb","value":"<xref uid=\"System.Type\" text=\"Type\" alt=\"System.Type\"/>"}]}}],"return":{"type":{"uid":"EventStore.Common.Log.ILogger","name":[{"lang":"csharp","value":"ILogger"},{"lang":"vb","value":"ILogger"}],"nameWithType":[{"lang":"csharp","value":"ILogger"},{"lang":"vb","value":"ILogger"}],"fullName":[{"lang":"csharp","value":"EventStore.Common.Log.ILogger"},{"lang":"vb","value":"EventStore.Common.Log.ILogger"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Common.Log.ILogger\" text=\"ILogger\" alt=\"EventStore.Common.Log.ILogger\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Common.Log.ILogger\" text=\"ILogger\" alt=\"EventStore.Common.Log.ILogger\"/>"}]}}},"source":{"id":"GetLoggerFor","path":"/Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Common/Log/LogManager.cs","startLine":40.0,"endLine":0.0,"isExternal":false},"assemblies":["EventStore.Common"],"namespace":"EventStore.Common.Log","overload":{"uid":"EventStore.Common.Log.LogManager.GetLoggerFor*","name":[{"lang":"csharp","value":"GetLoggerFor"},{"lang":"vb","value":"GetLoggerFor"}],"nameWithType":[{"lang":"csharp","value":"LogManager.GetLoggerFor"},{"lang":"vb","value":"LogManager.GetLoggerFor"}],"fullName":[{"lang":"csharp","value":"EventStore.Common.Log.LogManager.GetLoggerFor"},{"lang":"vb","value":"EventStore.Common.Log.LogManager.GetLoggerFor"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Common.Log.LogManager.GetLoggerFor*\" text=\"GetLoggerFor\" alt=\"EventStore.Common.Log.LogManager.GetLoggerFor\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Common.Log.LogManager.GetLoggerFor*\" text=\"GetLoggerFor\" alt=\"EventStore.Common.Log.LogManager.GetLoggerFor\"/>"}],"id":"EventStore_Common_Log_LogManager_GetLoggerFor_"},"level":0.0,"modifiers.csharp":["public","static"],"modifiers.vb":["Public","Shared"],"type":"method","summary":null,"platform":null,"docurl":"","sourceurl":"","remarks":null,"conceptual":null,"implements":null,"example":null,"seealso":null,"id":"EventStore_Common_Log_LogManager_GetLoggerFor_System_Type_","hideTitleType":false,"hideSubtitle":false},{"uid":"EventStore.Common.Log.LogManager.GetLoggerFor``1","isEii":false,"isExtensionMethod":false,"parent":"EventStore.Common.Log.LogManager","isExternal":false,"name":[{"lang":"csharp","value":"GetLoggerFor<T>()"},{"lang":"vb","value":"GetLoggerFor(Of T)()"}],"nameWithType":[{"lang":"csharp","value":"LogManager.GetLoggerFor<T>()"},{"lang":"vb","value":"LogManager.GetLoggerFor(Of T)()"}],"fullName":[{"lang":"csharp","value":"EventStore.Common.Log.LogManager.GetLoggerFor<T>()"},{"lang":"vb","value":"EventStore.Common.Log.LogManager.GetLoggerFor(Of T)()"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Common.Log.LogManager.GetLoggerFor``1\" text=\"GetLoggerFor&lt;T&gt;()\" alt=\"EventStore.Common.Log.LogManager.GetLoggerFor&lt;T&gt;()\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Common.Log.LogManager.GetLoggerFor``1\" text=\"GetLoggerFor&lt;T&gt;()\" alt=\"EventStore.Common.Log.LogManager.GetLoggerFor&lt;T&gt;()\"/>"}],"syntax":{"content":[{"lang":"csharp","value":"public static ILogger GetLoggerFor<T>()"},{"lang":"vb","value":"Public Shared Function GetLoggerFor(Of T) As ILogger"}],"typeParameters":[{"id":"T"}],"return":{"type":{"uid":"EventStore.Common.Log.ILogger","name":[{"lang":"csharp","value":"ILogger"},{"lang":"vb","value":"ILogger"}],"nameWithType":[{"lang":"csharp","value":"ILogger"},{"lang":"vb","value":"ILogger"}],"fullName":[{"lang":"csharp","value":"EventStore.Common.Log.ILogger"},{"lang":"vb","value":"EventStore.Common.Log.ILogger"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Common.Log.ILogger\" text=\"ILogger\" alt=\"EventStore.Common.Log.ILogger\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Common.Log.ILogger\" text=\"ILogger\" alt=\"EventStore.Common.Log.ILogger\"/>"}]}}},"source":{"id":"GetLoggerFor","path":"/Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Common/Log/LogManager.cs","startLine":44.0,"endLine":0.0,"isExternal":false},"assemblies":["EventStore.Common"],"namespace":"EventStore.Common.Log","overload":{"uid":"EventStore.Common.Log.LogManager.GetLoggerFor*","name":[{"lang":"csharp","value":"GetLoggerFor"},{"lang":"vb","value":"GetLoggerFor"}],"nameWithType":[{"lang":"csharp","value":"LogManager.GetLoggerFor"},{"lang":"vb","value":"LogManager.GetLoggerFor"}],"fullName":[{"lang":"csharp","value":"EventStore.Common.Log.LogManager.GetLoggerFor"},{"lang":"vb","value":"EventStore.Common.Log.LogManager.GetLoggerFor"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Common.Log.LogManager.GetLoggerFor*\" text=\"GetLoggerFor\" alt=\"EventStore.Common.Log.LogManager.GetLoggerFor\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Common.Log.LogManager.GetLoggerFor*\" text=\"GetLoggerFor\" alt=\"EventStore.Common.Log.LogManager.GetLoggerFor\"/>"}],"id":"EventStore_Common_Log_LogManager_GetLoggerFor_"},"level":0.0,"modifiers.csharp":["public","static"],"modifiers.vb":["Public","Shared"],"type":"method","summary":null,"platform":null,"docurl":"","sourceurl":"","remarks":null,"conceptual":null,"implements":null,"example":null,"seealso":null,"id":"EventStore_Common_Log_LogManager_GetLoggerFor__1","hideTitleType":false,"hideSubtitle":false},{"uid":"EventStore.Common.Log.LogManager.Init(System.String,System.String,System.Boolean,System.String)","isEii":false,"isExtensionMethod":false,"parent":"EventStore.Common.Log.LogManager","isExternal":false,"name":[{"lang":"csharp","value":"Init(String, String, Boolean, String)"},{"lang":"vb","value":"Init(String, String, Boolean, String)"}],"nameWithType":[{"lang":"csharp","value":"LogManager.Init(String, String, Boolean, String)"},{"lang":"vb","value":"LogManager.Init(String, String, Boolean, String)"}],"fullName":[{"lang":"csharp","value":"EventStore.Common.Log.LogManager.Init(System.String, System.String, System.Boolean, System.String)"},{"lang":"vb","value":"EventStore.Common.Log.LogManager.Init(System.String, System.String, System.Boolean, System.String)"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Common.Log.LogManager.Init(System.String,System.String,System.Boolean,System.String)\" text=\"Init(String, String, Boolean, String)\" alt=\"EventStore.Common.Log.LogManager.Init(System.String, System.String, System.Boolean, System.String)\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Common.Log.LogManager.Init(System.String,System.String,System.Boolean,System.String)\" text=\"Init(String, String, Boolean, String)\" alt=\"EventStore.Common.Log.LogManager.Init(System.String, System.String, System.Boolean, System.String)\"/>"}],"syntax":{"content":[{"lang":"csharp","value":"public static void Init(string componentName, string logsDirectory, bool isStructured, string configurationDirectory)"},{"lang":"vb","value":"Public Shared Sub Init(componentName As String, logsDirectory As String, isStructured As Boolean, configurationDirectory As String)"}],"parameters":[{"id":"componentName","type":{"uid":"System.String","name":[{"lang":"csharp","value":"String"},{"lang":"vb","value":"String"}],"nameWithType":[{"lang":"csharp","value":"String"},{"lang":"vb","value":"String"}],"fullName":[{"lang":"csharp","value":"System.String"},{"lang":"vb","value":"System.String"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.String\" text=\"String\" alt=\"System.String\"/>"},{"lang":"vb","value":"<xref uid=\"System.String\" text=\"String\" alt=\"System.String\"/>"}]}},{"id":"logsDirectory","type":{"uid":"System.String","name":[{"lang":"csharp","value":"String"},{"lang":"vb","value":"String"}],"nameWithType":[{"lang":"csharp","value":"String"},{"lang":"vb","value":"String"}],"fullName":[{"lang":"csharp","value":"System.String"},{"lang":"vb","value":"System.String"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.String\" text=\"String\" alt=\"System.String\"/>"},{"lang":"vb","value":"<xref uid=\"System.String\" text=\"String\" alt=\"System.String\"/>"}]}},{"id":"isStructured","type":{"uid":"System.Boolean","name":[{"lang":"csharp","value":"Boolean"},{"lang":"vb","value":"Boolean"}],"nameWithType":[{"lang":"csharp","value":"Boolean"},{"lang":"vb","value":"Boolean"}],"fullName":[{"lang":"csharp","value":"System.Boolean"},{"lang":"vb","value":"System.Boolean"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Boolean\" text=\"Boolean\" alt=\"System.Boolean\"/>"},{"lang":"vb","value":"<xref uid=\"System.Boolean\" text=\"Boolean\" alt=\"System.Boolean\"/>"}]}},{"id":"configurationDirectory","type":{"uid":"System.String","name":[{"lang":"csharp","value":"String"},{"lang":"vb","value":"String"}],"nameWithType":[{"lang":"csharp","value":"String"},{"lang":"vb","value":"String"}],"fullName":[{"lang":"csharp","value":"System.String"},{"lang":"vb","value":"System.String"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.String\" text=\"String\" alt=\"System.String\"/>"},{"lang":"vb","value":"<xref uid=\"System.String\" text=\"String\" alt=\"System.String\"/>"}]}}]},"source":{"id":"Init","path":"/Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Common/Log/LogManager.cs","startLine":52.0,"endLine":0.0,"isExternal":false},"assemblies":["EventStore.Common"],"namespace":"EventStore.Common.Log","overload":{"uid":"EventStore.Common.Log.LogManager.Init*","name":[{"lang":"csharp","value":"Init"},{"lang":"vb","value":"Init"}],"nameWithType":[{"lang":"csharp","value":"LogManager.Init"},{"lang":"vb","value":"LogManager.Init"}],"fullName":[{"lang":"csharp","value":"EventStore.Common.Log.LogManager.Init"},{"lang":"vb","value":"EventStore.Common.Log.LogManager.Init"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Common.Log.LogManager.Init*\" text=\"Init\" alt=\"EventStore.Common.Log.LogManager.Init\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Common.Log.LogManager.Init*\" text=\"Init\" alt=\"EventStore.Common.Log.LogManager.Init\"/>"}],"id":"EventStore_Common_Log_LogManager_Init_"},"level":0.0,"modifiers.csharp":["public","static"],"modifiers.vb":["Public","Shared"],"type":"method","summary":null,"platform":null,"docurl":"","sourceurl":"","remarks":null,"conceptual":null,"implements":null,"example":null,"seealso":null,"id":"EventStore_Common_Log_LogManager_Init_System_String_System_String_System_Boolean_System_String_","hideTitleType":false,"hideSubtitle":false},{"uid":"EventStore.Common.Log.LogManager.SetLogFactory(System.Func{System.String,EventStore.Common.Log.ILogger})","isEii":false,"isExtensionMethod":false,"parent":"EventStore.Common.Log.LogManager","isExternal":false,"name":[{"lang":"csharp","value":"SetLogFactory(Func<String, ILogger>)"},{"lang":"vb","value":"SetLogFactory(Func(Of String, ILogger))"}],"nameWithType":[{"lang":"csharp","value":"LogManager.SetLogFactory(Func<String, ILogger>)"},{"lang":"vb","value":"LogManager.SetLogFactory(Func(Of String, ILogger))"}],"fullName":[{"lang":"csharp","value":"EventStore.Common.Log.LogManager.SetLogFactory(System.Func<System.String, EventStore.Common.Log.ILogger>)"},{"lang":"vb","value":"EventStore.Common.Log.LogManager.SetLogFactory(System.Func(Of System.String, EventStore.Common.Log.ILogger))"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Common.Log.LogManager.SetLogFactory(System.Func{System.String,EventStore.Common.Log.ILogger})\" text=\"SetLogFactory(Func&lt;String, ILogger&gt;)\" alt=\"EventStore.Common.Log.LogManager.SetLogFactory(System.Func&lt;System.String, EventStore.Common.Log.ILogger&gt;)\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Common.Log.LogManager.SetLogFactory(System.Func{System.String,EventStore.Common.Log.ILogger})\" text=\"SetLogFactory(Func&lt;String, ILogger&gt;)\" alt=\"EventStore.Common.Log.LogManager.SetLogFactory(System.Func&lt;System.String, EventStore.Common.Log.ILogger&gt;)\"/>"}],"syntax":{"content":[{"lang":"csharp","value":"public static void SetLogFactory(Func<string, ILogger> factory)"},{"lang":"vb","value":"Public Shared Sub SetLogFactory(factory As Func(Of String, ILogger))"}],"parameters":[{"id":"factory","type":{"uid":"System.Func{System.String,EventStore.Common.Log.ILogger}","definition":"System.Func`2","name":[{"lang":"csharp","value":"Func<String, ILogger>"},{"lang":"vb","value":"Func(Of String, ILogger)"}],"nameWithType":[{"lang":"csharp","value":"Func<String, ILogger>"},{"lang":"vb","value":"Func(Of String, ILogger)"}],"fullName":[{"lang":"csharp","value":"System.Func<System.String, EventStore.Common.Log.ILogger>"},{"lang":"vb","value":"System.Func(Of System.String, EventStore.Common.Log.ILogger)"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Func`2\" text=\"Func\" alt=\"System.Func\"/>&lt;<xref uid=\"System.String\" text=\"String\" alt=\"System.String\"/>, <xref uid=\"EventStore.Common.Log.ILogger\" text=\"ILogger\" alt=\"EventStore.Common.Log.ILogger\"/>&gt;"},{"lang":"vb","value":"<xref uid=\"System.Func`2\" text=\"Func\" alt=\"System.Func\"/>(Of <xref uid=\"System.String\" text=\"String\" alt=\"System.String\"/>, <xref uid=\"EventStore.Common.Log.ILogger\" text=\"ILogger\" alt=\"EventStore.Common.Log.ILogger\"/>)"}]}}]},"source":{"id":"SetLogFactory","path":"/Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Common/Log/LogManager.cs","startLine":116.0,"endLine":0.0,"isExternal":false},"assemblies":["EventStore.Common"],"namespace":"EventStore.Common.Log","overload":{"uid":"EventStore.Common.Log.LogManager.SetLogFactory*","name":[{"lang":"csharp","value":"SetLogFactory"},{"lang":"vb","value":"SetLogFactory"}],"nameWithType":[{"lang":"csharp","value":"LogManager.SetLogFactory"},{"lang":"vb","value":"LogManager.SetLogFactory"}],"fullName":[{"lang":"csharp","value":"EventStore.Common.Log.LogManager.SetLogFactory"},{"lang":"vb","value":"EventStore.Common.Log.LogManager.SetLogFactory"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Common.Log.LogManager.SetLogFactory*\" text=\"SetLogFactory\" alt=\"EventStore.Common.Log.LogManager.SetLogFactory\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Common.Log.LogManager.SetLogFactory*\" text=\"SetLogFactory\" alt=\"EventStore.Common.Log.LogManager.SetLogFactory\"/>"}],"id":"EventStore_Common_Log_LogManager_SetLogFactory_"},"level":0.0,"modifiers.csharp":["public","static"],"modifiers.vb":["Public","Shared"],"type":"method","summary":null,"platform":null,"docurl":"","sourceurl":"","remarks":null,"conceptual":null,"implements":null,"example":null,"seealso":null,"id":"EventStore_Common_Log_LogManager_SetLogFactory_System_Func_System_String_EventStore_Common_Log_ILogger__","hideTitleType":false,"hideSubtitle":false}]}],"langs":["csharp","vb"],"name":[{"lang":"csharp","value":"LogManager"},{"lang":"vb","value":"LogManager"}],"nameWithType":[{"lang":"csharp","value":"LogManager"},{"lang":"vb","value":"LogManager"}],"fullName":[{"lang":"csharp","value":"EventStore.Common.Log.LogManager"},{"lang":"vb","value":"EventStore.Common.Log.LogManager"}],"type":"class","source":{"id":"LogManager","path":"/Users/chrisward/Workspace/EventStore/EventStore/src/EventStore.Common/Log/LogManager.cs","startLine":7.0,"endLine":0.0,"isExternal":false},"assemblies":["EventStore.Common"],"namespace":{"uid":"EventStore.Common.Log","isEii":false,"isExtensionMethod":false,"name":[{"lang":"csharp","value":"EventStore.Common.Log"},{"lang":"vb","value":"EventStore.Common.Log"}],"nameWithType":[{"lang":"csharp","value":"EventStore.Common.Log"},{"lang":"vb","value":"EventStore.Common.Log"}],"fullName":[{"lang":"csharp","value":"EventStore.Common.Log"},{"lang":"vb","value":"EventStore.Common.Log"}],"specName":[{"lang":"csharp","value":"<xref uid=\"EventStore.Common.Log\" text=\"EventStore.Common.Log\" alt=\"EventStore.Common.Log\"/>"},{"lang":"vb","value":"<xref uid=\"EventStore.Common.Log\" text=\"EventStore.Common.Log\" alt=\"EventStore.Common.Log\"/>"}],"level":0.0},"syntax":{"content":[{"lang":"csharp","value":"public static class LogManager"},{"lang":"vb","value":"Public Module LogManager"}]},"inheritance":[{"uid":"System.Object","isEii":false,"isExtensionMethod":false,"parent":"System","isExternal":true,"name":[{"lang":"csharp","value":"Object"},{"lang":"vb","value":"Object"}],"nameWithType":[{"lang":"csharp","value":"Object"},{"lang":"vb","value":"Object"}],"fullName":[{"lang":"csharp","value":"System.Object"},{"lang":"vb","value":"System.Object"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>"},{"lang":"vb","value":"<xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>"}],"level":0.0,"index":0.0}],"level":1.0,"inheritedMembers":[{"uid":"System.Object.Equals(System.Object)","isEii":false,"isExtensionMethod":false,"parent":"System.Object","isExternal":true,"name":[{"lang":"csharp","value":"Equals(Object)"},{"lang":"vb","value":"Equals(Object)"}],"nameWithType":[{"lang":"csharp","value":"Object.Equals(Object)"},{"lang":"vb","value":"Object.Equals(Object)"}],"fullName":[{"lang":"csharp","value":"System.Object.Equals(System.Object)"},{"lang":"vb","value":"System.Object.Equals(System.Object)"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Object.Equals(System.Object)\" text=\"Equals\" alt=\"System.Object.Equals\"/>(<xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>)"},{"lang":"vb","value":"<xref uid=\"System.Object.Equals(System.Object)\" text=\"Equals\" alt=\"System.Object.Equals\"/>(<xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>)"}],"level":0.0},{"uid":"System.Object.Equals(System.Object,System.Object)","isEii":false,"isExtensionMethod":false,"parent":"System.Object","isExternal":true,"name":[{"lang":"csharp","value":"Equals(Object, Object)"},{"lang":"vb","value":"Equals(Object, Object)"}],"nameWithType":[{"lang":"csharp","value":"Object.Equals(Object, Object)"},{"lang":"vb","value":"Object.Equals(Object, Object)"}],"fullName":[{"lang":"csharp","value":"System.Object.Equals(System.Object, System.Object)"},{"lang":"vb","value":"System.Object.Equals(System.Object, System.Object)"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Object.Equals(System.Object,System.Object)\" text=\"Equals\" alt=\"System.Object.Equals\"/>(<xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>, <xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>)"},{"lang":"vb","value":"<xref uid=\"System.Object.Equals(System.Object,System.Object)\" text=\"Equals\" alt=\"System.Object.Equals\"/>(<xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>, <xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>)"}],"level":0.0},{"uid":"System.Object.GetHashCode","isEii":false,"isExtensionMethod":false,"parent":"System.Object","isExternal":true,"name":[{"lang":"csharp","value":"GetHashCode()"},{"lang":"vb","value":"GetHashCode()"}],"nameWithType":[{"lang":"csharp","value":"Object.GetHashCode()"},{"lang":"vb","value":"Object.GetHashCode()"}],"fullName":[{"lang":"csharp","value":"System.Object.GetHashCode()"},{"lang":"vb","value":"System.Object.GetHashCode()"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Object.GetHashCode\" text=\"GetHashCode\" alt=\"System.Object.GetHashCode\"/>()"},{"lang":"vb","value":"<xref uid=\"System.Object.GetHashCode\" text=\"GetHashCode\" alt=\"System.Object.GetHashCode\"/>()"}],"level":0.0},{"uid":"System.Object.GetType","isEii":false,"isExtensionMethod":false,"parent":"System.Object","isExternal":true,"name":[{"lang":"csharp","value":"GetType()"},{"lang":"vb","value":"GetType()"}],"nameWithType":[{"lang":"csharp","value":"Object.GetType()"},{"lang":"vb","value":"Object.GetType()"}],"fullName":[{"lang":"csharp","value":"System.Object.GetType()"},{"lang":"vb","value":"System.Object.GetType()"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Object.GetType\" text=\"GetType\" alt=\"System.Object.GetType\"/>()"},{"lang":"vb","value":"<xref uid=\"System.Object.GetType\" text=\"GetType\" alt=\"System.Object.GetType\"/>()"}],"level":0.0},{"uid":"System.Object.MemberwiseClone","isEii":false,"isExtensionMethod":false,"parent":"System.Object","isExternal":true,"name":[{"lang":"csharp","value":"MemberwiseClone()"},{"lang":"vb","value":"MemberwiseClone()"}],"nameWithType":[{"lang":"csharp","value":"Object.MemberwiseClone()"},{"lang":"vb","value":"Object.MemberwiseClone()"}],"fullName":[{"lang":"csharp","value":"System.Object.MemberwiseClone()"},{"lang":"vb","value":"System.Object.MemberwiseClone()"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Object.MemberwiseClone\" text=\"MemberwiseClone\" alt=\"System.Object.MemberwiseClone\"/>()"},{"lang":"vb","value":"<xref uid=\"System.Object.MemberwiseClone\" text=\"MemberwiseClone\" alt=\"System.Object.MemberwiseClone\"/>()"}],"level":0.0},{"uid":"System.Object.ReferenceEquals(System.Object,System.Object)","isEii":false,"isExtensionMethod":false,"parent":"System.Object","isExternal":true,"name":[{"lang":"csharp","value":"ReferenceEquals(Object, Object)"},{"lang":"vb","value":"ReferenceEquals(Object, Object)"}],"nameWithType":[{"lang":"csharp","value":"Object.ReferenceEquals(Object, Object)"},{"lang":"vb","value":"Object.ReferenceEquals(Object, Object)"}],"fullName":[{"lang":"csharp","value":"System.Object.ReferenceEquals(System.Object, System.Object)"},{"lang":"vb","value":"System.Object.ReferenceEquals(System.Object, System.Object)"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Object.ReferenceEquals(System.Object,System.Object)\" text=\"ReferenceEquals\" alt=\"System.Object.ReferenceEquals\"/>(<xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>, <xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>)"},{"lang":"vb","value":"<xref uid=\"System.Object.ReferenceEquals(System.Object,System.Object)\" text=\"ReferenceEquals\" alt=\"System.Object.ReferenceEquals\"/>(<xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>, <xref uid=\"System.Object\" text=\"Object\" alt=\"System.Object\"/>)"}],"level":0.0},{"uid":"System.Object.ToString","isEii":false,"isExtensionMethod":false,"parent":"System.Object","isExternal":true,"name":[{"lang":"csharp","value":"ToString()"},{"lang":"vb","value":"ToString()"}],"nameWithType":[{"lang":"csharp","value":"Object.ToString()"},{"lang":"vb","value":"Object.ToString()"}],"fullName":[{"lang":"csharp","value":"System.Object.ToString()"},{"lang":"vb","value":"System.Object.ToString()"}],"specName":[{"lang":"csharp","value":"<xref uid=\"System.Object.ToString\" text=\"ToString\" alt=\"System.Object.ToString\"/>()"},{"lang":"vb","value":"<xref uid=\"System.Object.ToString\" text=\"ToString\" alt=\"System.Object.ToString\"/>()"}],"level":0.0}],"_docfxVersion":"2.43.3.0","_disableBreadcrumb":true,"_enableSearch":true,"_gitContribute":{"branch":"master"},"_appFaviconPath":"assets/favicon.ico","_appTitle":"Event Store","_appFooter":"&copy; 2019 Event Store Limited","_disableNavbar":false,"_disableToc":true,"_systemKeys":["uid","isEii","isExtensionMethod","parent","children","href","langs","name","nameWithType","fullName","type","source","documentation","assemblies","namespace","summary","remarks","example","syntax","overridden","overload","exceptions","seealso","see","inheritance","derivedClasses","level","implements","inheritedMembers","extensionMethods","conceptual","platform","attributes","additionalNotes"],"_lang":"csharp","_tocPath":"toc.html","_navPath":"toc.html","_rel":"../../","_path":"dotnet-api/code/EventStore.Common.Log.LogManager.html","_key":"dotnet-api/code/EventStore.Common.Log.LogManager.yml","_navRel":"../../toc.html","_tocRel":"../../toc.html","_navKey":"~/toc.yml","_tocKey":"~/toc.yml","__global":{"classesInSubtitle":"Classes","structsInSubtitle":"Structs","interfacesInSubtitle":"Interfaces","enumsInSubtitle":"Enums","delegatesInSubtitle":"Delegates","constructorsInSubtitle":"Constructors","fieldsInSubtitle":"Fields","propertiesInSubtitle":"Properties","methodsInSubtitle":"Methods","eventsInSubtitle":"Events","operatorsInSubtitle":"Operators","eiisInSubtitle":"Explicit Interface Implementations","functionsInSubtitle":"Functions","membersInSubtitle":"Members","improveThisDoc":"Improve this Doc","viewSource":"View Source","inheritance":"Inheritance","inheritedMembers":"Inherited Members","namespace":"Namespace","assembly":"Assembly","syntax":"Syntax","overrides":"Overrides","implements":"Implements","remarks":"Remarks","examples":"Examples","seealso":"See Also","declaration":"Declaration","parameters":"Parameters","typeParameters":"Type Parameters","type":"Type","name":"Name","description":"Description","returns":"Returns","fieldValue":"Field Value","propertyValue":"Property Value","eventType":"Event Type","exceptions":"Exceptions","condition":"Condition","extensionMethods":"Extension Methods","note":"<h5>Note</h5>","warning":"<h5>Warning</h5>","tip":"<h5>Tip</h5>","important":"<h5>Important</h5>","caution":"<h5>Caution</h5>","next":"<h5>Next Steps</h5>","_shared":{}},"docurl":"","sourceurl":"","summary":null,"remarks":null,"conceptual":null,"implements":null,"example":null,"seealso":null,"id":"EventStore_Common_Log_LogManager","hideTitleType":false,"hideSubtitle":false,"isClass":true,"inClass":true}