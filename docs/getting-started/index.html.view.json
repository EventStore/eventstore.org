{"conceptual":"\n<p sourcefile=\"~/getting-started/_intro.md\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"1\">This getting started guide shows you how to get started with Event Store using the Atom publishing protocol as the primary interface. </p>\n<div class=\"NOTE\" sourcefile=\"~/getting-started/_intro.md\" sourcestartlinenumber=\"3\" sourceendlinenumber=\"3\"><h5>Note</h5><p sourcefile=\"~/getting-started/_intro.md\" sourcestartlinenumber=\"4\" sourceendlinenumber=\"4\">The described is for development and evaluation of Event Store. It does not describe a production setup. The HTTP examples use cURL, but you can read Atom feeds with a wide variety of applications and languages.</p>\n</div>\n<p sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"9\" sourceendlinenumber=\"9\">This first step covers installation and running Event Store, and writing your first event.</p>\n<h2 id=\"install-and-run-event-store\" sourcefile=\"~/partials/_install-run.md\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"1\">Install and run Event Store</h2>\n<div class=\"NOTE\" sourcefile=\"~/partials/_install-run.md\" sourcestartlinenumber=\"3\" sourceendlinenumber=\"3\"><h5>Note</h5><p sourcefile=\"~/partials/_install-run.md\" sourcestartlinenumber=\"4\" sourceendlinenumber=\"4\">Unless you pass a database option with <code>--db</code>, Event Store writes to a new database created in the host system&#39;s temporary files path each time it is started. For more information on Command Line Arguments read <a href=\"~/server/command-line-arguments.md\" data-raw-source=\"[this guide](~/server/command-line-arguments.md)\" sourcefile=\"~/partials/_install-run.md\" sourcestartlinenumber=\"4\" sourceendlinenumber=\"4\">this guide</a>.</p>\n</div>\n<div class=\"tabGroup\" id=\"tabgroup_Imwg03Et86\" sourcefile=\"~/partials/_install-run.md\" sourcestartlinenumber=\"6\" sourceendlinenumber=\"90\">\n<ul role=\"tablist\">\n<li role=\"presentation\">\n<a href=\"#tabpanel_Imwg03Et86_tabid-1\" role=\"tab\" aria-controls=\"tabpanel_Imwg03Et86_tabid-1\" data-tab=\"tabid-1\" tabindex=\"0\" aria-selected=\"true\" sourcefile=\"~/partials/_install-run.md\" sourcestartlinenumber=\"6\" sourceendlinenumber=\"6\">Windows</a>\n</li>\n<li role=\"presentation\">\n<a href=\"#tabpanel_Imwg03Et86_tabid-2\" role=\"tab\" aria-controls=\"tabpanel_Imwg03Et86_tabid-2\" data-tab=\"tabid-2\" tabindex=\"-1\" sourcefile=\"~/partials/_install-run.md\" sourcestartlinenumber=\"33\" sourceendlinenumber=\"33\">Linux</a>\n</li>\n<li role=\"presentation\">\n<a href=\"#tabpanel_Imwg03Et86_tabid-3\" role=\"tab\" aria-controls=\"tabpanel_Imwg03Et86_tabid-3\" data-tab=\"tabid-3\" tabindex=\"-1\" sourcefile=\"~/partials/_install-run.md\" sourcestartlinenumber=\"58\" sourceendlinenumber=\"58\">Docker</a>\n</li>\n<li role=\"presentation\">\n<a href=\"#tabpanel_Imwg03Et86_tabid-k8\" role=\"tab\" aria-controls=\"tabpanel_Imwg03Et86_tabid-k8\" data-tab=\"tabid-k8\" tabindex=\"-1\" sourcefile=\"~/partials/_install-run.md\" sourcestartlinenumber=\"66\" sourceendlinenumber=\"66\">Kubernetes</a>\n</li>\n<li role=\"presentation\">\n<a href=\"#tabpanel_Imwg03Et86_tabid-macos\" role=\"tab\" aria-controls=\"tabpanel_Imwg03Et86_tabid-macos\" data-tab=\"tabid-macos\" tabindex=\"-1\" sourcefile=\"~/partials/_install-run.md\" sourcestartlinenumber=\"80\" sourceendlinenumber=\"80\">macOS</a>\n</li>\n</ul>\n<section id=\"tabpanel_Imwg03Et86_tabid-1\" role=\"tabpanel\" data-tab=\"tabid-1\">\n<p sourcefile=\"~/partials/_install-run.md\" sourcestartlinenumber=\"8\" sourceendlinenumber=\"8\">The prerequisites for Installing on Windows are:</p>\n<ul sourcefile=\"~/partials/_install-run.md\" sourcestartlinenumber=\"10\" sourceendlinenumber=\"11\">\n<li sourcefile=\"~/partials/_install-run.md\" sourcestartlinenumber=\"10\" sourceendlinenumber=\"10\">NET Framework 4.0+</li>\n<li sourcefile=\"~/partials/_install-run.md\" sourcestartlinenumber=\"11\" sourceendlinenumber=\"11\">Windows platform SDK with compilers (v7.1) or Visual C++ installed (Only required for a full build)</li>\n</ul>\n<p sourcefile=\"~/partials/_install-run.md\" sourcestartlinenumber=\"13\" sourceendlinenumber=\"13\">Event Store has <a href=\"https://chocolatey.org/packages/eventstore-oss\" data-raw-source=\"[Chocolatey packages](https://chocolatey.org/packages/eventstore-oss)\" sourcefile=\"~/partials/_install-run.md\" sourcestartlinenumber=\"13\" sourceendlinenumber=\"13\">Chocolatey packages</a> available that you can install with the following command:</p>\n<pre sourcefile=\"~/partials/_install-run.md\" sourcestartlinenumber=\"15\" sourceendlinenumber=\"17\"><code class=\"lang-powershell\">choco install eventstore-oss\n</code></pre><p sourcefile=\"~/partials/_install-run.md\" sourcestartlinenumber=\"19\" sourceendlinenumber=\"19\">You can also <a href=\"https://eventstore.org/downloads/\" data-raw-source=\"[download](https://eventstore.org/downloads/)\" sourcefile=\"~/partials/_install-run.md\" sourcestartlinenumber=\"19\" sourceendlinenumber=\"19\">download</a> a binary, unzip the archive and run from the folder location with an administrator console:</p>\n<pre sourcefile=\"~/partials/_install-run.md\" sourcestartlinenumber=\"21\" sourceendlinenumber=\"23\"><code class=\"lang-powershell\">EventStore.ClusterNode.exe --db ./db --log ./logs\n</code></pre><p sourcefile=\"~/partials/_install-run.md\" sourcestartlinenumber=\"25\" sourceendlinenumber=\"25\">This command starts Event Store with the database stored at the path <em>./db</em> and the logs in <em>./logs</em>. You can view further command line arguments in the <a href=\"~/server/index.md\" data-raw-source=\"[server docs](~/server/index.md)\" sourcefile=\"~/partials/_install-run.md\" sourcestartlinenumber=\"25\" sourceendlinenumber=\"25\">server docs</a>.</p>\n<p sourcefile=\"~/partials/_install-run.md\" sourcestartlinenumber=\"27\" sourceendlinenumber=\"27\">Event Store runs in an administration context because it starts an HTTP server through <code>http.sys</code>. For permanent or production instances you need to provide an ACL such as:</p>\n<pre sourcefile=\"~/partials/_install-run.md\" sourcestartlinenumber=\"29\" sourceendlinenumber=\"31\"><code class=\"lang-powershell\">netsh http add urlacl url=http://+:2113/ user=DOMAIN\\username\n</code></pre></section>\n<section id=\"tabpanel_Imwg03Et86_tabid-2\" role=\"tabpanel\" data-tab=\"tabid-2\" aria-hidden=\"true\" hidden=\"hidden\">\n<p sourcefile=\"~/partials/_install-run.md\" sourcestartlinenumber=\"35\" sourceendlinenumber=\"35\">The prerequisites for Installing on Linux are:</p>\n<ul sourcefile=\"~/partials/_install-run.md\" sourcestartlinenumber=\"37\" sourceendlinenumber=\"37\">\n<li sourcefile=\"~/partials/_install-run.md\" sourcestartlinenumber=\"37\" sourceendlinenumber=\"37\">We recommend <a href=\"https://www.mono-project.com/download/stable/\" data-raw-source=\"[Mono 5.16.0](https://www.mono-project.com/download/stable/)\" sourcefile=\"~/partials/_install-run.md\" sourcestartlinenumber=\"37\" sourceendlinenumber=\"37\">Mono 5.16.0</a>, but other versions may also work.</li>\n</ul>\n<p sourcefile=\"~/partials/_install-run.md\" sourcestartlinenumber=\"39\" sourceendlinenumber=\"39\">Event Store has pre-built <a href=\"https://packagecloud.io/EventStore/EventStore-OSS\" data-raw-source=\"[packages available for Debian-based distributions](https://packagecloud.io/EventStore/EventStore-OSS)\" sourcefile=\"~/partials/_install-run.md\" sourcestartlinenumber=\"39\" sourceendlinenumber=\"39\">packages available for Debian-based distributions</a>, <a href=\"https://packagecloud.io/EventStore/EventStore-OSS/install#bash-rpm\" data-raw-source=\"[manual instructions for distributions that use RPM](https://packagecloud.io/EventStore/EventStore-OSS/install#bash-rpm)\" sourcefile=\"~/partials/_install-run.md\" sourcestartlinenumber=\"39\" sourceendlinenumber=\"39\">manual instructions for distributions that use RPM</a>, or you can <a href=\"https://github.com/EventStore/EventStore#linux\" data-raw-source=\"[build from source](https://github.com/EventStore/EventStore#linux)\" sourcefile=\"~/partials/_install-run.md\" sourcestartlinenumber=\"39\" sourceendlinenumber=\"39\">build from source</a>. The final package name to install is <code>eventstore-oss</code>.</p>\n<p sourcefile=\"~/partials/_install-run.md\" sourcestartlinenumber=\"41\" sourceendlinenumber=\"41\">If you installed from a pre-built package, start Event Store with:</p>\n<pre sourcefile=\"~/partials/_install-run.md\" sourcestartlinenumber=\"43\" sourceendlinenumber=\"45\"><code class=\"lang-bash\">sudo systemctl start eventstore\n</code></pre><p sourcefile=\"~/partials/_install-run.md\" sourcestartlinenumber=\"47\" sourceendlinenumber=\"47\">When you install the Event Store package, the service doesn&#39;t start by default. This is to allow you to change the configuration, located at <em>/etc/eventstore/eventstore.conf</em> and to prevent creating a default database.</p>\n<p sourcefile=\"~/partials/_install-run.md\" sourcestartlinenumber=\"49\" sourceendlinenumber=\"49\">In all other cases you can run the Event Store binary or use our <em>run-node.sh</em> shell script which exports the environment variable <code>LD_LIBRARY_PATH</code> to include the installation path of Event Store, which is necessary if you are planning to use projections.</p>\n<pre sourcefile=\"~/partials/_install-run.md\" sourcestartlinenumber=\"51\" sourceendlinenumber=\"53\"><code class=\"lang-bash\">./run-node.sh --db ./ESData\n</code></pre><div class=\"NOTE\" sourcefile=\"~/partials/_install-run.md\" sourcestartlinenumber=\"55\" sourceendlinenumber=\"55\"><h5>Note</h5><p sourcefile=\"~/partials/_install-run.md\" sourcestartlinenumber=\"56\" sourceendlinenumber=\"56\">We recommend that when using Linux you set the &#39;open file limit&#39; to a high number. The precise value depends on your use case, but at least between <code>30,000</code> and <code>60,000</code>.</p>\n</div>\n</section>\n<section id=\"tabpanel_Imwg03Et86_tabid-3\" role=\"tabpanel\" data-tab=\"tabid-3\" aria-hidden=\"true\" hidden=\"hidden\">\n<p sourcefile=\"~/partials/_install-run.md\" sourcestartlinenumber=\"60\" sourceendlinenumber=\"60\">Event Store has <a href=\"https://hub.docker.com/r/eventstore/eventstore/\" data-raw-source=\"[a Docker image](https://hub.docker.com/r/eventstore/eventstore/)\" sourcefile=\"~/partials/_install-run.md\" sourcestartlinenumber=\"60\" sourceendlinenumber=\"60\">a Docker image</a> available for any platform that supports Docker:</p>\n<pre sourcefile=\"~/partials/_install-run.md\" sourcestartlinenumber=\"62\" sourceendlinenumber=\"64\"><code class=\"lang-bash\">docker run --name eventstore-node -it -p 2113:2113 -p 1113:1113 eventstore/eventstore\n</code></pre></section>\n<section id=\"tabpanel_Imwg03Et86_tabid-k8\" role=\"tabpanel\" data-tab=\"tabid-k8\" aria-hidden=\"true\" hidden=\"hidden\">\n<p sourcefile=\"~/partials/_install-run.md\" sourcestartlinenumber=\"68\" sourceendlinenumber=\"68\">Event Store has <a href=\"https://github.com/EventStore/EventStore.Charts\" data-raw-source=\"[a Helm chart](https://github.com/EventStore/EventStore.Charts)\" sourcefile=\"~/partials/_install-run.md\" sourcestartlinenumber=\"68\" sourceendlinenumber=\"68\">a Helm chart</a> available for installing Event Store on Kubernetes clusters:</p>\n<pre sourcefile=\"~/partials/_install-run.md\" sourcestartlinenumber=\"70\" sourceendlinenumber=\"74\"><code class=\"lang-bash\">helm repo add eventstore https://eventstore.github.io/EventStore.Charts\nhelm repo update\nhelm install -n eventstore eventstore/eventstore\n</code></pre><div class=\"NOTE\" sourcefile=\"~/partials/_install-run.md\" sourcestartlinenumber=\"76\" sourceendlinenumber=\"76\"><h5>Note</h5><p sourcefile=\"~/partials/_install-run.md\" sourcestartlinenumber=\"77\" sourceendlinenumber=\"78\">Read <a href=\"https://github.com/EventStore/EventStore.Charts/blob/master/stable/eventstore/README.md\" data-raw-source=\"[this guide](https://github.com/EventStore/EventStore.Charts/blob/master/stable/eventstore/README.md)\" sourcefile=\"~/partials/_install-run.md\" sourcestartlinenumber=\"77\" sourceendlinenumber=\"77\">this guide</a> for more details on how to use the helm chart.\nRead <a href=\"~/server/deploy-kubernetes-aks.md\" data-raw-source=\"[this guide](~/server/deploy-kubernetes-aks.md)\" sourcefile=\"~/partials/_install-run.md\" sourcestartlinenumber=\"78\" sourceendlinenumber=\"78\">this guide</a> for more details on using Kubernetes with AKS and this guide for more details on using Kubernetes with GKE.</p>\n</div>\n</section>\n<section id=\"tabpanel_Imwg03Et86_tabid-macos\" role=\"tabpanel\" data-tab=\"tabid-macos\" aria-hidden=\"true\" hidden=\"hidden\">\n<p sourcefile=\"~/partials/_install-run.md\" sourcestartlinenumber=\"82\" sourceendlinenumber=\"82\">Event Store has a macOS package <a href=\"https://eventstore.org/downloads/\" data-raw-source=\"[you can download](https://eventstore.org/downloads/)\" sourcefile=\"~/partials/_install-run.md\" sourcestartlinenumber=\"82\" sourceendlinenumber=\"82\">you can download</a> and install, and we maintain a Homebrew Cask formula you can install:</p>\n<pre sourcefile=\"~/partials/_install-run.md\" sourcestartlinenumber=\"84\" sourceendlinenumber=\"86\"><code class=\"lang-shell\">brew cask install eventstore\n</code></pre><p sourcefile=\"~/partials/_install-run.md\" sourcestartlinenumber=\"88\" sourceendlinenumber=\"88\">In each case you can run Event Store with the <code>eventstore</code> command, and stop it with <code>Ctrl+c</code>. To use the default database location you need to use <code>sudo</code>, or you can change the location with the <code>--db</code> parameter.</p>\n</section>\n</div>\n<h2 id=\"interacting-with-an-event-store-server\" sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"13\" sourceendlinenumber=\"13\">Interacting with an Event Store Server</h2>\n<p sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"15\" sourceendlinenumber=\"15\">There are three ways to interact with Event Store:</p>\n<ol sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"17\" sourceendlinenumber=\"19\">\n<li sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"17\" sourceendlinenumber=\"17\"><a href=\"~/server/admin-ui.md\" data-raw-source=\"[With the Admin UI](~/server/admin-ui.md)\" sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"17\" sourceendlinenumber=\"17\">With the Admin UI</a>.</li>\n<li sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"18\" sourceendlinenumber=\"18\"><a href=\"~/http-api/index.md\" data-raw-source=\"[With the HTTP API](~/http-api/index.md)\" sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"18\" sourceendlinenumber=\"18\">With the HTTP API</a>.</li>\n<li sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"19\" sourceendlinenumber=\"19\">With a Client API, which you need to install first. Our documentation covers the <a href=\"~/dotnet-api/index.md\" data-raw-source=\"[.NET Core client API](~/dotnet-api/index.md)\" sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"19\" sourceendlinenumber=\"19\">.NET Core client API</a> and the <a href=\"https://github.com/EventStore/EventStore.JVM\" data-raw-source=\"[JVM client](https://github.com/EventStore/EventStore.JVM)\" sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"19\" sourceendlinenumber=\"19\">JVM client</a> but <a href=\"~/getting-started/which-api-sdk.md\" data-raw-source=\"[others](~/getting-started/which-api-sdk.md)\" sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"19\" sourceendlinenumber=\"19\">others</a> are available.</li>\n</ol>\n<div class=\"tabGroup\" id=\"tabgroup_dfgfloIX5I\" sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"21\" sourceendlinenumber=\"53\">\n<ul role=\"tablist\">\n<li role=\"presentation\">\n<a href=\"#tabpanel_dfgfloIX5I_tabid-dotnet-client\" role=\"tab\" aria-controls=\"tabpanel_dfgfloIX5I_tabid-dotnet-client\" data-tab=\"tabid-dotnet-client\" tabindex=\"0\" aria-selected=\"true\" sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"21\" sourceendlinenumber=\"21\">.NET Client</a>\n</li>\n<li role=\"presentation\">\n<a href=\"#tabpanel_dfgfloIX5I_tabid-jvm-client\" role=\"tab\" aria-controls=\"tabpanel_dfgfloIX5I_tabid-jvm-client\" data-tab=\"tabid-jvm-client\" tabindex=\"-1\" sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"35\" sourceendlinenumber=\"35\">JVM Client</a>\n</li>\n</ul>\n<section id=\"tabpanel_dfgfloIX5I_tabid-dotnet-client\" role=\"tabpanel\" data-tab=\"tabid-dotnet-client\">\n<p sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"23\" sourceendlinenumber=\"23\"><a href=\"https://www.nuget.org/packages/EventStore.ClientAPI.NetCore/\" data-raw-source=\"[Install the .NET Core client API](https://www.nuget.org/packages/EventStore.ClientAPI.NetCore/)\" sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"23\" sourceendlinenumber=\"23\">Install the .NET Core client API</a> using your preferred method, add it to your project:</p>\n<pre sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"25\" sourceendlinenumber=\"27\"><code class=\"lang-shell\">dotnet add package EventStore.Client\n</code></pre><p sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"29\" sourceendlinenumber=\"29\">And require it in your code:</p>\n<pre sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"31\" sourceendlinenumber=\"33\"><code class=\"lang-csharp\">using EventStore.ClientAPI;\n</code></pre></section>\n<section id=\"tabpanel_dfgfloIX5I_tabid-jvm-client\" role=\"tabpanel\" data-tab=\"tabid-jvm-client\" aria-hidden=\"true\" hidden=\"hidden\">\n<p sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"37\" sourceendlinenumber=\"37\"><a href=\"https://github.com/EventStore/EventStore.JVM#setup\" data-raw-source=\"[Add the JVM client](https://github.com/EventStore/EventStore.JVM#setup)\" sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"37\" sourceendlinenumber=\"37\">Add the JVM client</a> using Maven:</p>\n<pre sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"39\" sourceendlinenumber=\"45\"><code class=\"lang-xml\">&lt;dependency&gt;\n    &lt;groupId&gt;com.geteventstore&lt;/groupId&gt;\n    &lt;artifactId&gt;eventstore-client_2.12&lt;/artifactId&gt;\n    &lt;version&gt;5.0.8&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre><p sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"47\" sourceendlinenumber=\"47\">And require it in your code:</p>\n<pre sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"49\" sourceendlinenumber=\"51\"><code class=\"lang-java\">import eventstore.*;\n</code></pre></section>\n</div>\n<h2 id=\"connecting-to-event-store\" sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"55\" sourceendlinenumber=\"55\">Connecting to Event Store</h2>\n<p sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"57\" sourceendlinenumber=\"57\">If you want to use the Admin UI or the HTTP API, then you use port <code>2113</code>. For example, <a href=\"http://127.0.0.1:2113/\" data-raw-source=\"&lt;http://127.0.0.1:2113/&gt;\" sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"57\" sourceendlinenumber=\"57\">http://127.0.0.1:2113/</a> in your web browser, or <code>curl -i http://127.0.0.1:2113</code> for the HTTP API.</p>\n<div class=\"TIP\" sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"59\" sourceendlinenumber=\"59\"><h5>Tip</h5><p sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"60\" sourceendlinenumber=\"60\">The default username and password is <code>admin:changeit</code></p>\n</div>\n<p sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"62\" sourceendlinenumber=\"62\"><img src=\"~/images/es-web-admin-dashboard.png\" alt=\"The Admin UI Dashboard\" sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"62\" sourceendlinenumber=\"62\"></p>\n<p sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"64\" sourceendlinenumber=\"64\">To use a client API, you use port <code>1113</code> and create a connection:</p>\n<div class=\"tabGroup\" id=\"tabgroup_dfgfloIX5I-1\" sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"66\" sourceendlinenumber=\"82\">\n<ul role=\"tablist\">\n<li role=\"presentation\">\n<a href=\"#tabpanel_dfgfloIX5I-1_tabid-dotnet-client-connect\" role=\"tab\" aria-controls=\"tabpanel_dfgfloIX5I-1_tabid-dotnet-client-connect\" data-tab=\"tabid-dotnet-client-connect\" tabindex=\"0\" aria-selected=\"true\" sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"66\" sourceendlinenumber=\"66\">.NET Client</a>\n</li>\n<li role=\"presentation\">\n<a href=\"#tabpanel_dfgfloIX5I-1_tabid-jvm-client-connect\" role=\"tab\" aria-controls=\"tabpanel_dfgfloIX5I-1_tabid-jvm-client-connect\" data-tab=\"tabid-jvm-client-connect\" tabindex=\"-1\" sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"75\" sourceendlinenumber=\"75\">JVM Client</a>\n</li>\n</ul>\n<section id=\"tabpanel_dfgfloIX5I-1_tabid-dotnet-client-connect\" role=\"tabpanel\" data-tab=\"tabid-dotnet-client-connect\">\n<p sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"68\" sourceendlinenumber=\"68\">When using the .NET client, you also need to give the connection a name.</p>\n<pre sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"70\" sourceendlinenumber=\"70\"><code class=\"lang-csharp\" name=\"getting-started-connection\">var conn = EventStoreConnection.Create(new Uri(&quot;tcp://admin:changeit@localhost:1113&quot;),\n    &quot;InputFromFileConsoleApp&quot;);\n</code></pre><div class=\"NEXT\" sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"72\" sourceendlinenumber=\"72\"><h5>Next Steps</h5><p sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"73\" sourceendlinenumber=\"73\">In this example we used the <a href=\"#EventStore.ClientAPI.EventStoreConnection.Create(System.String,System.String)\" data-raw-source=\"[`EventStoreConnection.Create()`](&lt;#EventStore.ClientAPI.EventStoreConnection.Create(System.String,System.String)&gt;)\" sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"73\" sourceendlinenumber=\"73\"><code>EventStoreConnection.Create()</code></a> overloaded method but <a href=\"#EventStore.ClientAPI.EventStoreConnection\" data-raw-source=\"[others are available](#EventStore.ClientAPI.EventStoreConnection)\" sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"73\" sourceendlinenumber=\"73\">others are available</a>.</p>\n</div>\n</section>\n<section id=\"tabpanel_dfgfloIX5I-1_tabid-jvm-client-connect\" role=\"tabpanel\" data-tab=\"tabid-jvm-client-connect\" aria-hidden=\"true\" hidden=\"hidden\">\n<pre sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"77\" sourceendlinenumber=\"77\"><code class=\"lang-java\" name=\"getting-started-connection\">final ActorSystem system = ActorSystem.create();\nfinal Settings settings = new SettingsBuilder()\n        .address(new InetSocketAddress(&quot;127.0.0.1&quot;, 1113))\n        .defaultCredentials(&quot;admin&quot;, &quot;changeit&quot;)\n        .build();\nfinal ActorRef connection = system.actorOf(ConnectionActor.getProps(settings));\n</code></pre><div class=\"NOTE\" sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"79\" sourceendlinenumber=\"79\"><h5>Note</h5><p sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"80\" sourceendlinenumber=\"80\">For our JVM examples we use <a href=\"https://akka.io\" data-raw-source=\"[akka](https://akka.io)\" sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"80\" sourceendlinenumber=\"80\">akka</a>, a toolkit for building highly concurrent and distributed JVM applications.</p>\n</div>\n</section>\n</div>\n<h2 id=\"writing-events-to-an-event-stream\" sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"84\" sourceendlinenumber=\"84\">Writing Events to an Event Stream</h2>\n<p sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"86\" sourceendlinenumber=\"86\">Event Store operates on a concept of Event Streams, and the first operation we look at is how to write to a stream. If you are Event Sourcing a domain model, a stream equates to an aggregate function. Event Store can handle hundreds of millions of streams, so create as many as you need.</p>\n<p sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"88\" sourceendlinenumber=\"88\">If you post to a stream that doesn&#39;t exist, Event Store creates it before adding the events.</p>\n<p sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"90\" sourceendlinenumber=\"90\">You can write events using the Admin UI by clicking the <em>Stream Browser</em> tab, the <em>Add Event</em> button, filling in the form with relevant values and clicking the <em>Add</em> button at the bottom of the page.</p>\n<p sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"92\" sourceendlinenumber=\"92\"><img src=\"~/images/getting-started-add-event.gif\" alt=\"Creating an event with the Admin UI interface\" sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"92\" sourceendlinenumber=\"92\"></p>\n<p sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"94\" sourceendlinenumber=\"94\">Open a text editor, copy and paste the following event definition, and save it as <em>event.json</em>.</p>\n<pre sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"96\" sourceendlinenumber=\"96\"><code class=\"lang-json\" name=\"getting-started-write-event-json\" title=\"The contents of event.json\">[\n  {\n    &quot;eventId&quot;: &quot;fbf4a1a1-b4a3-4dfe-a01f-ec52c34e16e4&quot;,\n    &quot;eventType&quot;: &quot;event-type&quot;,\n    &quot;data&quot;: {\n      &quot;a&quot;: &quot;1&quot;\n    }\n  }\n]\n</code></pre><div class=\"tabGroup\" id=\"tabgroup_dfgfloIX5I-2\" sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"98\" sourceendlinenumber=\"125\">\n<ul role=\"tablist\">\n<li role=\"presentation\">\n<a href=\"#tabpanel_dfgfloIX5I-2_tabid-4\" role=\"tab\" aria-controls=\"tabpanel_dfgfloIX5I-2_tabid-4\" data-tab=\"tabid-4\" tabindex=\"0\" aria-selected=\"true\" sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"98\" sourceendlinenumber=\"98\">HTTP API</a>\n</li>\n<li role=\"presentation\">\n<a href=\"#tabpanel_dfgfloIX5I-2_tabid-5\" role=\"tab\" aria-controls=\"tabpanel_dfgfloIX5I-2_tabid-5\" data-tab=\"tabid-5\" tabindex=\"-1\" sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"110\" sourceendlinenumber=\"110\">.NET API</a>\n</li>\n<li role=\"presentation\">\n<a href=\"#tabpanel_dfgfloIX5I-2_tabid-6\" role=\"tab\" aria-controls=\"tabpanel_dfgfloIX5I-2_tabid-6\" data-tab=\"tabid-6\" tabindex=\"-1\" sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"119\" sourceendlinenumber=\"119\">JVM Client</a>\n</li>\n</ul>\n<section id=\"tabpanel_dfgfloIX5I-2_tabid-4\" role=\"tabpanel\" data-tab=\"tabid-4\">\n<p sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"100\" sourceendlinenumber=\"100\">Use the following cURL command, passing the name of the stream and the events to write:</p>\n<pre sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"102\" sourceendlinenumber=\"102\"><code class=\"lang-bash\" name=\"getting-started-write-event-request\">curl -i -d &quot;@event.json&quot; &quot;http://127.0.0.1:2113/streams/newstream&quot; -H &quot;Content-Type:application/vnd.eventstore.events+json&quot;\n</code></pre><div class=\"NEXT\" sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"104\" sourceendlinenumber=\"104\"><h5>Next Steps</h5><p sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"105\" sourceendlinenumber=\"105\">Read <a href=\"~/http-api/creating-writing-a-stream.md\" data-raw-source=\"[this guide](~/http-api/creating-writing-a-stream.md)\" sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"105\" sourceendlinenumber=\"105\">this guide</a> for more information on how to write events with the HTTP API.</p>\n</div>\n<div class=\"NOTE\" sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"107\" sourceendlinenumber=\"107\"><h5>Note</h5><p sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"108\" sourceendlinenumber=\"108\">You can also post events to the HTTP API as XML, by changing the <code>Content-Type</code> header to <code>XML</code>.</p>\n</div>\n</section>\n<section id=\"tabpanel_dfgfloIX5I-2_tabid-5\" role=\"tabpanel\" data-tab=\"tabid-5\" aria-hidden=\"true\" hidden=\"hidden\">\n<p sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"112\" sourceendlinenumber=\"112\">To use the .NET API, use the following method, passing the name of the stream, the version, and the events to write:</p>\n<pre sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"114\" sourceendlinenumber=\"114\"><code class=\"lang-csharp\" name=\"getting-started-write-event-request\">conn.AppendToStreamAsync(streamName, ExpectedVersion.Any, eventData).Wait();\n</code></pre><div class=\"NEXT\" sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"116\" sourceendlinenumber=\"116\"><h5>Next Steps</h5><p sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"117\" sourceendlinenumber=\"117\">Read <a href=\"~/http-api/creating-writing-a-stream.md\" data-raw-source=\"[this guide](~/http-api/creating-writing-a-stream.md)\" sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"117\" sourceendlinenumber=\"117\">this guide</a> for more information on how to write events with the .NET API. We don&#39;t cover version checking in this guide, but you can read more in <a href=\"~/dotnet-api/optimistic-concurrency-and-idempotence.md\" data-raw-source=\"[the optimistic concurrency guide](~/dotnet-api/optimistic-concurrency-and-idempotence.md)\" sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"117\" sourceendlinenumber=\"117\">the optimistic concurrency guide</a>.</p>\n</div>\n</section>\n<section id=\"tabpanel_dfgfloIX5I-2_tabid-6\" role=\"tabpanel\" data-tab=\"tabid-6\" aria-hidden=\"true\" hidden=\"hidden\">\n<p sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"121\" sourceendlinenumber=\"121\">To use the JVM Client, use the following method, passing the name of the stream, the version, and the events to write:</p>\n<pre sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"123\" sourceendlinenumber=\"123\"><code class=\"lang-java\" name=\"getting-started-connection\">    final ActorRef writeResult = system.actorOf(Props.create(WriteResult.class));\n\n    final EventData event = new EventDataBuilder(&quot;event-type&quot;)\n            .eventId(UUID.randomUUID())\n            .jsonData(&quot;{\\&quot;a\\&quot;: \\&quot;1\\&quot;}&quot;)\n            .build();\n\n    final WriteEvents writeEvents = new WriteEventsBuilder(&quot;newstream&quot;)\n            .addEvent(event)\n            .expectAnyVersion()\n            .build();\n\n    connection.tell(writeEvents, writeResult);\n}\n</code></pre></section>\n</div>\n<h2 id=\"next-step\" sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"127\" sourceendlinenumber=\"127\">Next Step</h2>\n<p sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"129\" sourceendlinenumber=\"129\">In this first part of our getting started guide you learned how to install and run Event Store and write your first event. The next part covers reading events from a stream.</p>\n<ul sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"131\" sourceendlinenumber=\"131\">\n<li sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"131\" sourceendlinenumber=\"131\"><a href=\"~/getting-started/reading-subscribing-events.md\" data-raw-source=\"[Step 2 - Read events from a stream and subscribe to changes](~/getting-started/reading-subscribing-events.md)\" sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"131\" sourceendlinenumber=\"131\">Step 2 - Read events from a stream and subscribe to changes</a></li>\n</ul>\n","type":"Conceptual","source":{"remote":{"path":"getting-started/index.md","branch":"feature/stats-REST","repo":"git@github.com:EventStore/docs.geteventstore.com.git"},"startLine":0.0,"endLine":0.0,"isExternal":false},"path":"getting-started/index.md","documentation":{"remote":{"path":"getting-started/index.md","branch":"feature/stats-REST","repo":"git@github.com:EventStore/docs.geteventstore.com.git"},"startLine":0.0,"endLine":0.0,"isExternal":false},"_docfxVersion":"2.43.3.0","_disableBreadcrumb":true,"_enableSearch":true,"_gitContribute":{"branch":"master"},"_appFaviconPath":"assets/favicon.ico","_appTitle":"Event Store","_appFooter":"&copy; 2019 Event Store Limited","_disableNavbar":false,"_disableToc":true,"_systemKeys":["conceptual","type","source","path","documentation","title","rawTitle","wordCount"],"title":"Step 1 - Install, run, and write your first event","rawTitle":"<h1 id=\"step-1---install-run-and-write-your-first-event\" sourcefile=\"getting-started/index.md\" sourcestartlinenumber=\"5\" sourceendlinenumber=\"5\">Step 1 - Install, run, and write your first event</h1>","outputFileName":"index.html","wordCount":1166.0,"_lang":"csharp","_tocPath":"toc.html","_navPath":"toc.html","_rel":"../","_path":"getting-started/index.html","_key":"getting-started/index.md","_navRel":"../toc.html","_tocRel":"../toc.html","_navKey":"~/toc.yml","_tocKey":"~/toc.yml","__global":{"classesInSubtitle":"Classes","structsInSubtitle":"Structs","interfacesInSubtitle":"Interfaces","enumsInSubtitle":"Enums","delegatesInSubtitle":"Delegates","constructorsInSubtitle":"Constructors","fieldsInSubtitle":"Fields","propertiesInSubtitle":"Properties","methodsInSubtitle":"Methods","eventsInSubtitle":"Events","operatorsInSubtitle":"Operators","eiisInSubtitle":"Explicit Interface Implementations","functionsInSubtitle":"Functions","membersInSubtitle":"Members","improveThisDoc":"Improve this Doc","viewSource":"View Source","inheritance":"Inheritance","inheritedMembers":"Inherited Members","namespace":"Namespace","assembly":"Assembly","syntax":"Syntax","overrides":"Overrides","implements":"Implements","remarks":"Remarks","examples":"Examples","seealso":"See Also","declaration":"Declaration","parameters":"Parameters","typeParameters":"Type Parameters","type":"Type","name":"Name","description":"Description","returns":"Returns","fieldValue":"Field Value","propertyValue":"Property Value","eventType":"Event Type","exceptions":"Exceptions","condition":"Condition","extensionMethods":"Extension Methods","note":"<h5>Note</h5>","warning":"<h5>Warning</h5>","tip":"<h5>Tip</h5>","important":"<h5>Important</h5>","caution":"<h5>Caution</h5>","next":"<h5>Next Steps</h5>","_shared":{}},"docurl":"https://github.com/EventStore/docs.geteventstore.com/blob/master/getting-started/index.md/#L1"}