{
  "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Responses.ResultReport.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Responses.ResultReport.html",
    "title": "Class ResultReport | Event Store",
    "keywords": "Class ResultReport Inheritance System.Object ResultReport Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages.Persisted.Responses Assembly : EventStore.Projections.Core.dll Syntax public class ResultReport Properties CorrelationId Declaration public string CorrelationId { get; set; } Property Value Type System.String Id Declaration public string Id { get; set; } Property Value Type System.String Partition Declaration public string Partition { get; set; } Property Value Type System.String Position Declaration [JsonConverter(typeof(CheckpointTagJsonConverter))] public CheckpointTag Position { get; set; } Property Value Type CheckpointTag Result Declaration public string Result { get; set; } Property Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.html",
    "title": "Class EventReaderSubscriptionMessage | Event Store",
    "keywords": "Class EventReaderSubscriptionMessage Inheritance System.Object EventReaderSubscriptionMessage Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public static class EventReaderSubscriptionMessage"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.SubscriptionStarted.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.SubscriptionStarted.html",
    "title": "Class EventReaderSubscriptionMessage.SubscriptionStarted | Event Store",
    "keywords": "Class EventReaderSubscriptionMessage.SubscriptionStarted Inheritance System.Object Message EventReaderSubscriptionMessageBase EventReaderSubscriptionMessage.SubscriptionStarted Inherited Members EventReaderSubscriptionMessageBase.CheckpointTag EventReaderSubscriptionMessageBase.Progress EventReaderSubscriptionMessageBase.SubscriptionMessageSequenceNumber EventReaderSubscriptionMessageBase.SubscriptionId EventReaderSubscriptionMessageBase.Source Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class SubscriptionStarted : EventReaderSubscriptionMessageBase Constructors SubscriptionStarted(Guid, CheckpointTag, Int64, Int64, Object) Declaration public SubscriptionStarted(Guid subscriptionId, CheckpointTag checkpointTag, long startingLastCommitPosition, long subscriptionMessageSequenceNumber, object source = null) Parameters Type Name System.Guid subscriptionId CheckpointTag checkpointTag System.Int64 startingLastCommitPosition System.Int64 subscriptionMessageSequenceNumber System.Object source Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides EventReaderSubscriptionMessageBase.MsgTypeId StartingLastCommitPosition Declaration public long StartingLastCommitPosition { get; } Property Value Type System.Int64 Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ReaderAssignedReader.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ReaderAssignedReader.html",
    "title": "Class EventReaderSubscriptionMessage.ReaderAssignedReader | Event Store",
    "keywords": "Class EventReaderSubscriptionMessage.ReaderAssignedReader Inheritance System.Object Message EventReaderSubscriptionMessageBase EventReaderSubscriptionMessage.ReaderAssignedReader Inherited Members EventReaderSubscriptionMessageBase.CheckpointTag EventReaderSubscriptionMessageBase.Progress EventReaderSubscriptionMessageBase.SubscriptionMessageSequenceNumber EventReaderSubscriptionMessageBase.SubscriptionId EventReaderSubscriptionMessageBase.Source Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class ReaderAssignedReader : EventReaderSubscriptionMessageBase Constructors ReaderAssignedReader(Guid, Guid) Declaration public ReaderAssignedReader(Guid subscriptionId, Guid readerId) Parameters Type Name System.Guid subscriptionId System.Guid readerId Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides EventReaderSubscriptionMessageBase.MsgTypeId ReaderId Declaration public Guid ReaderId { get; } Property Value Type System.Guid Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ProgressChanged.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.ProgressChanged.html",
    "title": "Class EventReaderSubscriptionMessage.ProgressChanged | Event Store",
    "keywords": "Class EventReaderSubscriptionMessage.ProgressChanged Inheritance System.Object Message EventReaderSubscriptionMessageBase EventReaderSubscriptionMessage.ProgressChanged Inherited Members EventReaderSubscriptionMessageBase.CheckpointTag EventReaderSubscriptionMessageBase.Progress EventReaderSubscriptionMessageBase.SubscriptionMessageSequenceNumber EventReaderSubscriptionMessageBase.SubscriptionId EventReaderSubscriptionMessageBase.Source Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class ProgressChanged : EventReaderSubscriptionMessageBase Constructors ProgressChanged(Guid, CheckpointTag, Single, Int64, Object) Declaration public ProgressChanged(Guid subscriptionId, CheckpointTag checkpointTag, float progress, long subscriptionMessageSequenceNumber, object source = null) Parameters Type Name System.Guid subscriptionId CheckpointTag checkpointTag System.Single progress System.Int64 subscriptionMessageSequenceNumber System.Object source Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides EventReaderSubscriptionMessageBase.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.UserManagement.UserManagementService.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.UserManagement.UserManagementService.html",
    "title": "Class UserManagementService | Event Store",
    "keywords": "Class UserManagementService Inheritance System.Object UserManagementService Implements IHandle < UserManagementMessage.Get > IHandle < UserManagementMessage.GetAll > IHandle < UserManagementMessage.Create > IHandle < UserManagementMessage.Update > IHandle < UserManagementMessage.Enable > IHandle < UserManagementMessage.Disable > IHandle < UserManagementMessage.ResetPassword > IHandle < UserManagementMessage.ChangePassword > IHandle < UserManagementMessage.Delete > IHandle < SystemMessage.BecomeMaster > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.UserManagement Assembly : EventStore.Core.dll Syntax public class UserManagementService : IHandle<UserManagementMessage.Get>, IHandle<UserManagementMessage.GetAll>, IHandle<UserManagementMessage.Create>, IHandle<UserManagementMessage.Update>, IHandle<UserManagementMessage.Enable>, IHandle<UserManagementMessage.Disable>, IHandle<UserManagementMessage.ResetPassword>, IHandle<UserManagementMessage.ChangePassword>, IHandle<UserManagementMessage.Delete>, IHandle<SystemMessage.BecomeMaster> Constructors UserManagementService(IPublisher, IODispatcher, PasswordHashAlgorithm, Boolean) Declaration public UserManagementService(IPublisher publisher, IODispatcher ioDispatcher, PasswordHashAlgorithm passwordHashAlgorithm, bool skipInitializeStandardUsersCheck) Parameters Type Name IPublisher publisher IODispatcher ioDispatcher PasswordHashAlgorithm passwordHashAlgorithm System.Boolean skipInitializeStandardUsersCheck Fields PasswordChanged Declaration public const string PasswordChanged = \"$PasswordChanged\" Field Value Type System.String UserPasswordNotificationsStreamId Declaration public const string UserPasswordNotificationsStreamId = \"$users-password-notifications\" Field Value Type System.String UsersStream Declaration public const string UsersStream = \"$Users\" Field Value Type System.String UsersStreamType Declaration public const string UsersStreamType = \"$User\" Field Value Type System.String UserUpdated Declaration public const string UserUpdated = \"$UserUpdated\" Field Value Type System.String Methods Handle(SystemMessage.BecomeMaster) Declaration public void Handle(SystemMessage.BecomeMaster message) Parameters Type Name SystemMessage.BecomeMaster message Handle(UserManagementMessage.ChangePassword) Declaration public void Handle(UserManagementMessage.ChangePassword message) Parameters Type Name UserManagementMessage.ChangePassword message Handle(UserManagementMessage.Create) Declaration public void Handle(UserManagementMessage.Create message) Parameters Type Name UserManagementMessage.Create message Handle(UserManagementMessage.Delete) Declaration public void Handle(UserManagementMessage.Delete message) Parameters Type Name UserManagementMessage.Delete message Handle(UserManagementMessage.Disable) Declaration public void Handle(UserManagementMessage.Disable message) Parameters Type Name UserManagementMessage.Disable message Handle(UserManagementMessage.Enable) Declaration public void Handle(UserManagementMessage.Enable message) Parameters Type Name UserManagementMessage.Enable message Handle(UserManagementMessage.Get) Declaration public void Handle(UserManagementMessage.Get message) Parameters Type Name UserManagementMessage.Get message Handle(UserManagementMessage.GetAll) Declaration public void Handle(UserManagementMessage.GetAll message) Parameters Type Name UserManagementMessage.GetAll message Handle(UserManagementMessage.ResetPassword) Declaration public void Handle(UserManagementMessage.ResetPassword message) Parameters Type Name UserManagementMessage.ResetPassword message Handle(UserManagementMessage.Update) Declaration public void Handle(UserManagementMessage.Update message) Parameters Type Name UserManagementMessage.Update message Implements IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.UserManagement.SystemAccount.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.UserManagement.SystemAccount.html",
    "title": "Class SystemAccount | Event Store",
    "keywords": "Class SystemAccount Inheritance System.Object SystemAccount Implements System.Security.Principal.IPrincipal Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.UserManagement Assembly : EventStore.Core.dll Syntax public class SystemAccount : IPrincipal Fields Principal Declaration public static readonly SystemAccount Principal Field Value Type SystemAccount Properties Identity Declaration public IIdentity Identity { get; } Property Value Type System.Security.Principal.IIdentity Methods IsInRole(String) Declaration public bool IsInRole(string role) Parameters Type Name System.String role Returns Type Description System.Boolean Implements System.Security.Principal.IPrincipal Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.UserManagement.AllUsersReader.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.UserManagement.AllUsersReader.html",
    "title": "Class AllUsersReader | Event Store",
    "keywords": "Class AllUsersReader Inheritance System.Object AllUsersReader Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.UserManagement Assembly : EventStore.Core.dll Syntax public class AllUsersReader Constructors AllUsersReader(IODispatcher) Declaration public AllUsersReader(IODispatcher ioDispatcher) Parameters Type Name IODispatcher ioDispatcher Methods Run(Action<UserManagementMessage.Error, UserManagementMessage.UserData[]>) Declaration public void Run(Action<UserManagementMessage.Error, UserManagementMessage.UserData[]> completed) Parameters Type Name System.Action < UserManagementMessage.Error , UserManagementMessage.UserData []> completed Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Tcp.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Tcp.html",
    "title": "Namespace EventStore.Core.Services.Transport.Tcp | Event Store",
    "keywords": "Namespace EventStore.Core.Services.Transport.Tcp Classes ClientTcpDispatcher InternalTcpDispatcher ProtobufExtensions SendOverTcpEnvelope TcpConnectionManager Manager for individual TCP connection. It handles connection lifecycle, heartbeats, message framing and dispatch to the memory bus. TcpDispatcher TcpService Structs TcpPackage Interfaces ITcpDispatcher Enums ClientVersion TcpCommand TcpFlags TcpSecurityType TcpServiceType"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Tcp.TcpServiceType.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Tcp.TcpServiceType.html",
    "title": "Enum TcpServiceType | Event Store",
    "keywords": "Enum TcpServiceType Namespace : EventStore.Core.Services.Transport.Tcp Assembly : EventStore.Core.dll Syntax public enum TcpServiceType Fields Name Description External Internal Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<TcpServiceType>() ProtobufExtensions.Serialize<TcpServiceType>() ProtobufExtensions.SerializeToArray<TcpServiceType>()"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Tcp.TcpService.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Tcp.TcpService.html",
    "title": "Class TcpService | Event Store",
    "keywords": "Class TcpService Inheritance System.Object TcpService Implements IHandle < SystemMessage.SystemInit > IHandle < SystemMessage.SystemStart > IHandle < SystemMessage.BecomeShuttingDown > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Transport.Tcp Assembly : EventStore.Core.dll Syntax public class TcpService : IHandle<SystemMessage.SystemInit>, IHandle<SystemMessage.SystemStart>, IHandle<SystemMessage.BecomeShuttingDown> Constructors TcpService(IPublisher, IPEndPoint, IPublisher, TcpServiceType, TcpSecurityType, ITcpDispatcher, TimeSpan, TimeSpan, IAuthenticationProvider, X509Certificate, Int32) Declaration public TcpService(IPublisher publisher, IPEndPoint serverEndPoint, IPublisher networkSendQueue, TcpServiceType serviceType, TcpSecurityType securityType, ITcpDispatcher dispatcher, TimeSpan heartbeatInterval, TimeSpan heartbeatTimeout, IAuthenticationProvider authProvider, X509Certificate certificate, int connectionPendingSendBytesThreshold) Parameters Type Name IPublisher publisher System.Net.IPEndPoint serverEndPoint IPublisher networkSendQueue TcpServiceType serviceType TcpSecurityType securityType ITcpDispatcher dispatcher System.TimeSpan heartbeatInterval System.TimeSpan heartbeatTimeout IAuthenticationProvider authProvider System.Security.Cryptography.X509Certificates.X509Certificate certificate System.Int32 connectionPendingSendBytesThreshold TcpService(IPublisher, IPEndPoint, IPublisher, TcpServiceType, TcpSecurityType, Func<Guid, IPEndPoint, ITcpDispatcher>, TimeSpan, TimeSpan, IAuthenticationProvider, X509Certificate, Int32) Declaration public TcpService(IPublisher publisher, IPEndPoint serverEndPoint, IPublisher networkSendQueue, TcpServiceType serviceType, TcpSecurityType securityType, Func<Guid, IPEndPoint, ITcpDispatcher> dispatcherFactory, TimeSpan heartbeatInterval, TimeSpan heartbeatTimeout, IAuthenticationProvider authProvider, X509Certificate certificate, int connectionPendingSendBytesThreshold) Parameters Type Name IPublisher publisher System.Net.IPEndPoint serverEndPoint IPublisher networkSendQueue TcpServiceType serviceType TcpSecurityType securityType System.Func < System.Guid , System.Net.IPEndPoint , ITcpDispatcher > dispatcherFactory System.TimeSpan heartbeatInterval System.TimeSpan heartbeatTimeout IAuthenticationProvider authProvider System.Security.Cryptography.X509Certificates.X509Certificate certificate System.Int32 connectionPendingSendBytesThreshold Methods Handle(SystemMessage.BecomeShuttingDown) Declaration public void Handle(SystemMessage.BecomeShuttingDown message) Parameters Type Name SystemMessage.BecomeShuttingDown message Handle(SystemMessage.SystemInit) Declaration public void Handle(SystemMessage.SystemInit message) Parameters Type Name SystemMessage.SystemInit message Handle(SystemMessage.SystemStart) Declaration public void Handle(SystemMessage.SystemStart message) Parameters Type Name SystemMessage.SystemStart message Implements IHandle<T> IHandle<T> IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Tcp.TcpSecurityType.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Tcp.TcpSecurityType.html",
    "title": "Enum TcpSecurityType | Event Store",
    "keywords": "Enum TcpSecurityType Namespace : EventStore.Core.Services.Transport.Tcp Assembly : EventStore.Core.dll Syntax public enum TcpSecurityType Fields Name Description Normal Secure Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<TcpSecurityType>() ProtobufExtensions.Serialize<TcpSecurityType>() ProtobufExtensions.SerializeToArray<TcpSecurityType>()"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Tcp.TcpPackage.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Tcp.TcpPackage.html",
    "title": "Struct TcpPackage | Event Store",
    "keywords": "Struct TcpPackage Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Services.Transport.Tcp Assembly : EventStore.Core.dll Syntax public struct TcpPackage Constructors TcpPackage(TcpCommand, TcpFlags, Guid, String, String, ArraySegment<Byte>) Declaration public TcpPackage(TcpCommand command, TcpFlags flags, Guid correlationId, string login, string password, ArraySegment<byte> data) Parameters Type Name TcpCommand command TcpFlags flags System.Guid correlationId System.String login System.String password System.ArraySegment < System.Byte > data TcpPackage(TcpCommand, TcpFlags, Guid, String, String, Byte[]) Declaration public TcpPackage(TcpCommand command, TcpFlags flags, Guid correlationId, string login, string password, byte[] data) Parameters Type Name TcpCommand command TcpFlags flags System.Guid correlationId System.String login System.String password System.Byte [] data TcpPackage(TcpCommand, Guid, ArraySegment<Byte>) Declaration public TcpPackage(TcpCommand command, Guid correlationId, ArraySegment<byte> data) Parameters Type Name TcpCommand command System.Guid correlationId System.ArraySegment < System.Byte > data TcpPackage(TcpCommand, Guid, Byte[]) Declaration public TcpPackage(TcpCommand command, Guid correlationId, byte[] data) Parameters Type Name TcpCommand command System.Guid correlationId System.Byte [] data Fields AuthOffset Declaration public const int AuthOffset = 18 Field Value Type System.Int32 Command Declaration public readonly TcpCommand Command Field Value Type TcpCommand CommandOffset Declaration public const int CommandOffset = 0 Field Value Type System.Int32 CorrelationId Declaration public readonly Guid CorrelationId Field Value Type System.Guid CorrelationOffset Declaration public const int CorrelationOffset = 2 Field Value Type System.Int32 Data Declaration public readonly ArraySegment<byte> Data Field Value Type System.ArraySegment < System.Byte > Flags Declaration public readonly TcpFlags Flags Field Value Type TcpFlags FlagsOffset Declaration public const int FlagsOffset = 1 Field Value Type System.Int32 Login Declaration public readonly string Login Field Value Type System.String MandatorySize Declaration public const int MandatorySize = 18 Field Value Type System.Int32 Password Declaration public readonly string Password Field Value Type System.String Methods AsArraySegment() Declaration public ArraySegment<byte> AsArraySegment() Returns Type Description System.ArraySegment < System.Byte > AsByteArray() Declaration public byte[] AsByteArray() Returns Type Description System.Byte [] FromArraySegment(ArraySegment<Byte>) Declaration public static TcpPackage FromArraySegment(ArraySegment<byte> data) Parameters Type Name System.ArraySegment < System.Byte > data Returns Type Description TcpPackage Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) EnumExtensions.EnumValueName<T>(T) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Tcp.TcpFlags.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Tcp.TcpFlags.html",
    "title": "Enum TcpFlags | Event Store",
    "keywords": "Enum TcpFlags Namespace : EventStore.Core.Services.Transport.Tcp Assembly : EventStore.Core.dll Syntax [Flags] public enum TcpFlags : byte Fields Name Description Authenticated None TrustedWrite Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<TcpFlags>() ProtobufExtensions.Serialize<TcpFlags>() ProtobufExtensions.SerializeToArray<TcpFlags>()"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Tcp.TcpDispatcher.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Tcp.TcpDispatcher.html",
    "title": "Class TcpDispatcher | Event Store",
    "keywords": "Class TcpDispatcher Inheritance System.Object TcpDispatcher ClientTcpDispatcher Implements ITcpDispatcher Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Transport.Tcp Assembly : EventStore.Core.dll Syntax public abstract class TcpDispatcher : ITcpDispatcher Constructors TcpDispatcher() Declaration protected TcpDispatcher() Methods AddUnwrapper<T>(TcpCommand, Func<TcpPackage, IEnvelope, T>, ClientVersion) Declaration protected void AddUnwrapper<T>(TcpCommand command, Func<TcpPackage, IEnvelope, T> unwrapper, ClientVersion version) where T : Message Parameters Type Name TcpCommand command System.Func < TcpPackage , IEnvelope , T> unwrapper ClientVersion version Type Parameters Name Description T AddUnwrapper<T>(TcpCommand, Func<TcpPackage, IEnvelope, TcpConnectionManager, T>, ClientVersion) Declaration protected void AddUnwrapper<T>(TcpCommand command, Func<TcpPackage, IEnvelope, TcpConnectionManager, T> unwrapper, ClientVersion version) where T : Message Parameters Type Name TcpCommand command System.Func < TcpPackage , IEnvelope , TcpConnectionManager , T> unwrapper ClientVersion version Type Parameters Name Description T AddUnwrapper<T>(TcpCommand, Func<TcpPackage, IEnvelope, IPrincipal, T>, ClientVersion) Declaration protected void AddUnwrapper<T>(TcpCommand command, Func<TcpPackage, IEnvelope, IPrincipal, T> unwrapper, ClientVersion version) where T : Message Parameters Type Name TcpCommand command System.Func < TcpPackage , IEnvelope , System.Security.Principal.IPrincipal , T> unwrapper ClientVersion version Type Parameters Name Description T AddUnwrapper<T>(TcpCommand, Func<TcpPackage, IEnvelope, IPrincipal, String, String, T>, ClientVersion) Declaration protected void AddUnwrapper<T>(TcpCommand command, Func<TcpPackage, IEnvelope, IPrincipal, string, string, T> unwrapper, ClientVersion version) where T : Message Parameters Type Name TcpCommand command System.Func < TcpPackage , IEnvelope , System.Security.Principal.IPrincipal , System.String , System.String , T> unwrapper ClientVersion version Type Parameters Name Description T AddUnwrapper<T>(TcpCommand, Func<TcpPackage, IEnvelope, IPrincipal, String, String, TcpConnectionManager, T>, ClientVersion) Declaration protected void AddUnwrapper<T>(TcpCommand command, Func<TcpPackage, IEnvelope, IPrincipal, string, string, TcpConnectionManager, T> unwrapper, ClientVersion version) where T : Message Parameters Type Name TcpCommand command System.Func < TcpPackage , IEnvelope , System.Security.Principal.IPrincipal , System.String , System.String , TcpConnectionManager , T> unwrapper ClientVersion version Type Parameters Name Description T AddWrapper<T>(Func<T, TcpPackage>, ClientVersion) Declaration protected void AddWrapper<T>(Func<T, TcpPackage> wrapper, ClientVersion version) where T : Message Parameters Type Name System.Func <T, TcpPackage > wrapper ClientVersion version Type Parameters Name Description T UnwrapPackage(TcpPackage, IEnvelope, IPrincipal, String, String, TcpConnectionManager, Byte) Declaration public Message UnwrapPackage(TcpPackage package, IEnvelope envelope, IPrincipal user, string login, string pass, TcpConnectionManager connection, byte version) Parameters Type Name TcpPackage package IEnvelope envelope System.Security.Principal.IPrincipal user System.String login System.String pass TcpConnectionManager connection System.Byte version Returns Type Description Message WrapMessage(Message, Byte) Declaration public TcpPackage? WrapMessage(Message message, byte version) Parameters Type Name Message message System.Byte version Returns Type Description System.Nullable < TcpPackage > Implements ITcpDispatcher Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Tcp.TcpConnectionManager.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Tcp.TcpConnectionManager.html",
    "title": "Class TcpConnectionManager | Event Store",
    "keywords": "Class TcpConnectionManager Manager for individual TCP connection. It handles connection lifecycle, heartbeats, message framing and dispatch to the memory bus. Inheritance System.Object TcpConnectionManager Implements IHandle < TcpMessage.Heartbeat > IHandle < TcpMessage.HeartbeatTimeout > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Transport.Tcp Assembly : EventStore.Core.dll Syntax public class TcpConnectionManager : IHandle<TcpMessage.Heartbeat>, IHandle<TcpMessage.HeartbeatTimeout> Constructors TcpConnectionManager(String, TcpServiceType, ITcpDispatcher, IPublisher, ITcpConnection, IPublisher, IAuthenticationProvider, TimeSpan, TimeSpan, Action<TcpConnectionManager, SocketError>, Int32) Declaration public TcpConnectionManager(string connectionName, TcpServiceType serviceType, ITcpDispatcher dispatcher, IPublisher publisher, ITcpConnection openedConnection, IPublisher networkSendQueue, IAuthenticationProvider authProvider, TimeSpan heartbeatInterval, TimeSpan heartbeatTimeout, Action<TcpConnectionManager, SocketError> onConnectionClosed, int connectionPendingSendBytesThreshold) Parameters Type Name System.String connectionName TcpServiceType serviceType ITcpDispatcher dispatcher IPublisher publisher ITcpConnection openedConnection IPublisher networkSendQueue IAuthenticationProvider authProvider System.TimeSpan heartbeatInterval System.TimeSpan heartbeatTimeout System.Action < TcpConnectionManager , System.Net.Sockets.SocketError > onConnectionClosed System.Int32 connectionPendingSendBytesThreshold TcpConnectionManager(String, Guid, ITcpDispatcher, IPublisher, IPEndPoint, TcpClientConnector, Boolean, String, Boolean, IPublisher, IAuthenticationProvider, TimeSpan, TimeSpan, Action<TcpConnectionManager>, Action<TcpConnectionManager, SocketError>) Declaration public TcpConnectionManager(string connectionName, Guid connectionId, ITcpDispatcher dispatcher, IPublisher publisher, IPEndPoint remoteEndPoint, TcpClientConnector connector, bool useSsl, string sslTargetHost, bool sslValidateServer, IPublisher networkSendQueue, IAuthenticationProvider authProvider, TimeSpan heartbeatInterval, TimeSpan heartbeatTimeout, Action<TcpConnectionManager> onConnectionEstablished, Action<TcpConnectionManager, SocketError> onConnectionClosed) Parameters Type Name System.String connectionName System.Guid connectionId ITcpDispatcher dispatcher IPublisher publisher System.Net.IPEndPoint remoteEndPoint TcpClientConnector connector System.Boolean useSsl System.String sslTargetHost System.Boolean sslValidateServer IPublisher networkSendQueue IAuthenticationProvider authProvider System.TimeSpan heartbeatInterval System.TimeSpan heartbeatTimeout System.Action < TcpConnectionManager > onConnectionEstablished System.Action < TcpConnectionManager , System.Net.Sockets.SocketError > onConnectionClosed Fields ConnectionId Declaration public readonly Guid ConnectionId Field Value Type System.Guid ConnectionName Declaration public readonly string ConnectionName Field Value Type System.String ConnectionQueueSizeThreshold Declaration public const int ConnectionQueueSizeThreshold = 50000 Field Value Type System.Int32 ConnectionTimeout Declaration public static readonly TimeSpan ConnectionTimeout Field Value Type System.TimeSpan RemoteEndPoint Declaration public readonly IPEndPoint RemoteEndPoint Field Value Type System.Net.IPEndPoint Properties ClientConnectionName Declaration public string ClientConnectionName { get; } Property Value Type System.String IsClosed Declaration public bool IsClosed { get; } Property Value Type System.Boolean LocalEndPoint Declaration public IPEndPoint LocalEndPoint { get; } Property Value Type System.Net.IPEndPoint SendQueueSize Declaration public int SendQueueSize { get; } Property Value Type System.Int32 Methods Handle(TcpMessage.Heartbeat) Declaration public void Handle(TcpMessage.Heartbeat message) Parameters Type Name TcpMessage.Heartbeat message Handle(TcpMessage.HeartbeatTimeout) Declaration public void Handle(TcpMessage.HeartbeatTimeout message) Parameters Type Name TcpMessage.HeartbeatTimeout message ProcessPackage(TcpPackage) Declaration public void ProcessPackage(TcpPackage package) Parameters Type Name TcpPackage package SendBadRequest(Guid, String) Declaration public void SendBadRequest(Guid correlationId, string message) Parameters Type Name System.Guid correlationId System.String message SendBadRequestAndClose(Guid, String) Declaration public void SendBadRequestAndClose(Guid correlationId, string message) Parameters Type Name System.Guid correlationId System.String message SendMessage(Message) Declaration public void SendMessage(Message message) Parameters Type Name Message message StartReceiving() Declaration public void StartReceiving() Stop(String) Declaration public void Stop(string reason = null) Parameters Type Name System.String reason Implements IHandle<T> IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Tcp.TcpCommand.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Tcp.TcpCommand.html",
    "title": "Enum TcpCommand | Event Store",
    "keywords": "Enum TcpCommand Namespace : EventStore.Core.Services.Transport.Tcp Assembly : EventStore.Core.dll Syntax public enum TcpCommand : byte Fields Name Description Authenticate Authenticated BadRequest ClientIdentified CloneAssignment CommitAck ConnectToPersistentSubscription CreateChunk CreatePersistentSubscription CreatePersistentSubscriptionCompleted DataChunkBulk DeletePersistentSubscription DeletePersistentSubscriptionCompleted DeleteStream DeleteStreamCompleted HeartbeatRequestCommand HeartbeatResponseCommand IdentifyClient NotAuthenticated NotHandled PersistentSubscriptionAckEvents PersistentSubscriptionConfirmation PersistentSubscriptionNakEvents PersistentSubscriptionStreamEventAppeared Ping Pong PrepareAck RawChunkBulk ReadAllEventsBackward ReadAllEventsBackwardCompleted ReadAllEventsForward ReadAllEventsForwardCompleted ReadEvent ReadEventCompleted ReadStreamEventsBackward ReadStreamEventsBackwardCompleted ReadStreamEventsForward ReadStreamEventsForwardCompleted ReplicaLogPositionAck ReplicaSubscribed ReplicaSubscriptionRetry ScavengeDatabase ScavengeDatabaseResponse SlaveAssignment StreamEventAppeared SubscribeReplica SubscribeToStream SubscriptionConfirmation SubscriptionDropped TransactionCommit TransactionCommitCompleted TransactionStart TransactionStartCompleted TransactionWrite TransactionWriteCompleted UnsubscribeFromStream UpdatePersistentSubscription UpdatePersistentSubscriptionCompleted WriteEvents WriteEventsCompleted Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<TcpCommand>() ProtobufExtensions.Serialize<TcpCommand>() ProtobufExtensions.SerializeToArray<TcpCommand>()"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Tcp.SendOverTcpEnvelope.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Tcp.SendOverTcpEnvelope.html",
    "title": "Class SendOverTcpEnvelope | Event Store",
    "keywords": "Class SendOverTcpEnvelope Inheritance System.Object SendOverTcpEnvelope Implements IEnvelope Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Transport.Tcp Assembly : EventStore.Core.dll Syntax public class SendOverTcpEnvelope : IEnvelope Constructors SendOverTcpEnvelope(TcpConnectionManager, IPublisher) Declaration public SendOverTcpEnvelope(TcpConnectionManager manager, IPublisher networkSendQueue) Parameters Type Name TcpConnectionManager manager IPublisher networkSendQueue Methods ReplyWith<T>(T) Declaration public void ReplyWith<T>(T message) where T : Message Parameters Type Name T message Type Parameters Name Description T Implements IEnvelope Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Http.Controllers.GossipController.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Http.Controllers.GossipController.html",
    "title": "Class GossipController | Event Store",
    "keywords": "Class GossipController Inheritance System.Object CommunicationController GossipController Implements IHttpController IHttpSender ISender < GossipMessage.SendGossip > Inherited Members CommunicationController.Publish(Message) CommunicationController.Subscribe(IHttpService) CommunicationController.SendBadRequest(HttpEntityManager, String) CommunicationController.SendTooBig(HttpEntityManager) CommunicationController.SendOk(HttpEntityManager) CommunicationController.Register(IHttpService, String, String, Action<HttpEntityManager, UriTemplateMatch>, ICodec[], ICodec[]) CommunicationController.RegisterCustom(IHttpService, String, String, Func<HttpEntityManager, UriTemplateMatch, RequestParams>, ICodec[], ICodec[]) CommunicationController.RegisterUrlBased(IHttpService, String, String, Action<HttpEntityManager, UriTemplateMatch>) CommunicationController.MakeUrl(HttpEntityManager, String) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Transport.Http.Controllers Assembly : EventStore.Core.dll Syntax public class GossipController : CommunicationController, IHttpController, IHttpSender, ISender<GossipMessage.SendGossip> Constructors GossipController(IPublisher, IPublisher, TimeSpan) Declaration public GossipController(IPublisher publisher, IPublisher networkSendQueue, TimeSpan gossipTimeout) Parameters Type Name IPublisher publisher IPublisher networkSendQueue System.TimeSpan gossipTimeout Methods Send(GossipMessage.SendGossip, IPEndPoint) Declaration public void Send(GossipMessage.SendGossip message, IPEndPoint endPoint) Parameters Type Name GossipMessage.SendGossip message System.Net.IPEndPoint endPoint SubscribeCore(IHttpService) Declaration protected override void SubscribeCore(IHttpService service) Parameters Type Name IHttpService service Overrides CommunicationController.SubscribeCore(IHttpService) SubscribeSenders(HttpMessagePipe) Declaration public void SubscribeSenders(HttpMessagePipe pipe) Parameters Type Name HttpMessagePipe pipe Implements IHttpController IHttpSender ISender<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Http.Controllers.EmbedLevel.html",
    "title": "Enum EmbedLevel | Event Store",
    "keywords": "Enum EmbedLevel Namespace : EventStore.Core.Services.Transport.Http.Controllers Assembly : EventStore.Core.dll Syntax public enum EmbedLevel Fields Name Description Body Content None PrettyBody Rich TryHarder Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<EmbedLevel>() ProtobufExtensions.Serialize<EmbedLevel>() ProtobufExtensions.SerializeToArray<EmbedLevel>()"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Http.Controllers.ElectController.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Http.Controllers.ElectController.html",
    "title": "Class ElectController | Event Store",
    "keywords": "Class ElectController Inheritance System.Object CommunicationController ElectController Implements IHttpController IHttpSender ISender < ElectionMessage.ViewChange > ISender < ElectionMessage.ViewChangeProof > ISender < ElectionMessage.Prepare > ISender < ElectionMessage.PrepareOk > ISender < ElectionMessage.Proposal > ISender < ElectionMessage.Accept > Inherited Members CommunicationController.Publish(Message) CommunicationController.Subscribe(IHttpService) CommunicationController.SendBadRequest(HttpEntityManager, String) CommunicationController.SendTooBig(HttpEntityManager) CommunicationController.SendOk(HttpEntityManager) CommunicationController.Register(IHttpService, String, String, Action<HttpEntityManager, UriTemplateMatch>, ICodec[], ICodec[]) CommunicationController.RegisterCustom(IHttpService, String, String, Func<HttpEntityManager, UriTemplateMatch, RequestParams>, ICodec[], ICodec[]) CommunicationController.RegisterUrlBased(IHttpService, String, String, Action<HttpEntityManager, UriTemplateMatch>) CommunicationController.MakeUrl(HttpEntityManager, String) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Transport.Http.Controllers Assembly : EventStore.Core.dll Syntax public class ElectController : CommunicationController, IHttpController, IHttpSender, ISender<ElectionMessage.ViewChange>, ISender<ElectionMessage.ViewChangeProof>, ISender<ElectionMessage.Prepare>, ISender<ElectionMessage.PrepareOk>, ISender<ElectionMessage.Proposal>, ISender<ElectionMessage.Accept> Constructors ElectController(IPublisher) Declaration public ElectController(IPublisher publisher) Parameters Type Name IPublisher publisher Methods Send(ElectionMessage.Accept, IPEndPoint) Declaration public void Send(ElectionMessage.Accept message, IPEndPoint endPoint) Parameters Type Name ElectionMessage.Accept message System.Net.IPEndPoint endPoint Send(ElectionMessage.Prepare, IPEndPoint) Declaration public void Send(ElectionMessage.Prepare message, IPEndPoint endPoint) Parameters Type Name ElectionMessage.Prepare message System.Net.IPEndPoint endPoint Send(ElectionMessage.PrepareOk, IPEndPoint) Declaration public void Send(ElectionMessage.PrepareOk message, IPEndPoint endPoint) Parameters Type Name ElectionMessage.PrepareOk message System.Net.IPEndPoint endPoint Send(ElectionMessage.Proposal, IPEndPoint) Declaration public void Send(ElectionMessage.Proposal message, IPEndPoint endPoint) Parameters Type Name ElectionMessage.Proposal message System.Net.IPEndPoint endPoint Send(ElectionMessage.ViewChange, IPEndPoint) Declaration public void Send(ElectionMessage.ViewChange message, IPEndPoint endPoint) Parameters Type Name ElectionMessage.ViewChange message System.Net.IPEndPoint endPoint Send(ElectionMessage.ViewChangeProof, IPEndPoint) Declaration public void Send(ElectionMessage.ViewChangeProof message, IPEndPoint endPoint) Parameters Type Name ElectionMessage.ViewChangeProof message System.Net.IPEndPoint endPoint SubscribeCore(IHttpService) Declaration protected override void SubscribeCore(IHttpService service) Parameters Type Name IHttpService service Overrides CommunicationController.SubscribeCore(IHttpService) SubscribeSenders(HttpMessagePipe) Declaration public void SubscribeSenders(HttpMessagePipe pipe) Parameters Type Name HttpMessagePipe pipe Implements IHttpController IHttpSender ISender<T> ISender<T> ISender<T> ISender<T> ISender<T> ISender<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Http.Controllers.CommunicationController.html",
    "title": "Class CommunicationController | Event Store",
    "keywords": "Class CommunicationController Inheritance System.Object CommunicationController AdminController AtomController ClusterWebUiController ElectController GossipController PersistentSubscriptionController StatController UsersController ProjectionsController Implements IHttpController Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Transport.Http.Controllers Assembly : EventStore.Core.dll Syntax public abstract class CommunicationController : IHttpController Constructors CommunicationController(IPublisher) Declaration protected CommunicationController(IPublisher publisher) Parameters Type Name IPublisher publisher Methods MakeUrl(HttpEntityManager, String) Declaration protected static string MakeUrl(HttpEntityManager http, string path) Parameters Type Name HttpEntityManager http System.String path Returns Type Description System.String Publish(Message) Declaration public void Publish(Message message) Parameters Type Name Message message Register(IHttpService, String, String, Action<HttpEntityManager, UriTemplateMatch>, ICodec[], ICodec[]) Declaration protected void Register(IHttpService service, string uriTemplate, string httpMethod, Action<HttpEntityManager, UriTemplateMatch> handler, ICodec[] requestCodecs, ICodec[] responseCodecs) Parameters Type Name IHttpService service System.String uriTemplate System.String httpMethod System.Action < HttpEntityManager , System.UriTemplateMatch > handler ICodec [] requestCodecs ICodec [] responseCodecs RegisterCustom(IHttpService, String, String, Func<HttpEntityManager, UriTemplateMatch, RequestParams>, ICodec[], ICodec[]) Declaration protected void RegisterCustom(IHttpService service, string uriTemplate, string httpMethod, Func<HttpEntityManager, UriTemplateMatch, RequestParams> handler, ICodec[] requestCodecs, ICodec[] responseCodecs) Parameters Type Name IHttpService service System.String uriTemplate System.String httpMethod System.Func < HttpEntityManager , System.UriTemplateMatch , RequestParams > handler ICodec [] requestCodecs ICodec [] responseCodecs RegisterUrlBased(IHttpService, String, String, Action<HttpEntityManager, UriTemplateMatch>) Declaration protected void RegisterUrlBased(IHttpService service, string uriTemplate, string httpMethod, Action<HttpEntityManager, UriTemplateMatch> action) Parameters Type Name IHttpService service System.String uriTemplate System.String httpMethod System.Action < HttpEntityManager , System.UriTemplateMatch > action SendBadRequest(HttpEntityManager, String) Declaration protected RequestParams SendBadRequest(HttpEntityManager httpEntityManager, string reason) Parameters Type Name HttpEntityManager httpEntityManager System.String reason Returns Type Description RequestParams SendOk(HttpEntityManager) Declaration protected RequestParams SendOk(HttpEntityManager httpEntityManager) Parameters Type Name HttpEntityManager httpEntityManager Returns Type Description RequestParams SendTooBig(HttpEntityManager) Declaration protected RequestParams SendTooBig(HttpEntityManager httpEntityManager) Parameters Type Name HttpEntityManager httpEntityManager Returns Type Description RequestParams Subscribe(IHttpService) Declaration public void Subscribe(IHttpService service) Parameters Type Name IHttpService service SubscribeCore(IHttpService) Declaration protected abstract void SubscribeCore(IHttpService service) Parameters Type Name IHttpService service Implements IHttpController Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Http.Controllers.ClusterWebUiController.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Http.Controllers.ClusterWebUiController.html",
    "title": "Class ClusterWebUiController | Event Store",
    "keywords": "Class ClusterWebUiController Inheritance System.Object CommunicationController ClusterWebUiController Implements IHttpController Inherited Members CommunicationController.Publish(Message) CommunicationController.Subscribe(IHttpService) CommunicationController.SendBadRequest(HttpEntityManager, String) CommunicationController.SendTooBig(HttpEntityManager) CommunicationController.SendOk(HttpEntityManager) CommunicationController.Register(IHttpService, String, String, Action<HttpEntityManager, UriTemplateMatch>, ICodec[], ICodec[]) CommunicationController.RegisterCustom(IHttpService, String, String, Func<HttpEntityManager, UriTemplateMatch, RequestParams>, ICodec[], ICodec[]) CommunicationController.RegisterUrlBased(IHttpService, String, String, Action<HttpEntityManager, UriTemplateMatch>) CommunicationController.MakeUrl(HttpEntityManager, String) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Transport.Http.Controllers Assembly : EventStore.Core.dll Syntax public class ClusterWebUiController : CommunicationController, IHttpController Constructors ClusterWebUiController(IPublisher, NodeSubsystems[]) Declaration public ClusterWebUiController(IPublisher publisher, NodeSubsystems[] enabledNodeSubsystems) Parameters Type Name IPublisher publisher NodeSubsystems [] enabledNodeSubsystems Methods SubscribeCore(IHttpService) Declaration protected override void SubscribeCore(IHttpService service) Parameters Type Name IHttpService service Overrides CommunicationController.SubscribeCore(IHttpService) Implements IHttpController Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Http.Controllers.AtomController.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Http.Controllers.AtomController.html",
    "title": "Class AtomController | Event Store",
    "keywords": "Class AtomController Inheritance System.Object CommunicationController AtomController Implements IHttpController Inherited Members CommunicationController.Publish(Message) CommunicationController.Subscribe(IHttpService) CommunicationController.SendBadRequest(HttpEntityManager, String) CommunicationController.SendTooBig(HttpEntityManager) CommunicationController.SendOk(HttpEntityManager) CommunicationController.Register(IHttpService, String, String, Action<HttpEntityManager, UriTemplateMatch>, ICodec[], ICodec[]) CommunicationController.RegisterCustom(IHttpService, String, String, Func<HttpEntityManager, UriTemplateMatch, RequestParams>, ICodec[], ICodec[]) CommunicationController.RegisterUrlBased(IHttpService, String, String, Action<HttpEntityManager, UriTemplateMatch>) CommunicationController.MakeUrl(HttpEntityManager, String) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Transport.Http.Controllers Assembly : EventStore.Core.dll Syntax public class AtomController : CommunicationController, IHttpController Constructors AtomController(IHttpForwarder, IPublisher, IPublisher, Boolean) Declaration public AtomController(IHttpForwarder httpForwarder, IPublisher publisher, IPublisher networkSendQueue, bool disableHTTPCaching = false) Parameters Type Name IHttpForwarder httpForwarder IPublisher publisher IPublisher networkSendQueue System.Boolean disableHTTPCaching Fields ETagSeparator Declaration public const char ETagSeparator = ';' Field Value Type System.Char ETagSeparatorArray Declaration public static readonly char[] ETagSeparatorArray Field Value Type System.Char [] Methods PostEntry(HttpEntityManager, Int64, Boolean, String, Guid, String) Declaration public void PostEntry(HttpEntityManager manager, long expectedVersion, bool requireMaster, string stream, Guid idIncluded, string typeIncluded) Parameters Type Name HttpEntityManager manager System.Int64 expectedVersion System.Boolean requireMaster System.String stream System.Guid idIncluded System.String typeIncluded SubscribeCore(IHttpService) Declaration protected override void SubscribeCore(IHttpService http) Parameters Type Name IHttpService http Overrides CommunicationController.SubscribeCore(IHttpService) Implements IHttpController Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Http.Controllers.AdminController.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Http.Controllers.AdminController.html",
    "title": "Class AdminController | Event Store",
    "keywords": "Class AdminController Inheritance System.Object CommunicationController AdminController Implements IHttpController Inherited Members CommunicationController.Publish(Message) CommunicationController.Subscribe(IHttpService) CommunicationController.SendBadRequest(HttpEntityManager, String) CommunicationController.SendTooBig(HttpEntityManager) CommunicationController.SendOk(HttpEntityManager) CommunicationController.Register(IHttpService, String, String, Action<HttpEntityManager, UriTemplateMatch>, ICodec[], ICodec[]) CommunicationController.RegisterCustom(IHttpService, String, String, Func<HttpEntityManager, UriTemplateMatch, RequestParams>, ICodec[], ICodec[]) CommunicationController.RegisterUrlBased(IHttpService, String, String, Action<HttpEntityManager, UriTemplateMatch>) CommunicationController.MakeUrl(HttpEntityManager, String) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Transport.Http.Controllers Assembly : EventStore.Core.dll Syntax public class AdminController : CommunicationController, IHttpController Constructors AdminController(IPublisher, IPublisher) Declaration public AdminController(IPublisher publisher, IPublisher networkSendQueue) Parameters Type Name IPublisher publisher IPublisher networkSendQueue Methods SubscribeCore(IHttpService) Declaration protected override void SubscribeCore(IHttpService service) Parameters Type Name IHttpService service Overrides CommunicationController.SubscribeCore(IHttpService) Implements IHttpController Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Http.ControllerAction.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Http.ControllerAction.html",
    "title": "Class ControllerAction | Event Store",
    "keywords": "Class ControllerAction Inheritance System.Object ControllerAction Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Services.Transport.Http Assembly : EventStore.Core.dll Syntax public class ControllerAction Constructors ControllerAction(String, String, ICodec[], ICodec[]) Declaration public ControllerAction(string uriTemplate, string httpMethod, ICodec[] requestCodecs, ICodec[] responseCodecs) Parameters Type Name System.String uriTemplate System.String httpMethod ICodec [] requestCodecs ICodec [] responseCodecs Fields DefaultResponseCodec Declaration public readonly ICodec DefaultResponseCodec Field Value Type ICodec HttpMethod Declaration public readonly string HttpMethod Field Value Type System.String SupportedRequestCodecs Declaration public readonly ICodec[] SupportedRequestCodecs Field Value Type ICodec [] SupportedResponseCodecs Declaration public readonly ICodec[] SupportedResponseCodecs Field Value Type ICodec [] UriTemplate Declaration public readonly string UriTemplate Field Value Type System.String Methods Equals(ControllerAction) Declaration public bool Equals(ControllerAction other) Parameters Type Name ControllerAction other Returns Type Description System.Boolean Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.EventReaderBasedProjectionProcessingStrategy.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.EventReaderBasedProjectionProcessingStrategy.html",
    "title": "Class EventReaderBasedProjectionProcessingStrategy | Event Store",
    "keywords": "Class EventReaderBasedProjectionProcessingStrategy Inheritance System.Object ProjectionProcessingStrategy EventReaderBasedProjectionProcessingStrategy DefaultProjectionProcessingStrategy ParallelQueryProcessingStrategy Inherited Members ProjectionProcessingStrategy._name ProjectionProcessingStrategy._projectionVersion ProjectionProcessingStrategy._logger ProjectionProcessingStrategy.Create(Guid, IPublisher, Guid, IPrincipal, IPublisher, IODispatcher, ReaderSubscriptionDispatcher, ITimeProvider) ProjectionProcessingStrategy.GetStopOnEof() ProjectionProcessingStrategy.GetUseCheckpoints() ProjectionProcessingStrategy.GetProducesRunningResults() ProjectionProcessingStrategy.GetIsSlaveProjection() ProjectionProcessingStrategy.GetSlaveProjections() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public abstract class EventReaderBasedProjectionProcessingStrategy : ProjectionProcessingStrategy Constructors EventReaderBasedProjectionProcessingStrategy(String, ProjectionVersion, ProjectionConfig, IQuerySources, ILogger, ReaderSubscriptionDispatcher) Declaration protected EventReaderBasedProjectionProcessingStrategy(string name, ProjectionVersion projectionVersion, ProjectionConfig projectionConfig, IQuerySources sourceDefinition, ILogger logger, ReaderSubscriptionDispatcher subscriptionDispatcher) Parameters Type Name System.String name ProjectionVersion projectionVersion ProjectionConfig projectionConfig IQuerySources sourceDefinition ILogger logger ReaderSubscriptionDispatcher subscriptionDispatcher Fields _projectionConfig Declaration protected readonly ProjectionConfig _projectionConfig Field Value Type ProjectionConfig _sourceDefinition Declaration protected readonly IQuerySources _sourceDefinition Field Value Type IQuerySources Methods CreateCheckpointManager(Guid, IPublisher, IODispatcher, ProjectionNamesBuilder, CoreProjectionCheckpointWriter, Boolean, IReaderStrategy) Declaration protected virtual ICoreProjectionCheckpointManager CreateCheckpointManager(Guid projectionCorrelationId, IPublisher publisher, IODispatcher ioDispatcher, ProjectionNamesBuilder namingBuilder, CoreProjectionCheckpointWriter coreProjectionCheckpointWriter, bool definesFold, IReaderStrategy readerStrategy) Parameters Type Name System.Guid projectionCorrelationId IPublisher publisher IODispatcher ioDispatcher ProjectionNamesBuilder namingBuilder CoreProjectionCheckpointWriter coreProjectionCheckpointWriter System.Boolean definesFold IReaderStrategy readerStrategy Returns Type Description ICoreProjectionCheckpointManager CreateFirstPhaseResultEmitter(ProjectionNamesBuilder) Declaration protected abstract IResultEventEmitter CreateFirstPhaseResultEmitter(ProjectionNamesBuilder namingBuilder) Parameters Type Name ProjectionNamesBuilder namingBuilder Returns Type Description IResultEventEmitter CreateFirstPhaseResultWriter(IEmittedEventWriter, CheckpointTag, ProjectionNamesBuilder) Declaration protected virtual IResultWriter CreateFirstPhaseResultWriter(IEmittedEventWriter emittedEventWriter, CheckpointTag zeroCheckpointTag, ProjectionNamesBuilder namingBuilder) Parameters Type Name IEmittedEventWriter emittedEventWriter CheckpointTag zeroCheckpointTag ProjectionNamesBuilder namingBuilder Returns Type Description IResultWriter CreateFirstProcessingPhase(IPublisher, IPublisher, Guid, PartitionStateCache, Action, CoreProjection, ReaderSubscriptionDispatcher, CheckpointTag, ICoreProjectionCheckpointManager, IReaderStrategy, IResultWriter, IEmittedStreamsTracker) Declaration protected abstract IProjectionProcessingPhase CreateFirstProcessingPhase(IPublisher publisher, IPublisher inputQueue, Guid projectionCorrelationId, PartitionStateCache partitionStateCache, Action updateStatistics, CoreProjection coreProjection, ReaderSubscriptionDispatcher subscriptionDispatcher, CheckpointTag zeroCheckpointTag, ICoreProjectionCheckpointManager checkpointManager, IReaderStrategy readerStrategy, IResultWriter resultWriter, IEmittedStreamsTracker emittedStreamsTracker) Parameters Type Name IPublisher publisher IPublisher inputQueue System.Guid projectionCorrelationId PartitionStateCache partitionStateCache System.Action updateStatistics CoreProjection coreProjection ReaderSubscriptionDispatcher subscriptionDispatcher CheckpointTag zeroCheckpointTag ICoreProjectionCheckpointManager checkpointManager IReaderStrategy readerStrategy IResultWriter resultWriter IEmittedStreamsTracker emittedStreamsTracker Returns Type Description IProjectionProcessingPhase CreateProcessingPhases(IPublisher, IPublisher, Guid, PartitionStateCache, Action, CoreProjection, ProjectionNamesBuilder, ITimeProvider, IODispatcher, CoreProjectionCheckpointWriter) Declaration public override sealed IProjectionProcessingPhase[] CreateProcessingPhases(IPublisher publisher, IPublisher inputQueue, Guid projectionCorrelationId, PartitionStateCache partitionStateCache, Action updateStatistics, CoreProjection coreProjection, ProjectionNamesBuilder namingBuilder, ITimeProvider timeProvider, IODispatcher ioDispatcher, CoreProjectionCheckpointWriter coreProjectionCheckpointWriter) Parameters Type Name IPublisher publisher IPublisher inputQueue System.Guid projectionCorrelationId PartitionStateCache partitionStateCache System.Action updateStatistics CoreProjection coreProjection ProjectionNamesBuilder namingBuilder ITimeProvider timeProvider IODispatcher ioDispatcher CoreProjectionCheckpointWriter coreProjectionCheckpointWriter Returns Type Description IProjectionProcessingPhase [] Overrides ProjectionProcessingStrategy.CreateProcessingPhases(IPublisher, IPublisher, Guid, PartitionStateCache, Action, CoreProjection, ProjectionNamesBuilder, ITimeProvider, IODispatcher, CoreProjectionCheckpointWriter) CreateProjectionProcessingPhases(IPublisher, IPublisher, Guid, ProjectionNamesBuilder, PartitionStateCache, CoreProjection, IODispatcher, IProjectionProcessingPhase) Declaration protected abstract IProjectionProcessingPhase[] CreateProjectionProcessingPhases(IPublisher publisher, IPublisher inputQueue, Guid projectionCorrelationId, ProjectionNamesBuilder namingBuilder, PartitionStateCache partitionStateCache, CoreProjection coreProjection, IODispatcher ioDispatcher, IProjectionProcessingPhase firstPhase) Parameters Type Name IPublisher publisher IPublisher inputQueue System.Guid projectionCorrelationId ProjectionNamesBuilder namingBuilder PartitionStateCache partitionStateCache CoreProjection coreProjection IODispatcher ioDispatcher IProjectionProcessingPhase firstPhase Returns Type Description IProjectionProcessingPhase [] CreateReaderStrategy(ITimeProvider) Declaration protected virtual IReaderStrategy CreateReaderStrategy(ITimeProvider timeProvider) Parameters Type Name ITimeProvider timeProvider Returns Type Description IReaderStrategy EnrichStatistics(ProjectionStatistics) Declaration public override void EnrichStatistics(ProjectionStatistics info) Parameters Type Name ProjectionStatistics info Overrides ProjectionProcessingStrategy.EnrichStatistics(ProjectionStatistics) GetRequiresRootPartition() Declaration public override bool GetRequiresRootPartition() Returns Type Description System.Boolean Overrides ProjectionProcessingStrategy.GetRequiresRootPartition() GetSourceDefinition() Declaration protected override IQuerySources GetSourceDefinition() Returns Type Description IQuerySources Overrides ProjectionProcessingStrategy.GetSourceDefinition() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.EventReader.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.EventReader.html",
    "title": "Class EventReader | Event Store",
    "keywords": "Class EventReader Inheritance System.Object EventReader AllStreamsCatalogEventReader ByStreamCatalogEventReader EventByTypeIndexEventReader ExternallyFedByStreamEventReader MultiStreamEventReader StreamEventReader TransactionFileEventReader Implements IEventReader System.IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public abstract class EventReader : IEventReader, IDisposable Constructors EventReader(IPublisher, Guid, IPrincipal, Boolean) Declaration protected EventReader(IPublisher publisher, Guid eventReaderCorrelationId, IPrincipal readAs, bool stopOnEof) Parameters Type Name IPublisher publisher System.Guid eventReaderCorrelationId System.Security.Principal.IPrincipal readAs System.Boolean stopOnEof Fields _disposed Declaration protected bool _disposed Field Value Type System.Boolean _publisher Declaration protected readonly IPublisher _publisher Field Value Type IPublisher _stopOnEof Declaration protected readonly bool _stopOnEof Field Value Type System.Boolean EventReaderCorrelationId Declaration protected readonly Guid EventReaderCorrelationId Field Value Type System.Guid Properties Paused Declaration protected bool Paused { get; } Property Value Type System.Boolean PauseRequested Declaration protected bool PauseRequested { get; } Property Value Type System.Boolean ReadAs Declaration protected IPrincipal ReadAs { get; } Property Value Type System.Security.Principal.IPrincipal Methods AreEventsRequested() Declaration protected abstract bool AreEventsRequested() Returns Type Description System.Boolean Dispose() Declaration public virtual void Dispose() GetLastCommitPositionFrom(ClientMessage.ReadStreamEventsForwardCompleted) Declaration protected static long? GetLastCommitPositionFrom(ClientMessage.ReadStreamEventsForwardCompleted msg) Parameters Type Name ClientMessage.ReadStreamEventsForwardCompleted msg Returns Type Description System.Nullable < System.Int64 > NotifyIfStarting(Int64) Declaration protected void NotifyIfStarting(long startingLastCommitPosition) Parameters Type Name System.Int64 startingLastCommitPosition Pause() Declaration public void Pause() PauseOrContinueProcessing() Declaration protected void PauseOrContinueProcessing() RequestEvents() Declaration protected abstract void RequestEvents() Resume() Declaration public void Resume() SendEof() Declaration protected void SendEof() SendNotAuthorized() Declaration public void SendNotAuthorized() SendPartitionDeleted_WhenReadingDataStream(String, Nullable<Int64>, Nullable<TFPos>, Nullable<TFPos>, String, Nullable<Int32>, CheckpointTag) Declaration protected void SendPartitionDeleted_WhenReadingDataStream(string partition, long? lastEventNumber, TFPos? deletedLinkOrEventPosition, TFPos? deletedEventPosition, string positionStreamId, int? positionEventNumber, CheckpointTag preTagged = null) Parameters Type Name System.String partition System.Nullable < System.Int64 > lastEventNumber System.Nullable < TFPos > deletedLinkOrEventPosition System.Nullable < TFPos > deletedEventPosition System.String positionStreamId System.Nullable < System.Int32 > positionEventNumber CheckpointTag preTagged SendPartitionEof(String, CheckpointTag) Declaration protected void SendPartitionEof(string partition, CheckpointTag preTagged) Parameters Type Name System.String partition CheckpointTag preTagged Implements IEventReader System.IDisposable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.EventProcessingProjectionProcessingPhase.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.EventProcessingProjectionProcessingPhase.html",
    "title": "Class EventProcessingProjectionProcessingPhase | Event Store",
    "keywords": "Class EventProcessingProjectionProcessingPhase Inheritance System.Object EventSubscriptionBasedProjectionProcessingPhase EventProcessingProjectionProcessingPhase Implements IProjectionPhaseCompleter IProjectionPhaseCheckpointManager IHandle < EventReaderSubscriptionMessage.ProgressChanged > IHandle < EventReaderSubscriptionMessage.SubscriptionStarted > IHandle < EventReaderSubscriptionMessage.NotAuthorized > IHandle < EventReaderSubscriptionMessage.EofReached > IHandle < EventReaderSubscriptionMessage.CheckpointSuggested > IHandle < EventReaderSubscriptionMessage.ReaderAssignedReader > IHandle < EventReaderSubscriptionMessage.Failed > IProjectionProcessingPhase System.IDisposable IHandle < CoreProjectionManagementMessage.GetState > IHandle < CoreProjectionManagementMessage.GetResult > IHandle < CoreProjectionProcessingMessage.PrerecordedEventsLoaded > IHandle < EventReaderSubscriptionMessage.CommittedEventReceived > IHandle < EventReaderSubscriptionMessage.PartitionEofReached > IHandle < EventReaderSubscriptionMessage.PartitionDeleted > IHandle < EventReaderSubscriptionMessage.PartitionMeasured > IEventProcessingProjectionPhase IProjectionPhaseStateManager Inherited Members EventSubscriptionBasedProjectionProcessingPhase._publisher EventSubscriptionBasedProjectionProcessingPhase._coreProjection EventSubscriptionBasedProjectionProcessingPhase._projectionCorrelationId EventSubscriptionBasedProjectionProcessingPhase._checkpointManager EventSubscriptionBasedProjectionProcessingPhase._progressResultWriter EventSubscriptionBasedProjectionProcessingPhase._projectionConfig EventSubscriptionBasedProjectionProcessingPhase._projectionName EventSubscriptionBasedProjectionProcessingPhase._logger EventSubscriptionBasedProjectionProcessingPhase._zeroCheckpointTag EventSubscriptionBasedProjectionProcessingPhase._processingQueue EventSubscriptionBasedProjectionProcessingPhase._partitionStateCache EventSubscriptionBasedProjectionProcessingPhase._subscriptionDispatcher EventSubscriptionBasedProjectionProcessingPhase._readerStrategy EventSubscriptionBasedProjectionProcessingPhase._resultWriter EventSubscriptionBasedProjectionProcessingPhase._useCheckpoints EventSubscriptionBasedProjectionProcessingPhase._expectedSubscriptionMessageSequenceNumber EventSubscriptionBasedProjectionProcessingPhase._currentSubscriptionId EventSubscriptionBasedProjectionProcessingPhase._subscribed EventSubscriptionBasedProjectionProcessingPhase._state EventSubscriptionBasedProjectionProcessingPhase._stopOnEof EventSubscriptionBasedProjectionProcessingPhase._emittedStreamsTracker EventSubscriptionBasedProjectionProcessingPhase.UnlockAndForgetBefore(CheckpointTag) EventSubscriptionBasedProjectionProcessingPhase.LastProcessedEventPosition EventSubscriptionBasedProjectionProcessingPhase.CheckpointManager EventSubscriptionBasedProjectionProcessingPhase.EmittedStreamsTracker EventSubscriptionBasedProjectionProcessingPhase.IsOutOfOrderSubscriptionMessage(EventReaderSubscriptionMessageBase) EventSubscriptionBasedProjectionProcessingPhase.RegisterSubscriptionMessage(EventReaderSubscriptionMessageBase) EventSubscriptionBasedProjectionProcessingPhase.EnsureTickPending() EventSubscriptionBasedProjectionProcessingPhase.AssignSlaves(SlaveProjectionCommunicationChannels) EventSubscriptionBasedProjectionProcessingPhase.ProcessEvent() EventSubscriptionBasedProjectionProcessingPhase.Handle(EventReaderSubscriptionMessage.ProgressChanged) EventSubscriptionBasedProjectionProcessingPhase.Handle(EventReaderSubscriptionMessage.SubscriptionStarted) EventSubscriptionBasedProjectionProcessingPhase.Handle(EventReaderSubscriptionMessage.NotAuthorized) EventSubscriptionBasedProjectionProcessingPhase.Unsubscribed() EventSubscriptionBasedProjectionProcessingPhase.Handle(EventReaderSubscriptionMessage.EofReached) EventSubscriptionBasedProjectionProcessingPhase.Handle(EventReaderSubscriptionMessage.CheckpointSuggested) EventSubscriptionBasedProjectionProcessingPhase.Handle(CoreProjectionManagementMessage.GetState) EventSubscriptionBasedProjectionProcessingPhase.Handle(CoreProjectionManagementMessage.GetResult) EventSubscriptionBasedProjectionProcessingPhase.Handle(EventReaderSubscriptionMessage.Failed) EventSubscriptionBasedProjectionProcessingPhase.UnsubscribeFromPreRecordedOrderEvents() EventSubscriptionBasedProjectionProcessingPhase.Subscribed(Guid) EventSubscriptionBasedProjectionProcessingPhase.GetSubscriptionOptions() EventSubscriptionBasedProjectionProcessingPhase.SubscribeReaders(CheckpointTag) EventSubscriptionBasedProjectionProcessingPhase.SubscribeToPreRecordedOrderEvents() EventSubscriptionBasedProjectionProcessingPhase.Subscribe(CheckpointTag, Boolean) EventSubscriptionBasedProjectionProcessingPhase.Handle(CoreProjectionProcessingMessage.PrerecordedEventsLoaded) EventSubscriptionBasedProjectionProcessingPhase.AdjustTag(CheckpointTag) EventSubscriptionBasedProjectionProcessingPhase.SetFaulting(String, Exception) EventSubscriptionBasedProjectionProcessingPhase.ValidateEmittedEvents(EmittedEventEnvelope[]) EventSubscriptionBasedProjectionProcessingPhase.InitializeFromCheckpoint(CheckpointTag) EventSubscriptionBasedProjectionProcessingPhase.GetBufferedEventCount() EventSubscriptionBasedProjectionProcessingPhase.GetStatus() EventSubscriptionBasedProjectionProcessingPhase.InternalCommittedEventProcessed(String, EventReaderSubscriptionMessage.CommittedEventReceived, EmittedEventEnvelope[], PartitionState, PartitionState) EventSubscriptionBasedProjectionProcessingPhase.InternalPartitionDeletedProcessed(String, CheckpointTag, PartitionState) EventSubscriptionBasedProjectionProcessingPhase.BeginGetPartitionStateAt(String, CheckpointTag, Action<PartitionState>, Boolean) EventSubscriptionBasedProjectionProcessingPhase.FinalizeEventProcessing(EventProcessedResult, CheckpointTag, Single) EventSubscriptionBasedProjectionProcessingPhase.EmitEofResult(String, String, CheckpointTag, Guid, String) EventSubscriptionBasedProjectionProcessingPhase.RecordEventOrder(ResolvedEvent, CheckpointTag, Action) EventSubscriptionBasedProjectionProcessingPhase.Complete() EventSubscriptionBasedProjectionProcessingPhase.SetCurrentCheckpointSuggestedWorkItem(CheckpointSuggestedWorkItem) EventSubscriptionBasedProjectionProcessingPhase.MakeZeroCheckpointTag() EventSubscriptionBasedProjectionProcessingPhase.EnsureUnsubscribed() EventSubscriptionBasedProjectionProcessingPhase._subscriptionStartedAtLastCommitPosition EventSubscriptionBasedProjectionProcessingPhase.Handle(EventReaderSubscriptionMessage.ReaderAssignedReader) EventSubscriptionBasedProjectionProcessingPhase.SetProjectionState(PhaseState) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class EventProcessingProjectionProcessingPhase : EventSubscriptionBasedProjectionProcessingPhase, IProjectionPhaseCompleter, IProjectionPhaseCheckpointManager, IHandle<EventReaderSubscriptionMessage.ProgressChanged>, IHandle<EventReaderSubscriptionMessage.SubscriptionStarted>, IHandle<EventReaderSubscriptionMessage.NotAuthorized>, IHandle<EventReaderSubscriptionMessage.EofReached>, IHandle<EventReaderSubscriptionMessage.CheckpointSuggested>, IHandle<EventReaderSubscriptionMessage.ReaderAssignedReader>, IHandle<EventReaderSubscriptionMessage.Failed>, IProjectionProcessingPhase, IDisposable, IHandle<CoreProjectionManagementMessage.GetState>, IHandle<CoreProjectionManagementMessage.GetResult>, IHandle<CoreProjectionProcessingMessage.PrerecordedEventsLoaded>, IHandle<EventReaderSubscriptionMessage.CommittedEventReceived>, IHandle<EventReaderSubscriptionMessage.PartitionEofReached>, IHandle<EventReaderSubscriptionMessage.PartitionDeleted>, IHandle<EventReaderSubscriptionMessage.PartitionMeasured>, IEventProcessingProjectionPhase, IProjectionPhaseStateManager Constructors EventProcessingProjectionProcessingPhase(CoreProjection, Guid, IPublisher, IPublisher, ProjectionConfig, Action, IProjectionStateHandler, PartitionStateCache, Boolean, String, ILogger, CheckpointTag, ICoreProjectionCheckpointManager, StatePartitionSelector, ReaderSubscriptionDispatcher, IReaderStrategy, IResultWriter, Boolean, Boolean, Boolean, Boolean, IEmittedStreamsTracker) Declaration public EventProcessingProjectionProcessingPhase(CoreProjection coreProjection, Guid projectionCorrelationId, IPublisher publisher, IPublisher inputQueue, ProjectionConfig projectionConfig, Action updateStatistics, IProjectionStateHandler projectionStateHandler, PartitionStateCache partitionStateCache, bool definesStateTransform, string projectionName, ILogger logger, CheckpointTag zeroCheckpointTag, ICoreProjectionCheckpointManager coreProjectionCheckpointManager, StatePartitionSelector statePartitionSelector, ReaderSubscriptionDispatcher subscriptionDispatcher, IReaderStrategy readerStrategy, IResultWriter resultWriter, bool useCheckpoints, bool stopOnEof, bool isBiState, bool orderedPartitionProcessing, IEmittedStreamsTracker emittedStreamsTracker) Parameters Type Name CoreProjection coreProjection System.Guid projectionCorrelationId IPublisher publisher IPublisher inputQueue ProjectionConfig projectionConfig System.Action updateStatistics IProjectionStateHandler projectionStateHandler PartitionStateCache partitionStateCache System.Boolean definesStateTransform System.String projectionName ILogger logger CheckpointTag zeroCheckpointTag ICoreProjectionCheckpointManager coreProjectionCheckpointManager StatePartitionSelector statePartitionSelector ReaderSubscriptionDispatcher subscriptionDispatcher IReaderStrategy readerStrategy IResultWriter resultWriter System.Boolean useCheckpoints System.Boolean stopOnEof System.Boolean isBiState System.Boolean orderedPartitionProcessing IEmittedStreamsTracker emittedStreamsTracker Methods Dispose() Declaration public override void Dispose() Overrides EventSubscriptionBasedProjectionProcessingPhase.Dispose() GetStatistics(ProjectionStatistics) Declaration public override void GetStatistics(ProjectionStatistics info) Parameters Type Name ProjectionStatistics info Overrides EventSubscriptionBasedProjectionProcessingPhase.GetStatistics(ProjectionStatistics) Handle(EventReaderSubscriptionMessage.CommittedEventReceived) Declaration public void Handle(EventReaderSubscriptionMessage.CommittedEventReceived message) Parameters Type Name EventReaderSubscriptionMessage.CommittedEventReceived message Handle(EventReaderSubscriptionMessage.PartitionDeleted) Declaration public void Handle(EventReaderSubscriptionMessage.PartitionDeleted message) Parameters Type Name EventReaderSubscriptionMessage.PartitionDeleted message Handle(EventReaderSubscriptionMessage.PartitionEofReached) Declaration public void Handle(EventReaderSubscriptionMessage.PartitionEofReached message) Parameters Type Name EventReaderSubscriptionMessage.PartitionEofReached message Handle(EventReaderSubscriptionMessage.PartitionMeasured) Declaration public void Handle(EventReaderSubscriptionMessage.PartitionMeasured message) Parameters Type Name EventReaderSubscriptionMessage.PartitionMeasured message NewCheckpointStarted(CheckpointTag) Declaration public override void NewCheckpointStarted(CheckpointTag at) Parameters Type Name CheckpointTag at Overrides EventSubscriptionBasedProjectionProcessingPhase.NewCheckpointStarted(CheckpointTag) ProcessCommittedEvent(EventReaderSubscriptionMessage.CommittedEventReceived, String) Declaration public EventProcessedResult ProcessCommittedEvent(EventReaderSubscriptionMessage.CommittedEventReceived message, string partition) Parameters Type Name EventReaderSubscriptionMessage.CommittedEventReceived message System.String partition Returns Type Description EventProcessedResult ProcessPartitionDeleted(String, CheckpointTag) Declaration public EventProcessedResult ProcessPartitionDeleted(string partition, CheckpointTag deletedPosition) Parameters Type Name System.String partition CheckpointTag deletedPosition Returns Type Description EventProcessedResult TransformCatalogEvent(EventReaderSubscriptionMessage.CommittedEventReceived) Declaration public string TransformCatalogEvent(EventReaderSubscriptionMessage.CommittedEventReceived message) Parameters Type Name EventReaderSubscriptionMessage.CommittedEventReceived message Returns Type Description System.String Implements IProjectionPhaseCompleter IProjectionPhaseCheckpointManager IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IProjectionProcessingPhase System.IDisposable IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IEventProcessingProjectionPhase IProjectionPhaseStateManager Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.EventProcessedResult.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.EventProcessedResult.html",
    "title": "Class EventProcessedResult | Event Store",
    "keywords": "Class EventProcessedResult Inheritance System.Object EventProcessedResult Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class EventProcessedResult Constructors EventProcessedResult(String, CheckpointTag, PartitionState, PartitionState, PartitionState, PartitionState, EmittedEventEnvelope[], Guid, String, Boolean) Declaration public EventProcessedResult(string partition, CheckpointTag checkpointTag, PartitionState oldState, PartitionState newState, PartitionState oldSharedState, PartitionState newSharedState, EmittedEventEnvelope[] emittedEvents, Guid causedBy, string correlationId, bool isPartitionTombstone = false) Parameters Type Name System.String partition CheckpointTag checkpointTag PartitionState oldState PartitionState newState PartitionState oldSharedState PartitionState newSharedState EmittedEventEnvelope [] emittedEvents System.Guid causedBy System.String correlationId System.Boolean isPartitionTombstone Properties CausedBy Declaration public Guid CausedBy { get; } Property Value Type System.Guid CheckpointTag Declaration public CheckpointTag CheckpointTag { get; } Property Value Type CheckpointTag CorrelationId Declaration public string CorrelationId { get; } Property Value Type System.String EmittedEvents Declaration public EmittedEventEnvelope[] EmittedEvents { get; } Property Value Type EmittedEventEnvelope [] IsPartitionTombstone Declaration public bool IsPartitionTombstone { get; } Property Value Type System.Boolean NewSharedState null - means no state change Declaration public PartitionState NewSharedState { get; } Property Value Type PartitionState NewState null - means no state change Declaration public PartitionState NewState { get; } Property Value Type PartitionState OldSharedState Declaration public PartitionState OldSharedState { get; } Property Value Type PartitionState OldState Declaration public PartitionState OldState { get; } Property Value Type PartitionState Partition Declaration public string Partition { get; } Property Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.EventFilter.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.EventFilter.html",
    "title": "Class EventFilter | Event Store",
    "keywords": "Class EventFilter Inheritance System.Object EventFilter BypassingEventFilter CategoryEventFilter EventByTypeIndexEventFilter MultiStreamEventFilter StreamEventFilter TransactionFileEventFilter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public abstract class EventFilter Constructors EventFilter(Boolean, Boolean, HashSet<String>) Declaration protected EventFilter(bool allEvents, bool includeDeletedStreamEvents, HashSet<string> events) Parameters Type Name System.Boolean allEvents System.Boolean includeDeletedStreamEvents System.Collections.Generic.HashSet < System.String > events Methods DeletedNotificationPasses(String) Declaration protected abstract bool DeletedNotificationPasses(string positionStreamId) Parameters Type Name System.String positionStreamId Returns Type Description System.Boolean GetCategory(String) Declaration public abstract string GetCategory(string positionStreamId) Parameters Type Name System.String positionStreamId Returns Type Description System.String Passes(Boolean, String, String, Boolean) Declaration public bool Passes(bool resolvedFromLinkTo, string eventStreamId, string eventName, bool isStreamDeletedEvent = false) Parameters Type Name System.Boolean resolvedFromLinkTo System.String eventStreamId System.String eventName System.Boolean isStreamDeletedEvent Returns Type Description System.Boolean PassesDeleteNotification(String) Declaration public bool PassesDeleteNotification(string positionStreamId) Parameters Type Name System.String positionStreamId Returns Type Description System.Boolean PassesSource(Boolean, String, String) Declaration public abstract bool PassesSource(bool resolvedFromLinkTo, string positionStreamId, string eventType) Parameters Type Name System.Boolean resolvedFromLinkTo System.String positionStreamId System.String eventType Returns Type Description System.Boolean Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.EventByTypeIndexPositionTagger.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.EventByTypeIndexPositionTagger.html",
    "title": "Class EventByTypeIndexPositionTagger | Event Store",
    "keywords": "Class EventByTypeIndexPositionTagger Inheritance System.Object PositionTagger EventByTypeIndexPositionTagger Inherited Members PositionTagger.Phase System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class EventByTypeIndexPositionTagger : PositionTagger Constructors EventByTypeIndexPositionTagger(Int32, String[], Boolean) Declaration public EventByTypeIndexPositionTagger(int phase, string[] eventTypes, bool includeStreamDeletedNotification = false) Parameters Type Name System.Int32 phase System.String [] eventTypes System.Boolean includeStreamDeletedNotification Methods AdjustTag(CheckpointTag) Declaration public override CheckpointTag AdjustTag(CheckpointTag tag) Parameters Type Name CheckpointTag tag Returns Type Description CheckpointTag Overrides PositionTagger.AdjustTag(CheckpointTag) IsCompatible(CheckpointTag) Declaration public override bool IsCompatible(CheckpointTag checkpointTag) Parameters Type Name CheckpointTag checkpointTag Returns Type Description System.Boolean Overrides PositionTagger.IsCompatible(CheckpointTag) IsMessageAfterCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.CommittedEventDistributed) Declaration public override bool IsMessageAfterCheckpointTag(CheckpointTag previous, ReaderSubscriptionMessage.CommittedEventDistributed committedEvent) Parameters Type Name CheckpointTag previous ReaderSubscriptionMessage.CommittedEventDistributed committedEvent Returns Type Description System.Boolean Overrides PositionTagger.IsMessageAfterCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.CommittedEventDistributed) MakeCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.CommittedEventDistributed) Declaration public override CheckpointTag MakeCheckpointTag(CheckpointTag previous, ReaderSubscriptionMessage.CommittedEventDistributed committedEvent) Parameters Type Name CheckpointTag previous ReaderSubscriptionMessage.CommittedEventDistributed committedEvent Returns Type Description CheckpointTag Overrides PositionTagger.MakeCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.CommittedEventDistributed) MakeCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.EventReaderPartitionDeleted) Declaration public override CheckpointTag MakeCheckpointTag(CheckpointTag previous, ReaderSubscriptionMessage.EventReaderPartitionDeleted partitionDeleted) Parameters Type Name CheckpointTag previous ReaderSubscriptionMessage.EventReaderPartitionDeleted partitionDeleted Returns Type Description CheckpointTag Overrides PositionTagger.MakeCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.EventReaderPartitionDeleted) MakeCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.EventReaderPartitionEof) Declaration public override CheckpointTag MakeCheckpointTag(CheckpointTag previous, ReaderSubscriptionMessage.EventReaderPartitionEof partitionEof) Parameters Type Name CheckpointTag previous ReaderSubscriptionMessage.EventReaderPartitionEof partitionEof Returns Type Description CheckpointTag Overrides PositionTagger.MakeCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.EventReaderPartitionEof) MakeZeroCheckpointTag() Declaration public override CheckpointTag MakeZeroCheckpointTag() Returns Type Description CheckpointTag Overrides PositionTagger.MakeZeroCheckpointTag() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.EventByTypeIndexEventReader.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.EventByTypeIndexEventReader.html",
    "title": "Class EventByTypeIndexEventReader | Event Store",
    "keywords": "Class EventByTypeIndexEventReader Inheritance System.Object EventReader EventByTypeIndexEventReader Implements IEventReader System.IDisposable Inherited Members EventReader.EventReaderCorrelationId EventReader._publisher EventReader._stopOnEof EventReader._disposed EventReader.PauseRequested EventReader.Paused EventReader.ReadAs EventReader.Resume() EventReader.Pause() EventReader.SendEof() EventReader.SendPartitionEof(String, CheckpointTag) EventReader.SendPartitionDeleted_WhenReadingDataStream(String, Nullable<Int64>, Nullable<TFPos>, Nullable<TFPos>, String, Nullable<Int32>, CheckpointTag) EventReader.SendNotAuthorized() EventReader.GetLastCommitPositionFrom(ClientMessage.ReadStreamEventsForwardCompleted) EventReader.PauseOrContinueProcessing() EventReader.NotifyIfStarting(Int64) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class EventByTypeIndexEventReader : EventReader, IEventReader, IDisposable Constructors EventByTypeIndexEventReader(IPublisher, Guid, IPrincipal, String[], Boolean, TFPos, Dictionary<String, Int64>, Boolean, ITimeProvider, Boolean) Declaration public EventByTypeIndexEventReader(IPublisher publisher, Guid eventReaderCorrelationId, IPrincipal readAs, string[] eventTypes, bool includeDeletedStreamNotification, TFPos fromTfPosition, Dictionary<string, long> fromPositions, bool resolveLinkTos, ITimeProvider timeProvider, bool stopOnEof = false) Parameters Type Name IPublisher publisher System.Guid eventReaderCorrelationId System.Security.Principal.IPrincipal readAs System.String [] eventTypes System.Boolean includeDeletedStreamNotification TFPos fromTfPosition System.Collections.Generic.Dictionary < System.String , System.Int64 > fromPositions System.Boolean resolveLinkTos ITimeProvider timeProvider System.Boolean stopOnEof Fields MaxReadCount Declaration public const int MaxReadCount = 50 Field Value Type System.Int32 Methods AreEventsRequested() Declaration protected override bool AreEventsRequested() Returns Type Description System.Boolean Overrides EventReader.AreEventsRequested() Dispose() Declaration public override void Dispose() Overrides EventReader.Dispose() RequestEvents() Declaration protected override void RequestEvents() Overrides EventReader.RequestEvents() Implements IEventReader System.IDisposable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.EventByTypeIndexEventFilter.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.EventByTypeIndexEventFilter.html",
    "title": "Class EventByTypeIndexEventFilter | Event Store",
    "keywords": "Class EventByTypeIndexEventFilter Inheritance System.Object EventFilter EventByTypeIndexEventFilter Inherited Members EventFilter.Passes(Boolean, String, String, Boolean) EventFilter.PassesDeleteNotification(String) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class EventByTypeIndexEventFilter : EventFilter Constructors EventByTypeIndexEventFilter(HashSet<String>) Declaration public EventByTypeIndexEventFilter(HashSet<string> events) Parameters Type Name System.Collections.Generic.HashSet < System.String > events Methods DeletedNotificationPasses(String) Declaration protected override bool DeletedNotificationPasses(string positionStreamId) Parameters Type Name System.String positionStreamId Returns Type Description System.Boolean Overrides EventFilter.DeletedNotificationPasses(String) GetCategory(String) Declaration public override string GetCategory(string positionStreamId) Parameters Type Name System.String positionStreamId Returns Type Description System.String Overrides EventFilter.GetCategory(String) PassesSource(Boolean, String, String) Declaration public override bool PassesSource(bool resolvedFromLinkTo, string positionStreamId, string eventType) Parameters Type Name System.Boolean resolvedFromLinkTo System.String positionStreamId System.String eventType Returns Type Description System.Boolean Overrides EventFilter.PassesSource(Boolean, String, String) Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.EmittedStreamsWriter.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.EmittedStreamsWriter.html",
    "title": "Class EmittedStreamsWriter | Event Store",
    "keywords": "Class EmittedStreamsWriter Inheritance System.Object EmittedStreamsWriter Implements IEmittedStreamsWriter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class EmittedStreamsWriter : IEmittedStreamsWriter Constructors EmittedStreamsWriter(IODispatcher) Declaration public EmittedStreamsWriter(IODispatcher ioDispatcher) Parameters Type Name IODispatcher ioDispatcher Methods WriteEvents(String, Int64, Event[], IPrincipal, Action<ClientMessage.WriteEventsCompleted>) Declaration public void WriteEvents(string streamId, long expectedVersion, Event[] events, IPrincipal writeAs, Action<ClientMessage.WriteEventsCompleted> complete) Parameters Type Name System.String streamId System.Int64 expectedVersion Event [] events System.Security.Principal.IPrincipal writeAs System.Action < ClientMessage.WriteEventsCompleted > complete Implements IEmittedStreamsWriter Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.EmittedStreamsTracker.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.EmittedStreamsTracker.html",
    "title": "Class EmittedStreamsTracker | Event Store",
    "keywords": "Class EmittedStreamsTracker Inheritance System.Object EmittedStreamsTracker Implements IEmittedStreamsTracker Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class EmittedStreamsTracker : IEmittedStreamsTracker Constructors EmittedStreamsTracker(IODispatcher, ProjectionConfig, ProjectionNamesBuilder) Declaration public EmittedStreamsTracker(IODispatcher ioDispatcher, ProjectionConfig projectionConfig, ProjectionNamesBuilder projectionNamesBuilder) Parameters Type Name IODispatcher ioDispatcher ProjectionConfig projectionConfig ProjectionNamesBuilder projectionNamesBuilder Methods Initialize() Declaration public void Initialize() TrackEmittedStream(EmittedEvent[]) Declaration public void TrackEmittedStream(EmittedEvent[] emittedEvents) Parameters Type Name EmittedEvent [] emittedEvents Implements IEmittedStreamsTracker Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.PartitionMeasured.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.PartitionMeasured.html",
    "title": "Class EventReaderSubscriptionMessage.PartitionMeasured | Event Store",
    "keywords": "Class EventReaderSubscriptionMessage.PartitionMeasured Inheritance System.Object Message EventReaderSubscriptionMessageBase EventReaderSubscriptionMessage.PartitionMeasured Inherited Members EventReaderSubscriptionMessageBase.CheckpointTag EventReaderSubscriptionMessageBase.Progress EventReaderSubscriptionMessageBase.SubscriptionMessageSequenceNumber EventReaderSubscriptionMessageBase.SubscriptionId EventReaderSubscriptionMessageBase.Source Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class PartitionMeasured : EventReaderSubscriptionMessageBase Constructors PartitionMeasured(Guid, String, Int64, Int64, Object) Declaration public PartitionMeasured(Guid subscriptionId, string partition, long size, long subscriptionMessageSequenceNumber, object source = null) Parameters Type Name System.Guid subscriptionId System.String partition System.Int64 size System.Int64 subscriptionMessageSequenceNumber System.Object source Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides EventReaderSubscriptionMessageBase.MsgTypeId Partition Declaration public string Partition { get; } Property Value Type System.String Size Declaration public long Size { get; } Property Value Type System.Int64 Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.PartitionEofReached.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.PartitionEofReached.html",
    "title": "Class EventReaderSubscriptionMessage.PartitionEofReached | Event Store",
    "keywords": "Class EventReaderSubscriptionMessage.PartitionEofReached Inheritance System.Object Message EventReaderSubscriptionMessageBase EventReaderSubscriptionMessage.PartitionEofReached Inherited Members EventReaderSubscriptionMessageBase.CheckpointTag EventReaderSubscriptionMessageBase.Progress EventReaderSubscriptionMessageBase.SubscriptionMessageSequenceNumber EventReaderSubscriptionMessageBase.SubscriptionId EventReaderSubscriptionMessageBase.Source Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class PartitionEofReached : EventReaderSubscriptionMessageBase Constructors PartitionEofReached(Guid, CheckpointTag, String, Int64, Object) Declaration public PartitionEofReached(Guid subscriptionId, CheckpointTag checkpointTag, string partition, long subscriptionMessageSequenceNumber, object source = null) Parameters Type Name System.Guid subscriptionId CheckpointTag checkpointTag System.String partition System.Int64 subscriptionMessageSequenceNumber System.Object source Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides EventReaderSubscriptionMessageBase.MsgTypeId Partition Declaration public string Partition { get; } Property Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.PartitionDeleted.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.PartitionDeleted.html",
    "title": "Class EventReaderSubscriptionMessage.PartitionDeleted | Event Store",
    "keywords": "Class EventReaderSubscriptionMessage.PartitionDeleted NOTEL the PartitionDeleted may appear out-of-order and is not guaranteed to appear at the same sequence position in a recovery Inheritance System.Object Message EventReaderSubscriptionMessageBase EventReaderSubscriptionMessage.PartitionDeleted Inherited Members EventReaderSubscriptionMessageBase.CheckpointTag EventReaderSubscriptionMessageBase.Progress EventReaderSubscriptionMessageBase.SubscriptionMessageSequenceNumber EventReaderSubscriptionMessageBase.SubscriptionId EventReaderSubscriptionMessageBase.Source Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class PartitionDeleted : EventReaderSubscriptionMessageBase Constructors PartitionDeleted(Guid, CheckpointTag, String, Int64, Object) Declaration public PartitionDeleted(Guid subscriptionId, CheckpointTag checkpointTag, string partition, long subscriptionMessageSequenceNumber, object source = null) Parameters Type Name System.Guid subscriptionId CheckpointTag checkpointTag System.String partition System.Int64 subscriptionMessageSequenceNumber System.Object source Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides EventReaderSubscriptionMessageBase.MsgTypeId Partition Declaration public string Partition { get; } Property Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.NotAuthorized.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.NotAuthorized.html",
    "title": "Class EventReaderSubscriptionMessage.NotAuthorized | Event Store",
    "keywords": "Class EventReaderSubscriptionMessage.NotAuthorized Inheritance System.Object Message EventReaderSubscriptionMessageBase EventReaderSubscriptionMessage.NotAuthorized Inherited Members EventReaderSubscriptionMessageBase.CheckpointTag EventReaderSubscriptionMessageBase.Progress EventReaderSubscriptionMessageBase.SubscriptionMessageSequenceNumber EventReaderSubscriptionMessageBase.SubscriptionId EventReaderSubscriptionMessageBase.Source Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public sealed class NotAuthorized : EventReaderSubscriptionMessageBase Constructors NotAuthorized(Guid, CheckpointTag, Single, Int64, Object) Declaration public NotAuthorized(Guid subscriptionId, CheckpointTag checkpointTag, float progress, long subscriptionMessageSequenceNumber, object source = null) Parameters Type Name System.Guid subscriptionId CheckpointTag checkpointTag System.Single progress System.Int64 subscriptionMessageSequenceNumber System.Object source Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides EventReaderSubscriptionMessageBase.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.Failed.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.Failed.html",
    "title": "Class EventReaderSubscriptionMessage.Failed | Event Store",
    "keywords": "Class EventReaderSubscriptionMessage.Failed Inheritance System.Object Message EventReaderSubscriptionMessageBase EventReaderSubscriptionMessage.Failed Inherited Members EventReaderSubscriptionMessageBase.CheckpointTag EventReaderSubscriptionMessageBase.Progress EventReaderSubscriptionMessageBase.SubscriptionMessageSequenceNumber EventReaderSubscriptionMessageBase.SubscriptionId EventReaderSubscriptionMessageBase.Source Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public sealed class Failed : EventReaderSubscriptionMessageBase Constructors Failed(Guid, String) Declaration public Failed(Guid subscriptionId, string reason) Parameters Type Name System.Guid subscriptionId System.String reason Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides EventReaderSubscriptionMessageBase.MsgTypeId Reason Declaration public string Reason { get; } Property Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.EofReached.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.EofReached.html",
    "title": "Class EventReaderSubscriptionMessage.EofReached | Event Store",
    "keywords": "Class EventReaderSubscriptionMessage.EofReached Inheritance System.Object Message EventReaderSubscriptionMessageBase EventReaderSubscriptionMessage.EofReached Inherited Members EventReaderSubscriptionMessageBase.CheckpointTag EventReaderSubscriptionMessageBase.Progress EventReaderSubscriptionMessageBase.SubscriptionMessageSequenceNumber EventReaderSubscriptionMessageBase.SubscriptionId EventReaderSubscriptionMessageBase.Source Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class EofReached : EventReaderSubscriptionMessageBase Constructors EofReached(Guid, CheckpointTag, Int64, Object) Declaration public EofReached(Guid subscriptionId, CheckpointTag checkpointTag, long subscriptionMessageSequenceNumber, object source = null) Parameters Type Name System.Guid subscriptionId CheckpointTag checkpointTag System.Int64 subscriptionMessageSequenceNumber System.Object source Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides EventReaderSubscriptionMessageBase.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CommittedEventReceived.html",
    "title": "Class EventReaderSubscriptionMessage.CommittedEventReceived | Event Store",
    "keywords": "Class EventReaderSubscriptionMessage.CommittedEventReceived Inheritance System.Object Message EventReaderSubscriptionMessageBase EventReaderSubscriptionMessage.CommittedEventReceived Inherited Members EventReaderSubscriptionMessageBase.CheckpointTag EventReaderSubscriptionMessageBase.Progress EventReaderSubscriptionMessageBase.SubscriptionMessageSequenceNumber EventReaderSubscriptionMessageBase.SubscriptionId EventReaderSubscriptionMessageBase.Source Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class CommittedEventReceived : EventReaderSubscriptionMessageBase Properties Data Declaration public ResolvedEvent Data { get; } Property Value Type ResolvedEvent EventCategory Declaration public string EventCategory { get; } Property Value Type System.String MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides EventReaderSubscriptionMessageBase.MsgTypeId Methods FromCommittedEventDistributed(ReaderSubscriptionMessage.CommittedEventDistributed, CheckpointTag, String, Guid, Int64) Declaration public static EventReaderSubscriptionMessage.CommittedEventReceived FromCommittedEventDistributed(ReaderSubscriptionMessage.CommittedEventDistributed message, CheckpointTag checkpointTag, string eventCategory, Guid subscriptionId, long subscriptionMessageSequenceNumber) Parameters Type Name ReaderSubscriptionMessage.CommittedEventDistributed message CheckpointTag checkpointTag System.String eventCategory System.Guid subscriptionId System.Int64 subscriptionMessageSequenceNumber Returns Type Description EventReaderSubscriptionMessage.CommittedEventReceived Sample(ResolvedEvent, CheckpointTag, Guid, Int64) Declaration public static EventReaderSubscriptionMessage.CommittedEventReceived Sample(ResolvedEvent data, CheckpointTag checkpointTag, Guid subscriptionId, long subscriptionMessageSequenceNumber) Parameters Type Name ResolvedEvent data CheckpointTag checkpointTag System.Guid subscriptionId System.Int64 subscriptionMessageSequenceNumber Returns Type Description EventReaderSubscriptionMessage.CommittedEventReceived Sample(ResolvedEvent, Guid, Int64) Declaration public static EventReaderSubscriptionMessage.CommittedEventReceived Sample(ResolvedEvent data, Guid subscriptionId, long subscriptionMessageSequenceNumber) Parameters Type Name ResolvedEvent data System.Guid subscriptionId System.Int64 subscriptionMessageSequenceNumber Returns Type Description EventReaderSubscriptionMessage.CommittedEventReceived ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CheckpointSuggested.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.EventReaderSubscriptionMessage.CheckpointSuggested.html",
    "title": "Class EventReaderSubscriptionMessage.CheckpointSuggested | Event Store",
    "keywords": "Class EventReaderSubscriptionMessage.CheckpointSuggested A CheckpointSuggested message is sent to core projection to allow bookmarking a position that can be used to restore the projection processing (typically an event at this position does not satisfy projection filter) Inheritance System.Object Message EventReaderSubscriptionMessageBase EventReaderSubscriptionMessage.CheckpointSuggested Inherited Members EventReaderSubscriptionMessageBase.CheckpointTag EventReaderSubscriptionMessageBase.Progress EventReaderSubscriptionMessageBase.SubscriptionMessageSequenceNumber EventReaderSubscriptionMessageBase.SubscriptionId EventReaderSubscriptionMessageBase.Source Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class CheckpointSuggested : EventReaderSubscriptionMessageBase Constructors CheckpointSuggested(Guid, CheckpointTag, Single, Int64, Object) Declaration public CheckpointSuggested(Guid subscriptionId, CheckpointTag checkpointTag, float progress, long subscriptionMessageSequenceNumber, object source = null) Parameters Type Name System.Guid subscriptionId CheckpointTag checkpointTag System.Single progress System.Int64 subscriptionMessageSequenceNumber System.Object source Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides EventReaderSubscriptionMessageBase.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.html",
    "title": "Class CoreProjectionStatusMessage | Event Store",
    "keywords": "Class CoreProjectionStatusMessage Inheritance System.Object CoreProjectionStatusMessage Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public static class CoreProjectionStatusMessage"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Stopped.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Stopped.html",
    "title": "Class CoreProjectionStatusMessage.Stopped | Event Store",
    "keywords": "Class CoreProjectionStatusMessage.Stopped Inheritance System.Object Message CoreProjectionManagementMessageBase CoreProjectionStatusMessage.CoreProjectionStatusMessageBase CoreProjectionStatusMessage.Stopped Inherited Members CoreProjectionManagementMessageBase.ProjectionId Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class Stopped : CoreProjectionStatusMessage.CoreProjectionStatusMessageBase Constructors Stopped(Guid, String, Boolean) Declaration public Stopped(Guid projectionId, string name, bool completed) Parameters Type Name System.Guid projectionId System.String name System.Boolean completed Properties Completed Declaration public bool Completed { get; } Property Value Type System.Boolean MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides CoreProjectionStatusMessage.CoreProjectionStatusMessageBase.MsgTypeId Name Declaration public string Name { get; } Property Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StatisticsReport.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StatisticsReport.html",
    "title": "Class CoreProjectionStatusMessage.StatisticsReport | Event Store",
    "keywords": "Class CoreProjectionStatusMessage.StatisticsReport Inheritance System.Object Message CoreProjectionManagementMessageBase CoreProjectionStatusMessage.CoreProjectionStatusMessageBase CoreProjectionStatusMessage.StatisticsReport Inherited Members CoreProjectionManagementMessageBase.ProjectionId Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class StatisticsReport : CoreProjectionStatusMessage.CoreProjectionStatusMessageBase Constructors StatisticsReport(Guid, ProjectionStatistics, Int32) Declaration public StatisticsReport(Guid projectionId, ProjectionStatistics statistics, int sequentialNumber) Parameters Type Name System.Guid projectionId ProjectionStatistics statistics System.Int32 sequentialNumber Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides CoreProjectionStatusMessage.CoreProjectionStatusMessageBase.MsgTypeId SequentialNumber Declaration public int SequentialNumber { get; } Property Value Type System.Int32 Statistics Declaration public ProjectionStatistics Statistics { get; } Property Value Type ProjectionStatistics Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StateReport.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.StateReport.html",
    "title": "Class CoreProjectionStatusMessage.StateReport | Event Store",
    "keywords": "Class CoreProjectionStatusMessage.StateReport Inheritance System.Object Message CoreProjectionManagementMessageBase CoreProjectionStatusMessage.CoreProjectionStatusMessageBase CoreProjectionStatusMessage.DataReportBase CoreProjectionStatusMessage.StateReport Inherited Members CoreProjectionStatusMessage.DataReportBase.Partition CoreProjectionStatusMessage.DataReportBase.CorrelationId CoreProjectionStatusMessage.DataReportBase.Position CoreProjectionManagementMessageBase.ProjectionId Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class StateReport : CoreProjectionStatusMessage.DataReportBase Constructors StateReport(Guid, Guid, String, String, CheckpointTag) Declaration public StateReport(Guid correlationId, Guid projectionId, string partition, string state, CheckpointTag position) Parameters Type Name System.Guid correlationId System.Guid projectionId System.String partition System.String state CheckpointTag position Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides CoreProjectionStatusMessage.DataReportBase.MsgTypeId State Declaration public string State { get; } Property Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.TransactionLog.RecordWriteResult.html": {
    "href": "dotnet-api/code/EventStore.Core.TransactionLog.RecordWriteResult.html",
    "title": "Struct RecordWriteResult | Event Store",
    "keywords": "Struct RecordWriteResult Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.TransactionLog Assembly : EventStore.Core.dll Syntax public struct RecordWriteResult Constructors RecordWriteResult(Boolean, Int64, Int64) Declaration public RecordWriteResult(bool success, long oldPosition, long newPosition) Parameters Type Name System.Boolean success System.Int64 oldPosition System.Int64 newPosition Fields NewPosition Declaration public readonly long NewPosition Field Value Type System.Int64 OldPosition Declaration public readonly long OldPosition Field Value Type System.Int64 Success Declaration public bool Success Field Value Type System.Boolean Methods Failed(Int64) Declaration public static RecordWriteResult Failed(long position) Parameters Type Name System.Int64 position Returns Type Description RecordWriteResult Successful(Int64, Int64) Declaration public static RecordWriteResult Successful(long oldPosition, long newPosition) Parameters Type Name System.Int64 oldPosition System.Int64 newPosition Returns Type Description RecordWriteResult ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) EnumExtensions.EnumValueName<T>(T) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.TransactionLog.RecordReadResult.html": {
    "href": "dotnet-api/code/EventStore.Core.TransactionLog.RecordReadResult.html",
    "title": "Struct RecordReadResult | Event Store",
    "keywords": "Struct RecordReadResult Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.TransactionLog Assembly : EventStore.Core.dll Syntax public struct RecordReadResult Constructors RecordReadResult(Boolean, Int64, LogRecord, Int32) Declaration public RecordReadResult(bool success, long nextPosition, LogRecord logRecord, int recordLength) Parameters Type Name System.Boolean success System.Int64 nextPosition LogRecord logRecord System.Int32 recordLength Fields Failure Declaration public static readonly RecordReadResult Failure Field Value Type RecordReadResult LogRecord Declaration public readonly LogRecord LogRecord Field Value Type LogRecord NextPosition Declaration public readonly long NextPosition Field Value Type System.Int64 RecordLength Declaration public readonly int RecordLength Field Value Type System.Int32 Success Declaration public readonly bool Success Field Value Type System.Boolean Methods ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) EnumExtensions.EnumValueName<T>(T) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.TransactionLog.LogRecords.html": {
    "href": "dotnet-api/code/EventStore.Core.TransactionLog.LogRecords.html",
    "title": "Namespace EventStore.Core.TransactionLog.LogRecords | Event Store",
    "keywords": "Namespace EventStore.Core.TransactionLog.LogRecords Classes CommitLogRecord EpochRecord EpochRecordExtensions LogRecord LogRecordVersion PrepareFlagsExtensions PrepareLogRecord SystemLogRecord Enums LogRecordType PrepareFlags SystemRecordSerialization SystemRecordType"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Resume.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Resume.html",
    "title": "Class ReaderSubscriptionManagement.Resume | Event Store",
    "keywords": "Class ReaderSubscriptionManagement.Resume Inheritance System.Object Message ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage ReaderSubscriptionManagement.Resume Inherited Members ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage.SubscriptionId Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class Resume : ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage Constructors Resume(Guid) Declaration public Resume(Guid subscriptionId) Parameters Type Name System.Guid subscriptionId Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage.html",
    "title": "Class ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage | Event Store",
    "keywords": "Class ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage Inheritance System.Object Message ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage ReaderSubscriptionManagement.Pause ReaderSubscriptionManagement.Resume ReaderSubscriptionManagement.Subscribe ReaderSubscriptionManagement.Unsubscribe Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public abstract class ReaderSubscriptionManagementMessage : Message Constructors ReaderSubscriptionManagementMessage(Guid) Declaration protected ReaderSubscriptionManagementMessage(Guid subscriptionId) Parameters Type Name System.Guid subscriptionId Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId SubscriptionId Declaration public Guid SubscriptionId { get; } Property Value Type System.Guid Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Pause.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Pause.html",
    "title": "Class ReaderSubscriptionManagement.Pause | Event Store",
    "keywords": "Class ReaderSubscriptionManagement.Pause Inheritance System.Object Message ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage ReaderSubscriptionManagement.Pause Inherited Members ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage.SubscriptionId Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class Pause : ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage Constructors Pause(Guid) Declaration public Pause(Guid subscriptionId) Parameters Type Name System.Guid subscriptionId Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.CompleteSpooledStreamReading.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.CompleteSpooledStreamReading.html",
    "title": "Class ReaderSubscriptionManagement.CompleteSpooledStreamReading | Event Store",
    "keywords": "Class ReaderSubscriptionManagement.CompleteSpooledStreamReading Inheritance System.Object Message ReaderSubscriptionManagement.CompleteSpooledStreamReading Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public sealed class CompleteSpooledStreamReading : Message Constructors CompleteSpooledStreamReading(Guid) Declaration public CompleteSpooledStreamReading(Guid subscriptionId) Parameters Type Name System.Guid subscriptionId Fields SubscriptionId Declaration public readonly Guid SubscriptionId Field Value Type System.Guid Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ReaderCoreServiceMessage.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ReaderCoreServiceMessage.html",
    "title": "Class ReaderCoreServiceMessage | Event Store",
    "keywords": "Class ReaderCoreServiceMessage Inheritance System.Object ReaderCoreServiceMessage Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public static class ReaderCoreServiceMessage"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ReaderCoreServiceMessage.StopReader.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ReaderCoreServiceMessage.StopReader.html",
    "title": "Class ReaderCoreServiceMessage.StopReader | Event Store",
    "keywords": "Class ReaderCoreServiceMessage.StopReader Inheritance System.Object Message ReaderCoreServiceMessage.StopReader Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class StopReader : Message Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ReaderCoreServiceMessage.StartReader.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ReaderCoreServiceMessage.StartReader.html",
    "title": "Class ReaderCoreServiceMessage.StartReader | Event Store",
    "keywords": "Class ReaderCoreServiceMessage.StartReader Inheritance System.Object Message ReaderCoreServiceMessage.StartReader Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class StartReader : Message Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ReaderCoreServiceMessage.ReaderTick.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ReaderCoreServiceMessage.ReaderTick.html",
    "title": "Class ReaderCoreServiceMessage.ReaderTick | Event Store",
    "keywords": "Class ReaderCoreServiceMessage.ReaderTick Inheritance System.Object Message ReaderCoreServiceMessage.ReaderTick Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class ReaderTick : Message Constructors ReaderTick(Action) Declaration public ReaderTick(Action action) Parameters Type Name System.Action action Properties Action Declaration public Action Action { get; } Property Value Type System.Action MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Http.Authentication.Rfc2898PasswordHashAlgorithm.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Http.Authentication.Rfc2898PasswordHashAlgorithm.html",
    "title": "Class Rfc2898PasswordHashAlgorithm | Event Store",
    "keywords": "Class Rfc2898PasswordHashAlgorithm Inheritance System.Object PasswordHashAlgorithm Rfc2898PasswordHashAlgorithm Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Transport.Http.Authentication Assembly : EventStore.Core.dll Syntax public class Rfc2898PasswordHashAlgorithm : PasswordHashAlgorithm Methods Hash(String, out String, out String) Declaration public override void Hash(string password, out string hash, out string salt) Parameters Type Name System.String password System.String hash System.String salt Overrides PasswordHashAlgorithm.Hash(String, out String, out String) Verify(String, String, String) Declaration public override bool Verify(string password, string hash, string salt) Parameters Type Name System.String password System.String hash System.String salt Returns Type Description System.Boolean Overrides PasswordHashAlgorithm.Verify(String, String, String) Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Http.Authentication.PasswordChangeNotificationReader.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Http.Authentication.PasswordChangeNotificationReader.html",
    "title": "Class PasswordChangeNotificationReader | Event Store",
    "keywords": "Class PasswordChangeNotificationReader Inheritance System.Object PasswordChangeNotificationReader Implements IHandle < SystemMessage.SystemStart > IHandle < SystemMessage.BecomeShutdown > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Transport.Http.Authentication Assembly : EventStore.Core.dll Syntax public class PasswordChangeNotificationReader : IHandle<SystemMessage.SystemStart>, IHandle<SystemMessage.BecomeShutdown> Constructors PasswordChangeNotificationReader(IPublisher, IODispatcher) Declaration public PasswordChangeNotificationReader(IPublisher publisher, IODispatcher ioDispatcher) Parameters Type Name IPublisher publisher IODispatcher ioDispatcher Methods Handle(SystemMessage.BecomeShutdown) Declaration public void Handle(SystemMessage.BecomeShutdown message) Parameters Type Name SystemMessage.BecomeShutdown message Handle(SystemMessage.SystemStart) Declaration public void Handle(SystemMessage.SystemStart message) Parameters Type Name SystemMessage.SystemStart message Implements IHandle<T> IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Http.Authentication.HttpAuthenticationProvider.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Http.Authentication.HttpAuthenticationProvider.html",
    "title": "Class HttpAuthenticationProvider | Event Store",
    "keywords": "Class HttpAuthenticationProvider Inheritance System.Object HttpAuthenticationProvider AnonymousHttpAuthenticationProvider BasicHttpAuthenticationProvider TrustedHttpAuthenticationProvider Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Transport.Http.Authentication Assembly : EventStore.Core.dll Syntax public abstract class HttpAuthenticationProvider Methods Authenticate(IncomingHttpRequestMessage) Declaration public abstract bool Authenticate(IncomingHttpRequestMessage message) Parameters Type Name IncomingHttpRequestMessage message Returns Type Description System.Boolean Authenticated(IncomingHttpRequestMessage, IPrincipal) Declaration protected void Authenticated(IncomingHttpRequestMessage message, IPrincipal user) Parameters Type Name IncomingHttpRequestMessage message System.Security.Principal.IPrincipal user ReplyInternalServerError(HttpEntity) Declaration public static void ReplyInternalServerError(HttpEntity entity) Parameters Type Name HttpEntity entity ReplyNotYetAvailable(HttpEntity) Declaration public static void ReplyNotYetAvailable(HttpEntity entity) Parameters Type Name HttpEntity entity ReplyUnauthorized(HttpEntity) Declaration public static void ReplyUnauthorized(HttpEntity entity) Parameters Type Name HttpEntity entity Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.SystemMessage.EpochWritten.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.SystemMessage.EpochWritten.html",
    "title": "Class SystemMessage.EpochWritten | Event Store",
    "keywords": "Class SystemMessage.EpochWritten Inheritance System.Object Message SystemMessage.EpochWritten Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class EpochWritten : Message Constructors EpochWritten(EpochRecord) Declaration public EpochWritten(EpochRecord epoch) Parameters Type Name EpochRecord epoch Fields Epoch Declaration public readonly EpochRecord Epoch Field Value Type EpochRecord Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.StorageMessage.RequestManagerTimerTick.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.StorageMessage.RequestManagerTimerTick.html",
    "title": "Class StorageMessage.RequestManagerTimerTick | Event Store",
    "keywords": "Class StorageMessage.RequestManagerTimerTick Inheritance System.Object Message StorageMessage.RequestManagerTimerTick Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class RequestManagerTimerTick : Message Constructors RequestManagerTimerTick() Declaration public RequestManagerTimerTick() RequestManagerTimerTick(DateTime) Declaration public RequestManagerTimerTick(DateTime now) Parameters Type Name System.DateTime now Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId UtcNow Declaration public DateTime UtcNow { get; } Property Value Type System.DateTime Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.StorageMessage.RequestCompleted.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.StorageMessage.RequestCompleted.html",
    "title": "Class StorageMessage.RequestCompleted | Event Store",
    "keywords": "Class StorageMessage.RequestCompleted Inheritance System.Object Message StorageMessage.RequestCompleted Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class RequestCompleted : Message Constructors RequestCompleted(Guid, Boolean, Int64) Declaration public RequestCompleted(Guid correlationId, bool success, long currentVersion = -1L) Parameters Type Name System.Guid correlationId System.Boolean success System.Int64 currentVersion Fields CorrelationId Declaration public readonly Guid CorrelationId Field Value Type System.Guid CurrentVersion Declaration public readonly long CurrentVersion Field Value Type System.Int64 Success Declaration public readonly bool Success Field Value Type System.Boolean Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.StorageMessage.PrepareAck.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.StorageMessage.PrepareAck.html",
    "title": "Class StorageMessage.PrepareAck | Event Store",
    "keywords": "Class StorageMessage.PrepareAck Inheritance System.Object Message StorageMessage.PrepareAck Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class PrepareAck : Message Constructors PrepareAck(Guid, Int64, PrepareFlags) Declaration public PrepareAck(Guid correlationId, long logPosition, PrepareFlags flags) Parameters Type Name System.Guid correlationId System.Int64 logPosition PrepareFlags flags Fields CorrelationId Declaration public readonly Guid CorrelationId Field Value Type System.Guid Flags Declaration public readonly PrepareFlags Flags Field Value Type PrepareFlags LogPosition Declaration public readonly long LogPosition Field Value Type System.Int64 Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.StorageMessage.InvalidTransaction.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.StorageMessage.InvalidTransaction.html",
    "title": "Class StorageMessage.InvalidTransaction | Event Store",
    "keywords": "Class StorageMessage.InvalidTransaction Inheritance System.Object Message StorageMessage.InvalidTransaction Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class InvalidTransaction : Message Constructors InvalidTransaction(Guid) Declaration public InvalidTransaction(Guid correlationId) Parameters Type Name System.Guid correlationId Fields CorrelationId Declaration public readonly Guid CorrelationId Field Value Type System.Guid Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.StorageMessage.IPreconditionedWriteMessage.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.StorageMessage.IPreconditionedWriteMessage.html",
    "title": "Interface StorageMessage.IPreconditionedWriteMessage | Event Store",
    "keywords": "Interface StorageMessage.IPreconditionedWriteMessage Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public interface IPreconditionedWriteMessage Properties CorrelationId Declaration Guid CorrelationId { get; } Property Value Type System.Guid Envelope Declaration IEnvelope Envelope { get; } Property Value Type IEnvelope EventStreamId Declaration string EventStreamId { get; } Property Value Type System.String ExpectedVersion Declaration long ExpectedVersion { get; } Property Value Type System.Int64 Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.StorageMessage.IMasterWriteMessage.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.StorageMessage.IMasterWriteMessage.html",
    "title": "Interface StorageMessage.IMasterWriteMessage | Event Store",
    "keywords": "Interface StorageMessage.IMasterWriteMessage Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public interface IMasterWriteMessage Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.StorageMessage.IFlushableMessage.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.StorageMessage.IFlushableMessage.html",
    "title": "Interface StorageMessage.IFlushableMessage | Event Store",
    "keywords": "Interface StorageMessage.IFlushableMessage Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public interface IFlushableMessage Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.StorageMessage.EventCommitted.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.StorageMessage.EventCommitted.html",
    "title": "Class StorageMessage.EventCommitted | Event Store",
    "keywords": "Class StorageMessage.EventCommitted Inheritance System.Object Message StorageMessage.EventCommitted Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class EventCommitted : Message Constructors EventCommitted(Int64, EventRecord, Boolean) Declaration public EventCommitted(long commitPosition, EventRecord event, bool isTfEof) Parameters Type Name System.Int64 commitPosition EventRecord event System.Boolean isTfEof Fields CommitPosition Declaration public readonly long CommitPosition Field Value Type System.Int64 Event Declaration public readonly EventRecord Event Field Value Type EventRecord TfEof Declaration public readonly bool TfEof Field Value Type System.Boolean Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ReplicationMessage.ReplicationStats.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ReplicationMessage.ReplicationStats.html",
    "title": "Class ReplicationMessage.ReplicationStats | Event Store",
    "keywords": "Class ReplicationMessage.ReplicationStats Inheritance System.Object ReplicationMessage.ReplicationStats Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class ReplicationStats Constructors ReplicationStats(Guid, Guid, String, Int32, Int64, Int64, Int32, Int32) Declaration public ReplicationStats(Guid subscriptionId, Guid connectionId, string subscriptionEndpoint, int sendQueueSize, long totalBytesSent, long totalBytesReceived, int pendingSendBytes, int pendingReceivedBytes) Parameters Type Name System.Guid subscriptionId System.Guid connectionId System.String subscriptionEndpoint System.Int32 sendQueueSize System.Int64 totalBytesSent System.Int64 totalBytesReceived System.Int32 pendingSendBytes System.Int32 pendingReceivedBytes Properties ConnectionId Declaration public Guid ConnectionId { get; } Property Value Type System.Guid PendingReceivedBytes Declaration public int PendingReceivedBytes { get; } Property Value Type System.Int32 PendingSendBytes Declaration public int PendingSendBytes { get; } Property Value Type System.Int32 SendQueueSize Declaration public int SendQueueSize { get; } Property Value Type System.Int32 SubscriptionEndpoint Declaration public string SubscriptionEndpoint { get; } Property Value Type System.String SubscriptionId Declaration public Guid SubscriptionId { get; } Property Value Type System.Guid TotalBytesReceived Declaration public long TotalBytesReceived { get; } Property Value Type System.Int64 TotalBytesSent Declaration public long TotalBytesSent { get; } Property Value Type System.Int64 Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRetry.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRetry.html",
    "title": "Class ReplicationMessage.ReplicaSubscriptionRetry | Event Store",
    "keywords": "Class ReplicationMessage.ReplicaSubscriptionRetry Inheritance System.Object Message ReplicationMessage.ReplicaSubscriptionRetry Implements ReplicationMessage.IReplicationMessage Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class ReplicaSubscriptionRetry : Message, ReplicationMessage.IReplicationMessage Constructors ReplicaSubscriptionRetry(Guid, Guid) Declaration public ReplicaSubscriptionRetry(Guid masterId, Guid subscriptionId) Parameters Type Name System.Guid masterId System.Guid subscriptionId Fields MasterId Declaration public readonly Guid MasterId Field Value Type System.Guid SubscriptionId Declaration public readonly Guid SubscriptionId Field Value Type System.Guid Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Explicit Interface Implementations ReplicationMessage.IReplicationMessage.MasterId Declaration Guid ReplicationMessage.IReplicationMessage.MasterId { get; } Returns Type Description System.Guid ReplicationMessage.IReplicationMessage.SubscriptionId Declaration Guid ReplicationMessage.IReplicationMessage.SubscriptionId { get; } Returns Type Description System.Guid Implements ReplicationMessage.IReplicationMessage Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ElectionMessageDto.ProposalDto.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ElectionMessageDto.ProposalDto.html",
    "title": "Class ElectionMessageDto.ProposalDto | Event Store",
    "keywords": "Class ElectionMessageDto.ProposalDto Inheritance System.Object ElectionMessageDto.ProposalDto Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class ProposalDto Constructors ProposalDto() Declaration public ProposalDto() ProposalDto(ElectionMessage.Proposal) Declaration public ProposalDto(ElectionMessage.Proposal message) Parameters Type Name ElectionMessage.Proposal message Properties ChaserCheckpoint Declaration public long ChaserCheckpoint { get; set; } Property Value Type System.Int64 EpochId Declaration public Guid EpochId { get; set; } Property Value Type System.Guid EpochNumber Declaration public int EpochNumber { get; set; } Property Value Type System.Int32 EpochPosition Declaration public long EpochPosition { get; set; } Property Value Type System.Int64 LastCommitPosition Declaration public long LastCommitPosition { get; set; } Property Value Type System.Int64 MasterId Declaration public Guid MasterId { get; set; } Property Value Type System.Guid MasterInternalHttpAddress Declaration public string MasterInternalHttpAddress { get; set; } Property Value Type System.String MasterInternalHttpPort Declaration public int MasterInternalHttpPort { get; set; } Property Value Type System.Int32 ServerId Declaration public Guid ServerId { get; set; } Property Value Type System.Guid ServerInternalHttpAddress Declaration public string ServerInternalHttpAddress { get; set; } Property Value Type System.String ServerInternalHttpPort Declaration public int ServerInternalHttpPort { get; set; } Property Value Type System.Int32 View Declaration public int View { get; set; } Property Value Type System.Int32 WriterCheckpoint Declaration public long WriterCheckpoint { get; set; } Property Value Type System.Int64 Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ElectionMessageDto.PrepareOkDto.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ElectionMessageDto.PrepareOkDto.html",
    "title": "Class ElectionMessageDto.PrepareOkDto | Event Store",
    "keywords": "Class ElectionMessageDto.PrepareOkDto Inheritance System.Object ElectionMessageDto.PrepareOkDto Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class PrepareOkDto Constructors PrepareOkDto() Declaration public PrepareOkDto() PrepareOkDto(ElectionMessage.PrepareOk) Declaration public PrepareOkDto(ElectionMessage.PrepareOk message) Parameters Type Name ElectionMessage.PrepareOk message Properties ChaserCheckpoint Declaration public long ChaserCheckpoint { get; set; } Property Value Type System.Int64 EpochId Declaration public Guid EpochId { get; set; } Property Value Type System.Guid EpochNumber Declaration public int EpochNumber { get; set; } Property Value Type System.Int32 EpochPosition Declaration public long EpochPosition { get; set; } Property Value Type System.Int64 LastCommitPosition Declaration public long LastCommitPosition { get; set; } Property Value Type System.Int64 NodePriority Declaration public int NodePriority { get; set; } Property Value Type System.Int32 ServerId Declaration public Guid ServerId { get; set; } Property Value Type System.Guid ServerInternalHttpAddress Declaration public string ServerInternalHttpAddress { get; set; } Property Value Type System.String ServerInternalHttpPort Declaration public int ServerInternalHttpPort { get; set; } Property Value Type System.Int32 View Declaration public int View { get; set; } Property Value Type System.Int32 WriterCheckpoint Declaration public long WriterCheckpoint { get; set; } Property Value Type System.Int64 Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ClientMessage.TransactionWrite.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ClientMessage.TransactionWrite.html",
    "title": "Class ClientMessage.TransactionWrite | Event Store",
    "keywords": "Class ClientMessage.TransactionWrite Inheritance System.Object Message ClientMessage.WriteRequestMessage ClientMessage.TransactionWrite Inherited Members ClientMessage.WriteRequestMessage.InternalCorrId ClientMessage.WriteRequestMessage.CorrelationId ClientMessage.WriteRequestMessage.Envelope ClientMessage.WriteRequestMessage.RequireMaster ClientMessage.WriteRequestMessage.User ClientMessage.WriteRequestMessage.Login ClientMessage.WriteRequestMessage.Password Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class TransactionWrite : ClientMessage.WriteRequestMessage Constructors TransactionWrite(Guid, Guid, IEnvelope, Boolean, Int64, Event[], IPrincipal, String, String) Declaration public TransactionWrite(Guid internalCorrId, Guid correlationId, IEnvelope envelope, bool requireMaster, long transactionId, Event[] events, IPrincipal user, string login = null, string password = null) Parameters Type Name System.Guid internalCorrId System.Guid correlationId IEnvelope envelope System.Boolean requireMaster System.Int64 transactionId Event [] events System.Security.Principal.IPrincipal user System.String login System.String password Fields Events Declaration public readonly Event[] Events Field Value Type Event [] TransactionId Declaration public readonly long TransactionId Field Value Type System.Int64 Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides ClientMessage.WriteRequestMessage.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ClientMessage.TransactionStartCompleted.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ClientMessage.TransactionStartCompleted.html",
    "title": "Class ClientMessage.TransactionStartCompleted | Event Store",
    "keywords": "Class ClientMessage.TransactionStartCompleted Inheritance System.Object Message ClientMessage.TransactionStartCompleted Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class TransactionStartCompleted : Message Constructors TransactionStartCompleted(Guid, Int64, OperationResult, String) Declaration public TransactionStartCompleted(Guid correlationId, long transactionId, OperationResult result, string message) Parameters Type Name System.Guid correlationId System.Int64 transactionId OperationResult result System.String message Fields CorrelationId Declaration public readonly Guid CorrelationId Field Value Type System.Guid Message Declaration public readonly string Message Field Value Type System.String Result Declaration public readonly OperationResult Result Field Value Type OperationResult TransactionId Declaration public readonly long TransactionId Field Value Type System.Int64 Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Methods WithCorrelationId(Guid) Declaration public ClientMessage.TransactionStartCompleted WithCorrelationId(Guid newCorrId) Parameters Type Name System.Guid newCorrId Returns Type Description ClientMessage.TransactionStartCompleted Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ClientMessage.TransactionStart.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ClientMessage.TransactionStart.html",
    "title": "Class ClientMessage.TransactionStart | Event Store",
    "keywords": "Class ClientMessage.TransactionStart Inheritance System.Object Message ClientMessage.WriteRequestMessage ClientMessage.TransactionStart Inherited Members ClientMessage.WriteRequestMessage.InternalCorrId ClientMessage.WriteRequestMessage.CorrelationId ClientMessage.WriteRequestMessage.Envelope ClientMessage.WriteRequestMessage.RequireMaster ClientMessage.WriteRequestMessage.User ClientMessage.WriteRequestMessage.Login ClientMessage.WriteRequestMessage.Password Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class TransactionStart : ClientMessage.WriteRequestMessage Constructors TransactionStart(Guid, Guid, IEnvelope, Boolean, String, Int64, IPrincipal, String, String) Declaration public TransactionStart(Guid internalCorrId, Guid correlationId, IEnvelope envelope, bool requireMaster, string eventStreamId, long expectedVersion, IPrincipal user, string login = null, string password = null) Parameters Type Name System.Guid internalCorrId System.Guid correlationId IEnvelope envelope System.Boolean requireMaster System.String eventStreamId System.Int64 expectedVersion System.Security.Principal.IPrincipal user System.String login System.String password Fields EventStreamId Declaration public readonly string EventStreamId Field Value Type System.String ExpectedVersion Declaration public readonly long ExpectedVersion Field Value Type System.Int64 Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides ClientMessage.WriteRequestMessage.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.EmittedStream.WriterConfiguration.StreamMetadata.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.EmittedStream.WriterConfiguration.StreamMetadata.html",
    "title": "Class EmittedStream.WriterConfiguration.StreamMetadata | Event Store",
    "keywords": "Class EmittedStream.WriterConfiguration.StreamMetadata Inheritance System.Object EmittedStream.WriterConfiguration.StreamMetadata Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class StreamMetadata Constructors StreamMetadata(Nullable<Int32>, Nullable<TimeSpan>) Declaration public StreamMetadata(int? maxCount = default(int? ), TimeSpan? maxAge = default(TimeSpan? )) Parameters Type Name System.Nullable < System.Int32 > maxCount System.Nullable < System.TimeSpan > maxAge Properties MaxAge Declaration public TimeSpan? MaxAge { get; } Property Value Type System.Nullable < System.TimeSpan > MaxCount Declaration public int? MaxCount { get; } Property Value Type System.Nullable < System.Int32 > Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.EmittedLinkToWithRecategorization.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.EmittedLinkToWithRecategorization.html",
    "title": "Class EmittedLinkToWithRecategorization | Event Store",
    "keywords": "Class EmittedLinkToWithRecategorization Inheritance System.Object EmittedEvent EmittedLinkToWithRecategorization Inherited Members EmittedEvent.StreamId EmittedEvent.EventId EmittedEvent.EventType EmittedEvent.CausedByTag EmittedEvent.ExpectedTag EmittedEvent.OnCommitted EmittedEvent.CausedBy EmittedEvent.CorrelationId EmittedEvent.SetCausedBy(Guid) EmittedEvent.SetCorrelationId(String) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class EmittedLinkToWithRecategorization : EmittedEvent Constructors EmittedLinkToWithRecategorization(String, Guid, String, CheckpointTag, CheckpointTag, String, Nullable<Int32>) Declaration public EmittedLinkToWithRecategorization(string streamId, Guid eventId, string target, CheckpointTag causedByTag, CheckpointTag expectedTag, string originalStreamId, int? streamDeletedAt) Parameters Type Name System.String streamId System.Guid eventId System.String target CheckpointTag causedByTag CheckpointTag expectedTag System.String originalStreamId System.Nullable < System.Int32 > streamDeletedAt Properties Data Declaration public override string Data { get; } Property Value Type System.String Overrides EmittedEvent.Data IsJson Declaration public override bool IsJson { get; } Property Value Type System.Boolean Overrides EmittedEvent.IsJson Methods ExtraMetaData() Declaration public override IEnumerable<KeyValuePair<string, string>> ExtraMetaData() Returns Type Description System.Collections.Generic.IEnumerable < System.Collections.Generic.KeyValuePair < System.String , System.String >> Overrides EmittedEvent.ExtraMetaData() IsReady() Declaration public override bool IsReady() Returns Type Description System.Boolean Overrides EmittedEvent.IsReady() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.EmittedLinkTo.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.EmittedLinkTo.html",
    "title": "Class EmittedLinkTo | Event Store",
    "keywords": "Class EmittedLinkTo Inheritance System.Object EmittedEvent EmittedLinkTo Inherited Members EmittedEvent.StreamId EmittedEvent.EventId EmittedEvent.EventType EmittedEvent.CausedByTag EmittedEvent.ExpectedTag EmittedEvent.OnCommitted EmittedEvent.CausedBy EmittedEvent.CorrelationId EmittedEvent.ExtraMetaData() EmittedEvent.SetCausedBy(Guid) EmittedEvent.SetCorrelationId(String) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class EmittedLinkTo : EmittedEvent Constructors EmittedLinkTo(String, Guid, String, CheckpointTag, CheckpointTag, Action<Int64>) Declaration public EmittedLinkTo(string streamId, Guid eventId, string targetStreamId, CheckpointTag causedByTag, CheckpointTag expectedTag, Action<long> onCommitted = null) Parameters Type Name System.String streamId System.Guid eventId System.String targetStreamId CheckpointTag causedByTag CheckpointTag expectedTag System.Action < System.Int64 > onCommitted EmittedLinkTo(String, Guid, String, Int32, CheckpointTag, CheckpointTag, String) Declaration public EmittedLinkTo(string streamId, Guid eventId, string targetStreamId, int targetEventNumber, CheckpointTag causedByTag, CheckpointTag expectedTag, string originalStreamId = null) Parameters Type Name System.String streamId System.Guid eventId System.String targetStreamId System.Int32 targetEventNumber CheckpointTag causedByTag CheckpointTag expectedTag System.String originalStreamId Properties Data Declaration public override string Data { get; } Property Value Type System.String Overrides EmittedEvent.Data IsJson Declaration public override bool IsJson { get; } Property Value Type System.Boolean Overrides EmittedEvent.IsJson Methods IsReady() Declaration public override bool IsReady() Returns Type Description System.Boolean Overrides EmittedEvent.IsReady() SetTargetEventNumber(Int64) Declaration public void SetTargetEventNumber(long eventNumber) Parameters Type Name System.Int64 eventNumber Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.EmittedEventEnvelope.html",
    "title": "Class EmittedEventEnvelope | Event Store",
    "keywords": "Class EmittedEventEnvelope Inheritance System.Object EmittedEventEnvelope Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public sealed class EmittedEventEnvelope Constructors EmittedEventEnvelope(EmittedEvent, EmittedStream.WriterConfiguration.StreamMetadata) Declaration public EmittedEventEnvelope(EmittedEvent event, EmittedStream.WriterConfiguration.StreamMetadata streamMetadata = null) Parameters Type Name EmittedEvent event EmittedStream.WriterConfiguration.StreamMetadata streamMetadata Fields Event Declaration public readonly EmittedEvent Event Field Value Type EmittedEvent StreamMetadata Declaration public readonly EmittedStream.WriterConfiguration.StreamMetadata StreamMetadata Field Value Type EmittedStream.WriterConfiguration.StreamMetadata Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.EmittedEvent.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.EmittedEvent.html",
    "title": "Class EmittedEvent | Event Store",
    "keywords": "Class EmittedEvent Inheritance System.Object EmittedEvent EmittedDataEvent EmittedLinkTo EmittedLinkToWithRecategorization Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public abstract class EmittedEvent Constructors EmittedEvent(String, Guid, String, CheckpointTag, CheckpointTag, Action<Int64>) Declaration protected EmittedEvent(string streamId, Guid eventId, string eventType, CheckpointTag causedByTag, CheckpointTag expectedTag, Action<long> onCommitted = null) Parameters Type Name System.String streamId System.Guid eventId System.String eventType CheckpointTag causedByTag CheckpointTag expectedTag System.Action < System.Int64 > onCommitted Fields EventId Declaration public readonly Guid EventId Field Value Type System.Guid EventType Declaration public readonly string EventType Field Value Type System.String StreamId Declaration public readonly string StreamId Field Value Type System.String Properties CausedBy Declaration public Guid CausedBy { get; } Property Value Type System.Guid CausedByTag Declaration public CheckpointTag CausedByTag { get; } Property Value Type CheckpointTag CorrelationId Declaration public string CorrelationId { get; } Property Value Type System.String Data Declaration public abstract string Data { get; } Property Value Type System.String ExpectedTag Declaration public CheckpointTag ExpectedTag { get; } Property Value Type CheckpointTag IsJson Declaration public abstract bool IsJson { get; } Property Value Type System.Boolean OnCommitted Declaration public Action<long> OnCommitted { get; } Property Value Type System.Action < System.Int64 > Methods ExtraMetaData() Declaration public virtual IEnumerable<KeyValuePair<string, string>> ExtraMetaData() Returns Type Description System.Collections.Generic.IEnumerable < System.Collections.Generic.KeyValuePair < System.String , System.String >> IsReady() Declaration public abstract bool IsReady() Returns Type Description System.Boolean SetCausedBy(Guid) Declaration public void SetCausedBy(Guid causedBy) Parameters Type Name System.Guid causedBy SetCorrelationId(String) Declaration public void SetCorrelationId(string correlationId) Parameters Type Name System.String correlationId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.EmittedDataEvent.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.EmittedDataEvent.html",
    "title": "Class EmittedDataEvent | Event Store",
    "keywords": "Class EmittedDataEvent Inheritance System.Object EmittedEvent EmittedDataEvent Inherited Members EmittedEvent.StreamId EmittedEvent.EventId EmittedEvent.EventType EmittedEvent.CausedByTag EmittedEvent.ExpectedTag EmittedEvent.OnCommitted EmittedEvent.CausedBy EmittedEvent.CorrelationId EmittedEvent.SetCausedBy(Guid) EmittedEvent.SetCorrelationId(String) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class EmittedDataEvent : EmittedEvent Constructors EmittedDataEvent(String, Guid, String, Boolean, String, ExtraMetaData, CheckpointTag, CheckpointTag, Action<Int64>) Declaration public EmittedDataEvent(string streamId, Guid eventId, string eventType, bool isJson, string data, ExtraMetaData metadata, CheckpointTag causedByTag, CheckpointTag expectedTag, Action<long> onCommitted = null) Parameters Type Name System.String streamId System.Guid eventId System.String eventType System.Boolean isJson System.String data ExtraMetaData metadata CheckpointTag causedByTag CheckpointTag expectedTag System.Action < System.Int64 > onCommitted Properties Data Declaration public override string Data { get; } Property Value Type System.String Overrides EmittedEvent.Data IsJson Declaration public override bool IsJson { get; } Property Value Type System.Boolean Overrides EmittedEvent.IsJson Metadata Declaration public ExtraMetaData Metadata { get; } Property Value Type ExtraMetaData Methods ExtraMetaData() Declaration public override IEnumerable<KeyValuePair<string, string>> ExtraMetaData() Returns Type Description System.Collections.Generic.IEnumerable < System.Collections.Generic.KeyValuePair < System.String , System.String >> Overrides EmittedEvent.ExtraMetaData() IsReady() Declaration public override bool IsReady() Returns Type Description System.Boolean Overrides EmittedEvent.IsReady() ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.DefaultProjectionProcessingStrategy.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.DefaultProjectionProcessingStrategy.html",
    "title": "Class DefaultProjectionProcessingStrategy | Event Store",
    "keywords": "Class DefaultProjectionProcessingStrategy Inheritance System.Object ProjectionProcessingStrategy EventReaderBasedProjectionProcessingStrategy DefaultProjectionProcessingStrategy ContinuousProjectionProcessingStrategy QueryProcessingStrategy SlaveQueryProcessingStrategy Inherited Members EventReaderBasedProjectionProcessingStrategy._projectionConfig EventReaderBasedProjectionProcessingStrategy._sourceDefinition EventReaderBasedProjectionProcessingStrategy.CreateProcessingPhases(IPublisher, IPublisher, Guid, PartitionStateCache, Action, CoreProjection, ProjectionNamesBuilder, ITimeProvider, IODispatcher, CoreProjectionCheckpointWriter) EventReaderBasedProjectionProcessingStrategy.CreateReaderStrategy(ITimeProvider) EventReaderBasedProjectionProcessingStrategy.CreateFirstPhaseResultEmitter(ProjectionNamesBuilder) EventReaderBasedProjectionProcessingStrategy.CreateProjectionProcessingPhases(IPublisher, IPublisher, Guid, ProjectionNamesBuilder, PartitionStateCache, CoreProjection, IODispatcher, IProjectionProcessingPhase) EventReaderBasedProjectionProcessingStrategy.GetSourceDefinition() EventReaderBasedProjectionProcessingStrategy.GetRequiresRootPartition() EventReaderBasedProjectionProcessingStrategy.EnrichStatistics(ProjectionStatistics) EventReaderBasedProjectionProcessingStrategy.CreateCheckpointManager(Guid, IPublisher, IODispatcher, ProjectionNamesBuilder, CoreProjectionCheckpointWriter, Boolean, IReaderStrategy) EventReaderBasedProjectionProcessingStrategy.CreateFirstPhaseResultWriter(IEmittedEventWriter, CheckpointTag, ProjectionNamesBuilder) ProjectionProcessingStrategy._name ProjectionProcessingStrategy._projectionVersion ProjectionProcessingStrategy._logger ProjectionProcessingStrategy.Create(Guid, IPublisher, Guid, IPrincipal, IPublisher, IODispatcher, ReaderSubscriptionDispatcher, ITimeProvider) ProjectionProcessingStrategy.GetStopOnEof() ProjectionProcessingStrategy.GetUseCheckpoints() ProjectionProcessingStrategy.GetProducesRunningResults() ProjectionProcessingStrategy.GetIsSlaveProjection() ProjectionProcessingStrategy.GetSlaveProjections() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public abstract class DefaultProjectionProcessingStrategy : EventReaderBasedProjectionProcessingStrategy Constructors DefaultProjectionProcessingStrategy(String, ProjectionVersion, IProjectionStateHandler, ProjectionConfig, IQuerySources, ILogger, ReaderSubscriptionDispatcher) Declaration protected DefaultProjectionProcessingStrategy(string name, ProjectionVersion projectionVersion, IProjectionStateHandler stateHandler, ProjectionConfig projectionConfig, IQuerySources sourceDefinition, ILogger logger, ReaderSubscriptionDispatcher subscriptionDispatcher) Parameters Type Name System.String name ProjectionVersion projectionVersion IProjectionStateHandler stateHandler ProjectionConfig projectionConfig IQuerySources sourceDefinition ILogger logger ReaderSubscriptionDispatcher subscriptionDispatcher Methods CreateFirstProcessingPhase(IPublisher, IPublisher, Guid, PartitionStateCache, Action, CoreProjection, ReaderSubscriptionDispatcher, CheckpointTag, ICoreProjectionCheckpointManager, IReaderStrategy, IResultWriter, IEmittedStreamsTracker) Declaration protected override IProjectionProcessingPhase CreateFirstProcessingPhase(IPublisher publisher, IPublisher inputQueue, Guid projectionCorrelationId, PartitionStateCache partitionStateCache, Action updateStatistics, CoreProjection coreProjection, ReaderSubscriptionDispatcher subscriptionDispatcher, CheckpointTag zeroCheckpointTag, ICoreProjectionCheckpointManager checkpointManager, IReaderStrategy readerStrategy, IResultWriter resultWriter, IEmittedStreamsTracker emittedStreamsTracker) Parameters Type Name IPublisher publisher IPublisher inputQueue System.Guid projectionCorrelationId PartitionStateCache partitionStateCache System.Action updateStatistics CoreProjection coreProjection ReaderSubscriptionDispatcher subscriptionDispatcher CheckpointTag zeroCheckpointTag ICoreProjectionCheckpointManager checkpointManager IReaderStrategy readerStrategy IResultWriter resultWriter IEmittedStreamsTracker emittedStreamsTracker Returns Type Description IProjectionProcessingPhase Overrides EventReaderBasedProjectionProcessingStrategy.CreateFirstProcessingPhase(IPublisher, IPublisher, Guid, PartitionStateCache, Action, CoreProjection, ReaderSubscriptionDispatcher, CheckpointTag, ICoreProjectionCheckpointManager, IReaderStrategy, IResultWriter, IEmittedStreamsTracker) CreateStatePartitionSelector() Declaration protected virtual StatePartitionSelector CreateStatePartitionSelector() Returns Type Description StatePartitionSelector Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.SystemEventTypes.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.SystemEventTypes.html",
    "title": "Class SystemEventTypes | Event Store",
    "keywords": "Class SystemEventTypes Inheritance System.Object SystemEventTypes Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services Assembly : EventStore.Core.dll Syntax public static class SystemEventTypes Fields LinkTo Declaration public const string LinkTo = \"$>\" Field Value Type System.String ScavengeChunksCompleted Declaration public const string ScavengeChunksCompleted = \"$scavengeChunksCompleted\" Field Value Type System.String ScavengeCompleted Declaration public const string ScavengeCompleted = \"$scavengeCompleted\" Field Value Type System.String ScavengeIndexCompleted Declaration public const string ScavengeIndexCompleted = \"$scavengeIndexCompleted\" Field Value Type System.String ScavengeMergeCompleted Declaration public const string ScavengeMergeCompleted = \"$scavengeMergeCompleted\" Field Value Type System.String ScavengeStarted Declaration public const string ScavengeStarted = \"$scavengeStarted\" Field Value Type System.String Settings Declaration public const string Settings = \"$settings\" Field Value Type System.String StatsCollection Declaration public const string StatsCollection = \"$statsCollected\" Field Value Type System.String StreamDeleted Declaration public const string StreamDeleted = \"$streamDeleted\" Field Value Type System.String StreamMetadata Declaration public const string StreamMetadata = \"$metadata\" Field Value Type System.String StreamReference Declaration public const string StreamReference = \"$@\" Field Value Type System.String V1__StreamCreated__ Declaration public const string V1__StreamCreated__ = \"$stream-created\" Field Value Type System.String V1__StreamCreatedImplicit__ Declaration public const string V1__StreamCreatedImplicit__ = \"$stream-created-implicit\" Field Value Type System.String V2__StreamCreated_InIndex Declaration public const string V2__StreamCreated_InIndex = \"StreamCreated\" Field Value Type System.String Methods EventLinkToEventNumber(String) Declaration public static long EventLinkToEventNumber(string link) Parameters Type Name System.String link Returns Type Description System.Int64 StreamReferenceEventToStreamId(String, Byte[]) Declaration public static string StreamReferenceEventToStreamId(string eventType, byte[] data) Parameters Type Name System.String eventType System.Byte [] data Returns Type Description System.String StreamReferenceEventToStreamId(String, String) Declaration public static string StreamReferenceEventToStreamId(string eventType, string data) Parameters Type Name System.String eventType System.String data Returns Type Description System.String"
  },
  "dotnet-api/code/EventStore.Core.Services.SystemConsumerStrategies.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.SystemConsumerStrategies.html",
    "title": "Class SystemConsumerStrategies | Event Store",
    "keywords": "Class SystemConsumerStrategies System supported consumer strategies for use with persistent subscriptions. Inheritance System.Object SystemConsumerStrategies Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services Assembly : EventStore.Core.dll Syntax public static class SystemConsumerStrategies Fields DispatchToSingle Distributes events to a single client until it is full. Then round robin to the next client. Declaration public const string DispatchToSingle = \"DispatchToSingle\" Field Value Type System.String Pinned Distribute events of the same streamId to the same client until it disconnects on a best efforts basis. Designed to be used with indexes such as the category projection. Declaration public const string Pinned = \"Pinned\" Field Value Type System.String RoundRobin Distribute events to each client in a round robin fashion. Declaration public const string RoundRobin = \"RoundRobin\" Field Value Type System.String"
  },
  "dotnet-api/code/EventStore.Core.Services.SubscriptionsService.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.SubscriptionsService.html",
    "title": "Class SubscriptionsService | Event Store",
    "keywords": "Class SubscriptionsService Inheritance System.Object SubscriptionsService Implements IHandle < SystemMessage.SystemStart > IHandle < SystemMessage.BecomeShuttingDown > IHandle < TcpMessage.ConnectionClosed > IHandle < ClientMessage.SubscribeToStream > IHandle < ClientMessage.UnsubscribeFromStream > IHandle < SubscriptionMessage.PollStream > IHandle < SubscriptionMessage.CheckPollTimeout > IHandle < StorageMessage.EventCommitted > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services Assembly : EventStore.Core.dll Syntax public class SubscriptionsService : IHandle<SystemMessage.SystemStart>, IHandle<SystemMessage.BecomeShuttingDown>, IHandle<TcpMessage.ConnectionClosed>, IHandle<ClientMessage.SubscribeToStream>, IHandle<ClientMessage.UnsubscribeFromStream>, IHandle<SubscriptionMessage.PollStream>, IHandle<SubscriptionMessage.CheckPollTimeout>, IHandle<StorageMessage.EventCommitted> Constructors SubscriptionsService(IPublisher, IQueuedHandler, IReadIndex) Declaration public SubscriptionsService(IPublisher bus, IQueuedHandler queuedHandler, IReadIndex readIndex) Parameters Type Name IPublisher bus IQueuedHandler queuedHandler IReadIndex readIndex Fields AllStreamsSubscriptionId Declaration public const string AllStreamsSubscriptionId = \"\" Field Value Type System.String Methods Handle(ClientMessage.SubscribeToStream) Declaration public void Handle(ClientMessage.SubscribeToStream msg) Parameters Type Name ClientMessage.SubscribeToStream msg Handle(ClientMessage.UnsubscribeFromStream) Declaration public void Handle(ClientMessage.UnsubscribeFromStream message) Parameters Type Name ClientMessage.UnsubscribeFromStream message Handle(StorageMessage.EventCommitted) Declaration public void Handle(StorageMessage.EventCommitted message) Parameters Type Name StorageMessage.EventCommitted message Handle(SubscriptionMessage.CheckPollTimeout) Declaration public void Handle(SubscriptionMessage.CheckPollTimeout message) Parameters Type Name SubscriptionMessage.CheckPollTimeout message Handle(SubscriptionMessage.PollStream) Declaration public void Handle(SubscriptionMessage.PollStream message) Parameters Type Name SubscriptionMessage.PollStream message Handle(SystemMessage.BecomeShuttingDown) Declaration public void Handle(SystemMessage.BecomeShuttingDown message) Parameters Type Name SystemMessage.BecomeShuttingDown message Handle(SystemMessage.SystemStart) Declaration public void Handle(SystemMessage.SystemStart message) Parameters Type Name SystemMessage.SystemStart message Handle(TcpMessage.ConnectionClosed) Declaration public void Handle(TcpMessage.ConnectionClosed message) Parameters Type Name TcpMessage.ConnectionClosed message Implements IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.SubscriptionDropReason.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.SubscriptionDropReason.html",
    "title": "Enum SubscriptionDropReason | Event Store",
    "keywords": "Enum SubscriptionDropReason Namespace : EventStore.Core.Services Assembly : EventStore.Core.dll Syntax public enum SubscriptionDropReason Fields Name Description AccessDenied NotFound PersistentSubscriptionDeleted SubscriberMaxCountReached Unsubscribed Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<SubscriptionDropReason>() ProtobufExtensions.Serialize<SubscriptionDropReason>() ProtobufExtensions.SerializeToArray<SubscriptionDropReason>()"
  },
  "dotnet-api/code/EventStore.Core.Services.Storage.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Storage.html",
    "title": "Namespace EventStore.Core.Services.Storage | Event Store",
    "keywords": "Namespace EventStore.Core.Services.Storage Classes IndexCommitterService StorageChaser StorageReaderService StorageReaderWorker StorageScavenger StorageWriterService Interfaces IIndexCommitterService"
  },
  "dotnet-api/code/EventStore.Core.Services.Storage.StorageWriterService.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Storage.StorageWriterService.html",
    "title": "Class StorageWriterService | Event Store",
    "keywords": "Class StorageWriterService Inheritance System.Object StorageWriterService ClusterStorageWriterService Implements IHandle < SystemMessage.SystemInit > IHandle < SystemMessage.StateChangeMessage > IHandle < SystemMessage.WriteEpoch > IHandle < SystemMessage.WaitForChaserToCatchUp > IHandle < StorageMessage.WritePrepares > IHandle < StorageMessage.WriteDelete > IHandle < StorageMessage.WriteTransactionStart > IHandle < StorageMessage.WriteTransactionData > IHandle < StorageMessage.WriteTransactionPrepare > IHandle < StorageMessage.WriteCommit > IHandle < MonitoringMessage.InternalStatsRequest > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Storage Assembly : EventStore.Core.dll Syntax public class StorageWriterService : IHandle<SystemMessage.SystemInit>, IHandle<SystemMessage.StateChangeMessage>, IHandle<SystemMessage.WriteEpoch>, IHandle<SystemMessage.WaitForChaserToCatchUp>, IHandle<StorageMessage.WritePrepares>, IHandle<StorageMessage.WriteDelete>, IHandle<StorageMessage.WriteTransactionStart>, IHandle<StorageMessage.WriteTransactionData>, IHandle<StorageMessage.WriteTransactionPrepare>, IHandle<StorageMessage.WriteCommit>, IHandle<MonitoringMessage.InternalStatsRequest> Constructors StorageWriterService(IPublisher, ISubscriber, TimeSpan, TFChunkDb, TFChunkWriter, IIndexWriter, IEpochManager) Declaration public StorageWriterService(IPublisher bus, ISubscriber subscribeToBus, TimeSpan minFlushDelay, TFChunkDb db, TFChunkWriter writer, IIndexWriter indexWriter, IEpochManager epochManager) Parameters Type Name IPublisher bus ISubscriber subscribeToBus System.TimeSpan minFlushDelay TFChunkDb db TFChunkWriter writer IIndexWriter indexWriter IEpochManager epochManager Fields BlockWriter Declaration protected bool BlockWriter Field Value Type System.Boolean Bus Declaration protected readonly IPublisher Bus Field Value Type IPublisher Db Declaration protected readonly TFChunkDb Db Field Value Type TFChunkDb EpochManager Declaration protected readonly IEpochManager EpochManager Field Value Type IEpochManager FlushMessagesInQueue Declaration protected int FlushMessagesInQueue Field Value Type System.Int32 StorageWriterQueue Declaration protected readonly IQueuedHandler StorageWriterQueue Field Value Type IQueuedHandler TicksPerMs Declaration protected static readonly int TicksPerMs Field Value Type System.Int32 Writer Declaration protected readonly TFChunkWriter Writer Field Value Type TFChunkWriter Properties Tasks Declaration public IEnumerable<Task> Tasks { get; } Property Value Type System.Collections.Generic.IEnumerable < System.Threading.Tasks.Task > Methods Flush(Boolean) Declaration protected bool Flush(bool force = false) Parameters Type Name System.Boolean force Returns Type Description System.Boolean Handle(MonitoringMessage.InternalStatsRequest) Declaration public void Handle(MonitoringMessage.InternalStatsRequest message) Parameters Type Name MonitoringMessage.InternalStatsRequest message Handle(SystemMessage.StateChangeMessage) Declaration public virtual void Handle(SystemMessage.StateChangeMessage message) Parameters Type Name SystemMessage.StateChangeMessage message SoftUndeleteRawMeta(Byte[], Int64, out Byte[]) Declaration public bool SoftUndeleteRawMeta(byte[] rawMeta, long recreateFromEventNumber, out byte[] modifiedMeta) Parameters Type Name System.Byte [] rawMeta System.Int64 recreateFromEventNumber System.Byte [] modifiedMeta Returns Type Description System.Boolean SubscribeToMessage<T>() Declaration protected void SubscribeToMessage<T>() where T : Message Type Parameters Name Description T Explicit Interface Implementations IHandle<StorageMessage.WriteCommit>.Handle(StorageMessage.WriteCommit) Declaration void IHandle<StorageMessage.WriteCommit>.Handle(StorageMessage.WriteCommit message) Parameters Type Name StorageMessage.WriteCommit message IHandle<StorageMessage.WriteDelete>.Handle(StorageMessage.WriteDelete) Declaration void IHandle<StorageMessage.WriteDelete>.Handle(StorageMessage.WriteDelete message) Parameters Type Name StorageMessage.WriteDelete message IHandle<StorageMessage.WritePrepares>.Handle(StorageMessage.WritePrepares) Declaration void IHandle<StorageMessage.WritePrepares>.Handle(StorageMessage.WritePrepares msg) Parameters Type Name StorageMessage.WritePrepares msg IHandle<StorageMessage.WriteTransactionData>.Handle(StorageMessage.WriteTransactionData) Declaration void IHandle<StorageMessage.WriteTransactionData>.Handle(StorageMessage.WriteTransactionData message) Parameters Type Name StorageMessage.WriteTransactionData message IHandle<StorageMessage.WriteTransactionPrepare>.Handle(StorageMessage.WriteTransactionPrepare) Declaration void IHandle<StorageMessage.WriteTransactionPrepare>.Handle(StorageMessage.WriteTransactionPrepare message) Parameters Type Name StorageMessage.WriteTransactionPrepare message IHandle<StorageMessage.WriteTransactionStart>.Handle(StorageMessage.WriteTransactionStart) Declaration void IHandle<StorageMessage.WriteTransactionStart>.Handle(StorageMessage.WriteTransactionStart message) Parameters Type Name StorageMessage.WriteTransactionStart message IHandle<SystemMessage.SystemInit>.Handle(SystemMessage.SystemInit) Declaration void IHandle<SystemMessage.SystemInit>.Handle(SystemMessage.SystemInit message) Parameters Type Name SystemMessage.SystemInit message IHandle<SystemMessage.WaitForChaserToCatchUp>.Handle(SystemMessage.WaitForChaserToCatchUp) Declaration void IHandle<SystemMessage.WaitForChaserToCatchUp>.Handle(SystemMessage.WaitForChaserToCatchUp message) Parameters Type Name SystemMessage.WaitForChaserToCatchUp message IHandle<SystemMessage.WriteEpoch>.Handle(SystemMessage.WriteEpoch) Declaration void IHandle<SystemMessage.WriteEpoch>.Handle(SystemMessage.WriteEpoch message) Parameters Type Name SystemMessage.WriteEpoch message Implements IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Storage.StorageScavenger.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Storage.StorageScavenger.html",
    "title": "Class StorageScavenger | Event Store",
    "keywords": "Class StorageScavenger Inheritance System.Object StorageScavenger Implements IHandle < ClientMessage.ScavengeDatabase > IHandle < ClientMessage.StopDatabaseScavenge > IHandle < SystemMessage.StateChangeMessage > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Storage Assembly : EventStore.Core.dll Syntax public class StorageScavenger : IHandle<ClientMessage.ScavengeDatabase>, IHandle<ClientMessage.StopDatabaseScavenge>, IHandle<SystemMessage.StateChangeMessage> Constructors StorageScavenger(TFChunkDb, ITableIndex, IReadIndex, ITFChunkScavengerLogManager, Boolean, Boolean, Boolean) Declaration public StorageScavenger(TFChunkDb db, ITableIndex tableIndex, IReadIndex readIndex, ITFChunkScavengerLogManager logManager, bool alwaysKeepScavenged, bool mergeChunks, bool unsafeIgnoreHardDeletes) Parameters Type Name TFChunkDb db ITableIndex tableIndex IReadIndex readIndex ITFChunkScavengerLogManager logManager System.Boolean alwaysKeepScavenged System.Boolean mergeChunks System.Boolean unsafeIgnoreHardDeletes Methods Handle(ClientMessage.ScavengeDatabase) Declaration public void Handle(ClientMessage.ScavengeDatabase message) Parameters Type Name ClientMessage.ScavengeDatabase message Handle(ClientMessage.StopDatabaseScavenge) Declaration public void Handle(ClientMessage.StopDatabaseScavenge message) Parameters Type Name ClientMessage.StopDatabaseScavenge message Handle(SystemMessage.StateChangeMessage) Declaration public void Handle(SystemMessage.StateChangeMessage message) Parameters Type Name SystemMessage.StateChangeMessage message Implements IHandle<T> IHandle<T> IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Storage.StorageReaderWorker.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Storage.StorageReaderWorker.html",
    "title": "Class StorageReaderWorker | Event Store",
    "keywords": "Class StorageReaderWorker Inheritance System.Object StorageReaderWorker Implements IHandle < ClientMessage.ReadEvent > IHandle < ClientMessage.ReadStreamEventsBackward > IHandle < ClientMessage.ReadStreamEventsForward > IHandle < ClientMessage.ReadAllEventsForward > IHandle < ClientMessage.ReadAllEventsBackward > IHandle < StorageMessage.CheckStreamAccess > IHandle < StorageMessage.BatchLogExpiredMessages > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Storage Assembly : EventStore.Core.dll Syntax public class StorageReaderWorker : IHandle<ClientMessage.ReadEvent>, IHandle<ClientMessage.ReadStreamEventsBackward>, IHandle<ClientMessage.ReadStreamEventsForward>, IHandle<ClientMessage.ReadAllEventsForward>, IHandle<ClientMessage.ReadAllEventsBackward>, IHandle<StorageMessage.CheckStreamAccess>, IHandle<StorageMessage.BatchLogExpiredMessages> Constructors StorageReaderWorker(IPublisher, IReadIndex, ICheckpoint, Int32) Declaration public StorageReaderWorker(IPublisher publisher, IReadIndex readIndex, ICheckpoint writerCheckpoint, int queueId) Parameters Type Name IPublisher publisher IReadIndex readIndex ICheckpoint writerCheckpoint System.Int32 queueId Methods Handle(StorageMessage.BatchLogExpiredMessages) Declaration public void Handle(StorageMessage.BatchLogExpiredMessages message) Parameters Type Name StorageMessage.BatchLogExpiredMessages message Explicit Interface Implementations IHandle<ClientMessage.ReadAllEventsBackward>.Handle(ClientMessage.ReadAllEventsBackward) Declaration void IHandle<ClientMessage.ReadAllEventsBackward>.Handle(ClientMessage.ReadAllEventsBackward msg) Parameters Type Name ClientMessage.ReadAllEventsBackward msg IHandle<ClientMessage.ReadAllEventsForward>.Handle(ClientMessage.ReadAllEventsForward) Declaration void IHandle<ClientMessage.ReadAllEventsForward>.Handle(ClientMessage.ReadAllEventsForward msg) Parameters Type Name ClientMessage.ReadAllEventsForward msg IHandle<ClientMessage.ReadEvent>.Handle(ClientMessage.ReadEvent) Declaration void IHandle<ClientMessage.ReadEvent>.Handle(ClientMessage.ReadEvent msg) Parameters Type Name ClientMessage.ReadEvent msg IHandle<ClientMessage.ReadStreamEventsBackward>.Handle(ClientMessage.ReadStreamEventsBackward) Declaration void IHandle<ClientMessage.ReadStreamEventsBackward>.Handle(ClientMessage.ReadStreamEventsBackward msg) Parameters Type Name ClientMessage.ReadStreamEventsBackward msg IHandle<ClientMessage.ReadStreamEventsForward>.Handle(ClientMessage.ReadStreamEventsForward) Declaration void IHandle<ClientMessage.ReadStreamEventsForward>.Handle(ClientMessage.ReadStreamEventsForward msg) Parameters Type Name ClientMessage.ReadStreamEventsForward msg IHandle<StorageMessage.CheckStreamAccess>.Handle(StorageMessage.CheckStreamAccess) Declaration void IHandle<StorageMessage.CheckStreamAccess>.Handle(StorageMessage.CheckStreamAccess msg) Parameters Type Name StorageMessage.CheckStreamAccess msg Implements IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Storage.StorageReaderService.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Storage.StorageReaderService.html",
    "title": "Class StorageReaderService | Event Store",
    "keywords": "Class StorageReaderService Inheritance System.Object StorageReaderService Implements IHandle < SystemMessage.SystemInit > IHandle < SystemMessage.BecomeShuttingDown > IHandle < SystemMessage.BecomeShutdown > IHandle < MonitoringMessage.InternalStatsRequest > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Storage Assembly : EventStore.Core.dll Syntax public class StorageReaderService : IHandle<SystemMessage.SystemInit>, IHandle<SystemMessage.BecomeShuttingDown>, IHandle<SystemMessage.BecomeShutdown>, IHandle<MonitoringMessage.InternalStatsRequest> Constructors StorageReaderService(IPublisher, ISubscriber, IReadIndex, Int32, ICheckpoint) Declaration public StorageReaderService(IPublisher bus, ISubscriber subscriber, IReadIndex readIndex, int threadCount, ICheckpoint writerCheckpoint) Parameters Type Name IPublisher bus ISubscriber subscriber IReadIndex readIndex System.Int32 threadCount ICheckpoint writerCheckpoint Explicit Interface Implementations IHandle<MonitoringMessage.InternalStatsRequest>.Handle(MonitoringMessage.InternalStatsRequest) Declaration void IHandle<MonitoringMessage.InternalStatsRequest>.Handle(MonitoringMessage.InternalStatsRequest message) Parameters Type Name MonitoringMessage.InternalStatsRequest message IHandle<SystemMessage.BecomeShutdown>.Handle(SystemMessage.BecomeShutdown) Declaration void IHandle<SystemMessage.BecomeShutdown>.Handle(SystemMessage.BecomeShutdown message) Parameters Type Name SystemMessage.BecomeShutdown message IHandle<SystemMessage.BecomeShuttingDown>.Handle(SystemMessage.BecomeShuttingDown) Declaration void IHandle<SystemMessage.BecomeShuttingDown>.Handle(SystemMessage.BecomeShuttingDown message) Parameters Type Name SystemMessage.BecomeShuttingDown message IHandle<SystemMessage.SystemInit>.Handle(SystemMessage.SystemInit) Declaration void IHandle<SystemMessage.SystemInit>.Handle(SystemMessage.SystemInit message) Parameters Type Name SystemMessage.SystemInit message Implements IHandle<T> IHandle<T> IHandle<T> IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Storage.StorageChaser.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Storage.StorageChaser.html",
    "title": "Class StorageChaser | Event Store",
    "keywords": "Class StorageChaser Inheritance System.Object StorageChaser Implements IMonitoredQueue IHandle < SystemMessage.SystemInit > IHandle < SystemMessage.SystemStart > IHandle < SystemMessage.BecomeShuttingDown > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Storage Assembly : EventStore.Core.dll Syntax public class StorageChaser : IMonitoredQueue, IHandle<SystemMessage.SystemInit>, IHandle<SystemMessage.SystemStart>, IHandle<SystemMessage.BecomeShuttingDown> Constructors StorageChaser(IPublisher, ICheckpoint, ITransactionFileChaser, IIndexCommitterService, IEpochManager) Declaration public StorageChaser(IPublisher masterBus, ICheckpoint writerCheckpoint, ITransactionFileChaser chaser, IIndexCommitterService indexCommitterService, IEpochManager epochManager) Parameters Type Name IPublisher masterBus ICheckpoint writerCheckpoint ITransactionFileChaser chaser IIndexCommitterService indexCommitterService IEpochManager epochManager Properties Name Declaration public string Name { get; } Property Value Type System.String Task Declaration public Task Task { get; } Property Value Type System.Threading.Tasks.Task Methods GetStatistics() Declaration public QueueStats GetStatistics() Returns Type Description QueueStats Handle(SystemMessage.BecomeShuttingDown) Declaration public void Handle(SystemMessage.BecomeShuttingDown message) Parameters Type Name SystemMessage.BecomeShuttingDown message Handle(SystemMessage.SystemInit) Declaration public void Handle(SystemMessage.SystemInit message) Parameters Type Name SystemMessage.SystemInit message Handle(SystemMessage.SystemStart) Declaration public void Handle(SystemMessage.SystemStart message) Parameters Type Name SystemMessage.SystemStart message Implements IMonitoredQueue IHandle<T> IHandle<T> IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Storage.ReaderIndex.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Storage.ReaderIndex.html",
    "title": "Namespace EventStore.Core.Services.Storage.ReaderIndex | Event Store",
    "keywords": "Namespace EventStore.Core.Services.Storage.ReaderIndex Classes AllReader BoundedCache<TKey, TValue> DictionaryBasedCache IndexBackend IndexCommitter IndexReader IndexWriter ReadCacheStats ReadIndex ReadIndexStats Structs CommitCheckResult IndexBackend.EventNumberCached IndexBackend.MetadataCached IndexReadAllResult IndexReadEventResult IndexReadStreamResult RawMetaInfo StreamAccess TransactionInfo Interfaces IAllReader IIndexBackend IIndexCommitter IIndexReader IIndexWriter IReadIndex Enums CommitDecision ReadStreamResult StreamAccessType"
  },
  "dotnet-api/code/EventStore.Core.Services.Storage.ReaderIndex.TransactionInfo.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Storage.ReaderIndex.TransactionInfo.html",
    "title": "Struct TransactionInfo | Event Store",
    "keywords": "Struct TransactionInfo Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Services.Storage.ReaderIndex Assembly : EventStore.Core.dll Syntax public struct TransactionInfo Constructors TransactionInfo(Int32, String) Declaration public TransactionInfo(int transactionOffset, string eventStreamId) Parameters Type Name System.Int32 transactionOffset System.String eventStreamId Fields EventStreamId Declaration public readonly string EventStreamId Field Value Type System.String TransactionOffset Declaration public readonly int TransactionOffset Field Value Type System.Int32 Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) EnumExtensions.EnumValueName<T>(T) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Storage.ReaderIndex.StreamAccessType.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Storage.ReaderIndex.StreamAccessType.html",
    "title": "Enum StreamAccessType | Event Store",
    "keywords": "Enum StreamAccessType Namespace : EventStore.Core.Services.Storage.ReaderIndex Assembly : EventStore.Core.dll Syntax public enum StreamAccessType Fields Name Description Delete MetaRead MetaWrite Read Write Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<StreamAccessType>() ProtobufExtensions.Serialize<StreamAccessType>() ProtobufExtensions.SerializeToArray<StreamAccessType>()"
  },
  "dotnet-api/code/EventStore.Core.Services.Storage.ReaderIndex.StreamAccess.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Storage.ReaderIndex.StreamAccess.html",
    "title": "Struct StreamAccess | Event Store",
    "keywords": "Struct StreamAccess Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Services.Storage.ReaderIndex Assembly : EventStore.Core.dll Syntax public struct StreamAccess Constructors StreamAccess(Boolean) Declaration public StreamAccess(bool granted) Parameters Type Name System.Boolean granted StreamAccess(Boolean, Boolean) Declaration public StreamAccess(bool granted, bool public) Parameters Type Name System.Boolean granted System.Boolean public Fields Granted Declaration public readonly bool Granted Field Value Type System.Boolean Public Declaration public readonly bool Public Field Value Type System.Boolean Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) EnumExtensions.EnumValueName<T>(T) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.RetryableMessage.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.RetryableMessage.html",
    "title": "Struct RetryableMessage | Event Store",
    "keywords": "Struct RetryableMessage Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Services.PersistentSubscription Assembly : EventStore.Core.dll Syntax public struct RetryableMessage Constructors RetryableMessage(Guid, DateTime) Declaration public RetryableMessage(Guid messageId, DateTime dueTime) Parameters Type Name System.Guid messageId System.DateTime dueTime Fields DueTime Declaration public readonly DateTime DueTime Field Value Type System.DateTime MessageId Declaration public readonly Guid MessageId Field Value Type System.Guid Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) EnumExtensions.EnumValueName<T>(T) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ClientMessage.TransactionWriteCompleted.html",
    "title": "Class ClientMessage.TransactionWriteCompleted | Event Store",
    "keywords": "Class ClientMessage.TransactionWriteCompleted Inheritance System.Object Message ClientMessage.TransactionWriteCompleted Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class TransactionWriteCompleted : Message Constructors TransactionWriteCompleted(Guid, Int64, OperationResult, String) Declaration public TransactionWriteCompleted(Guid correlationId, long transactionId, OperationResult result, string message) Parameters Type Name System.Guid correlationId System.Int64 transactionId OperationResult result System.String message Fields CorrelationId Declaration public readonly Guid CorrelationId Field Value Type System.Guid Message Declaration public readonly string Message Field Value Type System.String Result Declaration public readonly OperationResult Result Field Value Type OperationResult TransactionId Declaration public readonly long TransactionId Field Value Type System.Int64 Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Methods WithCorrelationId(Guid) Declaration public ClientMessage.TransactionWriteCompleted WithCorrelationId(Guid newCorrId) Parameters Type Name System.Guid newCorrId Returns Type Description ClientMessage.TransactionWriteCompleted Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ClientMessage.ReadRequestMessage.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ClientMessage.ReadRequestMessage.html",
    "title": "Class ClientMessage.ReadRequestMessage | Event Store",
    "keywords": "Class ClientMessage.ReadRequestMessage Inheritance System.Object Message ClientMessage.ReadRequestMessage ClientMessage.ConnectToPersistentSubscription ClientMessage.CreatePersistentSubscription ClientMessage.DeletePersistentSubscription ClientMessage.PersistentSubscriptionAckEvents ClientMessage.PersistentSubscriptionNackEvents ClientMessage.PersistentSubscriptionNakEvents ClientMessage.ReadAllEventsBackward ClientMessage.ReadAllEventsForward ClientMessage.ReadEvent ClientMessage.ReadNextNPersistentMessages ClientMessage.ReadStreamEventsBackward ClientMessage.ReadStreamEventsForward ClientMessage.ReplayAllParkedMessages ClientMessage.ReplayParkedMessage ClientMessage.SubscribeToStream ClientMessage.UnsubscribeFromStream ClientMessage.UpdatePersistentSubscription StorageMessage.CheckStreamAccess Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public abstract class ReadRequestMessage : Message Constructors ReadRequestMessage(Guid, Guid, IEnvelope, IPrincipal) Declaration protected ReadRequestMessage(Guid internalCorrId, Guid correlationId, IEnvelope envelope, IPrincipal user) Parameters Type Name System.Guid internalCorrId System.Guid correlationId IEnvelope envelope System.Security.Principal.IPrincipal user Fields CorrelationId Declaration public readonly Guid CorrelationId Field Value Type System.Guid Envelope Declaration public readonly IEnvelope Envelope Field Value Type IEnvelope Expires Declaration public DateTime Expires Field Value Type System.DateTime InternalCorrId Declaration public readonly Guid InternalCorrId Field Value Type System.Guid User Declaration public readonly IPrincipal User Field Value Type System.Security.Principal.IPrincipal Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted.html",
    "title": "Class ClientMessage.ReadNextNPersistentMessagesCompleted | Event Store",
    "keywords": "Class ClientMessage.ReadNextNPersistentMessagesCompleted Inheritance System.Object Message ClientMessage.ReadResponseMessage ClientMessage.ReadNextNPersistentMessagesCompleted Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class ReadNextNPersistentMessagesCompleted : ClientMessage.ReadResponseMessage Constructors ReadNextNPersistentMessagesCompleted(Guid, ClientMessage.ReadNextNPersistentMessagesCompleted.ReadNextNPersistentMessagesResult, String, ResolvedEvent[]) Declaration public ReadNextNPersistentMessagesCompleted(Guid correlationId, ClientMessage.ReadNextNPersistentMessagesCompleted.ReadNextNPersistentMessagesResult result, string reason, ResolvedEvent[] events) Parameters Type Name System.Guid correlationId ClientMessage.ReadNextNPersistentMessagesCompleted.ReadNextNPersistentMessagesResult result System.String reason ResolvedEvent [] events Fields CorrelationId Declaration public readonly Guid CorrelationId Field Value Type System.Guid Events Declaration public readonly ResolvedEvent[] Events Field Value Type ResolvedEvent [] Reason Declaration public readonly string Reason Field Value Type System.String Result Declaration public readonly ClientMessage.ReadNextNPersistentMessagesCompleted.ReadNextNPersistentMessagesResult Result Field Value Type ClientMessage.ReadNextNPersistentMessagesCompleted.ReadNextNPersistentMessagesResult Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides ClientMessage.ReadResponseMessage.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted.ReadNextNPersistentMessagesResult.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessagesCompleted.ReadNextNPersistentMessagesResult.html",
    "title": "Enum ClientMessage.ReadNextNPersistentMessagesCompleted.ReadNextNPersistentMessagesResult | Event Store",
    "keywords": "Enum ClientMessage.ReadNextNPersistentMessagesCompleted.ReadNextNPersistentMessagesResult Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public enum ReadNextNPersistentMessagesResult Fields Name Description AccessDenied DoesNotExist Fail Success Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<ClientMessage.ReadNextNPersistentMessagesCompleted.ReadNextNPersistentMessagesResult>() ProtobufExtensions.Serialize<ClientMessage.ReadNextNPersistentMessagesCompleted.ReadNextNPersistentMessagesResult>() ProtobufExtensions.SerializeToArray<ClientMessage.ReadNextNPersistentMessagesCompleted.ReadNextNPersistentMessagesResult>()"
  },
  "dotnet-api/code/EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessages.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ClientMessage.ReadNextNPersistentMessages.html",
    "title": "Class ClientMessage.ReadNextNPersistentMessages | Event Store",
    "keywords": "Class ClientMessage.ReadNextNPersistentMessages Inheritance System.Object Message ClientMessage.ReadRequestMessage ClientMessage.ReadNextNPersistentMessages Inherited Members ClientMessage.ReadRequestMessage.InternalCorrId ClientMessage.ReadRequestMessage.CorrelationId ClientMessage.ReadRequestMessage.Envelope ClientMessage.ReadRequestMessage.User ClientMessage.ReadRequestMessage.Expires Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class ReadNextNPersistentMessages : ClientMessage.ReadRequestMessage Constructors ReadNextNPersistentMessages(Guid, Guid, IEnvelope, String, String, Int32, IPrincipal) Declaration public ReadNextNPersistentMessages(Guid internalCorrId, Guid correlationId, IEnvelope envelope, string eventStreamId, string groupName, int count, IPrincipal user) Parameters Type Name System.Guid internalCorrId System.Guid correlationId IEnvelope envelope System.String eventStreamId System.String groupName System.Int32 count System.Security.Principal.IPrincipal user Fields Count Declaration public readonly int Count Field Value Type System.Int32 EventStreamId Declaration public readonly string EventStreamId Field Value Type System.String GroupName Declaration public readonly string GroupName Field Value Type System.String Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides ClientMessage.ReadRequestMessage.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ClientMessage.ReadEventCompleted.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ClientMessage.ReadEventCompleted.html",
    "title": "Class ClientMessage.ReadEventCompleted | Event Store",
    "keywords": "Class ClientMessage.ReadEventCompleted Inheritance System.Object Message ClientMessage.ReadResponseMessage ClientMessage.ReadEventCompleted Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class ReadEventCompleted : ClientMessage.ReadResponseMessage Constructors ReadEventCompleted(Guid, String, ReadEventResult, ResolvedEvent, StreamMetadata, Boolean, String) Declaration public ReadEventCompleted(Guid correlationId, string eventStreamId, ReadEventResult result, ResolvedEvent record, StreamMetadata streamMetadata, bool isCachePublic, string error) Parameters Type Name System.Guid correlationId System.String eventStreamId ReadEventResult result ResolvedEvent record StreamMetadata streamMetadata System.Boolean isCachePublic System.String error Fields CorrelationId Declaration public readonly Guid CorrelationId Field Value Type System.Guid Error Declaration public readonly string Error Field Value Type System.String EventStreamId Declaration public readonly string EventStreamId Field Value Type System.String IsCachePublic Declaration public readonly bool IsCachePublic Field Value Type System.Boolean Record Declaration public readonly ResolvedEvent Record Field Value Type ResolvedEvent Result Declaration public readonly ReadEventResult Result Field Value Type ReadEventResult StreamMetadata Declaration public readonly StreamMetadata StreamMetadata Field Value Type StreamMetadata Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides ClientMessage.ReadResponseMessage.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ClientMessage.ReadEvent.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ClientMessage.ReadEvent.html",
    "title": "Class ClientMessage.ReadEvent | Event Store",
    "keywords": "Class ClientMessage.ReadEvent Inheritance System.Object Message ClientMessage.ReadRequestMessage ClientMessage.ReadEvent Inherited Members ClientMessage.ReadRequestMessage.InternalCorrId ClientMessage.ReadRequestMessage.CorrelationId ClientMessage.ReadRequestMessage.Envelope ClientMessage.ReadRequestMessage.User ClientMessage.ReadRequestMessage.Expires Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class ReadEvent : ClientMessage.ReadRequestMessage Constructors ReadEvent(Guid, Guid, IEnvelope, String, Int64, Boolean, Boolean, IPrincipal) Declaration public ReadEvent(Guid internalCorrId, Guid correlationId, IEnvelope envelope, string eventStreamId, long eventNumber, bool resolveLinkTos, bool requireMaster, IPrincipal user) Parameters Type Name System.Guid internalCorrId System.Guid correlationId IEnvelope envelope System.String eventStreamId System.Int64 eventNumber System.Boolean resolveLinkTos System.Boolean requireMaster System.Security.Principal.IPrincipal user Fields EventNumber Declaration public readonly long EventNumber Field Value Type System.Int64 EventStreamId Declaration public readonly string EventStreamId Field Value Type System.String RequireMaster Declaration public readonly bool RequireMaster Field Value Type System.Boolean ResolveLinkTos Declaration public readonly bool ResolveLinkTos Field Value Type System.Boolean Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides ClientMessage.ReadRequestMessage.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ClientMessage.ReadAllEventsForwardCompleted.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ClientMessage.ReadAllEventsForwardCompleted.html",
    "title": "Class ClientMessage.ReadAllEventsForwardCompleted | Event Store",
    "keywords": "Class ClientMessage.ReadAllEventsForwardCompleted Inheritance System.Object Message ClientMessage.ReadResponseMessage ClientMessage.ReadAllEventsForwardCompleted Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class ReadAllEventsForwardCompleted : ClientMessage.ReadResponseMessage Constructors ReadAllEventsForwardCompleted(Guid, ReadAllResult, String, ResolvedEvent[], StreamMetadata, Boolean, Int32, TFPos, TFPos, TFPos, Int64) Declaration public ReadAllEventsForwardCompleted(Guid correlationId, ReadAllResult result, string error, ResolvedEvent[] events, StreamMetadata streamMetadata, bool isCachePublic, int maxCount, TFPos currentPos, TFPos nextPos, TFPos prevPos, long tfLastCommitPosition) Parameters Type Name System.Guid correlationId ReadAllResult result System.String error ResolvedEvent [] events StreamMetadata streamMetadata System.Boolean isCachePublic System.Int32 maxCount TFPos currentPos TFPos nextPos TFPos prevPos System.Int64 tfLastCommitPosition Fields CorrelationId Declaration public readonly Guid CorrelationId Field Value Type System.Guid CurrentPos Declaration public readonly TFPos CurrentPos Field Value Type TFPos Error Declaration public readonly string Error Field Value Type System.String Events Declaration public readonly ResolvedEvent[] Events Field Value Type ResolvedEvent [] IsCachePublic Declaration public readonly bool IsCachePublic Field Value Type System.Boolean MaxCount Declaration public readonly int MaxCount Field Value Type System.Int32 NextPos Declaration public readonly TFPos NextPos Field Value Type TFPos PrevPos Declaration public readonly TFPos PrevPos Field Value Type TFPos Result Declaration public readonly ReadAllResult Result Field Value Type ReadAllResult StreamMetadata Declaration public readonly StreamMetadata StreamMetadata Field Value Type StreamMetadata TfLastCommitPosition Declaration public readonly long TfLastCommitPosition Field Value Type System.Int64 Properties IsEndOfStream Declaration public bool IsEndOfStream { get; } Property Value Type System.Boolean MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides ClientMessage.ReadResponseMessage.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Exceptions.CorruptIndexException.html": {
    "href": "dotnet-api/code/EventStore.Core.Exceptions.CorruptIndexException.html",
    "title": "Class CorruptIndexException | Event Store",
    "keywords": "Class CorruptIndexException Inheritance System.Object System.Exception CorruptIndexException Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Exceptions Assembly : EventStore.Core.dll Syntax public class CorruptIndexException : Exception, _Exception, ISerializable Constructors CorruptIndexException() Declaration public CorruptIndexException() CorruptIndexException(Exception) Declaration public CorruptIndexException(Exception innerException) Parameters Type Name System.Exception innerException CorruptIndexException(String) Declaration public CorruptIndexException(string message) Parameters Type Name System.String message CorruptIndexException(String, Exception) Declaration public CorruptIndexException(string message, Exception innerException) Parameters Type Name System.String message System.Exception innerException Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Exceptions.CorruptDatabaseException.html": {
    "href": "dotnet-api/code/EventStore.Core.Exceptions.CorruptDatabaseException.html",
    "title": "Class CorruptDatabaseException | Event Store",
    "keywords": "Class CorruptDatabaseException Inheritance System.Object System.Exception CorruptDatabaseException Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Exceptions Assembly : EventStore.Core.dll Syntax public class CorruptDatabaseException : Exception, _Exception, ISerializable Constructors CorruptDatabaseException(Exception) Declaration public CorruptDatabaseException(Exception inner) Parameters Type Name System.Exception inner CorruptDatabaseException(String, Exception) Declaration public CorruptDatabaseException(string message, Exception inner) Parameters Type Name System.String message System.Exception inner Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Exceptions.ChunkNotFoundException.html": {
    "href": "dotnet-api/code/EventStore.Core.Exceptions.ChunkNotFoundException.html",
    "title": "Class ChunkNotFoundException | Event Store",
    "keywords": "Class ChunkNotFoundException Inheritance System.Object System.Exception ChunkNotFoundException Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Exceptions Assembly : EventStore.Core.dll Syntax public class ChunkNotFoundException : Exception, _Exception, ISerializable Constructors ChunkNotFoundException(String) Declaration public ChunkNotFoundException(string chunkName) Parameters Type Name System.String chunkName Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.DataStructures.BloomFilter.html": {
    "href": "dotnet-api/code/EventStore.Core.DataStructures.BloomFilter.html",
    "title": "Class BloomFilter | Event Store",
    "keywords": "Class BloomFilter Inheritance System.Object BloomFilter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.DataStructures Assembly : EventStore.Core.dll Syntax public class BloomFilter Constructors BloomFilter(Int32, Double) Declaration public BloomFilter(int n, double p) Parameters Type Name System.Int32 n System.Double p Properties NumBits Declaration public int NumBits { get; } Property Value Type System.Int32 NumHashFunctions Declaration public int NumHashFunctions { get; } Property Value Type System.Int32 Methods Add(Int64) Declaration public void Add(long item) Parameters Type Name System.Int64 item MayExist(Int64) Declaration public bool MayExist(long item) Parameters Type Name System.Int64 item Returns Type Description System.Boolean toBytes(Int64) Declaration public static byte[] toBytes(long value) Parameters Type Name System.Int64 value Returns Type Description System.Byte [] Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Data.html": {
    "href": "dotnet-api/code/EventStore.Core.Data.html",
    "title": "Namespace EventStore.Core.Data | Event Store",
    "keywords": "Namespace EventStore.Core.Data Classes Epoch Event EventNumber EventRecord ExpectedVersion GossipAdvertiseInfo StreamAcl StreamMetadata SystemSettings UserData VNodeInfo VNodeStateExtensions Structs CommitEventRecord Range ResolvedEvent TFPos Enums ReadAllResult ReadEventResult ReadStreamResult VNodeState"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ResultWriter.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ResultWriter.html",
    "title": "Class ResultWriter | Event Store",
    "keywords": "Class ResultWriter Inheritance System.Object ResultWriter Implements IResultWriter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class ResultWriter : IResultWriter Constructors ResultWriter(IResultEventEmitter, IEmittedEventWriter, Boolean, CheckpointTag, String) Declaration public ResultWriter(IResultEventEmitter resultEventEmitter, IEmittedEventWriter coreProjectionCheckpointManager, bool producesRunningResults, CheckpointTag zeroCheckpointTag, string partitionCatalogStreamName) Parameters Type Name IResultEventEmitter resultEventEmitter IEmittedEventWriter coreProjectionCheckpointManager System.Boolean producesRunningResults CheckpointTag zeroCheckpointTag System.String partitionCatalogStreamName Methods AccountPartition(EventProcessedResult) Declaration public void AccountPartition(EventProcessedResult result) Parameters Type Name EventProcessedResult result EventsEmitted(EmittedEventEnvelope[], Guid, String) Declaration public void EventsEmitted(EmittedEventEnvelope[] scheduledWrites, Guid causedBy, string correlationId) Parameters Type Name EmittedEventEnvelope [] scheduledWrites System.Guid causedBy System.String correlationId RegisterNewPartition(String, CheckpointTag) Declaration protected EmittedEventEnvelope[] RegisterNewPartition(string partition, CheckpointTag at) Parameters Type Name System.String partition CheckpointTag at Returns Type Description EmittedEventEnvelope [] WriteEofResult(Guid, String, String, CheckpointTag, Guid, String) Declaration public void WriteEofResult(Guid subscriptionId, string partition, string resultBody, CheckpointTag causedBy, Guid causedByGuid, string correlationId) Parameters Type Name System.Guid subscriptionId System.String partition System.String resultBody CheckpointTag causedBy System.Guid causedByGuid System.String correlationId WritePartitionMeasured(Guid, String, Int64) Declaration public void WritePartitionMeasured(Guid subscriptionId, string partition, long size) Parameters Type Name System.Guid subscriptionId System.String partition System.Int64 size WriteProgress(Guid, Single) Declaration public void WriteProgress(Guid subscriptionId, float progress) Parameters Type Name System.Guid subscriptionId System.Single progress WriteRunningResult(EventProcessedResult) Declaration public void WriteRunningResult(EventProcessedResult result) Parameters Type Name EventProcessedResult result Implements IResultWriter Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ResultEventEmitter.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ResultEventEmitter.html",
    "title": "Class ResultEventEmitter | Event Store",
    "keywords": "Class ResultEventEmitter Inheritance System.Object ResultEventEmitter Implements IResultEventEmitter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class ResultEventEmitter : IResultEventEmitter Constructors ResultEventEmitter(ProjectionNamesBuilder) Declaration public ResultEventEmitter(ProjectionNamesBuilder namesBuilder) Parameters Type Name ProjectionNamesBuilder namesBuilder Methods ResultUpdated(String, String, CheckpointTag) Declaration public EmittedEventEnvelope[] ResultUpdated(string partition, string result, CheckpointTag at) Parameters Type Name System.String partition System.String result CheckpointTag at Returns Type Description EmittedEventEnvelope [] Implements IResultEventEmitter Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ResolvedEvent.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ResolvedEvent.html",
    "title": "Class ResolvedEvent | Event Store",
    "keywords": "Class ResolvedEvent Inheritance System.Object ResolvedEvent Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class ResolvedEvent Constructors ResolvedEvent(ResolvedEvent, Byte[]) Declaration public ResolvedEvent(ResolvedEvent resolvedEvent, byte[] streamMetadata) Parameters Type Name ResolvedEvent resolvedEvent System.Byte [] streamMetadata ResolvedEvent(String, Int64, String, Int64, Boolean, TFPos, TFPos, Guid, String, Boolean, Byte[], Byte[], Byte[], Byte[], DateTime) Declaration public ResolvedEvent(string positionStreamId, long positionSequenceNumber, string eventStreamId, long eventSequenceNumber, bool resolvedLinkTo, TFPos position, TFPos eventOrLinkTargetPosition, Guid eventId, string eventType, bool isJson, byte[] data, byte[] metadata, byte[] positionMetadata, byte[] streamMetadata, DateTime timestamp) Parameters Type Name System.String positionStreamId System.Int64 positionSequenceNumber System.String eventStreamId System.Int64 eventSequenceNumber System.Boolean resolvedLinkTo TFPos position TFPos eventOrLinkTargetPosition System.Guid eventId System.String eventType System.Boolean isJson System.Byte [] data System.Byte [] metadata System.Byte [] positionMetadata System.Byte [] streamMetadata System.DateTime timestamp ResolvedEvent(String, Int64, String, Int64, Boolean, TFPos, Guid, String, Boolean, String, String, String, String) Declaration public ResolvedEvent(string positionStreamId, long positionSequenceNumber, string eventStreamId, long eventSequenceNumber, bool resolvedLinkTo, TFPos position, Guid eventId, string eventType, bool isJson, string data, string metadata, string positionMetadata = null, string streamMetadata = null) Parameters Type Name System.String positionStreamId System.Int64 positionSequenceNumber System.String eventStreamId System.Int64 eventSequenceNumber System.Boolean resolvedLinkTo TFPos position System.Guid eventId System.String eventType System.Boolean isJson System.String data System.String metadata System.String positionMetadata System.String streamMetadata Fields Data Declaration public readonly string Data Field Value Type System.String EventId Declaration public readonly Guid EventId Field Value Type System.Guid EventType Declaration public readonly string EventType Field Value Type System.String IsJson Declaration public readonly bool IsJson Field Value Type System.Boolean IsLinkToDeletedStream Declaration public readonly bool IsLinkToDeletedStream Field Value Type System.Boolean IsLinkToDeletedStreamTombstone Declaration public readonly bool IsLinkToDeletedStreamTombstone Field Value Type System.Boolean Metadata Declaration public readonly string Metadata Field Value Type System.String PositionMetadata Declaration public readonly string PositionMetadata Field Value Type System.String StreamMetadata Declaration public readonly string StreamMetadata Field Value Type System.String Timestamp Declaration public readonly DateTime Timestamp Field Value Type System.DateTime Properties EventOrLinkTargetPosition Declaration public TFPos EventOrLinkTargetPosition { get; } Property Value Type TFPos EventSequenceNumber Declaration public long EventSequenceNumber { get; } Property Value Type System.Int64 EventStreamId Declaration public string EventStreamId { get; } Property Value Type System.String IsStreamDeletedEvent Declaration public bool IsStreamDeletedEvent { get; } Property Value Type System.Boolean LinkOrEventPosition Declaration public TFPos LinkOrEventPosition { get; } Property Value Type TFPos Position Declaration public TFPos Position { get; } Property Value Type TFPos PositionSequenceNumber Declaration public long PositionSequenceNumber { get; } Property Value Type System.Int64 PositionStreamId Declaration public string PositionStreamId { get; } Property Value Type System.String ResolvedLinkTo Declaration public bool ResolvedLinkTo { get; } Property Value Type System.Boolean Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Management.ProjectionCoreResponseWriter.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Management.ProjectionCoreResponseWriter.html",
    "title": "Class ProjectionCoreResponseWriter | Event Store",
    "keywords": "Class ProjectionCoreResponseWriter Inheritance System.Object ProjectionCoreResponseWriter Implements IHandle < CoreProjectionStatusMessage.Faulted > IHandle < CoreProjectionStatusMessage.Prepared > IHandle < CoreProjectionManagementMessage.SlaveProjectionReaderAssigned > IHandle < CoreProjectionStatusMessage.Started > IHandle < CoreProjectionStatusMessage.StatisticsReport > IHandle < CoreProjectionStatusMessage.Stopped > IHandle < CoreProjectionStatusMessage.StateReport > IHandle < CoreProjectionStatusMessage.ResultReport > IHandle < ProjectionManagementMessage.Command.Abort > IHandle < ProjectionManagementMessage.Command.Disable > IHandle < ProjectionManagementMessage.Command.Enable > IHandle < ProjectionManagementMessage.Command.GetQuery > IHandle < ProjectionManagementMessage.Command.GetResult > IHandle < ProjectionManagementMessage.Command.GetState > IHandle < ProjectionManagementMessage.Command.GetStatistics > IHandle < ProjectionManagementMessage.Command.Post > IHandle < ProjectionManagementMessage.Command.Reset > IHandle < ProjectionManagementMessage.Command.SetRunAs > IHandle < ProjectionManagementMessage.Command.StartSlaveProjections > IHandle < ProjectionManagementMessage.Command.UpdateQuery > IHandle < ProjectionManagementMessage.Command.Delete > IHandle < ProjectionCoreServiceMessage.StartCore > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Management Assembly : EventStore.Projections.Core.dll Syntax public sealed class ProjectionCoreResponseWriter : IHandle<CoreProjectionStatusMessage.Faulted>, IHandle<CoreProjectionStatusMessage.Prepared>, IHandle<CoreProjectionManagementMessage.SlaveProjectionReaderAssigned>, IHandle<CoreProjectionStatusMessage.Started>, IHandle<CoreProjectionStatusMessage.StatisticsReport>, IHandle<CoreProjectionStatusMessage.Stopped>, IHandle<CoreProjectionStatusMessage.StateReport>, IHandle<CoreProjectionStatusMessage.ResultReport>, IHandle<ProjectionManagementMessage.Command.Abort>, IHandle<ProjectionManagementMessage.Command.Disable>, IHandle<ProjectionManagementMessage.Command.Enable>, IHandle<ProjectionManagementMessage.Command.GetQuery>, IHandle<ProjectionManagementMessage.Command.GetResult>, IHandle<ProjectionManagementMessage.Command.GetState>, IHandle<ProjectionManagementMessage.Command.GetStatistics>, IHandle<ProjectionManagementMessage.Command.Post>, IHandle<ProjectionManagementMessage.Command.Reset>, IHandle<ProjectionManagementMessage.Command.SetRunAs>, IHandle<ProjectionManagementMessage.Command.StartSlaveProjections>, IHandle<ProjectionManagementMessage.Command.UpdateQuery>, IHandle<ProjectionManagementMessage.Command.Delete>, IHandle<ProjectionCoreServiceMessage.StartCore> Constructors ProjectionCoreResponseWriter(IResponseWriter) Declaration public ProjectionCoreResponseWriter(IResponseWriter responseWriter) Parameters Type Name IResponseWriter responseWriter Methods Handle(CoreProjectionManagementMessage.SlaveProjectionReaderAssigned) Declaration public void Handle(CoreProjectionManagementMessage.SlaveProjectionReaderAssigned message) Parameters Type Name CoreProjectionManagementMessage.SlaveProjectionReaderAssigned message Handle(CoreProjectionStatusMessage.Faulted) Declaration public void Handle(CoreProjectionStatusMessage.Faulted message) Parameters Type Name CoreProjectionStatusMessage.Faulted message Handle(CoreProjectionStatusMessage.Prepared) Declaration public void Handle(CoreProjectionStatusMessage.Prepared message) Parameters Type Name CoreProjectionStatusMessage.Prepared message Handle(CoreProjectionStatusMessage.ResultReport) Declaration public void Handle(CoreProjectionStatusMessage.ResultReport message) Parameters Type Name CoreProjectionStatusMessage.ResultReport message Handle(CoreProjectionStatusMessage.Started) Declaration public void Handle(CoreProjectionStatusMessage.Started message) Parameters Type Name CoreProjectionStatusMessage.Started message Handle(CoreProjectionStatusMessage.StateReport) Declaration public void Handle(CoreProjectionStatusMessage.StateReport message) Parameters Type Name CoreProjectionStatusMessage.StateReport message Handle(CoreProjectionStatusMessage.StatisticsReport) Declaration public void Handle(CoreProjectionStatusMessage.StatisticsReport message) Parameters Type Name CoreProjectionStatusMessage.StatisticsReport message Handle(CoreProjectionStatusMessage.Stopped) Declaration public void Handle(CoreProjectionStatusMessage.Stopped message) Parameters Type Name CoreProjectionStatusMessage.Stopped message Handle(ProjectionCoreServiceMessage.StartCore) Declaration public void Handle(ProjectionCoreServiceMessage.StartCore message) Parameters Type Name ProjectionCoreServiceMessage.StartCore message Handle(ProjectionManagementMessage.Command.Abort) Declaration public void Handle(ProjectionManagementMessage.Command.Abort message) Parameters Type Name ProjectionManagementMessage.Command.Abort message Handle(ProjectionManagementMessage.Command.Delete) Declaration public void Handle(ProjectionManagementMessage.Command.Delete message) Parameters Type Name ProjectionManagementMessage.Command.Delete message Handle(ProjectionManagementMessage.Command.Disable) Declaration public void Handle(ProjectionManagementMessage.Command.Disable message) Parameters Type Name ProjectionManagementMessage.Command.Disable message Handle(ProjectionManagementMessage.Command.Enable) Declaration public void Handle(ProjectionManagementMessage.Command.Enable message) Parameters Type Name ProjectionManagementMessage.Command.Enable message Handle(ProjectionManagementMessage.Command.GetQuery) Declaration public void Handle(ProjectionManagementMessage.Command.GetQuery message) Parameters Type Name ProjectionManagementMessage.Command.GetQuery message Handle(ProjectionManagementMessage.Command.GetResult) Declaration public void Handle(ProjectionManagementMessage.Command.GetResult message) Parameters Type Name ProjectionManagementMessage.Command.GetResult message Handle(ProjectionManagementMessage.Command.GetState) Declaration public void Handle(ProjectionManagementMessage.Command.GetState message) Parameters Type Name ProjectionManagementMessage.Command.GetState message Handle(ProjectionManagementMessage.Command.GetStatistics) Declaration public void Handle(ProjectionManagementMessage.Command.GetStatistics message) Parameters Type Name ProjectionManagementMessage.Command.GetStatistics message Handle(ProjectionManagementMessage.Command.Post) Declaration public void Handle(ProjectionManagementMessage.Command.Post message) Parameters Type Name ProjectionManagementMessage.Command.Post message Handle(ProjectionManagementMessage.Command.Reset) Declaration public void Handle(ProjectionManagementMessage.Command.Reset message) Parameters Type Name ProjectionManagementMessage.Command.Reset message Handle(ProjectionManagementMessage.Command.SetRunAs) Declaration public void Handle(ProjectionManagementMessage.Command.SetRunAs message) Parameters Type Name ProjectionManagementMessage.Command.SetRunAs message Handle(ProjectionManagementMessage.Command.StartSlaveProjections) Declaration public void Handle(ProjectionManagementMessage.Command.StartSlaveProjections message) Parameters Type Name ProjectionManagementMessage.Command.StartSlaveProjections message Handle(ProjectionManagementMessage.Command.UpdateQuery) Declaration public void Handle(ProjectionManagementMessage.Command.UpdateQuery message) Parameters Type Name ProjectionManagementMessage.Command.UpdateQuery message Implements IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Management.ProjectionCoreCoordinator.html",
    "title": "Class ProjectionCoreCoordinator | Event Store",
    "keywords": "Class ProjectionCoreCoordinator Inheritance System.Object ProjectionCoreCoordinator Implements IHandle < ProjectionManagementMessage.Internal.RegularTimeout > IHandle < SystemMessage.StateChangeMessage > IHandle < SystemMessage.SystemCoreReady > IHandle < SystemMessage.EpochWritten > IHandle < ProjectionCoreServiceMessage.SubComponentStarted > IHandle < ProjectionCoreServiceMessage.SubComponentStopped > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Management Assembly : EventStore.Projections.Core.dll Syntax public class ProjectionCoreCoordinator : IHandle<ProjectionManagementMessage.Internal.RegularTimeout>, IHandle<SystemMessage.StateChangeMessage>, IHandle<SystemMessage.SystemCoreReady>, IHandle<SystemMessage.EpochWritten>, IHandle<ProjectionCoreServiceMessage.SubComponentStarted>, IHandle<ProjectionCoreServiceMessage.SubComponentStopped> Constructors ProjectionCoreCoordinator(ProjectionType, TimeoutScheduler[], IPublisher[], IPublisher, IEnvelope) Declaration public ProjectionCoreCoordinator(ProjectionType runProjections, TimeoutScheduler[] timeoutSchedulers, IPublisher[] queues, IPublisher publisher, IEnvelope publishEnvelope) Parameters Type Name ProjectionType runProjections TimeoutScheduler [] timeoutSchedulers IPublisher [] queues IPublisher publisher IEnvelope publishEnvelope Methods Handle(SystemMessage.EpochWritten) Declaration public void Handle(SystemMessage.EpochWritten message) Parameters Type Name SystemMessage.EpochWritten message Handle(SystemMessage.StateChangeMessage) Declaration public void Handle(SystemMessage.StateChangeMessage message) Parameters Type Name SystemMessage.StateChangeMessage message Handle(SystemMessage.SystemCoreReady) Declaration public void Handle(SystemMessage.SystemCoreReady message) Parameters Type Name SystemMessage.SystemCoreReady message Handle(ProjectionCoreServiceMessage.SubComponentStarted) Declaration public void Handle(ProjectionCoreServiceMessage.SubComponentStarted message) Parameters Type Name ProjectionCoreServiceMessage.SubComponentStarted message Handle(ProjectionCoreServiceMessage.SubComponentStopped) Declaration public void Handle(ProjectionCoreServiceMessage.SubComponentStopped message) Parameters Type Name ProjectionCoreServiceMessage.SubComponentStopped message Handle(ProjectionManagementMessage.Internal.RegularTimeout) Declaration public void Handle(ProjectionManagementMessage.Internal.RegularTimeout message) Parameters Type Name ProjectionManagementMessage.Internal.RegularTimeout message SetupMessaging(IBus) Declaration public void SetupMessaging(IBus bus) Parameters Type Name IBus bus Implements IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Management.MultiStreamMessageWriter.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Management.MultiStreamMessageWriter.html",
    "title": "Class MultiStreamMessageWriter | Event Store",
    "keywords": "Class MultiStreamMessageWriter Inheritance System.Object MultiStreamMessageWriter Implements IMultiStreamMessageWriter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Management Assembly : EventStore.Projections.Core.dll Syntax public sealed class MultiStreamMessageWriter : IMultiStreamMessageWriter Constructors MultiStreamMessageWriter(IODispatcher) Declaration public MultiStreamMessageWriter(IODispatcher ioDispatcher) Parameters Type Name IODispatcher ioDispatcher Methods PublishResponse(String, Guid, Object) Declaration public void PublishResponse(string command, Guid workerId, object body) Parameters Type Name System.String command System.Guid workerId System.Object body Reset() Declaration public void Reset() Implements IMultiStreamMessageWriter Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Management.MasterCoreProjectionResponseReader.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Management.MasterCoreProjectionResponseReader.html",
    "title": "Class MasterCoreProjectionResponseReader | Event Store",
    "keywords": "Class MasterCoreProjectionResponseReader Inheritance System.Object MasterCoreProjectionResponseReader Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Management Assembly : EventStore.Projections.Core.dll Syntax public class MasterCoreProjectionResponseReader Constructors MasterCoreProjectionResponseReader(IPublisher, IODispatcher, Guid, Guid) Declaration public MasterCoreProjectionResponseReader(IPublisher publisher, IODispatcher ioDispatcher, Guid workerId, Guid masterProjectionId) Parameters Type Name IPublisher publisher IODispatcher ioDispatcher System.Guid workerId System.Guid masterProjectionId Methods Start() Declaration public void Start() Stop() Declaration public void Stop() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Management.ManagedProjectionState.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Management.ManagedProjectionState.html",
    "title": "Enum ManagedProjectionState | Event Store",
    "keywords": "Enum ManagedProjectionState Namespace : EventStore.Projections.Core.Services.Management Assembly : EventStore.Projections.Core.dll Syntax public enum ManagedProjectionState Fields Name Description Aborted Aborting Completed Creating Deleting Faulted Loaded Loading LoadingStopped Prepared Preparing Running Starting Stopped Stopping Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<ManagedProjectionState>() ProtobufExtensions.Serialize<ManagedProjectionState>() ProtobufExtensions.SerializeToArray<ManagedProjectionState>()"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Management.ManagedProjection.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Management.ManagedProjection.html",
    "title": "Class ManagedProjection | Event Store",
    "keywords": "Class ManagedProjection managed projection controls start/stop/create/update/delete lifecycle of the projection. Inheritance System.Object ManagedProjection Implements System.IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Management Assembly : EventStore.Projections.Core.dll Syntax public class ManagedProjection : IDisposable Constructors ManagedProjection(Guid, Guid, Int64, String, Boolean, ILogger, RequestResponseDispatcher<ClientMessage.DeleteStream, ClientMessage.DeleteStreamCompleted>, RequestResponseDispatcher<ClientMessage.WriteEvents, ClientMessage.WriteEventsCompleted>, RequestResponseDispatcher<ClientMessage.ReadStreamEventsBackward, ClientMessage.ReadStreamEventsBackwardCompleted>, IPublisher, ITimeProvider, RequestResponseDispatcher<CoreProjectionManagementMessage.GetState, CoreProjectionStatusMessage.StateReport>, RequestResponseDispatcher<CoreProjectionManagementMessage.GetResult, CoreProjectionStatusMessage.ResultReport>, IODispatcher, TimeSpan, Boolean, Guid, Guid) Declaration public ManagedProjection(Guid workerId, Guid id, long projectionId, string name, bool enabledToRun, ILogger logger, RequestResponseDispatcher<ClientMessage.DeleteStream, ClientMessage.DeleteStreamCompleted> streamDispatcher, RequestResponseDispatcher<ClientMessage.WriteEvents, ClientMessage.WriteEventsCompleted> writeDispatcher, RequestResponseDispatcher<ClientMessage.ReadStreamEventsBackward, ClientMessage.ReadStreamEventsBackwardCompleted> readDispatcher, IPublisher output, ITimeProvider timeProvider, RequestResponseDispatcher<CoreProjectionManagementMessage.GetState, CoreProjectionStatusMessage.StateReport> getStateDispatcher, RequestResponseDispatcher<CoreProjectionManagementMessage.GetResult, CoreProjectionStatusMessage.ResultReport> getResultDispatcher, IODispatcher ioDispatcher, TimeSpan projectionQueryExpiry, bool isSlave = false, Guid slaveMasterWorkerId = default(Guid), Guid slaveMasterCorrelationId = default(Guid)) Parameters Type Name System.Guid workerId System.Guid id System.Int64 projectionId System.String name System.Boolean enabledToRun ILogger logger RequestResponseDispatcher < ClientMessage.DeleteStream , ClientMessage.DeleteStreamCompleted > streamDispatcher RequestResponseDispatcher < ClientMessage.WriteEvents , ClientMessage.WriteEventsCompleted > writeDispatcher RequestResponseDispatcher < ClientMessage.ReadStreamEventsBackward , ClientMessage.ReadStreamEventsBackwardCompleted > readDispatcher IPublisher output ITimeProvider timeProvider RequestResponseDispatcher < CoreProjectionManagementMessage.GetState , CoreProjectionStatusMessage.StateReport > getStateDispatcher RequestResponseDispatcher < CoreProjectionManagementMessage.GetResult , CoreProjectionStatusMessage.ResultReport > getResultDispatcher IODispatcher ioDispatcher System.TimeSpan projectionQueryExpiry System.Boolean isSlave System.Guid slaveMasterWorkerId System.Guid slaveMasterCorrelationId Properties Deleted Declaration public bool Deleted { get; } Property Value Type System.Boolean Deleting Declaration public bool Deleting { get; } Property Value Type System.Boolean Id Declaration public Guid Id { get; } Property Value Type System.Guid Mode Declaration public ProjectionMode Mode { get; } Property Value Type ProjectionMode RunAs Declaration public IPrincipal RunAs { get; } Property Value Type System.Security.Principal.IPrincipal Methods DeleteProjectionStreams() Declaration public void DeleteProjectionStreams() Dispose() Declaration public void Dispose() Fault(String) Declaration public void Fault(string reason) Parameters Type Name System.String reason GetStatistics() Declaration public ProjectionStatistics GetStatistics() Returns Type Description ProjectionStatistics Handle(CoreProjectionStatusMessage.Faulted) Declaration public void Handle(CoreProjectionStatusMessage.Faulted message) Parameters Type Name CoreProjectionStatusMessage.Faulted message Handle(CoreProjectionStatusMessage.Prepared) Declaration public void Handle(CoreProjectionStatusMessage.Prepared message) Parameters Type Name CoreProjectionStatusMessage.Prepared message Handle(CoreProjectionStatusMessage.Started) Declaration public void Handle(CoreProjectionStatusMessage.Started message) Parameters Type Name CoreProjectionStatusMessage.Started message Handle(CoreProjectionStatusMessage.StatisticsReport) Declaration public void Handle(CoreProjectionStatusMessage.StatisticsReport message) Parameters Type Name CoreProjectionStatusMessage.StatisticsReport message Handle(CoreProjectionStatusMessage.Stopped) Declaration public void Handle(CoreProjectionStatusMessage.Stopped message) Parameters Type Name CoreProjectionStatusMessage.Stopped message Handle(ProjectionManagementMessage.Command.Abort) Declaration public void Handle(ProjectionManagementMessage.Command.Abort message) Parameters Type Name ProjectionManagementMessage.Command.Abort message Handle(ProjectionManagementMessage.Command.Delete) Declaration public void Handle(ProjectionManagementMessage.Command.Delete message) Parameters Type Name ProjectionManagementMessage.Command.Delete message Handle(ProjectionManagementMessage.Command.Disable) Declaration public void Handle(ProjectionManagementMessage.Command.Disable message) Parameters Type Name ProjectionManagementMessage.Command.Disable message Handle(ProjectionManagementMessage.Command.Enable) Declaration public void Handle(ProjectionManagementMessage.Command.Enable message) Parameters Type Name ProjectionManagementMessage.Command.Enable message Handle(ProjectionManagementMessage.Command.GetConfig) Declaration public void Handle(ProjectionManagementMessage.Command.GetConfig message) Parameters Type Name ProjectionManagementMessage.Command.GetConfig message Handle(ProjectionManagementMessage.Command.GetQuery) Declaration public void Handle(ProjectionManagementMessage.Command.GetQuery message) Parameters Type Name ProjectionManagementMessage.Command.GetQuery message Handle(ProjectionManagementMessage.Command.GetResult) Declaration public void Handle(ProjectionManagementMessage.Command.GetResult message) Parameters Type Name ProjectionManagementMessage.Command.GetResult message Handle(ProjectionManagementMessage.Command.GetState) Declaration public void Handle(ProjectionManagementMessage.Command.GetState message) Parameters Type Name ProjectionManagementMessage.Command.GetState message Handle(ProjectionManagementMessage.Command.Reset) Declaration public void Handle(ProjectionManagementMessage.Command.Reset message) Parameters Type Name ProjectionManagementMessage.Command.Reset message Handle(ProjectionManagementMessage.Command.SetRunAs) Declaration public void Handle(ProjectionManagementMessage.Command.SetRunAs message) Parameters Type Name ProjectionManagementMessage.Command.SetRunAs message Handle(ProjectionManagementMessage.Command.UpdateConfig) Declaration public void Handle(ProjectionManagementMessage.Command.UpdateConfig message) Parameters Type Name ProjectionManagementMessage.Command.UpdateConfig message Handle(ProjectionManagementMessage.Command.UpdateQuery) Declaration public void Handle(ProjectionManagementMessage.Command.UpdateQuery message) Parameters Type Name ProjectionManagementMessage.Command.UpdateQuery message Handle(ProjectionManagementMessage.Internal.CleanupExpired) Declaration public void Handle(ProjectionManagementMessage.Internal.CleanupExpired message) Parameters Type Name ProjectionManagementMessage.Internal.CleanupExpired message InitializeExisting(String) Declaration public void InitializeExisting(string name) Parameters Type Name System.String name InitializeNew(ManagedProjection.PersistedState, IEnvelope) Declaration public void InitializeNew(ManagedProjection.PersistedState persistedState, IEnvelope replyEnvelope) Parameters Type Name ManagedProjection.PersistedState persistedState IEnvelope replyEnvelope PrepareOrWriteStartOrLoadStopped() Declaration public void PrepareOrWriteStartOrLoadStopped() Implements System.IDisposable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Management.ManagedProjection.PersistedState.html",
    "title": "Class ManagedProjection.PersistedState | Event Store",
    "keywords": "Class ManagedProjection.PersistedState Inheritance System.Object ManagedProjection.PersistedState Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Management Assembly : EventStore.Projections.Core.dll Syntax public class PersistedState Constructors PersistedState() Declaration public PersistedState() Fields NumberOfPrequisitesMetForDeletion Declaration public int NumberOfPrequisitesMetForDeletion Field Value Type System.Int32 Properties CheckpointAfterMs Declaration public int CheckpointAfterMs { get; set; } Property Value Type System.Int32 CheckpointHandledThreshold Declaration public int CheckpointHandledThreshold { get; set; } Property Value Type System.Int32 CheckpointsDisabled Declaration public bool? CheckpointsDisabled { get; set; } Property Value Type System.Nullable < System.Boolean > CheckpointUnhandledBytesThreshold Declaration public int CheckpointUnhandledBytesThreshold { get; set; } Property Value Type System.Int32 CreateTempStreams Declaration public bool? CreateTempStreams { get; set; } Property Value Type System.Nullable < System.Boolean > DeleteCheckpointStream Declaration public bool DeleteCheckpointStream { get; set; } Property Value Type System.Boolean Deleted Declaration public bool Deleted { get; set; } Property Value Type System.Boolean DeleteEmittedStreams Declaration public bool DeleteEmittedStreams { get; set; } Property Value Type System.Boolean DeleteStateStream Declaration public bool DeleteStateStream { get; set; } Property Value Type System.Boolean Deleting Declaration public bool Deleting { get; set; } Property Value Type System.Boolean EmitEnabled Declaration public bool? EmitEnabled { get; set; } Property Value Type System.Nullable < System.Boolean > Enabled Declaration public bool Enabled { get; set; } Property Value Type System.Boolean Epoch Declaration public long? Epoch { get; set; } Property Value Type System.Nullable < System.Int64 > HandlerType Declaration public string HandlerType { get; set; } Property Value Type System.String MaxAllowedWritesInFlight Declaration public int MaxAllowedWritesInFlight { get; set; } Property Value Type System.Int32 MaxWriteBatchLength Declaration public int MaxWriteBatchLength { get; set; } Property Value Type System.Int32 Message Declaration public string Message { get; set; } Property Value Type System.String Mode Declaration public ProjectionMode Mode { get; set; } Property Value Type ProjectionMode PendingEventsThreshold Declaration public int PendingEventsThreshold { get; set; } Property Value Type System.Int32 Query Declaration public string Query { get; set; } Property Value Type System.String RunAs Declaration public SerializedRunAs RunAs { get; set; } Property Value Type SerializedRunAs SourceDefinition Declaration public ProjectionSourceDefinition SourceDefinition { get; set; } Property Value Type ProjectionSourceDefinition TrackEmittedStreams Declaration public bool? TrackEmittedStreams { get; set; } Property Value Type System.Nullable < System.Boolean > Version Declaration public long? Version { get; set; } Property Value Type System.Nullable < System.Int64 > Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Management.IResponseWriter.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Management.IResponseWriter.html",
    "title": "Interface IResponseWriter | Event Store",
    "keywords": "Interface IResponseWriter Namespace : EventStore.Projections.Core.Services.Management Assembly : EventStore.Projections.Core.dll Syntax public interface IResponseWriter Methods PublishCommand(String, Object) Declaration void PublishCommand(string command, object body) Parameters Type Name System.String command System.Object body Reset() Declaration void Reset() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Management.IMultiStreamMessageWriter.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Management.IMultiStreamMessageWriter.html",
    "title": "Interface IMultiStreamMessageWriter | Event Store",
    "keywords": "Interface IMultiStreamMessageWriter Namespace : EventStore.Projections.Core.Services.Management Assembly : EventStore.Projections.Core.dll Syntax public interface IMultiStreamMessageWriter Methods PublishResponse(String, Guid, Object) Declaration void PublishResponse(string command, Guid workerId, object body) Parameters Type Name System.String command System.Guid workerId System.Object body Reset() Declaration void Reset() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.ISourceDefinitionSource.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.ISourceDefinitionSource.html",
    "title": "Interface ISourceDefinitionSource | Event Store",
    "keywords": "Interface ISourceDefinitionSource Namespace : EventStore.Projections.Core.Services Assembly : EventStore.Projections.Core.dll Syntax public interface ISourceDefinitionSource Methods GetSourceDefinition() Declaration IQuerySources GetSourceDefinition() Returns Type Description IQuerySources Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.ISingletonTimeoutScheduler.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.ISingletonTimeoutScheduler.html",
    "title": "Interface ISingletonTimeoutScheduler | Event Store",
    "keywords": "Interface ISingletonTimeoutScheduler Namespace : EventStore.Projections.Core.Services Assembly : EventStore.Projections.Core.dll Syntax public interface ISingletonTimeoutScheduler Methods Schedule(Int32, Action) Declaration void Schedule(int timeout, Action action) Parameters Type Name System.Int32 timeout System.Action action Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.IProjectionStateHandler.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.IProjectionStateHandler.html",
    "title": "Interface IProjectionStateHandler | Event Store",
    "keywords": "Interface IProjectionStateHandler Inherited Members System.IDisposable.Dispose() ISourceDefinitionSource.GetSourceDefinition() Namespace : EventStore.Projections.Core.Services Assembly : EventStore.Projections.Core.dll Syntax public interface IProjectionStateHandler : IDisposable, ISourceDefinitionSource Methods GetStatePartition(CheckpointTag, String, ResolvedEvent) Get state partition from the event Declaration string GetStatePartition(CheckpointTag eventPosition, string category, ResolvedEvent data) Parameters Type Name CheckpointTag eventPosition System.String category ResolvedEvent data Returns Type Description System.String partition name Initialize() Declaration void Initialize() InitializeShared() Declaration void InitializeShared() Load(String) Declaration void Load(string state) Parameters Type Name System.String state LoadShared(String) Declaration void LoadShared(string state) Parameters Type Name System.String state ProcessEvent(String, CheckpointTag, String, ResolvedEvent, out String, out String, out EmittedEventEnvelope[]) Processes event and updates internal state if necessary. Declaration bool ProcessEvent(string partition, CheckpointTag eventPosition, string category, ResolvedEvent data, out string newState, out string newSharedState, out EmittedEventEnvelope[] emittedEvents) Parameters Type Name System.String partition CheckpointTag eventPosition System.String category ResolvedEvent data System.String newState System.String newSharedState EmittedEventEnvelope [] emittedEvents Returns Type Description System.Boolean true - if event was processed (new state must be returned) ProcessPartitionCreated(String, CheckpointTag, ResolvedEvent, out EmittedEventEnvelope[]) Processes partition created notification and updates internal state if necessary. Declaration bool ProcessPartitionCreated(string partition, CheckpointTag createPosition, ResolvedEvent data, out EmittedEventEnvelope[] emittedEvents) Parameters Type Name System.String partition CheckpointTag createPosition ResolvedEvent data EmittedEventEnvelope [] emittedEvents Returns Type Description System.Boolean true - if notification was processed (new state must be returned) ProcessPartitionDeleted(String, CheckpointTag, out String) Processes partition deleted notification and updates internal state if necessary. Declaration bool ProcessPartitionDeleted(string partition, CheckpointTag deletePosition, out string newState) Parameters Type Name System.String partition CheckpointTag deletePosition System.String newState Returns Type Description System.Boolean true - if event was processed (new state must be returned) TransformCatalogEvent(CheckpointTag, ResolvedEvent) transforms a catalog event to streamId Declaration string TransformCatalogEvent(CheckpointTag eventPosition, ResolvedEvent data) Parameters Type Name CheckpointTag eventPosition ResolvedEvent data Returns Type Description System.String TransformStateToResult() Transforms current state into a projection result. Should not call any emit/linkTo etc Declaration string TransformStateToResult() Returns Type Description System.String result JSON or NULL if current state has been skipped Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProjectionStateHandlerTestExtensions.ProcessEvent(IProjectionStateHandler, String, CheckpointTag, String, String, String, Guid, Int64, String, String, out String, out EmittedEventEnvelope[], Boolean) ProjectionStateHandlerTestExtensions.ProcessEvent(IProjectionStateHandler, String, CheckpointTag, String, String, String, Guid, Int64, String, String, out String, out String, out EmittedEventEnvelope[], Boolean) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.IProjectionCheckpointHandler.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.IProjectionCheckpointHandler.html",
    "title": "Interface IProjectionCheckpointHandler | Event Store",
    "keywords": "Interface IProjectionCheckpointHandler Namespace : EventStore.Projections.Core.Services Assembly : EventStore.Projections.Core.dll Syntax public interface IProjectionCheckpointHandler Methods ProcessNewCheckpoint(CheckpointTag, out EmittedEventEnvelope[]) Declaration void ProcessNewCheckpoint(CheckpointTag checkpointPosition, out EmittedEventEnvelope[] emittedEvents) Parameters Type Name CheckpointTag checkpointPosition EmittedEventEnvelope [] emittedEvents Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Http.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Http.html",
    "title": "Namespace EventStore.Projections.Core.Services.Http | Event Store",
    "keywords": "Namespace EventStore.Projections.Core.Services.Http Classes ProjectionsController ProjectionsController.ProjectionConfigData ProjectionsController.ReadEventsBody ProjectionsStatisticsHttpFormatted ProjectionStatisticsHttpFormatted"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Http.ProjectionsStatisticsHttpFormatted.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Http.ProjectionsStatisticsHttpFormatted.html",
    "title": "Class ProjectionsStatisticsHttpFormatted | Event Store",
    "keywords": "Class ProjectionsStatisticsHttpFormatted Inheritance System.Object ProjectionsStatisticsHttpFormatted Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Http Assembly : EventStore.Projections.Core.dll Syntax public class ProjectionsStatisticsHttpFormatted Constructors ProjectionsStatisticsHttpFormatted(ProjectionManagementMessage.Statistics, Func<String, String>) Declaration public ProjectionsStatisticsHttpFormatted(ProjectionManagementMessage.Statistics source, Func<string, string> makeAbsouteUrl) Parameters Type Name ProjectionManagementMessage.Statistics source System.Func < System.String , System.String > makeAbsouteUrl Properties Projections Declaration public ProjectionStatisticsHttpFormatted[] Projections { get; } Property Value Type ProjectionStatisticsHttpFormatted [] Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Http.ProjectionsController.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Http.ProjectionsController.html",
    "title": "Class ProjectionsController | Event Store",
    "keywords": "Class ProjectionsController Inheritance System.Object CommunicationController ProjectionsController Implements IHttpController Inherited Members CommunicationController.Publish(Message) CommunicationController.Subscribe(IHttpService) CommunicationController.SendBadRequest(HttpEntityManager, String) CommunicationController.SendTooBig(HttpEntityManager) CommunicationController.SendOk(HttpEntityManager) CommunicationController.Register(IHttpService, String, String, Action<HttpEntityManager, UriTemplateMatch>, ICodec[], ICodec[]) CommunicationController.RegisterCustom(IHttpService, String, String, Func<HttpEntityManager, UriTemplateMatch, RequestParams>, ICodec[], ICodec[]) CommunicationController.RegisterUrlBased(IHttpService, String, String, Action<HttpEntityManager, UriTemplateMatch>) CommunicationController.MakeUrl(HttpEntityManager, String) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Http Assembly : EventStore.Projections.Core.dll Syntax public class ProjectionsController : CommunicationController, IHttpController Constructors ProjectionsController(IHttpForwarder, IPublisher, IPublisher) Declaration public ProjectionsController(IHttpForwarder httpForwarder, IPublisher publisher, IPublisher networkSendQueue) Parameters Type Name IHttpForwarder httpForwarder IPublisher publisher IPublisher networkSendQueue Methods EatException<T>(Func<T>, T) Declaration public static T EatException<T>(Func<T> func, T defaultValue = null) Parameters Type Name System.Func <T> func T defaultValue Returns Type Description T Type Parameters Name Description T SubscribeCore(IHttpService) Declaration protected override void SubscribeCore(IHttpService service) Parameters Type Name IHttpService service Overrides CommunicationController.SubscribeCore(IHttpService) Implements IHttpController Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Http.ProjectionsController.ReadEventsBody.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Http.ProjectionsController.ReadEventsBody.html",
    "title": "Class ProjectionsController.ReadEventsBody | Event Store",
    "keywords": "Class ProjectionsController.ReadEventsBody Inheritance System.Object ProjectionsController.ReadEventsBody Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Http Assembly : EventStore.Projections.Core.dll Syntax public class ReadEventsBody Properties MaxEvents Declaration public int? MaxEvents { get; set; } Property Value Type System.Nullable < System.Int32 > Position Declaration public JObject Position { get; set; } Property Value Type Newtonsoft.Json.Linq.JObject Query Declaration public QuerySourcesDefinition Query { get; set; } Property Value Type QuerySourcesDefinition Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Http.ProjectionsController.ProjectionConfigData.html",
    "title": "Class ProjectionsController.ProjectionConfigData | Event Store",
    "keywords": "Class ProjectionsController.ProjectionConfigData Inheritance System.Object ProjectionsController.ProjectionConfigData Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Http Assembly : EventStore.Projections.Core.dll Syntax public class ProjectionConfigData Properties CheckpointAfterMs Declaration public int CheckpointAfterMs { get; set; } Property Value Type System.Int32 CheckpointHandledThreshold Declaration public int CheckpointHandledThreshold { get; set; } Property Value Type System.Int32 CheckpointUnhandledBytesThreshold Declaration public int CheckpointUnhandledBytesThreshold { get; set; } Property Value Type System.Int32 EmitEnabled Declaration public bool EmitEnabled { get; set; } Property Value Type System.Boolean MaxAllowedWritesInFlight Declaration public int MaxAllowedWritesInFlight { get; set; } Property Value Type System.Int32 MaxWriteBatchLength Declaration public int MaxWriteBatchLength { get; set; } Property Value Type System.Int32 PendingEventsThreshold Declaration public int PendingEventsThreshold { get; set; } Property Value Type System.Int32 TrackEmittedStreams Declaration public bool TrackEmittedStreams { get; set; } Property Value Type System.Boolean Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Http.ProjectionStatisticsHttpFormatted.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Http.ProjectionStatisticsHttpFormatted.html",
    "title": "Class ProjectionStatisticsHttpFormatted | Event Store",
    "keywords": "Class ProjectionStatisticsHttpFormatted Inheritance System.Object ProjectionStatisticsHttpFormatted Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Http Assembly : EventStore.Projections.Core.dll Syntax public class ProjectionStatisticsHttpFormatted Constructors ProjectionStatisticsHttpFormatted(ProjectionStatistics, Func<String, String>) Declaration public ProjectionStatisticsHttpFormatted(ProjectionStatistics source, Func<string, string> makeAbsoluteUrl) Parameters Type Name ProjectionStatistics source System.Func < System.String , System.String > makeAbsoluteUrl Properties BufferedEvents Declaration public int BufferedEvents { get; set; } Property Value Type System.Int32 CheckpointStatus Declaration public string CheckpointStatus { get; set; } Property Value Type System.String CoreProcessingTime Declaration public long CoreProcessingTime { get; set; } Property Value Type System.Int64 DisableCommandUrl Declaration public string DisableCommandUrl { get; set; } Property Value Type System.String EffectiveName Declaration public string EffectiveName { get; set; } Property Value Type System.String EnableCommandUrl Declaration public string EnableCommandUrl { get; set; } Property Value Type System.String Epoch Declaration public long Epoch { get; set; } Property Value Type System.Int64 EventsProcessedAfterRestart Declaration public int EventsProcessedAfterRestart { get; set; } Property Value Type System.Int32 LastCheckpoint Declaration public string LastCheckpoint { get; set; } Property Value Type System.String Mode Declaration public ProjectionMode Mode { get; set; } Property Value Type ProjectionMode Name Declaration public string Name { get; set; } Property Value Type System.String PartitionsCached Declaration public int PartitionsCached { get; set; } Property Value Type System.Int32 Position Declaration public string Position { get; set; } Property Value Type System.String Progress Declaration public float Progress { get; set; } Property Value Type System.Single QueryUrl Declaration public string QueryUrl { get; set; } Property Value Type System.String ReadsInProgress Declaration public int ReadsInProgress { get; set; } Property Value Type System.Int32 ResultStreamUrl Declaration public string ResultStreamUrl { get; set; } Property Value Type System.String ResultUrl Declaration public string ResultUrl { get; set; } Property Value Type System.String StateReason Declaration public string StateReason { get; set; } Property Value Type System.String StateUrl Declaration public string StateUrl { get; set; } Property Value Type System.String Status Declaration public string Status { get; set; } Property Value Type System.String StatusUrl Declaration public string StatusUrl { get; set; } Property Value Type System.String Version Declaration public long Version { get; set; } Property Value Type System.Int64 WritePendingEventsAfterCheckpoint Declaration public int WritePendingEventsAfterCheckpoint { get; set; } Property Value Type System.Int32 WritePendingEventsBeforeCheckpoint Declaration public int WritePendingEventsBeforeCheckpoint { get; set; } Property Value Type System.Int32 WritesInProgress Declaration public int WritesInProgress { get; set; } Property Value Type System.Int32 Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.ProjectionsSubsystem.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.ProjectionsSubsystem.html",
    "title": "Class ProjectionsSubsystem | Event Store",
    "keywords": "Class ProjectionsSubsystem Inheritance System.Object ProjectionsSubsystem Implements ISubsystem IHandle < CoreProjectionStatusMessage.Stopped > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core Assembly : EventStore.Projections.Core.dll Syntax public sealed class ProjectionsSubsystem : ISubsystem, IHandle<CoreProjectionStatusMessage.Stopped> Constructors ProjectionsSubsystem(Int32, ProjectionType, Boolean, TimeSpan, Boolean) Declaration public ProjectionsSubsystem(int projectionWorkerThreadCount, ProjectionType runProjections, bool startStandardProjections, TimeSpan projectionQueryExpiry, bool faultOutOfOrderProjections) Parameters Type Name System.Int32 projectionWorkerThreadCount ProjectionType runProjections System.Boolean startStandardProjections System.TimeSpan projectionQueryExpiry System.Boolean faultOutOfOrderProjections Fields VERSION Declaration public const int VERSION = 3 Field Value Type System.Int32 Methods Handle(CoreProjectionStatusMessage.Stopped) Declaration public void Handle(CoreProjectionStatusMessage.Stopped message) Parameters Type Name CoreProjectionStatusMessage.Stopped message Register(StandardComponents) Declaration public void Register(StandardComponents standardComponents) Parameters Type Name StandardComponents standardComponents Start() Declaration public IEnumerable<Task> Start() Returns Type Description System.Collections.Generic.IEnumerable < System.Threading.Tasks.Task > Stop() Declaration public void Stop() Implements ISubsystem IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.ProjectionsStandardComponents.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.ProjectionsStandardComponents.html",
    "title": "Class ProjectionsStandardComponents | Event Store",
    "keywords": "Class ProjectionsStandardComponents Inheritance System.Object ProjectionsStandardComponents Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core Assembly : EventStore.Projections.Core.dll Syntax public class ProjectionsStandardComponents Constructors ProjectionsStandardComponents(Int32, ProjectionType, InMemoryBus, IQueuedHandler, InMemoryBus, Boolean) Declaration public ProjectionsStandardComponents(int projectionWorkerThreadCount, ProjectionType runProjections, InMemoryBus masterOutputBus, IQueuedHandler masterInputQueue, InMemoryBus masterMainBus, bool faultOutOfOrderProjections) Parameters Type Name System.Int32 projectionWorkerThreadCount ProjectionType runProjections InMemoryBus masterOutputBus IQueuedHandler masterInputQueue InMemoryBus masterMainBus System.Boolean faultOutOfOrderProjections Properties FaultOutOfOrderProjections Declaration public bool FaultOutOfOrderProjections { get; } Property Value Type System.Boolean MasterInputQueue Declaration public IQueuedHandler MasterInputQueue { get; } Property Value Type IQueuedHandler MasterMainBus Declaration public InMemoryBus MasterMainBus { get; } Property Value Type InMemoryBus MasterOutputBus Declaration public InMemoryBus MasterOutputBus { get; } Property Value Type InMemoryBus ProjectionWorkerThreadCount Declaration public int ProjectionWorkerThreadCount { get; } Property Value Type System.Int32 RunProjections Declaration public ProjectionType RunProjections { get; } Property Value Type ProjectionType Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ElectionMessage.ViewChangeProof.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ElectionMessage.ViewChangeProof.html",
    "title": "Class ElectionMessage.ViewChangeProof | Event Store",
    "keywords": "Class ElectionMessage.ViewChangeProof Inheritance System.Object Message ElectionMessage.ViewChangeProof Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class ViewChangeProof : Message Constructors ViewChangeProof(ElectionMessageDto.ViewChangeProofDto) Declaration public ViewChangeProof(ElectionMessageDto.ViewChangeProofDto dto) Parameters Type Name ElectionMessageDto.ViewChangeProofDto dto ViewChangeProof(Guid, IPEndPoint, Int32) Declaration public ViewChangeProof(Guid serverId, IPEndPoint serverInternalHttp, int installedView) Parameters Type Name System.Guid serverId System.Net.IPEndPoint serverInternalHttp System.Int32 installedView Fields InstalledView Declaration public readonly int InstalledView Field Value Type System.Int32 ServerId Declaration public readonly Guid ServerId Field Value Type System.Guid ServerInternalHttp Declaration public readonly IPEndPoint ServerInternalHttp Field Value Type System.Net.IPEndPoint Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Methods ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ElectionMessage.ViewChange.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ElectionMessage.ViewChange.html",
    "title": "Class ElectionMessage.ViewChange | Event Store",
    "keywords": "Class ElectionMessage.ViewChange Inheritance System.Object Message ElectionMessage.ViewChange Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class ViewChange : Message Constructors ViewChange(ElectionMessageDto.ViewChangeDto) Declaration public ViewChange(ElectionMessageDto.ViewChangeDto dto) Parameters Type Name ElectionMessageDto.ViewChangeDto dto ViewChange(Guid, IPEndPoint, Int32) Declaration public ViewChange(Guid serverId, IPEndPoint serverInternalHttp, int attemptedView) Parameters Type Name System.Guid serverId System.Net.IPEndPoint serverInternalHttp System.Int32 attemptedView Fields AttemptedView Declaration public readonly int AttemptedView Field Value Type System.Int32 ServerId Declaration public readonly Guid ServerId Field Value Type System.Guid ServerInternalHttp Declaration public readonly IPEndPoint ServerInternalHttp Field Value Type System.Net.IPEndPoint Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Methods ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ElectionMessage.StartElections.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ElectionMessage.StartElections.html",
    "title": "Class ElectionMessage.StartElections | Event Store",
    "keywords": "Class ElectionMessage.StartElections Inheritance System.Object Message ElectionMessage.StartElections Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class StartElections : Message Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Methods ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ElectionMessage.SendViewChangeProof.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ElectionMessage.SendViewChangeProof.html",
    "title": "Class ElectionMessage.SendViewChangeProof | Event Store",
    "keywords": "Class ElectionMessage.SendViewChangeProof Inheritance System.Object Message ElectionMessage.SendViewChangeProof Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class SendViewChangeProof : Message Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Methods ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ElectionMessage.Proposal.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ElectionMessage.Proposal.html",
    "title": "Class ElectionMessage.Proposal | Event Store",
    "keywords": "Class ElectionMessage.Proposal Inheritance System.Object Message ElectionMessage.Proposal Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class Proposal : Message Constructors Proposal(ElectionMessageDto.ProposalDto) Declaration public Proposal(ElectionMessageDto.ProposalDto dto) Parameters Type Name ElectionMessageDto.ProposalDto dto Proposal(Guid, IPEndPoint, Guid, IPEndPoint, Int32, Int32, Int64, Guid, Int64, Int64, Int64) Declaration public Proposal(Guid serverId, IPEndPoint serverInternalHttp, Guid masterId, IPEndPoint masterInternalHttp, int view, int epochNumber, long epochPosition, Guid epochId, long lastCommitPosition, long writerCheckpoint, long chaserCheckpoint) Parameters Type Name System.Guid serverId System.Net.IPEndPoint serverInternalHttp System.Guid masterId System.Net.IPEndPoint masterInternalHttp System.Int32 view System.Int32 epochNumber System.Int64 epochPosition System.Guid epochId System.Int64 lastCommitPosition System.Int64 writerCheckpoint System.Int64 chaserCheckpoint Fields ChaserCheckpoint Declaration public readonly long ChaserCheckpoint Field Value Type System.Int64 EpochId Declaration public readonly Guid EpochId Field Value Type System.Guid EpochNumber Declaration public readonly int EpochNumber Field Value Type System.Int32 EpochPosition Declaration public readonly long EpochPosition Field Value Type System.Int64 LastCommitPosition Declaration public readonly long LastCommitPosition Field Value Type System.Int64 MasterId Declaration public readonly Guid MasterId Field Value Type System.Guid MasterInternalHttp Declaration public readonly IPEndPoint MasterInternalHttp Field Value Type System.Net.IPEndPoint ServerId Declaration public readonly Guid ServerId Field Value Type System.Guid ServerInternalHttp Declaration public readonly IPEndPoint ServerInternalHttp Field Value Type System.Net.IPEndPoint View Declaration public readonly int View Field Value Type System.Int32 WriterCheckpoint Declaration public readonly long WriterCheckpoint Field Value Type System.Int64 Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Methods ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeResult.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.ScavengeResult.html",
    "title": "Enum ClientMessage.ScavengeDatabaseResponse.ScavengeResult | Event Store",
    "keywords": "Enum ClientMessage.ScavengeDatabaseResponse.ScavengeResult Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public enum ScavengeResult Fields Name Description InProgress InvalidScavengeId Started Stopped Unauthorized Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<ClientMessage.ScavengeDatabaseResponse.ScavengeResult>() ProtobufExtensions.Serialize<ClientMessage.ScavengeDatabaseResponse.ScavengeResult>() ProtobufExtensions.SerializeToArray<ClientMessage.ScavengeDatabaseResponse.ScavengeResult>()"
  },
  "dotnet-api/code/EventStore.Core.Messages.ClientMessage.ScavengeDatabase.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ClientMessage.ScavengeDatabase.html",
    "title": "Class ClientMessage.ScavengeDatabase | Event Store",
    "keywords": "Class ClientMessage.ScavengeDatabase Inheritance System.Object Message ClientMessage.ScavengeDatabase Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class ScavengeDatabase : Message Constructors ScavengeDatabase(IEnvelope, Guid, IPrincipal, Int32, Int32) Declaration public ScavengeDatabase(IEnvelope envelope, Guid correlationId, IPrincipal user, int startFromChunk, int threads) Parameters Type Name IEnvelope envelope System.Guid correlationId System.Security.Principal.IPrincipal user System.Int32 startFromChunk System.Int32 threads Fields CorrelationId Declaration public readonly Guid CorrelationId Field Value Type System.Guid Envelope Declaration public readonly IEnvelope Envelope Field Value Type IEnvelope StartFromChunk Declaration public readonly int StartFromChunk Field Value Type System.Int32 Threads Declaration public readonly int Threads Field Value Type System.Int32 User Declaration public readonly IPrincipal User Field Value Type System.Security.Principal.IPrincipal Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ClientMessage.RequestShutdown.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ClientMessage.RequestShutdown.html",
    "title": "Class ClientMessage.RequestShutdown | Event Store",
    "keywords": "Class ClientMessage.RequestShutdown Inheritance System.Object Message ClientMessage.RequestShutdown Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class RequestShutdown : Message Constructors RequestShutdown(Boolean, Boolean) Declaration public RequestShutdown(bool exitProcess, bool shutdownHttp) Parameters Type Name System.Boolean exitProcess System.Boolean shutdownHttp Fields ExitProcess Declaration public readonly bool ExitProcess Field Value Type System.Boolean ShutdownHttp Declaration public readonly bool ShutdownHttp Field Value Type System.Boolean Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ClientMessage.ReplayParkedMessage.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ClientMessage.ReplayParkedMessage.html",
    "title": "Class ClientMessage.ReplayParkedMessage | Event Store",
    "keywords": "Class ClientMessage.ReplayParkedMessage Inheritance System.Object Message ClientMessage.ReadRequestMessage ClientMessage.ReplayParkedMessage Inherited Members ClientMessage.ReadRequestMessage.InternalCorrId ClientMessage.ReadRequestMessage.CorrelationId ClientMessage.ReadRequestMessage.Envelope ClientMessage.ReadRequestMessage.User ClientMessage.ReadRequestMessage.Expires Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class ReplayParkedMessage : ClientMessage.ReadRequestMessage Constructors ReplayParkedMessage(Guid, Guid, IEnvelope, String, String, ResolvedEvent, IPrincipal) Declaration public ReplayParkedMessage(Guid internalCorrId, Guid correlationId, IEnvelope envelope, string streamId, string groupName, ResolvedEvent event, IPrincipal user) Parameters Type Name System.Guid internalCorrId System.Guid correlationId IEnvelope envelope System.String streamId System.String groupName ResolvedEvent event System.Security.Principal.IPrincipal user Fields Event Declaration public readonly ResolvedEvent Event Field Value Type ResolvedEvent EventStreamId Declaration public readonly string EventStreamId Field Value Type System.String GroupName Declaration public readonly string GroupName Field Value Type System.String Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides ClientMessage.ReadRequestMessage.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ClientMessage.ReplayMessagesReceived.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ClientMessage.ReplayMessagesReceived.html",
    "title": "Class ClientMessage.ReplayMessagesReceived | Event Store",
    "keywords": "Class ClientMessage.ReplayMessagesReceived Inheritance System.Object Message ClientMessage.ReadResponseMessage ClientMessage.ReplayMessagesReceived Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class ReplayMessagesReceived : ClientMessage.ReadResponseMessage Constructors ReplayMessagesReceived(Guid, ClientMessage.ReplayMessagesReceived.ReplayMessagesReceivedResult, String) Declaration public ReplayMessagesReceived(Guid correlationId, ClientMessage.ReplayMessagesReceived.ReplayMessagesReceivedResult result, string reason) Parameters Type Name System.Guid correlationId ClientMessage.ReplayMessagesReceived.ReplayMessagesReceivedResult result System.String reason Fields CorrelationId Declaration public readonly Guid CorrelationId Field Value Type System.Guid Reason Declaration public readonly string Reason Field Value Type System.String Result Declaration public readonly ClientMessage.ReplayMessagesReceived.ReplayMessagesReceivedResult Result Field Value Type ClientMessage.ReplayMessagesReceived.ReplayMessagesReceivedResult Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides ClientMessage.ReadResponseMessage.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ClientMessage.ReplayMessagesReceived.ReplayMessagesReceivedResult.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ClientMessage.ReplayMessagesReceived.ReplayMessagesReceivedResult.html",
    "title": "Enum ClientMessage.ReplayMessagesReceived.ReplayMessagesReceivedResult | Event Store",
    "keywords": "Enum ClientMessage.ReplayMessagesReceived.ReplayMessagesReceivedResult Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public enum ReplayMessagesReceivedResult Fields Name Description AccessDenied DoesNotExist Fail Success Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<ClientMessage.ReplayMessagesReceived.ReplayMessagesReceivedResult>() ProtobufExtensions.Serialize<ClientMessage.ReplayMessagesReceived.ReplayMessagesReceivedResult>() ProtobufExtensions.SerializeToArray<ClientMessage.ReplayMessagesReceived.ReplayMessagesReceivedResult>()"
  },
  "dotnet-api/code/EventStore.Core.Messages.ClientMessage.ReplayAllParkedMessages.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ClientMessage.ReplayAllParkedMessages.html",
    "title": "Class ClientMessage.ReplayAllParkedMessages | Event Store",
    "keywords": "Class ClientMessage.ReplayAllParkedMessages Inheritance System.Object Message ClientMessage.ReadRequestMessage ClientMessage.ReplayAllParkedMessages Inherited Members ClientMessage.ReadRequestMessage.InternalCorrId ClientMessage.ReadRequestMessage.CorrelationId ClientMessage.ReadRequestMessage.Envelope ClientMessage.ReadRequestMessage.User ClientMessage.ReadRequestMessage.Expires Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class ReplayAllParkedMessages : ClientMessage.ReadRequestMessage Constructors ReplayAllParkedMessages(Guid, Guid, IEnvelope, String, String, IPrincipal) Declaration public ReplayAllParkedMessages(Guid internalCorrId, Guid correlationId, IEnvelope envelope, string eventStreamId, string groupName, IPrincipal user) Parameters Type Name System.Guid internalCorrId System.Guid correlationId IEnvelope envelope System.String eventStreamId System.String groupName System.Security.Principal.IPrincipal user Fields EventStreamId Declaration public readonly string EventStreamId Field Value Type System.String GroupName Declaration public readonly string GroupName Field Value Type System.String Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides ClientMessage.ReadRequestMessage.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ClientMessage.ReadStreamEventsForwardCompleted.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ClientMessage.ReadStreamEventsForwardCompleted.html",
    "title": "Class ClientMessage.ReadStreamEventsForwardCompleted | Event Store",
    "keywords": "Class ClientMessage.ReadStreamEventsForwardCompleted Inheritance System.Object Message ClientMessage.ReadResponseMessage ClientMessage.ReadStreamEventsForwardCompleted Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class ReadStreamEventsForwardCompleted : ClientMessage.ReadResponseMessage Constructors ReadStreamEventsForwardCompleted(Guid, String, Int64, Int32, ReadStreamResult, ResolvedEvent[], StreamMetadata, Boolean, String, Int64, Int64, Boolean, Int64) Declaration public ReadStreamEventsForwardCompleted(Guid correlationId, string eventStreamId, long fromEventNumber, int maxCount, ReadStreamResult result, ResolvedEvent[] events, StreamMetadata streamMetadata, bool isCachePublic, string error, long nextEventNumber, long lastEventNumber, bool isEndOfStream, long tfLastCommitPosition) Parameters Type Name System.Guid correlationId System.String eventStreamId System.Int64 fromEventNumber System.Int32 maxCount ReadStreamResult result ResolvedEvent [] events StreamMetadata streamMetadata System.Boolean isCachePublic System.String error System.Int64 nextEventNumber System.Int64 lastEventNumber System.Boolean isEndOfStream System.Int64 tfLastCommitPosition Fields CorrelationId Declaration public readonly Guid CorrelationId Field Value Type System.Guid Error Declaration public readonly string Error Field Value Type System.String Events Declaration public readonly ResolvedEvent[] Events Field Value Type ResolvedEvent [] EventStreamId Declaration public readonly string EventStreamId Field Value Type System.String FromEventNumber Declaration public readonly long FromEventNumber Field Value Type System.Int64 IsCachePublic Declaration public readonly bool IsCachePublic Field Value Type System.Boolean IsEndOfStream Declaration public readonly bool IsEndOfStream Field Value Type System.Boolean LastEventNumber Declaration public readonly long LastEventNumber Field Value Type System.Int64 MaxCount Declaration public readonly int MaxCount Field Value Type System.Int32 NextEventNumber Declaration public readonly long NextEventNumber Field Value Type System.Int64 Result Declaration public readonly ReadStreamResult Result Field Value Type ReadStreamResult StreamMetadata Declaration public readonly StreamMetadata StreamMetadata Field Value Type StreamMetadata TfLastCommitPosition Declaration public readonly long TfLastCommitPosition Field Value Type System.Int64 Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides ClientMessage.ReadResponseMessage.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ClientMessage.IdentifyClient.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ClientMessage.IdentifyClient.html",
    "title": "Class ClientMessage.IdentifyClient | Event Store",
    "keywords": "Class ClientMessage.IdentifyClient Inheritance System.Object Message ClientMessage.IdentifyClient Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class IdentifyClient : Message Constructors IdentifyClient(Guid, Int32, String) Declaration public IdentifyClient(Guid correlationId, int version, string connectionName) Parameters Type Name System.Guid correlationId System.Int32 version System.String connectionName Fields ConnectionName Declaration public readonly string ConnectionName Field Value Type System.String CorrelationId Declaration public readonly Guid CorrelationId Field Value Type System.Guid Version Declaration public readonly int Version Field Value Type System.Int32 Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Methods ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ClientMessage.DeleteStreamCompleted.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ClientMessage.DeleteStreamCompleted.html",
    "title": "Class ClientMessage.DeleteStreamCompleted | Event Store",
    "keywords": "Class ClientMessage.DeleteStreamCompleted Inheritance System.Object Message ClientMessage.DeleteStreamCompleted Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class DeleteStreamCompleted : Message Constructors DeleteStreamCompleted(Guid, OperationResult, String) Declaration public DeleteStreamCompleted(Guid correlationId, OperationResult result, string message) Parameters Type Name System.Guid correlationId OperationResult result System.String message DeleteStreamCompleted(Guid, OperationResult, String, Int64, Int64) Declaration public DeleteStreamCompleted(Guid correlationId, OperationResult result, string message, long preparePosition, long commitPosition) Parameters Type Name System.Guid correlationId OperationResult result System.String message System.Int64 preparePosition System.Int64 commitPosition Fields CommitPosition Declaration public readonly long CommitPosition Field Value Type System.Int64 CorrelationId Declaration public readonly Guid CorrelationId Field Value Type System.Guid Message Declaration public readonly string Message Field Value Type System.String PreparePosition Declaration public readonly long PreparePosition Field Value Type System.Int64 Result Declaration public readonly OperationResult Result Field Value Type OperationResult Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Methods WithCorrelationId(Guid) Declaration public ClientMessage.DeleteStreamCompleted WithCorrelationId(Guid newCorrId) Parameters Type Name System.Guid newCorrId Returns Type Description ClientMessage.DeleteStreamCompleted Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ClientMessage.DeleteStream.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ClientMessage.DeleteStream.html",
    "title": "Class ClientMessage.DeleteStream | Event Store",
    "keywords": "Class ClientMessage.DeleteStream Inheritance System.Object Message ClientMessage.WriteRequestMessage ClientMessage.DeleteStream Inherited Members ClientMessage.WriteRequestMessage.InternalCorrId ClientMessage.WriteRequestMessage.CorrelationId ClientMessage.WriteRequestMessage.Envelope ClientMessage.WriteRequestMessage.RequireMaster ClientMessage.WriteRequestMessage.User ClientMessage.WriteRequestMessage.Login ClientMessage.WriteRequestMessage.Password Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class DeleteStream : ClientMessage.WriteRequestMessage Constructors DeleteStream(Guid, Guid, IEnvelope, Boolean, String, Int64, Boolean, IPrincipal, String, String) Declaration public DeleteStream(Guid internalCorrId, Guid correlationId, IEnvelope envelope, bool requireMaster, string eventStreamId, long expectedVersion, bool hardDelete, IPrincipal user, string login = null, string password = null) Parameters Type Name System.Guid internalCorrId System.Guid correlationId IEnvelope envelope System.Boolean requireMaster System.String eventStreamId System.Int64 expectedVersion System.Boolean hardDelete System.Security.Principal.IPrincipal user System.String login System.String password Fields EventStreamId Declaration public readonly string EventStreamId Field Value Type System.String ExpectedVersion Declaration public readonly long ExpectedVersion Field Value Type System.Int64 HardDelete Declaration public readonly bool HardDelete Field Value Type System.Boolean Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides ClientMessage.WriteRequestMessage.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ClientMessage.DeletePersistentSubscriptionCompleted.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ClientMessage.DeletePersistentSubscriptionCompleted.html",
    "title": "Class ClientMessage.DeletePersistentSubscriptionCompleted | Event Store",
    "keywords": "Class ClientMessage.DeletePersistentSubscriptionCompleted Inheritance System.Object Message ClientMessage.ReadResponseMessage ClientMessage.DeletePersistentSubscriptionCompleted Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class DeletePersistentSubscriptionCompleted : ClientMessage.ReadResponseMessage Constructors DeletePersistentSubscriptionCompleted(Guid, ClientMessage.DeletePersistentSubscriptionCompleted.DeletePersistentSubscriptionResult, String) Declaration public DeletePersistentSubscriptionCompleted(Guid correlationId, ClientMessage.DeletePersistentSubscriptionCompleted.DeletePersistentSubscriptionResult result, string reason) Parameters Type Name System.Guid correlationId ClientMessage.DeletePersistentSubscriptionCompleted.DeletePersistentSubscriptionResult result System.String reason Fields CorrelationId Declaration public readonly Guid CorrelationId Field Value Type System.Guid Reason Declaration public readonly string Reason Field Value Type System.String Result Declaration public readonly ClientMessage.DeletePersistentSubscriptionCompleted.DeletePersistentSubscriptionResult Result Field Value Type ClientMessage.DeletePersistentSubscriptionCompleted.DeletePersistentSubscriptionResult Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides ClientMessage.ReadResponseMessage.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ClientMessage.DeletePersistentSubscriptionCompleted.DeletePersistentSubscriptionResult.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ClientMessage.DeletePersistentSubscriptionCompleted.DeletePersistentSubscriptionResult.html",
    "title": "Enum ClientMessage.DeletePersistentSubscriptionCompleted.DeletePersistentSubscriptionResult | Event Store",
    "keywords": "Enum ClientMessage.DeletePersistentSubscriptionCompleted.DeletePersistentSubscriptionResult Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public enum DeletePersistentSubscriptionResult Fields Name Description AccessDenied DoesNotExist Fail Success Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<ClientMessage.DeletePersistentSubscriptionCompleted.DeletePersistentSubscriptionResult>() ProtobufExtensions.Serialize<ClientMessage.DeletePersistentSubscriptionCompleted.DeletePersistentSubscriptionResult>() ProtobufExtensions.SerializeToArray<ClientMessage.DeletePersistentSubscriptionCompleted.DeletePersistentSubscriptionResult>()"
  },
  "dotnet-api/code/EventStore.Core.Messages.ClientMessage.DeletePersistentSubscription.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ClientMessage.DeletePersistentSubscription.html",
    "title": "Class ClientMessage.DeletePersistentSubscription | Event Store",
    "keywords": "Class ClientMessage.DeletePersistentSubscription Inheritance System.Object Message ClientMessage.ReadRequestMessage ClientMessage.DeletePersistentSubscription Inherited Members ClientMessage.ReadRequestMessage.InternalCorrId ClientMessage.ReadRequestMessage.CorrelationId ClientMessage.ReadRequestMessage.Envelope ClientMessage.ReadRequestMessage.User ClientMessage.ReadRequestMessage.Expires Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class DeletePersistentSubscription : ClientMessage.ReadRequestMessage Constructors DeletePersistentSubscription(Guid, Guid, IEnvelope, String, String, IPrincipal) Declaration public DeletePersistentSubscription(Guid internalCorrId, Guid correlationId, IEnvelope envelope, string eventStreamId, string groupName, IPrincipal user) Parameters Type Name System.Guid internalCorrId System.Guid correlationId IEnvelope envelope System.String eventStreamId System.String groupName System.Security.Principal.IPrincipal user Fields EventStreamId Declaration public readonly string EventStreamId Field Value Type System.String GroupName Declaration public readonly string GroupName Field Value Type System.String Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides ClientMessage.ReadRequestMessage.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ClientMessage.CreatePersistentSubscriptionCompleted.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ClientMessage.CreatePersistentSubscriptionCompleted.html",
    "title": "Class ClientMessage.CreatePersistentSubscriptionCompleted | Event Store",
    "keywords": "Class ClientMessage.CreatePersistentSubscriptionCompleted Inheritance System.Object Message ClientMessage.ReadResponseMessage ClientMessage.CreatePersistentSubscriptionCompleted Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class CreatePersistentSubscriptionCompleted : ClientMessage.ReadResponseMessage Constructors CreatePersistentSubscriptionCompleted(Guid, ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult, String) Declaration public CreatePersistentSubscriptionCompleted(Guid correlationId, ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult result, string reason) Parameters Type Name System.Guid correlationId ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult result System.String reason Fields CorrelationId Declaration public readonly Guid CorrelationId Field Value Type System.Guid Reason Declaration public readonly string Reason Field Value Type System.String Result Declaration public readonly ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult Result Field Value Type ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides ClientMessage.ReadResponseMessage.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult.html",
    "title": "Enum ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult | Event Store",
    "keywords": "Enum ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public enum CreatePersistentSubscriptionResult Fields Name Description AccessDenied AlreadyExists Fail Success Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult>() ProtobufExtensions.Serialize<ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult>() ProtobufExtensions.SerializeToArray<ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult>()"
  },
  "dotnet-api/code/EventStore.Core.Index.PTable.html": {
    "href": "dotnet-api/code/EventStore.Core.Index.PTable.html",
    "title": "Class PTable | Event Store",
    "keywords": "Class PTable Inheritance System.Object PTable Implements ISearchTable System.IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Index Assembly : EventStore.Core.dll Syntax public class PTable : ISearchTable, IDisposable Fields DefaultBufferSize Declaration public const int DefaultBufferSize = 8192 Field Value Type System.Int32 DefaultSequentialBufferSize Declaration public const int DefaultSequentialBufferSize = 65536 Field Value Type System.Int32 IndexEntryV1Size Declaration public const int IndexEntryV1Size = 16 Field Value Type System.Int32 IndexEntryV2Size Declaration public const int IndexEntryV2Size = 20 Field Value Type System.Int32 IndexEntryV3Size Declaration public const int IndexEntryV3Size = 24 Field Value Type System.Int32 IndexEntryV4Size Declaration public const int IndexEntryV4Size = 24 Field Value Type System.Int32 IndexKeyV1Size Declaration public const int IndexKeyV1Size = 8 Field Value Type System.Int32 IndexKeyV2Size Declaration public const int IndexKeyV2Size = 12 Field Value Type System.Int32 IndexKeyV3Size Declaration public const int IndexKeyV3Size = 16 Field Value Type System.Int32 IndexKeyV4Size Declaration public const int IndexKeyV4Size = 16 Field Value Type System.Int32 MD5Size Declaration public const int MD5Size = 16 Field Value Type System.Int32 Properties Count Declaration public long Count { get; } Property Value Type System.Int64 Filename Declaration public string Filename { get; } Property Value Type System.String Id Declaration public Guid Id { get; } Property Value Type System.Guid Version Declaration public byte Version { get; } Property Value Type System.Byte Methods Dispose() Declaration public void Dispose() FromFile(String, Int32, Boolean) Declaration public static PTable FromFile(string filename, int cacheDepth, bool skipIndexVerify) Parameters Type Name System.String filename System.Int32 cacheDepth System.Boolean skipIndexVerify Returns Type Description PTable FromMemtable(IMemTable, String, Int32, Boolean) Declaration public static PTable FromMemtable(IMemTable table, string filename, int cacheDepth = 16, bool skipIndexVerify = false) Parameters Type Name IMemTable table System.String filename System.Int32 cacheDepth System.Boolean skipIndexVerify Returns Type Description PTable GetMidpointIndex(Int64, Int64, Int64) Declaration public static long GetMidpointIndex(long k, long numIndexEntries, long numMidpoints) Parameters Type Name System.Int64 k System.Int64 numIndexEntries System.Int64 numMidpoints Returns Type Description System.Int64 GetRange(UInt64, Int64, Int64, Nullable<Int32>) Declaration public IEnumerable<IndexEntry> GetRange(ulong stream, long startNumber, long endNumber, int? limit = default(int? )) Parameters Type Name System.UInt64 stream System.Int64 startNumber System.Int64 endNumber System.Nullable < System.Int32 > limit Returns Type Description System.Collections.Generic.IEnumerable < IndexEntry > GetRequiredMidpointCountCached(Int64, Byte, Int32) Declaration public static uint GetRequiredMidpointCountCached(long numIndexEntries, byte version, int minDepth = 16) Parameters Type Name System.Int64 numIndexEntries System.Byte version System.Int32 minDepth Returns Type Description System.UInt32 IsMidpointIndex(Int64, Int64, Int64) Declaration public static bool IsMidpointIndex(long index, long numIndexEntries, long numMidpoints) Parameters Type Name System.Int64 index System.Int64 numIndexEntries System.Int64 numMidpoints Returns Type Description System.Boolean IterateAllInOrder() Declaration public IEnumerable<IndexEntry> IterateAllInOrder() Returns Type Description System.Collections.Generic.IEnumerable < IndexEntry > MarkForDestruction() Declaration public void MarkForDestruction() MergeTo(IList<PTable>, String, Func<String, UInt64, UInt64>, Func<IndexEntry, Boolean>, Func<IndexEntry, Tuple<String, Boolean>>, Byte, Int32, Boolean) Declaration public static PTable MergeTo(IList<PTable> tables, string outputFile, Func<string, ulong, ulong> upgradeHash, Func<IndexEntry, bool> existsAt, Func<IndexEntry, Tuple<string, bool>> readRecord, byte version, int cacheDepth = 16, bool skipIndexVerify = false) Parameters Type Name System.Collections.Generic.IList < PTable > tables System.String outputFile System.Func < System.String , System.UInt64 , System.UInt64 > upgradeHash System.Func < IndexEntry , System.Boolean > existsAt System.Func < IndexEntry , System.Tuple < System.String , System.Boolean >> readRecord System.Byte version System.Int32 cacheDepth System.Boolean skipIndexVerify Returns Type Description PTable Scavenged(PTable, String, Func<String, UInt64, UInt64>, Func<IndexEntry, Boolean>, Func<IndexEntry, Tuple<String, Boolean>>, Byte, out Int64, Int32, Boolean, CancellationToken) Declaration public static PTable Scavenged(PTable table, string outputFile, Func<string, ulong, ulong> upgradeHash, Func<IndexEntry, bool> existsAt, Func<IndexEntry, Tuple<string, bool>> readRecord, byte version, out long spaceSaved, int cacheDepth = 16, bool skipIndexVerify = false, CancellationToken ct = default(CancellationToken)) Parameters Type Name PTable table System.String outputFile System.Func < System.String , System.UInt64 , System.UInt64 > upgradeHash System.Func < IndexEntry , System.Boolean > existsAt System.Func < IndexEntry , System.Tuple < System.String , System.Boolean >> readRecord System.Byte version System.Int64 spaceSaved System.Int32 cacheDepth System.Boolean skipIndexVerify System.Threading.CancellationToken ct Returns Type Description PTable TryGetLatestEntry(UInt64, out IndexEntry) Declaration public bool TryGetLatestEntry(ulong stream, out IndexEntry entry) Parameters Type Name System.UInt64 stream IndexEntry entry Returns Type Description System.Boolean TryGetOldestEntry(UInt64, out IndexEntry) Declaration public bool TryGetOldestEntry(ulong stream, out IndexEntry entry) Parameters Type Name System.UInt64 stream IndexEntry entry Returns Type Description System.Boolean TryGetOneValue(UInt64, Int64, out Int64) Declaration public bool TryGetOneValue(ulong stream, long number, out long position) Parameters Type Name System.UInt64 stream System.Int64 number System.Int64 position Returns Type Description System.Boolean WaitForDisposal(Int32) Declaration public void WaitForDisposal(int timeout) Parameters Type Name System.Int32 timeout WaitForDisposal(TimeSpan) Declaration public void WaitForDisposal(TimeSpan timeout) Parameters Type Name System.TimeSpan timeout Implements ISearchTable System.IDisposable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Common.Utils.IPEndPointArrayConverter.html": {
    "href": "dotnet-api/code/EventStore.Common.Utils.IPEndPointArrayConverter.html",
    "title": "Class IPEndPointArrayConverter | Event Store",
    "keywords": "Class IPEndPointArrayConverter Inheritance System.Object System.ComponentModel.TypeConverter System.ComponentModel.CollectionConverter System.ComponentModel.ArrayConverter IPEndPointArrayConverter Inherited Members System.ComponentModel.ArrayConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object, System.Type) System.ComponentModel.ArrayConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext, System.Object, System.Attribute[]) System.ComponentModel.ArrayConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext) System.ComponentModel.TypeConverter.CanConvertFrom(System.Type) System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type) System.ComponentModel.TypeConverter.CanConvertTo(System.Type) System.ComponentModel.TypeConverter.ConvertFrom(System.Object) System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext, System.String) System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String) System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.String) System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.String) System.ComponentModel.TypeConverter.ConvertFromString(System.String) System.ComponentModel.TypeConverter.ConvertTo(System.Object, System.Type) System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext, System.Object) System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object) System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object) System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext, System.Object) System.ComponentModel.TypeConverter.ConvertToString(System.Object) System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary) System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext, System.Collections.IDictionary) System.ComponentModel.TypeConverter.GetConvertFromException(System.Object) System.ComponentModel.TypeConverter.GetConvertToException(System.Object, System.Type) System.ComponentModel.TypeConverter.GetCreateInstanceSupported() System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext) System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext, System.Object) System.ComponentModel.TypeConverter.GetProperties(System.Object) System.ComponentModel.TypeConverter.GetPropertiesSupported() System.ComponentModel.TypeConverter.GetStandardValues() System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext) System.ComponentModel.TypeConverter.GetStandardValuesExclusive() System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext) System.ComponentModel.TypeConverter.GetStandardValuesSupported() System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext) System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext, System.Object) System.ComponentModel.TypeConverter.IsValid(System.Object) System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection, System.String[]) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Common.Utils Assembly : EventStore.Common.dll Syntax public class IPEndPointArrayConverter : ArrayConverter Methods CanConvertFrom(ITypeDescriptorContext, Type) Declaration public override bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType) Parameters Type Name System.ComponentModel.ITypeDescriptorContext context System.Type sourceType Returns Type Description System.Boolean Overrides System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type) ConvertFrom(ITypeDescriptorContext, CultureInfo, Object) Declaration public override object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value) Parameters Type Name System.ComponentModel.ITypeDescriptorContext context System.Globalization.CultureInfo culture System.Object value Returns Type Description System.Object Overrides System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object) Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Common.Utils.ExitCode.html": {
    "href": "dotnet-api/code/EventStore.Common.Utils.ExitCode.html",
    "title": "Enum ExitCode | Event Store",
    "keywords": "Enum ExitCode Namespace : EventStore.Common.Utils Assembly : EventStore.Common.dll Syntax public enum ExitCode Fields Name Description Error Success Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<ExitCode>() ProtobufExtensions.Serialize<ExitCode>() ProtobufExtensions.SerializeToArray<ExitCode>()"
  },
  "dotnet-api/code/EventStore.Common.Utils.EnumerableExtensions.html": {
    "href": "dotnet-api/code/EventStore.Common.Utils.EnumerableExtensions.html",
    "title": "Class EnumerableExtensions | Event Store",
    "keywords": "Class EnumerableExtensions Inheritance System.Object EnumerableExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Common.Utils Assembly : EventStore.Common.dll Syntax public static class EnumerableExtensions Methods Contains<T>(IEnumerable<T>, Predicate<T>) Declaration public static bool Contains<T>(this IEnumerable<T> collection, Predicate<T> condition) Parameters Type Name System.Collections.Generic.IEnumerable <T> collection System.Predicate <T> condition Returns Type Description System.Boolean Type Parameters Name Description T IsEmpty<T>(IEnumerable<T>) Declaration public static bool IsEmpty<T>(this IEnumerable<T> collection) Parameters Type Name System.Collections.Generic.IEnumerable <T> collection Returns Type Description System.Boolean Type Parameters Name Description T IsNotEmpty<T>(IEnumerable<T>) Declaration public static bool IsNotEmpty<T>(this IEnumerable<T> collection) Parameters Type Name System.Collections.Generic.IEnumerable <T> collection Returns Type Description System.Boolean Type Parameters Name Description T Safe<T>(IEnumerable<T>) Declaration public static IEnumerable<T> Safe<T>(this IEnumerable<T> collection) Parameters Type Name System.Collections.Generic.IEnumerable <T> collection Returns Type Description System.Collections.Generic.IEnumerable <T> Type Parameters Name Description T"
  },
  "dotnet-api/code/EventStore.Common.Utils.BytesFormatter.html": {
    "href": "dotnet-api/code/EventStore.Common.Utils.BytesFormatter.html",
    "title": "Class BytesFormatter | Event Store",
    "keywords": "Class BytesFormatter Inheritance System.Object BytesFormatter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Common.Utils Assembly : EventStore.Common.dll Syntax public static class BytesFormatter Methods ToFriendlyNumberString(Int64) Declaration public static string ToFriendlyNumberString(this long number) Parameters Type Name System.Int64 number Returns Type Description System.String ToFriendlyNumberString(UInt64) Declaration public static string ToFriendlyNumberString(this ulong number) Parameters Type Name System.UInt64 number Returns Type Description System.String ToFriendlySizeString(Int64) Declaration public static string ToFriendlySizeString(this long bytes) Parameters Type Name System.Int64 bytes Returns Type Description System.String ToFriendlySizeString(UInt64) Declaration public static string ToFriendlySizeString(this ulong bytes) Parameters Type Name System.UInt64 bytes Returns Type Description System.String ToFriendlySpeedString(Double) Declaration public static string ToFriendlySpeedString(this double bytes) Parameters Type Name System.Double bytes Returns Type Description System.String"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.IEventProcessingProjectionPhase.html",
    "title": "Interface IEventProcessingProjectionPhase | Event Store",
    "keywords": "Interface IEventProcessingProjectionPhase Inherited Members IProjectionPhaseStateManager.BeginGetPartitionStateAt(String, CheckpointTag, Action<PartitionState>, Boolean) IProjectionPhaseStateManager.UnlockAndForgetBefore(CheckpointTag) IProjectionPhaseStateManager.LastProcessedEventPosition Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public interface IEventProcessingProjectionPhase : IProjectionPhaseStateManager Methods EmitEofResult(String, String, CheckpointTag, Guid, String) Declaration void EmitEofResult(string partition, string resultBody, CheckpointTag causedBy, Guid causedByGuid, string correlationId) Parameters Type Name System.String partition System.String resultBody CheckpointTag causedBy System.Guid causedByGuid System.String correlationId FinalizeEventProcessing(EventProcessedResult, CheckpointTag, Single) Declaration void FinalizeEventProcessing(EventProcessedResult result, CheckpointTag eventCheckpointTag, float progress) Parameters Type Name EventProcessedResult result CheckpointTag eventCheckpointTag System.Single progress ProcessCommittedEvent(EventReaderSubscriptionMessage.CommittedEventReceived, String) Declaration EventProcessedResult ProcessCommittedEvent(EventReaderSubscriptionMessage.CommittedEventReceived message, string partition) Parameters Type Name EventReaderSubscriptionMessage.CommittedEventReceived message System.String partition Returns Type Description EventProcessedResult ProcessPartitionDeleted(String, CheckpointTag) Declaration EventProcessedResult ProcessPartitionDeleted(string partition, CheckpointTag deletedPosition) Parameters Type Name System.String partition CheckpointTag deletedPosition Returns Type Description EventProcessedResult RecordEventOrder(ResolvedEvent, CheckpointTag, Action) Declaration void RecordEventOrder(ResolvedEvent resolvedEvent, CheckpointTag orderCheckpointTag, Action completed) Parameters Type Name ResolvedEvent resolvedEvent CheckpointTag orderCheckpointTag System.Action completed TransformCatalogEvent(EventReaderSubscriptionMessage.CommittedEventReceived) Declaration string TransformCatalogEvent(EventReaderSubscriptionMessage.CommittedEventReceived message) Parameters Type Name EventReaderSubscriptionMessage.CommittedEventReceived message Returns Type Description System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.IEmittedStreamsWriter.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.IEmittedStreamsWriter.html",
    "title": "Interface IEmittedStreamsWriter | Event Store",
    "keywords": "Interface IEmittedStreamsWriter Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public interface IEmittedStreamsWriter Methods WriteEvents(String, Int64, Event[], IPrincipal, Action<ClientMessage.WriteEventsCompleted>) Declaration void WriteEvents(string streamId, long expectedVersion, Event[] events, IPrincipal writeAs, Action<ClientMessage.WriteEventsCompleted> complete) Parameters Type Name System.String streamId System.Int64 expectedVersion Event [] events System.Security.Principal.IPrincipal writeAs System.Action < ClientMessage.WriteEventsCompleted > complete Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.IEmittedStreamsTracker.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.IEmittedStreamsTracker.html",
    "title": "Interface IEmittedStreamsTracker | Event Store",
    "keywords": "Interface IEmittedStreamsTracker Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public interface IEmittedStreamsTracker Methods Initialize() Declaration void Initialize() TrackEmittedStream(EmittedEvent[]) Declaration void TrackEmittedStream(EmittedEvent[] emittedEvents) Parameters Type Name EmittedEvent [] emittedEvents Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.IEmittedStreamsDeleter.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.IEmittedStreamsDeleter.html",
    "title": "Interface IEmittedStreamsDeleter | Event Store",
    "keywords": "Interface IEmittedStreamsDeleter Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public interface IEmittedStreamsDeleter Methods DeleteEmittedStreams(Action) Declaration void DeleteEmittedStreams(Action onEmittedStreamsDeleted) Parameters Type Name System.Action onEmittedStreamsDeleted Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.IEmittedEventWriter.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.IEmittedEventWriter.html",
    "title": "Interface IEmittedEventWriter | Event Store",
    "keywords": "Interface IEmittedEventWriter Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public interface IEmittedEventWriter Methods EventsEmitted(EmittedEventEnvelope[], Guid, String) Declaration void EventsEmitted(EmittedEventEnvelope[] scheduledWrites, Guid causedBy, string correlationId) Parameters Type Name EmittedEventEnvelope [] scheduledWrites System.Guid causedBy System.String correlationId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ICoreProjectionForProcessingPhase.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ICoreProjectionForProcessingPhase.html",
    "title": "Interface ICoreProjectionForProcessingPhase | Event Store",
    "keywords": "Interface ICoreProjectionForProcessingPhase Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public interface ICoreProjectionForProcessingPhase Properties LastProcessedEventPosition Declaration CheckpointTag LastProcessedEventPosition { get; } Property Value Type CheckpointTag Methods CompletePhase() Declaration void CompletePhase() EnsureTickPending() Declaration void EnsureTickPending() SetCurrentCheckpointSuggestedWorkItem(CheckpointSuggestedWorkItem) Declaration void SetCurrentCheckpointSuggestedWorkItem(CheckpointSuggestedWorkItem checkpointSuggestedWorkItem) Parameters Type Name CheckpointSuggestedWorkItem checkpointSuggestedWorkItem SetFaulted(Exception) Declaration void SetFaulted(Exception ex) Parameters Type Name System.Exception ex SetFaulted(String) Declaration void SetFaulted(string reason) Parameters Type Name System.String reason SetFaulting(String) Declaration void SetFaulting(string reason) Parameters Type Name System.String reason Subscribed() Declaration void Subscribed() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointReader.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointReader.html",
    "title": "Interface ICoreProjectionCheckpointReader | Event Store",
    "keywords": "Interface ICoreProjectionCheckpointReader Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public interface ICoreProjectionCheckpointReader Methods BeginLoadState() Declaration void BeginLoadState() Initialize() Declaration void Initialize() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ICoreProjectionCheckpointManager.html",
    "title": "Interface ICoreProjectionCheckpointManager | Event Store",
    "keywords": "Interface ICoreProjectionCheckpointManager Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public interface ICoreProjectionCheckpointManager Properties LastProcessedEventPosition Declaration CheckpointTag LastProcessedEventPosition { get; } Property Value Type CheckpointTag Methods BeginLoadPartitionStateAt(String, CheckpointTag, Action<PartitionState>) Declaration void BeginLoadPartitionStateAt(string statePartition, CheckpointTag requestedStateCheckpointTag, Action<PartitionState> loadCompleted) Parameters Type Name System.String statePartition CheckpointTag requestedStateCheckpointTag System.Action < PartitionState > loadCompleted BeginLoadPrerecordedEvents(CheckpointTag) Declaration void BeginLoadPrerecordedEvents(CheckpointTag checkpointTag) Parameters Type Name CheckpointTag checkpointTag CheckpointSuggested(CheckpointTag, Single) Suggests a checkpoint which may complete immediately or be delayed Declaration bool CheckpointSuggested(CheckpointTag checkpointTag, float progress) Parameters Type Name CheckpointTag checkpointTag System.Single progress Returns Type Description System.Boolean true - if checkpoint has been completed (or skipped) EventProcessed(CheckpointTag, Single) Declaration void EventProcessed(CheckpointTag checkpointTag, float progress) Parameters Type Name CheckpointTag checkpointTag System.Single progress GetStatistics(ProjectionStatistics) Declaration void GetStatistics(ProjectionStatistics info) Parameters Type Name ProjectionStatistics info Initialize() Declaration void Initialize() PartitionCompleted(String) Declaration void PartitionCompleted(string partition) Parameters Type Name System.String partition Progress(Single) Declaration void Progress(float progress) Parameters Type Name System.Single progress RecordEventOrder(ResolvedEvent, CheckpointTag, Action) Declaration void RecordEventOrder(ResolvedEvent resolvedEvent, CheckpointTag orderCheckpointTag, Action committed) Parameters Type Name ResolvedEvent resolvedEvent CheckpointTag orderCheckpointTag System.Action committed Start(CheckpointTag, PartitionState) Declaration void Start(CheckpointTag checkpointTag, PartitionState rootPartitionState) Parameters Type Name CheckpointTag checkpointTag PartitionState rootPartitionState StateUpdated(String, PartitionState, PartitionState) Declaration void StateUpdated(string partition, PartitionState oldState, PartitionState newState) Parameters Type Name System.String partition PartitionState oldState PartitionState newState Stopped() Declaration void Stopped() Stopping() Declaration void Stopping() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.HeadingEventReader.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.HeadingEventReader.html",
    "title": "Class HeadingEventReader | Event Store",
    "keywords": "Class HeadingEventReader Inheritance System.Object HeadingEventReader Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class HeadingEventReader Constructors HeadingEventReader(Int32, IPublisher) Declaration public HeadingEventReader(int eventCacheSize, IPublisher publisher) Parameters Type Name System.Int32 eventCacheSize IPublisher publisher Methods Handle(ReaderSubscriptionMessage.CommittedEventDistributed) Declaration public bool Handle(ReaderSubscriptionMessage.CommittedEventDistributed message) Parameters Type Name ReaderSubscriptionMessage.CommittedEventDistributed message Returns Type Description System.Boolean Handle(ReaderSubscriptionMessage.EventReaderIdle) Declaration public bool Handle(ReaderSubscriptionMessage.EventReaderIdle message) Parameters Type Name ReaderSubscriptionMessage.EventReaderIdle message Returns Type Description System.Boolean Handle(ReaderSubscriptionMessage.EventReaderPartitionDeleted) Declaration public bool Handle(ReaderSubscriptionMessage.EventReaderPartitionDeleted message) Parameters Type Name ReaderSubscriptionMessage.EventReaderPartitionDeleted message Returns Type Description System.Boolean Start(Guid, IEventReader) Declaration public void Start(Guid eventReaderId, IEventReader eventReader) Parameters Type Name System.Guid eventReaderId IEventReader eventReader Stop() Declaration public void Stop() TrySubscribe(Guid, IReaderSubscription, Int64) Declaration public bool TrySubscribe(Guid projectionId, IReaderSubscription readerSubscription, long fromTransactionFilePosition) Parameters Type Name System.Guid projectionId IReaderSubscription readerSubscription System.Int64 fromTransactionFilePosition Returns Type Description System.Boolean Unsubscribe(Guid) Declaration public void Unsubscribe(Guid projectionId) Parameters Type Name System.Guid projectionId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ExtraMetaData.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ExtraMetaData.html",
    "title": "Class ExtraMetaData | Event Store",
    "keywords": "Class ExtraMetaData Inheritance System.Object ExtraMetaData Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class ExtraMetaData Constructors ExtraMetaData(Dictionary<String, JRaw>) Declaration public ExtraMetaData(Dictionary<string, JRaw> metadata) Parameters Type Name System.Collections.Generic.Dictionary < System.String , Newtonsoft.Json.Linq.JRaw > metadata ExtraMetaData(Dictionary<String, String>) Declaration public ExtraMetaData(Dictionary<string, string> metadata) Parameters Type Name System.Collections.Generic.Dictionary < System.String , System.String > metadata Properties Metadata Declaration public Dictionary<string, string> Metadata { get; } Property Value Type System.Collections.Generic.Dictionary < System.String , System.String > Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ExternallyFedReaderStrategy.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ExternallyFedReaderStrategy.html",
    "title": "Class ExternallyFedReaderStrategy | Event Store",
    "keywords": "Class ExternallyFedReaderStrategy Inheritance System.Object ExternallyFedReaderStrategy Implements IReaderStrategy Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class ExternallyFedReaderStrategy : IReaderStrategy Constructors ExternallyFedReaderStrategy(String, Int32, ITimeProvider, Int64) Declaration public ExternallyFedReaderStrategy(string tag, int phase, ITimeProvider timeProvider, long limitingCommitPosition) Parameters Type Name System.String tag System.Int32 phase ITimeProvider timeProvider System.Int64 limitingCommitPosition Properties EventFilter Declaration public EventFilter EventFilter { get; } Property Value Type EventFilter IsReadingOrderRepeatable Declaration public bool IsReadingOrderRepeatable { get; } Property Value Type System.Boolean PositionTagger Declaration public PositionTagger PositionTagger { get; } Property Value Type PositionTagger Methods CreatePausedEventReader(Guid, IPublisher, IODispatcher, CheckpointTag, Boolean, Nullable<Int32>) Declaration public IEventReader CreatePausedEventReader(Guid eventReaderId, IPublisher publisher, IODispatcher ioDispatcher, CheckpointTag checkpointTag, bool stopOnEof, int? stopAfterNEvents) Parameters Type Name System.Guid eventReaderId IPublisher publisher IODispatcher ioDispatcher CheckpointTag checkpointTag System.Boolean stopOnEof System.Nullable < System.Int32 > stopAfterNEvents Returns Type Description IEventReader CreateReaderSubscription(IPublisher, CheckpointTag, Guid, ReaderSubscriptionOptions) Declaration public IReaderSubscription CreateReaderSubscription(IPublisher publisher, CheckpointTag fromCheckpointTag, Guid subscriptionId, ReaderSubscriptionOptions readerSubscriptionOptions) Parameters Type Name IPublisher publisher CheckpointTag fromCheckpointTag System.Guid subscriptionId ReaderSubscriptionOptions readerSubscriptionOptions Returns Type Description IReaderSubscription Implements IReaderStrategy Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ExternallyFedByStreamEventReader.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ExternallyFedByStreamEventReader.html",
    "title": "Class ExternallyFedByStreamEventReader | Event Store",
    "keywords": "Class ExternallyFedByStreamEventReader Inheritance System.Object EventReader ExternallyFedByStreamEventReader Implements IEventReader System.IDisposable IHandle < ReaderSubscriptionManagement.SpoolStreamReadingCore > IHandle < ReaderSubscriptionManagement.CompleteSpooledStreamReading > Inherited Members EventReader.EventReaderCorrelationId EventReader._publisher EventReader._stopOnEof EventReader._disposed EventReader.PauseRequested EventReader.Paused EventReader.ReadAs EventReader.Resume() EventReader.Pause() EventReader.Dispose() EventReader.SendEof() EventReader.SendPartitionEof(String, CheckpointTag) EventReader.SendPartitionDeleted_WhenReadingDataStream(String, Nullable<Int64>, Nullable<TFPos>, Nullable<TFPos>, String, Nullable<Int32>, CheckpointTag) EventReader.SendNotAuthorized() EventReader.GetLastCommitPositionFrom(ClientMessage.ReadStreamEventsForwardCompleted) EventReader.PauseOrContinueProcessing() EventReader.NotifyIfStarting(Int64) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class ExternallyFedByStreamEventReader : EventReader, IEventReader, IDisposable, IHandle<ReaderSubscriptionManagement.SpoolStreamReadingCore>, IHandle<ReaderSubscriptionManagement.CompleteSpooledStreamReading> Constructors ExternallyFedByStreamEventReader(IPublisher, Guid, IPrincipal, IODispatcher, Nullable<Int64>, ITimeProvider, Boolean) Declaration public ExternallyFedByStreamEventReader(IPublisher publisher, Guid eventReaderCorrelationId, IPrincipal readAs, IODispatcher ioDispatcher, long? limitingCommitPosition, ITimeProvider timeProvider, bool resolveLinkTos) Parameters Type Name IPublisher publisher System.Guid eventReaderCorrelationId System.Security.Principal.IPrincipal readAs IODispatcher ioDispatcher System.Nullable < System.Int64 > limitingCommitPosition ITimeProvider timeProvider System.Boolean resolveLinkTos Methods AreEventsRequested() Declaration protected override bool AreEventsRequested() Returns Type Description System.Boolean Overrides EventReader.AreEventsRequested() Handle(ReaderSubscriptionManagement.CompleteSpooledStreamReading) Declaration public void Handle(ReaderSubscriptionManagement.CompleteSpooledStreamReading message) Parameters Type Name ReaderSubscriptionManagement.CompleteSpooledStreamReading message Handle(ReaderSubscriptionManagement.SpoolStreamReadingCore) Declaration public void Handle(ReaderSubscriptionManagement.SpoolStreamReadingCore message) Parameters Type Name ReaderSubscriptionManagement.SpoolStreamReadingCore message RequestEvents() Declaration protected override void RequestEvents() Overrides EventReader.RequestEvents() Implements IEventReader System.IDisposable IHandle<T> IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.RequestManager.Managers.TransactionCommitTwoPhaseRequestManager.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.RequestManager.Managers.TransactionCommitTwoPhaseRequestManager.html",
    "title": "Class TransactionCommitTwoPhaseRequestManager | Event Store",
    "keywords": "Class TransactionCommitTwoPhaseRequestManager Inheritance System.Object TwoPhaseRequestManagerBase TransactionCommitTwoPhaseRequestManager Implements IRequestManager IHandle < StorageMessage.CheckStreamAccessCompleted > IHandle < StorageMessage.AlreadyCommitted > IHandle < StorageMessage.PrepareAck > IHandle < StorageMessage.CommitReplicated > IHandle < StorageMessage.WrongExpectedVersion > IHandle < StorageMessage.StreamDeleted > IHandle < StorageMessage.RequestManagerTimerTick > IHandle < ClientMessage.TransactionCommit > Inherited Members TwoPhaseRequestManagerBase.Publisher TwoPhaseRequestManagerBase.PublishEnvelope TwoPhaseRequestManagerBase.ResponseEnvelope TwoPhaseRequestManagerBase.ClientCorrId TwoPhaseRequestManagerBase.NextTimeoutTime TwoPhaseRequestManagerBase.PrepareTimeout TwoPhaseRequestManagerBase.CommitTimeout TwoPhaseRequestManagerBase.InitNoPreparePhase(IEnvelope, Guid, Guid, String, IPrincipal, StreamAccessType) TwoPhaseRequestManagerBase.InitTwoPhase(IEnvelope, Guid, Guid, Int64, IPrincipal, StreamAccessType) TwoPhaseRequestManagerBase.Handle(StorageMessage.CheckStreamAccessCompleted) TwoPhaseRequestManagerBase.Handle(StorageMessage.WrongExpectedVersion) TwoPhaseRequestManagerBase.Handle(StorageMessage.StreamDeleted) TwoPhaseRequestManagerBase.Handle(StorageMessage.RequestManagerTimerTick) TwoPhaseRequestManagerBase.Handle(StorageMessage.AlreadyCommitted) TwoPhaseRequestManagerBase.Handle(StorageMessage.PrepareAck) TwoPhaseRequestManagerBase.Handle(StorageMessage.CommitReplicated) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.RequestManager.Managers Assembly : EventStore.Core.dll Syntax public class TransactionCommitTwoPhaseRequestManager : TwoPhaseRequestManagerBase, IRequestManager, IHandle<StorageMessage.CheckStreamAccessCompleted>, IHandle<StorageMessage.AlreadyCommitted>, IHandle<StorageMessage.PrepareAck>, IHandle<StorageMessage.CommitReplicated>, IHandle<StorageMessage.WrongExpectedVersion>, IHandle<StorageMessage.StreamDeleted>, IHandle<StorageMessage.RequestManagerTimerTick>, IHandle<ClientMessage.TransactionCommit> Constructors TransactionCommitTwoPhaseRequestManager(IPublisher, Int32, TimeSpan, TimeSpan, Boolean) Declaration public TransactionCommitTwoPhaseRequestManager(IPublisher publisher, int prepareCount, TimeSpan prepareTimeout, TimeSpan commitTimeout, bool betterOrdering) Parameters Type Name IPublisher publisher System.Int32 prepareCount System.TimeSpan prepareTimeout System.TimeSpan commitTimeout System.Boolean betterOrdering Methods CompleteFailedRequest(OperationResult, String, Int64) Declaration protected override void CompleteFailedRequest(OperationResult result, string error, long currentVersion) Parameters Type Name OperationResult result System.String error System.Int64 currentVersion Overrides TwoPhaseRequestManagerBase.CompleteFailedRequest(OperationResult, String, Int64) CompleteSuccessRequest(Int64, Int64, Int64, Int64) Declaration protected override void CompleteSuccessRequest(long firstEventNumber, long lastEventNumber, long preparePosition, long commitPosition) Parameters Type Name System.Int64 firstEventNumber System.Int64 lastEventNumber System.Int64 preparePosition System.Int64 commitPosition Overrides TwoPhaseRequestManagerBase.CompleteSuccessRequest(Int64, Int64, Int64, Int64) Handle(ClientMessage.TransactionCommit) Declaration public void Handle(ClientMessage.TransactionCommit request) Parameters Type Name ClientMessage.TransactionCommit request OnSecurityAccessGranted(Guid) Declaration protected override void OnSecurityAccessGranted(Guid internalCorrId) Parameters Type Name System.Guid internalCorrId Overrides TwoPhaseRequestManagerBase.OnSecurityAccessGranted(Guid) Implements IRequestManager IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.RequestManager.Managers.SingleAckRequestManager.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.RequestManager.Managers.SingleAckRequestManager.html",
    "title": "Class SingleAckRequestManager | Event Store",
    "keywords": "Class SingleAckRequestManager Inheritance System.Object SingleAckRequestManager Implements IRequestManager IHandle < ClientMessage.TransactionStart > IHandle < ClientMessage.TransactionWrite > IHandle < StorageMessage.CheckStreamAccessCompleted > IHandle < StorageMessage.PrepareAck > IHandle < StorageMessage.WrongExpectedVersion > IHandle < StorageMessage.InvalidTransaction > IHandle < StorageMessage.StreamDeleted > IHandle < StorageMessage.RequestManagerTimerTick > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.RequestManager.Managers Assembly : EventStore.Core.dll Syntax public class SingleAckRequestManager : IRequestManager, IHandle<ClientMessage.TransactionStart>, IHandle<ClientMessage.TransactionWrite>, IHandle<StorageMessage.CheckStreamAccessCompleted>, IHandle<StorageMessage.PrepareAck>, IHandle<StorageMessage.WrongExpectedVersion>, IHandle<StorageMessage.InvalidTransaction>, IHandle<StorageMessage.StreamDeleted>, IHandle<StorageMessage.RequestManagerTimerTick> Constructors SingleAckRequestManager(IPublisher, TimeSpan, Boolean) Declaration public SingleAckRequestManager(IPublisher bus, TimeSpan prepareTimeout, bool betterOrdering) Parameters Type Name IPublisher bus System.TimeSpan prepareTimeout System.Boolean betterOrdering Methods Handle(ClientMessage.TransactionStart) Declaration public void Handle(ClientMessage.TransactionStart request) Parameters Type Name ClientMessage.TransactionStart request Handle(ClientMessage.TransactionWrite) Declaration public void Handle(ClientMessage.TransactionWrite request) Parameters Type Name ClientMessage.TransactionWrite request Handle(StorageMessage.CheckStreamAccessCompleted) Declaration public void Handle(StorageMessage.CheckStreamAccessCompleted message) Parameters Type Name StorageMessage.CheckStreamAccessCompleted message Handle(StorageMessage.InvalidTransaction) Declaration public void Handle(StorageMessage.InvalidTransaction message) Parameters Type Name StorageMessage.InvalidTransaction message Handle(StorageMessage.PrepareAck) Declaration public void Handle(StorageMessage.PrepareAck message) Parameters Type Name StorageMessage.PrepareAck message Handle(StorageMessage.RequestManagerTimerTick) Declaration public void Handle(StorageMessage.RequestManagerTimerTick message) Parameters Type Name StorageMessage.RequestManagerTimerTick message Handle(StorageMessage.StreamDeleted) Declaration public void Handle(StorageMessage.StreamDeleted message) Parameters Type Name StorageMessage.StreamDeleted message Handle(StorageMessage.WrongExpectedVersion) Declaration public void Handle(StorageMessage.WrongExpectedVersion message) Parameters Type Name StorageMessage.WrongExpectedVersion message Implements IRequestManager IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.RequestManager.Managers.DeleteStreamTwoPhaseRequestManager.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.RequestManager.Managers.DeleteStreamTwoPhaseRequestManager.html",
    "title": "Class DeleteStreamTwoPhaseRequestManager | Event Store",
    "keywords": "Class DeleteStreamTwoPhaseRequestManager Inheritance System.Object TwoPhaseRequestManagerBase DeleteStreamTwoPhaseRequestManager Implements IRequestManager IHandle < StorageMessage.CheckStreamAccessCompleted > IHandle < StorageMessage.AlreadyCommitted > IHandle < StorageMessage.PrepareAck > IHandle < StorageMessage.CommitReplicated > IHandle < StorageMessage.WrongExpectedVersion > IHandle < StorageMessage.StreamDeleted > IHandle < StorageMessage.RequestManagerTimerTick > IHandle < ClientMessage.DeleteStream > Inherited Members TwoPhaseRequestManagerBase.Publisher TwoPhaseRequestManagerBase.PublishEnvelope TwoPhaseRequestManagerBase.ResponseEnvelope TwoPhaseRequestManagerBase.ClientCorrId TwoPhaseRequestManagerBase.NextTimeoutTime TwoPhaseRequestManagerBase.PrepareTimeout TwoPhaseRequestManagerBase.CommitTimeout TwoPhaseRequestManagerBase.InitNoPreparePhase(IEnvelope, Guid, Guid, String, IPrincipal, StreamAccessType) TwoPhaseRequestManagerBase.InitTwoPhase(IEnvelope, Guid, Guid, Int64, IPrincipal, StreamAccessType) TwoPhaseRequestManagerBase.Handle(StorageMessage.CheckStreamAccessCompleted) TwoPhaseRequestManagerBase.Handle(StorageMessage.WrongExpectedVersion) TwoPhaseRequestManagerBase.Handle(StorageMessage.StreamDeleted) TwoPhaseRequestManagerBase.Handle(StorageMessage.RequestManagerTimerTick) TwoPhaseRequestManagerBase.Handle(StorageMessage.AlreadyCommitted) TwoPhaseRequestManagerBase.Handle(StorageMessage.PrepareAck) TwoPhaseRequestManagerBase.Handle(StorageMessage.CommitReplicated) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.RequestManager.Managers Assembly : EventStore.Core.dll Syntax public class DeleteStreamTwoPhaseRequestManager : TwoPhaseRequestManagerBase, IRequestManager, IHandle<StorageMessage.CheckStreamAccessCompleted>, IHandle<StorageMessage.AlreadyCommitted>, IHandle<StorageMessage.PrepareAck>, IHandle<StorageMessage.CommitReplicated>, IHandle<StorageMessage.WrongExpectedVersion>, IHandle<StorageMessage.StreamDeleted>, IHandle<StorageMessage.RequestManagerTimerTick>, IHandle<ClientMessage.DeleteStream> Constructors DeleteStreamTwoPhaseRequestManager(IPublisher, Int32, TimeSpan, TimeSpan, Boolean) Declaration public DeleteStreamTwoPhaseRequestManager(IPublisher publisher, int prepareCount, TimeSpan prepareTimeout, TimeSpan commitTimeout, bool betterOrdering) Parameters Type Name IPublisher publisher System.Int32 prepareCount System.TimeSpan prepareTimeout System.TimeSpan commitTimeout System.Boolean betterOrdering Methods CompleteFailedRequest(OperationResult, String, Int64) Declaration protected override void CompleteFailedRequest(OperationResult result, string error, long currentVersion = -1L) Parameters Type Name OperationResult result System.String error System.Int64 currentVersion Overrides TwoPhaseRequestManagerBase.CompleteFailedRequest(OperationResult, String, Int64) CompleteSuccessRequest(Int64, Int64, Int64, Int64) Declaration protected override void CompleteSuccessRequest(long firstEventNumber, long lastEventNumber, long preparePosition, long commitPosition) Parameters Type Name System.Int64 firstEventNumber System.Int64 lastEventNumber System.Int64 preparePosition System.Int64 commitPosition Overrides TwoPhaseRequestManagerBase.CompleteSuccessRequest(Int64, Int64, Int64, Int64) Handle(ClientMessage.DeleteStream) Declaration public void Handle(ClientMessage.DeleteStream request) Parameters Type Name ClientMessage.DeleteStream request OnSecurityAccessGranted(Guid) Declaration protected override void OnSecurityAccessGranted(Guid internalCorrId) Parameters Type Name System.Guid internalCorrId Overrides TwoPhaseRequestManagerBase.OnSecurityAccessGranted(Guid) Implements IRequestManager IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.RequestManager.IRequestManager.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.RequestManager.IRequestManager.html",
    "title": "Interface IRequestManager | Event Store",
    "keywords": "Interface IRequestManager Inherited Members IHandle<StorageMessage.RequestManagerTimerTick>.Handle(StorageMessage.RequestManagerTimerTick) Namespace : EventStore.Core.Services.RequestManager Assembly : EventStore.Core.dll Syntax public interface IRequestManager : IHandle<StorageMessage.RequestManagerTimerTick> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) HandleExtensions.WidenFrom<TInput, TOutput>(IHandle<TOutput>) HandleExtensions.NarrowTo<TInput, TOutput>(IHandle<TOutput>) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.RequestForwardingService.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.RequestForwardingService.html",
    "title": "Class RequestForwardingService | Event Store",
    "keywords": "Class RequestForwardingService Inheritance System.Object RequestForwardingService Implements IHandle < SystemMessage.SystemStart > IHandle < SystemMessage.RequestForwardingTimerTick > IHandle < ClientMessage.NotHandled > IHandle < ClientMessage.WriteEventsCompleted > IHandle < ClientMessage.TransactionStartCompleted > IHandle < ClientMessage.TransactionWriteCompleted > IHandle < ClientMessage.TransactionCommitCompleted > IHandle < ClientMessage.DeleteStreamCompleted > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services Assembly : EventStore.Core.dll Syntax public class RequestForwardingService : IHandle<SystemMessage.SystemStart>, IHandle<SystemMessage.RequestForwardingTimerTick>, IHandle<ClientMessage.NotHandled>, IHandle<ClientMessage.WriteEventsCompleted>, IHandle<ClientMessage.TransactionStartCompleted>, IHandle<ClientMessage.TransactionWriteCompleted>, IHandle<ClientMessage.TransactionCommitCompleted>, IHandle<ClientMessage.DeleteStreamCompleted> Constructors RequestForwardingService(IPublisher, MessageForwardingProxy, TimeSpan) Declaration public RequestForwardingService(IPublisher bus, MessageForwardingProxy forwardingProxy, TimeSpan tickInterval) Parameters Type Name IPublisher bus MessageForwardingProxy forwardingProxy System.TimeSpan tickInterval Methods Handle(ClientMessage.DeleteStreamCompleted) Declaration public void Handle(ClientMessage.DeleteStreamCompleted message) Parameters Type Name ClientMessage.DeleteStreamCompleted message Handle(ClientMessage.NotHandled) Declaration public void Handle(ClientMessage.NotHandled message) Parameters Type Name ClientMessage.NotHandled message Handle(ClientMessage.TransactionCommitCompleted) Declaration public void Handle(ClientMessage.TransactionCommitCompleted message) Parameters Type Name ClientMessage.TransactionCommitCompleted message Handle(ClientMessage.TransactionStartCompleted) Declaration public void Handle(ClientMessage.TransactionStartCompleted message) Parameters Type Name ClientMessage.TransactionStartCompleted message Handle(ClientMessage.TransactionWriteCompleted) Declaration public void Handle(ClientMessage.TransactionWriteCompleted message) Parameters Type Name ClientMessage.TransactionWriteCompleted message Handle(ClientMessage.WriteEventsCompleted) Declaration public void Handle(ClientMessage.WriteEventsCompleted message) Parameters Type Name ClientMessage.WriteEventsCompleted message Handle(SystemMessage.RequestForwardingTimerTick) Declaration public void Handle(SystemMessage.RequestForwardingTimerTick message) Parameters Type Name SystemMessage.RequestForwardingTimerTick message Handle(SystemMessage.SystemStart) Declaration public void Handle(SystemMessage.SystemStart message) Parameters Type Name SystemMessage.SystemStart message Implements IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Replication.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Replication.html",
    "title": "Namespace EventStore.Core.Services.Replication | Event Store",
    "keywords": "Namespace EventStore.Core.Services.Replication Classes MasterReplicationService ReplicaService"
  },
  "dotnet-api/code/EventStore.Core.Services.Replication.ReplicaService.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Replication.ReplicaService.html",
    "title": "Class ReplicaService | Event Store",
    "keywords": "Class ReplicaService Inheritance System.Object ReplicaService Implements IHandle < SystemMessage.StateChangeMessage > IHandle < ReplicationMessage.ReconnectToMaster > IHandle < ReplicationMessage.SubscribeToMaster > IHandle < ReplicationMessage.AckLogPosition > IHandle < StorageMessage.PrepareAck > IHandle < StorageMessage.CommitAck > IHandle < ClientMessage.TcpForwardMessage > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Replication Assembly : EventStore.Core.dll Syntax public class ReplicaService : IHandle<SystemMessage.StateChangeMessage>, IHandle<ReplicationMessage.ReconnectToMaster>, IHandle<ReplicationMessage.SubscribeToMaster>, IHandle<ReplicationMessage.AckLogPosition>, IHandle<StorageMessage.PrepareAck>, IHandle<StorageMessage.CommitAck>, IHandle<ClientMessage.TcpForwardMessage> Constructors ReplicaService(IPublisher, TFChunkDb, IEpochManager, IPublisher, IAuthenticationProvider, VNodeInfo, Boolean, String, Boolean, TimeSpan, TimeSpan) Declaration public ReplicaService(IPublisher publisher, TFChunkDb db, IEpochManager epochManager, IPublisher networkSendQueue, IAuthenticationProvider authProvider, VNodeInfo nodeInfo, bool useSsl, string sslTargetHost, bool sslValidateServer, TimeSpan heartbeatTimeout, TimeSpan heartbeatInterval) Parameters Type Name IPublisher publisher TFChunkDb db IEpochManager epochManager IPublisher networkSendQueue IAuthenticationProvider authProvider VNodeInfo nodeInfo System.Boolean useSsl System.String sslTargetHost System.Boolean sslValidateServer System.TimeSpan heartbeatTimeout System.TimeSpan heartbeatInterval Methods Handle(ClientMessage.TcpForwardMessage) Declaration public void Handle(ClientMessage.TcpForwardMessage message) Parameters Type Name ClientMessage.TcpForwardMessage message Handle(ReplicationMessage.AckLogPosition) Declaration public void Handle(ReplicationMessage.AckLogPosition message) Parameters Type Name ReplicationMessage.AckLogPosition message Handle(ReplicationMessage.ReconnectToMaster) Declaration public void Handle(ReplicationMessage.ReconnectToMaster message) Parameters Type Name ReplicationMessage.ReconnectToMaster message Handle(ReplicationMessage.SubscribeToMaster) Declaration public void Handle(ReplicationMessage.SubscribeToMaster message) Parameters Type Name ReplicationMessage.SubscribeToMaster message Handle(StorageMessage.CommitAck) Declaration public void Handle(StorageMessage.CommitAck message) Parameters Type Name StorageMessage.CommitAck message Handle(StorageMessage.PrepareAck) Declaration public void Handle(StorageMessage.PrepareAck message) Parameters Type Name StorageMessage.PrepareAck message Handle(SystemMessage.StateChangeMessage) Declaration public void Handle(SystemMessage.StateChangeMessage message) Parameters Type Name SystemMessage.StateChangeMessage message Implements IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Replication.MasterReplicationService.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Replication.MasterReplicationService.html",
    "title": "Class MasterReplicationService | Event Store",
    "keywords": "Class MasterReplicationService Inheritance System.Object MasterReplicationService Implements IMonitoredQueue IHandle < SystemMessage.SystemStart > IHandle < SystemMessage.StateChangeMessage > IHandle < ReplicationMessage.ReplicaSubscriptionRequest > IHandle < ReplicationMessage.ReplicaLogPositionAck > IHandle < ReplicationMessage.GetReplicationStats > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Replication Assembly : EventStore.Core.dll Syntax public class MasterReplicationService : IMonitoredQueue, IHandle<SystemMessage.SystemStart>, IHandle<SystemMessage.StateChangeMessage>, IHandle<ReplicationMessage.ReplicaSubscriptionRequest>, IHandle<ReplicationMessage.ReplicaLogPositionAck>, IHandle<ReplicationMessage.GetReplicationStats> Constructors MasterReplicationService(IPublisher, Guid, TFChunkDb, IPublisher, IEpochManager, Int32) Declaration public MasterReplicationService(IPublisher publisher, Guid instanceId, TFChunkDb db, IPublisher tcpSendPublisher, IEpochManager epochManager, int clusterSize) Parameters Type Name IPublisher publisher System.Guid instanceId TFChunkDb db IPublisher tcpSendPublisher IEpochManager epochManager System.Int32 clusterSize Fields BulkSize Declaration public const int BulkSize = 8192 Field Value Type System.Int32 CloneThreshold Declaration public const int CloneThreshold = 1024 Field Value Type System.Int32 LagOccurencesThreshold Declaration public const int LagOccurencesThreshold = 2 Field Value Type System.Int32 MaxQueueSize Declaration public const int MaxQueueSize = 100 Field Value Type System.Int32 NoQuorumTimeout Declaration public static readonly TimeSpan NoQuorumTimeout Field Value Type System.TimeSpan ReplicaAckWindow Declaration public const int ReplicaAckWindow = 524288 Field Value Type System.Int32 ReplicaSendWindow Declaration public const int ReplicaSendWindow = 16777216 Field Value Type System.Int32 RoleAssignmentsInterval Declaration public static readonly TimeSpan RoleAssignmentsInterval Field Value Type System.TimeSpan SlaveLagThreshold Declaration public const int SlaveLagThreshold = 262144 Field Value Type System.Int32 Properties Name Declaration public string Name { get; } Property Value Type System.String Task Declaration public Task Task { get; } Property Value Type System.Threading.Tasks.Task Methods GetStatistics() Declaration public QueueStats GetStatistics() Returns Type Description QueueStats Handle(ReplicationMessage.GetReplicationStats) Declaration public void Handle(ReplicationMessage.GetReplicationStats message) Parameters Type Name ReplicationMessage.GetReplicationStats message Handle(ReplicationMessage.ReplicaLogPositionAck) Declaration public void Handle(ReplicationMessage.ReplicaLogPositionAck message) Parameters Type Name ReplicationMessage.ReplicaLogPositionAck message Handle(ReplicationMessage.ReplicaSubscriptionRequest) Declaration public void Handle(ReplicationMessage.ReplicaSubscriptionRequest message) Parameters Type Name ReplicationMessage.ReplicaSubscriptionRequest message Handle(SystemMessage.StateChangeMessage) Declaration public void Handle(SystemMessage.StateChangeMessage message) Parameters Type Name SystemMessage.StateChangeMessage message Handle(SystemMessage.SystemStart) Declaration public void Handle(SystemMessage.SystemStart message) Parameters Type Name SystemMessage.SystemStart message Implements IMonitoredQueue IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.UserManagementMessage.UserDetailsResultHttpFormatted.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.UserManagementMessage.UserDetailsResultHttpFormatted.html",
    "title": "Class UserManagementMessage.UserDetailsResultHttpFormatted | Event Store",
    "keywords": "Class UserManagementMessage.UserDetailsResultHttpFormatted Inheritance System.Object Message UserManagementMessage.ResponseMessage UserManagementMessage.UserDetailsResultHttpFormatted Inherited Members UserManagementMessage.ResponseMessage.Success UserManagementMessage.ResponseMessage.Error Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class UserDetailsResultHttpFormatted : UserManagementMessage.ResponseMessage Constructors UserDetailsResultHttpFormatted(UserManagementMessage.UserDetailsResult, Func<String, String>) Declaration public UserDetailsResultHttpFormatted(UserManagementMessage.UserDetailsResult msg, Func<string, string> makeAbsoluteUrl) Parameters Type Name UserManagementMessage.UserDetailsResult msg System.Func < System.String , System.String > makeAbsoluteUrl Fields Data Declaration public readonly UserManagementMessage.UserDataHttpFormated Data Field Value Type UserManagementMessage.UserDataHttpFormated Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides UserManagementMessage.ResponseMessage.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.UserManagementMessage.UserDetailsResult.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.UserManagementMessage.UserDetailsResult.html",
    "title": "Class UserManagementMessage.UserDetailsResult | Event Store",
    "keywords": "Class UserManagementMessage.UserDetailsResult Inheritance System.Object Message UserManagementMessage.ResponseMessage UserManagementMessage.UserDetailsResult Inherited Members UserManagementMessage.ResponseMessage.Success UserManagementMessage.ResponseMessage.Error Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public sealed class UserDetailsResult : UserManagementMessage.ResponseMessage Constructors UserDetailsResult(UserManagementMessage.Error) Declaration public UserDetailsResult(UserManagementMessage.Error error) Parameters Type Name UserManagementMessage.Error error UserDetailsResult(UserManagementMessage.UserData) Declaration public UserDetailsResult(UserManagementMessage.UserData data) Parameters Type Name UserManagementMessage.UserData data Fields Data Declaration public readonly UserManagementMessage.UserData Data Field Value Type UserManagementMessage.UserData Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides UserManagementMessage.ResponseMessage.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.UserManagementMessage.UserDataHttpFormated.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.UserManagementMessage.UserDataHttpFormated.html",
    "title": "Class UserManagementMessage.UserDataHttpFormated | Event Store",
    "keywords": "Class UserManagementMessage.UserDataHttpFormated Inheritance System.Object UserManagementMessage.UserDataHttpFormated Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class UserDataHttpFormated Constructors UserDataHttpFormated(UserManagementMessage.UserData, Func<String, String>) Declaration public UserDataHttpFormated(UserManagementMessage.UserData userData, Func<string, string> makeAbsoluteUrl) Parameters Type Name UserManagementMessage.UserData userData System.Func < System.String , System.String > makeAbsoluteUrl Fields DateLastUpdated Declaration public readonly DateTimeOffset? DateLastUpdated Field Value Type System.Nullable < System.DateTimeOffset > Disabled Declaration public readonly bool Disabled Field Value Type System.Boolean FullName Declaration public readonly string FullName Field Value Type System.String Groups Declaration public readonly string[] Groups Field Value Type System.String [] Links Declaration public readonly List<RelLink> Links Field Value Type System.Collections.Generic.List < RelLink > LoginName Declaration public readonly string LoginName Field Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.UserManagementMessage.UserData.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.UserManagementMessage.UserData.html",
    "title": "Class UserManagementMessage.UserData | Event Store",
    "keywords": "Class UserManagementMessage.UserData Inheritance System.Object UserManagementMessage.UserData Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public sealed class UserData Constructors UserData(String, String, String[], Boolean, Nullable<DateTimeOffset>) Declaration public UserData(string loginName, string fullName, string[] groups, bool disabled, DateTimeOffset? dateLastUpdated) Parameters Type Name System.String loginName System.String fullName System.String [] groups System.Boolean disabled System.Nullable < System.DateTimeOffset > dateLastUpdated Fields DateLastUpdated Declaration public readonly DateTimeOffset? DateLastUpdated Field Value Type System.Nullable < System.DateTimeOffset > Disabled Declaration public readonly bool Disabled Field Value Type System.Boolean FullName Declaration public readonly string FullName Field Value Type System.String Groups Declaration public readonly string[] Groups Field Value Type System.String [] LoginName Declaration public readonly string LoginName Field Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.UserManagementMessage.UpdateResult.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.UserManagementMessage.UpdateResult.html",
    "title": "Class UserManagementMessage.UpdateResult | Event Store",
    "keywords": "Class UserManagementMessage.UpdateResult Inheritance System.Object Message UserManagementMessage.ResponseMessage UserManagementMessage.UpdateResult Inherited Members UserManagementMessage.ResponseMessage.Success UserManagementMessage.ResponseMessage.Error Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public sealed class UpdateResult : UserManagementMessage.ResponseMessage Constructors UpdateResult(String) Declaration public UpdateResult(string loginName) Parameters Type Name System.String loginName UpdateResult(String, UserManagementMessage.Error) Declaration public UpdateResult(string loginName, UserManagementMessage.Error error) Parameters Type Name System.String loginName UserManagementMessage.Error error Fields LoginName Declaration public readonly string LoginName Field Value Type System.String Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides UserManagementMessage.ResponseMessage.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.SubscribeToStream.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.SubscribeToStream.html",
    "title": "Class TcpClientMessageDto.SubscribeToStream | Event Store",
    "keywords": "Class TcpClientMessageDto.SubscribeToStream Inheritance System.Object TcpClientMessageDto.SubscribeToStream Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax [Serializable] [ProtoContract(Name = \"SubscribeToStream\")] public class SubscribeToStream Constructors SubscribeToStream(String, Boolean) Declaration public SubscribeToStream(string eventStreamId, bool resolveLinkTos) Parameters Type Name System.String eventStreamId System.Boolean resolveLinkTos Fields EventStreamId Declaration [ProtoMember(1, IsRequired = true, Name = \"event_stream_id\", DataFormat = DataFormat.Default)] public readonly string EventStreamId Field Value Type System.String ResolveLinkTos Declaration [ProtoMember(2, IsRequired = true, Name = \"resolve_link_tos\", DataFormat = DataFormat.Default)] public readonly bool ResolveLinkTos Field Value Type System.Boolean Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.TransactionLog.LogRecords.LogRecordType.html": {
    "href": "dotnet-api/code/EventStore.Core.TransactionLog.LogRecords.LogRecordType.html",
    "title": "Enum LogRecordType | Event Store",
    "keywords": "Enum LogRecordType Namespace : EventStore.Core.TransactionLog.LogRecords Assembly : EventStore.Core.dll Syntax public enum LogRecordType Fields Name Description Commit Prepare System Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<LogRecordType>() ProtobufExtensions.Serialize<LogRecordType>() ProtobufExtensions.SerializeToArray<LogRecordType>()"
  },
  "dotnet-api/code/EventStore.Core.TransactionLog.LogRecords.LogRecord.html": {
    "href": "dotnet-api/code/EventStore.Core.TransactionLog.LogRecords.LogRecord.html",
    "title": "Class LogRecord | Event Store",
    "keywords": "Class LogRecord Inheritance System.Object LogRecord CommitLogRecord PrepareLogRecord SystemLogRecord Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.TransactionLog.LogRecords Assembly : EventStore.Core.dll Syntax public abstract class LogRecord Constructors LogRecord(LogRecordType, Byte, Int64) Declaration protected LogRecord(LogRecordType recordType, byte version, long logPosition) Parameters Type Name LogRecordType recordType System.Byte version System.Int64 logPosition Fields LogPosition Declaration public readonly long LogPosition Field Value Type System.Int64 NoData Declaration public static readonly byte[] NoData Field Value Type System.Byte [] RecordType Declaration public readonly LogRecordType RecordType Field Value Type LogRecordType Version Declaration public readonly byte Version Field Value Type System.Byte Methods Commit(Int64, Guid, Int64, Int64) Declaration public static CommitLogRecord Commit(long logPosition, Guid correlationId, long startPosition, long eventNumber) Parameters Type Name System.Int64 logPosition System.Guid correlationId System.Int64 startPosition System.Int64 eventNumber Returns Type Description CommitLogRecord DeleteTombstone(Int64, Guid, Guid, String, Int64, PrepareFlags) Declaration public static PrepareLogRecord DeleteTombstone(long logPosition, Guid correlationId, Guid eventId, string eventStreamId, long expectedVersion, PrepareFlags additionalFlags = PrepareFlags.None) Parameters Type Name System.Int64 logPosition System.Guid correlationId System.Guid eventId System.String eventStreamId System.Int64 expectedVersion PrepareFlags additionalFlags Returns Type Description PrepareLogRecord GetNextLogPosition(Int64, Int32) Declaration public long GetNextLogPosition(long logicalPosition, int length) Parameters Type Name System.Int64 logicalPosition System.Int32 length Returns Type Description System.Int64 GetPrevLogPosition(Int64, Int32) Declaration public long GetPrevLogPosition(long logicalPosition, int length) Parameters Type Name System.Int64 logicalPosition System.Int32 length Returns Type Description System.Int64 GetSizeWithLengthPrefixAndSuffix() Declaration public int GetSizeWithLengthPrefixAndSuffix() Returns Type Description System.Int32 Prepare(Int64, Guid, Guid, Int64, Int32, String, Int64, PrepareFlags, String, Byte[], Byte[], Nullable<DateTime>) Declaration public static PrepareLogRecord Prepare(long logPosition, Guid correlationId, Guid eventId, long transactionPos, int transactionOffset, string eventStreamId, long expectedVersion, PrepareFlags flags, string eventType, byte[] data, byte[] metadata, DateTime? timeStamp = default(DateTime? )) Parameters Type Name System.Int64 logPosition System.Guid correlationId System.Guid eventId System.Int64 transactionPos System.Int32 transactionOffset System.String eventStreamId System.Int64 expectedVersion PrepareFlags flags System.String eventType System.Byte [] data System.Byte [] metadata System.Nullable < System.DateTime > timeStamp Returns Type Description PrepareLogRecord ReadFrom(BinaryReader) Declaration public static LogRecord ReadFrom(BinaryReader reader) Parameters Type Name System.IO.BinaryReader reader Returns Type Description LogRecord SingleWrite(Int64, Guid, Guid, String, Int64, String, Byte[], Byte[], Nullable<DateTime>, Nullable<PrepareFlags>) Declaration public static PrepareLogRecord SingleWrite(long logPosition, Guid correlationId, Guid eventId, string eventStreamId, long expectedVersion, string eventType, byte[] data, byte[] metadata, DateTime? timestamp = default(DateTime? ), PrepareFlags? additionalFlags = default(PrepareFlags? )) Parameters Type Name System.Int64 logPosition System.Guid correlationId System.Guid eventId System.String eventStreamId System.Int64 expectedVersion System.String eventType System.Byte [] data System.Byte [] metadata System.Nullable < System.DateTime > timestamp System.Nullable < PrepareFlags > additionalFlags Returns Type Description PrepareLogRecord TransactionBegin(Int64, Guid, String, Int64) Declaration public static PrepareLogRecord TransactionBegin(long logPos, Guid correlationId, string eventStreamId, long expectedVersion) Parameters Type Name System.Int64 logPos System.Guid correlationId System.String eventStreamId System.Int64 expectedVersion Returns Type Description PrepareLogRecord TransactionEnd(Int64, Guid, Guid, Int64, String) Declaration public static PrepareLogRecord TransactionEnd(long logPos, Guid correlationId, Guid eventId, long transactionPos, string eventStreamId) Parameters Type Name System.Int64 logPos System.Guid correlationId System.Guid eventId System.Int64 transactionPos System.String eventStreamId Returns Type Description PrepareLogRecord TransactionWrite(Int64, Guid, Guid, Int64, Int32, String, String, Byte[], Byte[], Boolean) Declaration public static PrepareLogRecord TransactionWrite(long logPosition, Guid correlationId, Guid eventId, long transactionPos, int transactionOffset, string eventStreamId, string eventType, byte[] data, byte[] metadata, bool isJson) Parameters Type Name System.Int64 logPosition System.Guid correlationId System.Guid eventId System.Int64 transactionPos System.Int32 transactionOffset System.String eventStreamId System.String eventType System.Byte [] data System.Byte [] metadata System.Boolean isJson Returns Type Description PrepareLogRecord WriteTo(BinaryWriter) Declaration public virtual void WriteTo(BinaryWriter writer) Parameters Type Name System.IO.BinaryWriter writer Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.TransactionLog.LogRecords.EpochRecordExtensions.html": {
    "href": "dotnet-api/code/EventStore.Core.TransactionLog.LogRecords.EpochRecordExtensions.html",
    "title": "Class EpochRecordExtensions | Event Store",
    "keywords": "Class EpochRecordExtensions Inheritance System.Object EpochRecordExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.TransactionLog.LogRecords Assembly : EventStore.Core.dll Syntax public static class EpochRecordExtensions Methods AsString(Epoch) Declaration public static string AsString(this Epoch epoch) Parameters Type Name Epoch epoch Returns Type Description System.String AsString(EpochRecord) Declaration public static string AsString(this EpochRecord epoch) Parameters Type Name EpochRecord epoch Returns Type Description System.String"
  },
  "dotnet-api/code/EventStore.Core.TransactionLog.LogRecords.EpochRecord.html": {
    "href": "dotnet-api/code/EventStore.Core.TransactionLog.LogRecords.EpochRecord.html",
    "title": "Class EpochRecord | Event Store",
    "keywords": "Class EpochRecord Inheritance System.Object EpochRecord Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.TransactionLog.LogRecords Assembly : EventStore.Core.dll Syntax public class EpochRecord Constructors EpochRecord(Int64, Int32, Guid, Int64, DateTime) Declaration public EpochRecord(long epochPosition, int epochNumber, Guid epochId, long prevEpochPosition, DateTime timeStamp) Parameters Type Name System.Int64 epochPosition System.Int32 epochNumber System.Guid epochId System.Int64 prevEpochPosition System.DateTime timeStamp Fields EpochId Declaration public readonly Guid EpochId Field Value Type System.Guid EpochNumber Declaration public readonly int EpochNumber Field Value Type System.Int32 EpochPosition Declaration public readonly long EpochPosition Field Value Type System.Int64 PrevEpochPosition Declaration public readonly long PrevEpochPosition Field Value Type System.Int64 TimeStamp Declaration public readonly DateTime TimeStamp Field Value Type System.DateTime Methods AsSerialized() Declaration public byte[] AsSerialized() Returns Type Description System.Byte [] ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) EpochRecordExtensions.AsString(EpochRecord) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.html": {
    "href": "dotnet-api/code/EventStore.Core.TransactionLog.LogRecords.CommitLogRecord.html",
    "title": "Class CommitLogRecord | Event Store",
    "keywords": "Class CommitLogRecord Inheritance System.Object LogRecord CommitLogRecord Implements System.IEquatable < CommitLogRecord > Inherited Members LogRecord.NoData LogRecord.RecordType LogRecord.Version LogRecord.LogPosition LogRecord.GetNextLogPosition(Int64, Int32) LogRecord.GetPrevLogPosition(Int64, Int32) LogRecord.ReadFrom(BinaryReader) LogRecord.Prepare(Int64, Guid, Guid, Int64, Int32, String, Int64, PrepareFlags, String, Byte[], Byte[], Nullable<DateTime>) LogRecord.Commit(Int64, Guid, Int64, Int64) LogRecord.SingleWrite(Int64, Guid, Guid, String, Int64, String, Byte[], Byte[], Nullable<DateTime>, Nullable<PrepareFlags>) LogRecord.TransactionBegin(Int64, Guid, String, Int64) LogRecord.TransactionWrite(Int64, Guid, Guid, Int64, Int32, String, String, Byte[], Byte[], Boolean) LogRecord.TransactionEnd(Int64, Guid, Guid, Int64, String) LogRecord.DeleteTombstone(Int64, Guid, Guid, String, Int64, PrepareFlags) LogRecord.GetSizeWithLengthPrefixAndSuffix() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.TransactionLog.LogRecords Assembly : EventStore.Core.dll Syntax public class CommitLogRecord : LogRecord, IEquatable<CommitLogRecord> Constructors CommitLogRecord(Int64, Guid, Int64, DateTime, Int64, Byte) Declaration public CommitLogRecord(long logPosition, Guid correlationId, long transactionPosition, DateTime timeStamp, long firstEventNumber, byte commitRecordVersion = 1) Parameters Type Name System.Int64 logPosition System.Guid correlationId System.Int64 transactionPosition System.DateTime timeStamp System.Int64 firstEventNumber System.Byte commitRecordVersion Fields CommitRecordVersion Declaration public const byte CommitRecordVersion = 1 Field Value Type System.Byte CorrelationId Declaration public readonly Guid CorrelationId Field Value Type System.Guid FirstEventNumber Declaration public readonly long FirstEventNumber Field Value Type System.Int64 SortKey Declaration public readonly long SortKey Field Value Type System.Int64 TimeStamp Declaration public readonly DateTime TimeStamp Field Value Type System.DateTime TransactionPosition Declaration public readonly long TransactionPosition Field Value Type System.Int64 Methods Equals(CommitLogRecord) Declaration public bool Equals(CommitLogRecord other) Parameters Type Name CommitLogRecord other Returns Type Description System.Boolean Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() WriteTo(BinaryWriter) Declaration public override void WriteTo(BinaryWriter writer) Parameters Type Name System.IO.BinaryWriter writer Overrides LogRecord.WriteTo(BinaryWriter) Operators Equality(CommitLogRecord, CommitLogRecord) Declaration public static bool operator ==(CommitLogRecord left, CommitLogRecord right) Parameters Type Name CommitLogRecord left CommitLogRecord right Returns Type Description System.Boolean Inequality(CommitLogRecord, CommitLogRecord) Declaration public static bool operator !=(CommitLogRecord left, CommitLogRecord right) Parameters Type Name CommitLogRecord left CommitLogRecord right Returns Type Description System.Boolean Implements System.IEquatable<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.TransactionLog.ITransactionFileWriter.html": {
    "href": "dotnet-api/code/EventStore.Core.TransactionLog.ITransactionFileWriter.html",
    "title": "Interface ITransactionFileWriter | Event Store",
    "keywords": "Interface ITransactionFileWriter Inherited Members System.IDisposable.Dispose() Namespace : EventStore.Core.TransactionLog Assembly : EventStore.Core.dll Syntax public interface ITransactionFileWriter : IDisposable Properties Checkpoint Declaration ICheckpoint Checkpoint { get; } Property Value Type ICheckpoint Methods Close() Declaration void Close() Flush() Declaration void Flush() Open() Declaration void Open() Write(LogRecord, out Int64) Declaration bool Write(LogRecord record, out long newPos) Parameters Type Name LogRecord record System.Int64 newPos Returns Type Description System.Boolean Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.VNode.MessageForwardingProxy.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.VNode.MessageForwardingProxy.html",
    "title": "Class MessageForwardingProxy | Event Store",
    "keywords": "Class MessageForwardingProxy Inheritance System.Object MessageForwardingProxy Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.VNode Assembly : EventStore.Core.dll Syntax public class MessageForwardingProxy Methods Register(Guid, Guid, IEnvelope, TimeSpan, Message) Declaration public void Register(Guid internalCorrId, Guid clientCorrId, IEnvelope envelope, TimeSpan timeout, Message timeoutMessage) Parameters Type Name System.Guid internalCorrId System.Guid clientCorrId IEnvelope envelope System.TimeSpan timeout Message timeoutMessage TimeoutForwardings() Declaration public void TimeoutForwardings() TryForwardReply<TMessage>(Guid, TMessage, Func<Guid, TMessage, TMessage>) Declaration public bool TryForwardReply<TMessage>(Guid correlationId, TMessage originalMessage, Func<Guid, TMessage, TMessage> getForwardMessage) where TMessage : Message Parameters Type Name System.Guid correlationId TMessage originalMessage System.Func < System.Guid , TMessage, TMessage> getForwardMessage Returns Type Description System.Boolean Type Parameters Name Description TMessage Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.VNode.ClusterVNodeController.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.VNode.ClusterVNodeController.html",
    "title": "Class ClusterVNodeController | Event Store",
    "keywords": "Class ClusterVNodeController Inheritance System.Object ClusterVNodeController Implements IHandle < Message > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.VNode Assembly : EventStore.Core.dll Syntax public class ClusterVNodeController : IHandle<Message> Constructors ClusterVNodeController(IPublisher, VNodeInfo, TFChunkDb, ClusterVNodeSettings, ClusterVNode, MessageForwardingProxy, ISubsystem[]) Declaration public ClusterVNodeController(IPublisher outputBus, VNodeInfo nodeInfo, TFChunkDb db, ClusterVNodeSettings vnodeSettings, ClusterVNode node, MessageForwardingProxy forwardingProxy, ISubsystem[] subSystems) Parameters Type Name IPublisher outputBus VNodeInfo nodeInfo TFChunkDb db ClusterVNodeSettings vnodeSettings ClusterVNode node MessageForwardingProxy forwardingProxy ISubsystem [] subSystems Fields MasterReconnectionDelay Declaration public static readonly TimeSpan MasterReconnectionDelay Field Value Type System.TimeSpan ShutdownTimeout Declaration public static readonly TimeSpan ShutdownTimeout Field Value Type System.TimeSpan Methods SetMainQueue(IQueuedHandler) Declaration public void SetMainQueue(IQueuedHandler mainQueue) Parameters Type Name IQueuedHandler mainQueue Explicit Interface Implementations IHandle<Message>.Handle(Message) Declaration void IHandle<Message>.Handle(Message message) Parameters Type Name Message message Implements IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) HandleExtensions.WidenFrom<TInput, TOutput>(IHandle<TOutput>) HandleExtensions.NarrowTo<TInput, TOutput>(IHandle<TOutput>) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.UserManagement.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.UserManagement.html",
    "title": "Namespace EventStore.Core.Services.UserManagement | Event Store",
    "keywords": "Namespace EventStore.Core.Services.UserManagement Classes AllUsersReader SystemAccount UserManagementService"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Http.Configure.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Http.Configure.html",
    "title": "Class Configure | Event Store",
    "keywords": "Class Configure Inheritance System.Object Configure Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Transport.Http Assembly : EventStore.Core.dll Syntax public static class Configure Fields DisableHTTPCaching Declaration public static bool DisableHTTPCaching Field Value Type System.Boolean Methods BadRequest(String) Declaration public static ResponseConfiguration BadRequest(string description = null) Parameters Type Name System.String description Returns Type Description ResponseConfiguration DeleteStreamCompleted(HttpResponseConfiguratorArgs, Message) Declaration public static ResponseConfiguration DeleteStreamCompleted(HttpResponseConfiguratorArgs entity, Message message) Parameters Type Name HttpResponseConfiguratorArgs entity Message message Returns Type Description ResponseConfiguration EventEntry(HttpResponseConfiguratorArgs, Message, Boolean) Declaration public static ResponseConfiguration EventEntry(HttpResponseConfiguratorArgs entity, Message message, bool headEvent) Parameters Type Name HttpResponseConfiguratorArgs entity Message message System.Boolean headEvent Returns Type Description ResponseConfiguration EventMetadata(HttpResponseConfiguratorArgs) Declaration public static ResponseConfiguration EventMetadata(HttpResponseConfiguratorArgs entity) Parameters Type Name HttpResponseConfiguratorArgs entity Returns Type Description ResponseConfiguration GetFreshStatsCompleted(HttpResponseConfiguratorArgs, Message) Declaration public static ResponseConfiguration GetFreshStatsCompleted(HttpResponseConfiguratorArgs entity, Message message) Parameters Type Name HttpResponseConfiguratorArgs entity Message message Returns Type Description ResponseConfiguration GetFreshTcpConnectionStatsCompleted(HttpResponseConfiguratorArgs, Message) Declaration public static ResponseConfiguration GetFreshTcpConnectionStatsCompleted(HttpResponseConfiguratorArgs entity, Message message) Parameters Type Name HttpResponseConfiguratorArgs entity Message message Returns Type Description ResponseConfiguration GetPositionETag(Int64, String) Declaration public static string GetPositionETag(long position, string contentType) Parameters Type Name System.Int64 position System.String contentType Returns Type Description System.String GetReplicationStatsCompleted(HttpResponseConfiguratorArgs, Message) Declaration public static ResponseConfiguration GetReplicationStatsCompleted(HttpResponseConfiguratorArgs entity, Message message) Parameters Type Name HttpResponseConfiguratorArgs entity Message message Returns Type Description ResponseConfiguration GetStreamEventsBackward(HttpResponseConfiguratorArgs, Message, Boolean) Declaration public static ResponseConfiguration GetStreamEventsBackward(HttpResponseConfiguratorArgs entity, Message message, bool headOfStream) Parameters Type Name HttpResponseConfiguratorArgs entity Message message System.Boolean headOfStream Returns Type Description ResponseConfiguration GetStreamEventsForward(HttpResponseConfiguratorArgs, Message) Declaration public static ResponseConfiguration GetStreamEventsForward(HttpResponseConfiguratorArgs entity, Message message) Parameters Type Name HttpResponseConfiguratorArgs entity Message message Returns Type Description ResponseConfiguration Gone(String) Declaration public static ResponseConfiguration Gone(string description = null) Parameters Type Name System.String description Returns Type Description ResponseConfiguration InternalServerError(String) Declaration public static ResponseConfiguration InternalServerError(string description = null) Parameters Type Name System.String description Returns Type Description ResponseConfiguration NotFound() Declaration public static ResponseConfiguration NotFound() Returns Type Description ResponseConfiguration NotFound(String, Nullable<Int32>, Boolean, String) Declaration public static ResponseConfiguration NotFound(string etag, int? cacheSeconds, bool isCachePublic, string contentType) Parameters Type Name System.String etag System.Nullable < System.Int32 > cacheSeconds System.Boolean isCachePublic System.String contentType Returns Type Description ResponseConfiguration NotImplemented(String) Declaration public static ResponseConfiguration NotImplemented(string description = null) Parameters Type Name System.String description Returns Type Description ResponseConfiguration NotModified() Declaration public static ResponseConfiguration NotModified() Returns Type Description ResponseConfiguration Ok(String) Declaration public static ResponseConfiguration Ok(string contentType) Parameters Type Name System.String contentType Returns Type Description ResponseConfiguration Ok(String, Encoding, String, Nullable<Int32>, Boolean, KeyValuePair<String, String>[]) Declaration public static ResponseConfiguration Ok(string contentType, Encoding encoding, string etag, int? cacheSeconds, bool isCachePublic, params KeyValuePair<string, string>[] headers) Parameters Type Name System.String contentType System.Text.Encoding encoding System.String etag System.Nullable < System.Int32 > cacheSeconds System.Boolean isCachePublic System.Collections.Generic.KeyValuePair < System.String , System.String >[] headers Returns Type Description ResponseConfiguration ReadAllEventsBackwardCompleted(HttpResponseConfiguratorArgs, Message, Boolean) Declaration public static ResponseConfiguration ReadAllEventsBackwardCompleted(HttpResponseConfiguratorArgs entity, Message message, bool headOfTf) Parameters Type Name HttpResponseConfiguratorArgs entity Message message System.Boolean headOfTf Returns Type Description ResponseConfiguration ReadAllEventsForwardCompleted(HttpResponseConfiguratorArgs, Message, Boolean) Declaration public static ResponseConfiguration ReadAllEventsForwardCompleted(HttpResponseConfiguratorArgs entity, Message message, bool headOfTf) Parameters Type Name HttpResponseConfiguratorArgs entity Message message System.Boolean headOfTf Returns Type Description ResponseConfiguration ServiceUnavailable(String) Declaration public static ResponseConfiguration ServiceUnavailable(string description = null) Parameters Type Name System.String description Returns Type Description ResponseConfiguration TemporaryRedirect(Uri, String, Int32) Declaration public static ResponseConfiguration TemporaryRedirect(Uri originalUrl, string targetHost, int targetPort) Parameters Type Name System.Uri originalUrl System.String targetHost System.Int32 targetPort Returns Type Description ResponseConfiguration Unauthorized(String) Declaration public static ResponseConfiguration Unauthorized(string description = null) Parameters Type Name System.String description Returns Type Description ResponseConfiguration WriteEventsCompleted(HttpResponseConfiguratorArgs, Message, String) Declaration public static ResponseConfiguration WriteEventsCompleted(HttpResponseConfiguratorArgs entity, Message message, string eventStreamId) Parameters Type Name HttpResponseConfiguratorArgs entity Message message System.String eventStreamId Returns Type Description ResponseConfiguration"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Http.AutoEventConverter.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Http.AutoEventConverter.html",
    "title": "Class AutoEventConverter | Event Store",
    "keywords": "Class AutoEventConverter Inheritance System.Object AutoEventConverter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Transport.Http Assembly : EventStore.Core.dll Syntax public static class AutoEventConverter Methods CreateDataDto(ResolvedEvent) Declaration public static HttpClientMessageDto.ReadEventCompletedText CreateDataDto(ResolvedEvent evnt) Parameters Type Name ResolvedEvent evnt Returns Type Description HttpClientMessageDto.ReadEventCompletedText SmartFormat(ResolvedEvent, ICodec) Declaration public static object SmartFormat(ResolvedEvent evnt, ICodec targetCodec) Parameters Type Name ResolvedEvent evnt ICodec targetCodec Returns Type Description System.Object SmartParse(Byte[], ICodec, Guid, String) Declaration public static Event[] SmartParse(byte[] request, ICodec sourceCodec, Guid includedId, string includedType = null) Parameters Type Name System.Byte [] request ICodec sourceCodec System.Guid includedId System.String includedType Returns Type Description Event []"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Http.Authentication.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Http.Authentication.html",
    "title": "Namespace EventStore.Core.Services.Transport.Http.Authentication | Event Store",
    "keywords": "Namespace EventStore.Core.Services.Transport.Http.Authentication Classes AnonymousHttpAuthenticationProvider BasicHttpAuthenticationProvider HttpAuthenticationProvider PasswordChangeNotificationReader Rfc2898PasswordHashAlgorithm TrustedHttpAuthenticationProvider"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Http.Authentication.TrustedHttpAuthenticationProvider.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Http.Authentication.TrustedHttpAuthenticationProvider.html",
    "title": "Class TrustedHttpAuthenticationProvider | Event Store",
    "keywords": "Class TrustedHttpAuthenticationProvider Inheritance System.Object HttpAuthenticationProvider TrustedHttpAuthenticationProvider Inherited Members HttpAuthenticationProvider.Authenticated(IncomingHttpRequestMessage, IPrincipal) HttpAuthenticationProvider.ReplyUnauthorized(HttpEntity) HttpAuthenticationProvider.ReplyInternalServerError(HttpEntity) HttpAuthenticationProvider.ReplyNotYetAvailable(HttpEntity) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Transport.Http.Authentication Assembly : EventStore.Core.dll Syntax public class TrustedHttpAuthenticationProvider : HttpAuthenticationProvider Methods Authenticate(IncomingHttpRequestMessage) Declaration public override bool Authenticate(IncomingHttpRequestMessage message) Parameters Type Name IncomingHttpRequestMessage message Returns Type Description System.Boolean Overrides HttpAuthenticationProvider.Authenticate(IncomingHttpRequestMessage) Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.UserManagementMessage.Get.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.UserManagementMessage.Get.html",
    "title": "Class UserManagementMessage.Get | Event Store",
    "keywords": "Class UserManagementMessage.Get Inheritance System.Object Message UserManagementMessage.RequestMessage UserManagementMessage.UserManagementRequestMessage UserManagementMessage.Get Inherited Members UserManagementMessage.UserManagementRequestMessage.LoginName UserManagementMessage.RequestMessage.Envelope UserManagementMessage.RequestMessage.Principal Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public sealed class Get : UserManagementMessage.UserManagementRequestMessage Constructors Get(IEnvelope, IPrincipal, String) Declaration public Get(IEnvelope envelope, IPrincipal principal, string loginName) Parameters Type Name IEnvelope envelope System.Security.Principal.IPrincipal principal System.String loginName Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides UserManagementMessage.UserManagementRequestMessage.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.UserManagementMessage.Error.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.UserManagementMessage.Error.html",
    "title": "Enum UserManagementMessage.Error | Event Store",
    "keywords": "Enum UserManagementMessage.Error Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public enum Error Fields Name Description Conflict Error NotFound Success TryAgain Unauthorized Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<UserManagementMessage.Error>() ProtobufExtensions.Serialize<UserManagementMessage.Error>() ProtobufExtensions.SerializeToArray<UserManagementMessage.Error>()"
  },
  "dotnet-api/code/EventStore.Core.Messages.UserManagementMessage.Enable.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.UserManagementMessage.Enable.html",
    "title": "Class UserManagementMessage.Enable | Event Store",
    "keywords": "Class UserManagementMessage.Enable Inheritance System.Object Message UserManagementMessage.RequestMessage UserManagementMessage.UserManagementRequestMessage UserManagementMessage.Enable Inherited Members UserManagementMessage.UserManagementRequestMessage.LoginName UserManagementMessage.RequestMessage.Envelope UserManagementMessage.RequestMessage.Principal Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public sealed class Enable : UserManagementMessage.UserManagementRequestMessage Constructors Enable(IEnvelope, IPrincipal, String) Declaration public Enable(IEnvelope envelope, IPrincipal principal, string loginName) Parameters Type Name IEnvelope envelope System.Security.Principal.IPrincipal principal System.String loginName Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides UserManagementMessage.UserManagementRequestMessage.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.UserManagementMessage.Disable.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.UserManagementMessage.Disable.html",
    "title": "Class UserManagementMessage.Disable | Event Store",
    "keywords": "Class UserManagementMessage.Disable Inheritance System.Object Message UserManagementMessage.RequestMessage UserManagementMessage.UserManagementRequestMessage UserManagementMessage.Disable Inherited Members UserManagementMessage.UserManagementRequestMessage.LoginName UserManagementMessage.RequestMessage.Envelope UserManagementMessage.RequestMessage.Principal Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public sealed class Disable : UserManagementMessage.UserManagementRequestMessage Constructors Disable(IEnvelope, IPrincipal, String) Declaration public Disable(IEnvelope envelope, IPrincipal principal, string loginName) Parameters Type Name IEnvelope envelope System.Security.Principal.IPrincipal principal System.String loginName Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides UserManagementMessage.UserManagementRequestMessage.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.UserManagementMessage.Delete.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.UserManagementMessage.Delete.html",
    "title": "Class UserManagementMessage.Delete | Event Store",
    "keywords": "Class UserManagementMessage.Delete Inheritance System.Object Message UserManagementMessage.RequestMessage UserManagementMessage.UserManagementRequestMessage UserManagementMessage.Delete Inherited Members UserManagementMessage.UserManagementRequestMessage.LoginName UserManagementMessage.RequestMessage.Envelope UserManagementMessage.RequestMessage.Principal Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public sealed class Delete : UserManagementMessage.UserManagementRequestMessage Constructors Delete(IEnvelope, IPrincipal, String) Declaration public Delete(IEnvelope envelope, IPrincipal principal, string loginName) Parameters Type Name IEnvelope envelope System.Security.Principal.IPrincipal principal System.String loginName Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides UserManagementMessage.UserManagementRequestMessage.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.UserManagementMessage.Create.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.UserManagementMessage.Create.html",
    "title": "Class UserManagementMessage.Create | Event Store",
    "keywords": "Class UserManagementMessage.Create Inheritance System.Object Message UserManagementMessage.RequestMessage UserManagementMessage.UserManagementRequestMessage UserManagementMessage.Create Inherited Members UserManagementMessage.UserManagementRequestMessage.LoginName UserManagementMessage.RequestMessage.Envelope UserManagementMessage.RequestMessage.Principal Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public sealed class Create : UserManagementMessage.UserManagementRequestMessage Constructors Create(IEnvelope, IPrincipal, String, String, String[], String) Declaration public Create(IEnvelope envelope, IPrincipal principal, string loginName, string fullName, string[] groups, string password) Parameters Type Name IEnvelope envelope System.Security.Principal.IPrincipal principal System.String loginName System.String fullName System.String [] groups System.String password Fields FullName Declaration public readonly string FullName Field Value Type System.String Groups Declaration public readonly string[] Groups Field Value Type System.String [] Password Declaration public readonly string Password Field Value Type System.String Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides UserManagementMessage.UserManagementRequestMessage.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.UserManagementMessage.ChangePassword.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.UserManagementMessage.ChangePassword.html",
    "title": "Class UserManagementMessage.ChangePassword | Event Store",
    "keywords": "Class UserManagementMessage.ChangePassword Inheritance System.Object Message UserManagementMessage.RequestMessage UserManagementMessage.UserManagementRequestMessage UserManagementMessage.ChangePassword Inherited Members UserManagementMessage.UserManagementRequestMessage.LoginName UserManagementMessage.RequestMessage.Envelope UserManagementMessage.RequestMessage.Principal Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public sealed class ChangePassword : UserManagementMessage.UserManagementRequestMessage Constructors ChangePassword(IEnvelope, IPrincipal, String, String, String) Declaration public ChangePassword(IEnvelope envelope, IPrincipal principal, string loginName, string currentPassword, string newPassword) Parameters Type Name IEnvelope envelope System.Security.Principal.IPrincipal principal System.String loginName System.String currentPassword System.String newPassword Fields CurrentPassword Declaration public readonly string CurrentPassword Field Value Type System.String NewPassword Declaration public readonly string NewPassword Field Value Type System.String Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides UserManagementMessage.UserManagementRequestMessage.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.UserManagementMessage.AllUserDetailsResultHttpFormatted.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.UserManagementMessage.AllUserDetailsResultHttpFormatted.html",
    "title": "Class UserManagementMessage.AllUserDetailsResultHttpFormatted | Event Store",
    "keywords": "Class UserManagementMessage.AllUserDetailsResultHttpFormatted Inheritance System.Object Message UserManagementMessage.ResponseMessage UserManagementMessage.AllUserDetailsResultHttpFormatted Inherited Members UserManagementMessage.ResponseMessage.Success UserManagementMessage.ResponseMessage.Error Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class AllUserDetailsResultHttpFormatted : UserManagementMessage.ResponseMessage Constructors AllUserDetailsResultHttpFormatted(UserManagementMessage.AllUserDetailsResult, Func<String, String>) Declaration public AllUserDetailsResultHttpFormatted(UserManagementMessage.AllUserDetailsResult msg, Func<string, string> makeAbsoluteUrl) Parameters Type Name UserManagementMessage.AllUserDetailsResult msg System.Func < System.String , System.String > makeAbsoluteUrl Fields Data Declaration public readonly UserManagementMessage.UserDataHttpFormated[] Data Field Value Type UserManagementMessage.UserDataHttpFormated [] Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides UserManagementMessage.ResponseMessage.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.UserManagementMessage.AllUserDetailsResult.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.UserManagementMessage.AllUserDetailsResult.html",
    "title": "Class UserManagementMessage.AllUserDetailsResult | Event Store",
    "keywords": "Class UserManagementMessage.AllUserDetailsResult Inheritance System.Object Message UserManagementMessage.ResponseMessage UserManagementMessage.AllUserDetailsResult Inherited Members UserManagementMessage.ResponseMessage.Success UserManagementMessage.ResponseMessage.Error Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public sealed class AllUserDetailsResult : UserManagementMessage.ResponseMessage Constructors AllUserDetailsResult(UserManagementMessage.Error) Declaration public AllUserDetailsResult(UserManagementMessage.Error error) Parameters Type Name UserManagementMessage.Error error AllUserDetailsResult(UserManagementMessage.UserData[]) Declaration public AllUserDetailsResult(UserManagementMessage.UserData[] data) Parameters Type Name UserManagementMessage.UserData [] data Fields Data Declaration public readonly UserManagementMessage.UserData[] Data Field Value Type UserManagementMessage.UserData [] Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides UserManagementMessage.ResponseMessage.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.TcpMessage.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.TcpMessage.html",
    "title": "Class TcpMessage | Event Store",
    "keywords": "Class TcpMessage Inheritance System.Object TcpMessage Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public static class TcpMessage"
  },
  "dotnet-api/code/EventStore.Core.Messages.TcpMessage.TcpSend.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.TcpMessage.TcpSend.html",
    "title": "Class TcpMessage.TcpSend | Event Store",
    "keywords": "Class TcpMessage.TcpSend Inheritance System.Object Message TcpMessage.TcpSend Implements IQueueAffineMessage Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class TcpSend : Message, IQueueAffineMessage Constructors TcpSend(TcpConnectionManager, Message) Declaration public TcpSend(TcpConnectionManager connectionManager, Message message) Parameters Type Name TcpConnectionManager connectionManager Message message Fields ConnectionManager Declaration public readonly TcpConnectionManager ConnectionManager Field Value Type TcpConnectionManager Message Declaration public readonly Message Message Field Value Type Message Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId QueueId Declaration public int QueueId { get; } Property Value Type System.Int32 Implements IQueueAffineMessage Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult.html",
    "title": "Enum TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult | Event Store",
    "keywords": "Enum TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax [ProtoContract(Name = \"ReadStreamResult\")] public enum ReadStreamResult Fields Name Description AccessDenied Error NoStream NotModified StreamDeleted Success Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult>() ProtobufExtensions.Serialize<TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult>() ProtobufExtensions.SerializeToArray<TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult>()"
  },
  "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted.html",
    "title": "Class TcpClientMessageDto.ReadAllEventsCompleted | Event Store",
    "keywords": "Class TcpClientMessageDto.ReadAllEventsCompleted Inheritance System.Object TcpClientMessageDto.ReadAllEventsCompleted Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax [Serializable] [ProtoContract(Name = \"ReadAllEventsCompleted\")] public class ReadAllEventsCompleted Constructors ReadAllEventsCompleted(Int64, Int64, TcpClientMessageDto.ResolvedEvent[], Int64, Int64, TcpClientMessageDto.ReadAllEventsCompleted.ReadAllResult, String) Declaration public ReadAllEventsCompleted(long commitPosition, long preparePosition, TcpClientMessageDto.ResolvedEvent[] events, long nextCommitPosition, long nextPreparePosition, TcpClientMessageDto.ReadAllEventsCompleted.ReadAllResult result, string error) Parameters Type Name System.Int64 commitPosition System.Int64 preparePosition TcpClientMessageDto.ResolvedEvent [] events System.Int64 nextCommitPosition System.Int64 nextPreparePosition TcpClientMessageDto.ReadAllEventsCompleted.ReadAllResult result System.String error Fields CommitPosition Declaration [ProtoMember(1, IsRequired = true, Name = \"commit_position\", DataFormat = DataFormat.TwosComplement)] public readonly long CommitPosition Field Value Type System.Int64 Error Declaration [ProtoMember(7, IsRequired = false, Name = \"error\", DataFormat = DataFormat.Default)] public readonly string Error Field Value Type System.String Events Declaration [ProtoMember(3, Name = \"events\", DataFormat = DataFormat.Default)] public readonly TcpClientMessageDto.ResolvedEvent[] Events Field Value Type TcpClientMessageDto.ResolvedEvent [] NextCommitPosition Declaration [ProtoMember(4, IsRequired = true, Name = \"next_commit_position\", DataFormat = DataFormat.TwosComplement)] public readonly long NextCommitPosition Field Value Type System.Int64 NextPreparePosition Declaration [ProtoMember(5, IsRequired = true, Name = \"next_prepare_position\", DataFormat = DataFormat.TwosComplement)] public readonly long NextPreparePosition Field Value Type System.Int64 PreparePosition Declaration [ProtoMember(2, IsRequired = true, Name = \"prepare_position\", DataFormat = DataFormat.TwosComplement)] public readonly long PreparePosition Field Value Type System.Int64 Result Declaration [ProtoMember(6, IsRequired = false, Name = \"result\", DataFormat = DataFormat.TwosComplement)] public readonly TcpClientMessageDto.ReadAllEventsCompleted.ReadAllResult Result Field Value Type TcpClientMessageDto.ReadAllEventsCompleted.ReadAllResult Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted.ReadAllResult.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.ReadAllEventsCompleted.ReadAllResult.html",
    "title": "Enum TcpClientMessageDto.ReadAllEventsCompleted.ReadAllResult | Event Store",
    "keywords": "Enum TcpClientMessageDto.ReadAllEventsCompleted.ReadAllResult Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax [ProtoContract(Name = \"ReadAllResult\")] public enum ReadAllResult Fields Name Description AccessDenied Error NotModified Success Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<TcpClientMessageDto.ReadAllEventsCompleted.ReadAllResult>() ProtobufExtensions.Serialize<TcpClientMessageDto.ReadAllEventsCompleted.ReadAllResult>() ProtobufExtensions.SerializeToArray<TcpClientMessageDto.ReadAllEventsCompleted.ReadAllResult>()"
  },
  "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.ReadAllEvents.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.ReadAllEvents.html",
    "title": "Class TcpClientMessageDto.ReadAllEvents | Event Store",
    "keywords": "Class TcpClientMessageDto.ReadAllEvents Inheritance System.Object TcpClientMessageDto.ReadAllEvents Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax [Serializable] [ProtoContract(Name = \"ReadAllEvents\")] public class ReadAllEvents Constructors ReadAllEvents(Int64, Int64, Int32, Boolean, Boolean) Declaration public ReadAllEvents(long commitPosition, long preparePosition, int maxCount, bool resolveLinkTos, bool requireMaster) Parameters Type Name System.Int64 commitPosition System.Int64 preparePosition System.Int32 maxCount System.Boolean resolveLinkTos System.Boolean requireMaster Fields CommitPosition Declaration [ProtoMember(1, IsRequired = true, Name = \"commit_position\", DataFormat = DataFormat.TwosComplement)] public readonly long CommitPosition Field Value Type System.Int64 MaxCount Declaration [ProtoMember(3, IsRequired = true, Name = \"max_count\", DataFormat = DataFormat.TwosComplement)] public readonly int MaxCount Field Value Type System.Int32 PreparePosition Declaration [ProtoMember(2, IsRequired = true, Name = \"prepare_position\", DataFormat = DataFormat.TwosComplement)] public readonly long PreparePosition Field Value Type System.Int64 RequireMaster Declaration [ProtoMember(5, IsRequired = true, Name = \"require_master\", DataFormat = DataFormat.Default)] public readonly bool RequireMaster Field Value Type System.Boolean ResolveLinkTos Declaration [ProtoMember(4, IsRequired = true, Name = \"resolve_link_tos\", DataFormat = DataFormat.Default)] public readonly bool ResolveLinkTos Field Value Type System.Boolean Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.SystemMessage.StateChangeMessage.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.SystemMessage.StateChangeMessage.html",
    "title": "Class SystemMessage.StateChangeMessage | Event Store",
    "keywords": "Class SystemMessage.StateChangeMessage Inheritance System.Object Message SystemMessage.StateChangeMessage SystemMessage.BecomeMaster SystemMessage.BecomePreMaster SystemMessage.BecomeShutdown SystemMessage.BecomeShuttingDown SystemMessage.BecomeUnknown SystemMessage.ReplicaStateMessage Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public abstract class StateChangeMessage : Message Constructors StateChangeMessage(Guid, VNodeState) Declaration protected StateChangeMessage(Guid correlationId, VNodeState state) Parameters Type Name System.Guid correlationId VNodeState state Fields CorrelationId Declaration public readonly Guid CorrelationId Field Value Type System.Guid State Declaration public readonly VNodeState State Field Value Type VNodeState Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ClientMessage.MergeIndexesResponse.MergeIndexesResult.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ClientMessage.MergeIndexesResponse.MergeIndexesResult.html",
    "title": "Enum ClientMessage.MergeIndexesResponse.MergeIndexesResult | Event Store",
    "keywords": "Enum ClientMessage.MergeIndexesResponse.MergeIndexesResult Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public enum MergeIndexesResult Fields Name Description Started Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<ClientMessage.MergeIndexesResponse.MergeIndexesResult>() ProtobufExtensions.Serialize<ClientMessage.MergeIndexesResponse.MergeIndexesResult>() ProtobufExtensions.SerializeToArray<ClientMessage.MergeIndexesResponse.MergeIndexesResult>()"
  },
  "dotnet-api/code/EventStore.Core.Messages.ClientMessage.MergeIndexes.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ClientMessage.MergeIndexes.html",
    "title": "Class ClientMessage.MergeIndexes | Event Store",
    "keywords": "Class ClientMessage.MergeIndexes Inheritance System.Object Message ClientMessage.MergeIndexes Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class MergeIndexes : Message Constructors MergeIndexes(IEnvelope, Guid, IPrincipal) Declaration public MergeIndexes(IEnvelope envelope, Guid correlationId, IPrincipal user) Parameters Type Name IEnvelope envelope System.Guid correlationId System.Security.Principal.IPrincipal user Fields CorrelationId Declaration public readonly Guid CorrelationId Field Value Type System.Guid Envelope Declaration public readonly IEnvelope Envelope Field Value Type IEnvelope User Declaration public readonly IPrincipal User Field Value Type System.Security.Principal.IPrincipal Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ClientMessage.CreatePersistentSubscription.html",
    "title": "Class ClientMessage.CreatePersistentSubscription | Event Store",
    "keywords": "Class ClientMessage.CreatePersistentSubscription Inheritance System.Object Message ClientMessage.ReadRequestMessage ClientMessage.CreatePersistentSubscription Inherited Members ClientMessage.ReadRequestMessage.InternalCorrId ClientMessage.ReadRequestMessage.CorrelationId ClientMessage.ReadRequestMessage.Envelope ClientMessage.ReadRequestMessage.User ClientMessage.ReadRequestMessage.Expires Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class CreatePersistentSubscription : ClientMessage.ReadRequestMessage Constructors CreatePersistentSubscription(Guid, Guid, IEnvelope, String, String, Boolean, Int64, Int32, Boolean, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, String, IPrincipal, String, String) Declaration public CreatePersistentSubscription(Guid internalCorrId, Guid correlationId, IEnvelope envelope, string eventStreamId, string groupName, bool resolveLinkTos, long startFrom, int messageTimeoutMilliseconds, bool recordStatistics, int maxRetryCount, int bufferSize, int liveBufferSize, int readbatchSize, int checkPointAfterMilliseconds, int minCheckPointCount, int maxCheckPointCount, int maxSubscriberCount, string namedConsumerStrategy, IPrincipal user, string username, string password) Parameters Type Name System.Guid internalCorrId System.Guid correlationId IEnvelope envelope System.String eventStreamId System.String groupName System.Boolean resolveLinkTos System.Int64 startFrom System.Int32 messageTimeoutMilliseconds System.Boolean recordStatistics System.Int32 maxRetryCount System.Int32 bufferSize System.Int32 liveBufferSize System.Int32 readbatchSize System.Int32 checkPointAfterMilliseconds System.Int32 minCheckPointCount System.Int32 maxCheckPointCount System.Int32 maxSubscriberCount System.String namedConsumerStrategy System.Security.Principal.IPrincipal user System.String username System.String password Fields BufferSize Declaration public readonly int BufferSize Field Value Type System.Int32 CheckPointAfterMilliseconds Declaration public int CheckPointAfterMilliseconds Field Value Type System.Int32 EventStreamId Declaration public readonly string EventStreamId Field Value Type System.String GroupName Declaration public readonly string GroupName Field Value Type System.String LiveBufferSize Declaration public readonly int LiveBufferSize Field Value Type System.Int32 MaxCheckPointCount Declaration public int MaxCheckPointCount Field Value Type System.Int32 MaxRetryCount Declaration public readonly int MaxRetryCount Field Value Type System.Int32 MaxSubscriberCount Declaration public int MaxSubscriberCount Field Value Type System.Int32 MessageTimeoutMilliseconds Declaration public readonly int MessageTimeoutMilliseconds Field Value Type System.Int32 MinCheckPointCount Declaration public int MinCheckPointCount Field Value Type System.Int32 NamedConsumerStrategy Declaration public string NamedConsumerStrategy Field Value Type System.String ReadBatchSize Declaration public readonly int ReadBatchSize Field Value Type System.Int32 RecordStatistics Declaration public readonly bool RecordStatistics Field Value Type System.Boolean ResolveLinkTos Declaration public readonly bool ResolveLinkTos Field Value Type System.Boolean StartFrom Declaration public readonly long StartFrom Field Value Type System.Int64 Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides ClientMessage.ReadRequestMessage.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ClientMessage.ConnectToPersistentSubscription.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ClientMessage.ConnectToPersistentSubscription.html",
    "title": "Class ClientMessage.ConnectToPersistentSubscription | Event Store",
    "keywords": "Class ClientMessage.ConnectToPersistentSubscription Inheritance System.Object Message ClientMessage.ReadRequestMessage ClientMessage.ConnectToPersistentSubscription Inherited Members ClientMessage.ReadRequestMessage.InternalCorrId ClientMessage.ReadRequestMessage.CorrelationId ClientMessage.ReadRequestMessage.Envelope ClientMessage.ReadRequestMessage.User ClientMessage.ReadRequestMessage.Expires Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class ConnectToPersistentSubscription : ClientMessage.ReadRequestMessage Constructors ConnectToPersistentSubscription(Guid, Guid, IEnvelope, Guid, String, String, Int32, String, IPrincipal) Declaration public ConnectToPersistentSubscription(Guid internalCorrId, Guid correlationId, IEnvelope envelope, Guid connectionId, string subscriptionId, string eventStreamId, int allowedInFlightMessages, string from, IPrincipal user) Parameters Type Name System.Guid internalCorrId System.Guid correlationId IEnvelope envelope System.Guid connectionId System.String subscriptionId System.String eventStreamId System.Int32 allowedInFlightMessages System.String from System.Security.Principal.IPrincipal user Fields AllowedInFlightMessages Declaration public readonly int AllowedInFlightMessages Field Value Type System.Int32 ConnectionId Declaration public readonly Guid ConnectionId Field Value Type System.Guid EventStreamId Declaration public readonly string EventStreamId Field Value Type System.String From Declaration public readonly string From Field Value Type System.String SubscriptionId Declaration public readonly string SubscriptionId Field Value Type System.String Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides ClientMessage.ReadRequestMessage.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ClientMessage.ClientIdentified.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ClientMessage.ClientIdentified.html",
    "title": "Class ClientMessage.ClientIdentified | Event Store",
    "keywords": "Class ClientMessage.ClientIdentified Inheritance System.Object Message ClientMessage.ClientIdentified Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class ClientIdentified : Message Constructors ClientIdentified(Guid) Declaration public ClientIdentified(Guid correlationId) Parameters Type Name System.Guid correlationId Fields CorrelationId Declaration public readonly Guid CorrelationId Field Value Type System.Guid Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.IndexEntryV2.html": {
    "href": "dotnet-api/code/EventStore.Core.IndexEntryV2.html",
    "title": "Struct IndexEntryV2 | Event Store",
    "keywords": "Struct IndexEntryV2 Implements System.IComparable < IndexEntryV2 > System.IEquatable < IndexEntryV2 > Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core Assembly : EventStore.Core.dll Syntax public struct IndexEntryV2 : IComparable<IndexEntryV2>, IEquatable<IndexEntryV2> Constructors IndexEntryV2(UInt64, Int32, Int64) Declaration public IndexEntryV2(ulong stream, int version, long position) Parameters Type Name System.UInt64 stream System.Int32 version System.Int64 position Fields Bytes Declaration public byte *Bytes Field Value Type System.Byte * Position Declaration public long Position Field Value Type System.Int64 Stream Declaration public ulong Stream Field Value Type System.UInt64 Version Declaration public int Version Field Value Type System.Int32 Methods CompareTo(IndexEntryV2) Declaration public int CompareTo(IndexEntryV2 other) Parameters Type Name IndexEntryV2 other Returns Type Description System.Int32 Equals(IndexEntryV2) Declaration public bool Equals(IndexEntryV2 other) Parameters Type Name IndexEntryV2 other Returns Type Description System.Boolean ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Implements System.IComparable<T> System.IEquatable<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) EnumExtensions.EnumValueName<T>(T) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Index.ITableIndex.html": {
    "href": "dotnet-api/code/EventStore.Core.Index.ITableIndex.html",
    "title": "Interface ITableIndex | Event Store",
    "keywords": "Interface ITableIndex Namespace : EventStore.Core.Index Assembly : EventStore.Core.dll Syntax public interface ITableIndex Properties CommitCheckpoint Declaration long CommitCheckpoint { get; } Property Value Type System.Int64 IsBackgroundTaskRunning Declaration bool IsBackgroundTaskRunning { get; } Property Value Type System.Boolean PrepareCheckpoint Declaration long PrepareCheckpoint { get; } Property Value Type System.Int64 Methods Add(Int64, String, Int64, Int64) Declaration void Add(long commitPos, string streamId, long version, long position) Parameters Type Name System.Int64 commitPos System.String streamId System.Int64 version System.Int64 position AddEntries(Int64, IList<IndexKey>) Declaration void AddEntries(long commitPos, IList<IndexKey> entries) Parameters Type Name System.Int64 commitPos System.Collections.Generic.IList < IndexKey > entries Close(Boolean) Declaration void Close(bool removeFiles = true) Parameters Type Name System.Boolean removeFiles GetRange(String, Int64, Int64, Nullable<Int32>) Declaration IEnumerable<IndexEntry> GetRange(string streamId, long startVersion, long endVersion, int? limit = default(int? )) Parameters Type Name System.String streamId System.Int64 startVersion System.Int64 endVersion System.Nullable < System.Int32 > limit Returns Type Description System.Collections.Generic.IEnumerable < IndexEntry > Initialize(Int64) Declaration void Initialize(long chaserCheckpoint) Parameters Type Name System.Int64 chaserCheckpoint MergeIndexes() Declaration Task MergeIndexes() Returns Type Description System.Threading.Tasks.Task Scavenge(IIndexScavengerLog, CancellationToken) Declaration void Scavenge(IIndexScavengerLog log, CancellationToken ct) Parameters Type Name IIndexScavengerLog log System.Threading.CancellationToken ct TryGetLatestEntry(String, out IndexEntry) Declaration bool TryGetLatestEntry(string streamId, out IndexEntry entry) Parameters Type Name System.String streamId IndexEntry entry Returns Type Description System.Boolean TryGetOldestEntry(String, out IndexEntry) Declaration bool TryGetOldestEntry(string streamId, out IndexEntry entry) Parameters Type Name System.String streamId IndexEntry entry Returns Type Description System.Boolean TryGetOneValue(String, Int64, out Int64) Declaration bool TryGetOneValue(string streamId, long version, out long position) Parameters Type Name System.String streamId System.Int64 version System.Int64 position Returns Type Description System.Boolean Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Index.ISearchTable.html": {
    "href": "dotnet-api/code/EventStore.Core.Index.ISearchTable.html",
    "title": "Interface ISearchTable | Event Store",
    "keywords": "Interface ISearchTable Namespace : EventStore.Core.Index Assembly : EventStore.Core.dll Syntax public interface ISearchTable Properties Count Declaration long Count { get; } Property Value Type System.Int64 Id Declaration Guid Id { get; } Property Value Type System.Guid Version Declaration byte Version { get; } Property Value Type System.Byte Methods GetRange(UInt64, Int64, Int64, Nullable<Int32>) Declaration IEnumerable<IndexEntry> GetRange(ulong stream, long startNumber, long endNumber, int? limit = default(int? )) Parameters Type Name System.UInt64 stream System.Int64 startNumber System.Int64 endNumber System.Nullable < System.Int32 > limit Returns Type Description System.Collections.Generic.IEnumerable < IndexEntry > IterateAllInOrder() Declaration IEnumerable<IndexEntry> IterateAllInOrder() Returns Type Description System.Collections.Generic.IEnumerable < IndexEntry > TryGetLatestEntry(UInt64, out IndexEntry) Declaration bool TryGetLatestEntry(ulong stream, out IndexEntry entry) Parameters Type Name System.UInt64 stream IndexEntry entry Returns Type Description System.Boolean TryGetOldestEntry(UInt64, out IndexEntry) Declaration bool TryGetOldestEntry(ulong stream, out IndexEntry entry) Parameters Type Name System.UInt64 stream IndexEntry entry Returns Type Description System.Boolean TryGetOneValue(UInt64, Int64, out Int64) Declaration bool TryGetOneValue(ulong stream, long number, out long position) Parameters Type Name System.UInt64 stream System.Int64 number System.Int64 position Returns Type Description System.Boolean Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Index.IMemTable.html": {
    "href": "dotnet-api/code/EventStore.Core.Index.IMemTable.html",
    "title": "Interface IMemTable | Event Store",
    "keywords": "Interface IMemTable Inherited Members ISearchTable.Id ISearchTable.Count ISearchTable.Version ISearchTable.TryGetOneValue(UInt64, Int64, Int64) ISearchTable.TryGetLatestEntry(UInt64, IndexEntry) ISearchTable.TryGetOldestEntry(UInt64, IndexEntry) ISearchTable.GetRange(UInt64, Int64, Int64, Nullable<Int32>) ISearchTable.IterateAllInOrder() Namespace : EventStore.Core.Index Assembly : EventStore.Core.dll Syntax public interface IMemTable : ISearchTable Methods Add(UInt64, Int64, Int64) Declaration void Add(ulong stream, long version, long position) Parameters Type Name System.UInt64 stream System.Int64 version System.Int64 position AddEntries(IList<IndexEntry>) Declaration void AddEntries(IList<IndexEntry> entries) Parameters Type Name System.Collections.Generic.IList < IndexEntry > entries MarkForConversion() Declaration bool MarkForConversion() Returns Type Description System.Boolean Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Index.IIndexScavengerLog.html": {
    "href": "dotnet-api/code/EventStore.Core.Index.IIndexScavengerLog.html",
    "title": "Interface IIndexScavengerLog | Event Store",
    "keywords": "Interface IIndexScavengerLog Namespace : EventStore.Core.Index Assembly : EventStore.Core.dll Syntax public interface IIndexScavengerLog Methods IndexTableNotScavenged(Int32, Int32, TimeSpan, Int64, String) Declaration void IndexTableNotScavenged(int level, int index, TimeSpan elapsed, long entriesKept, string errorMessage) Parameters Type Name System.Int32 level System.Int32 index System.TimeSpan elapsed System.Int64 entriesKept System.String errorMessage IndexTableScavenged(Int32, Int32, TimeSpan, Int64, Int64, Int64) Declaration void IndexTableScavenged(int level, int index, TimeSpan elapsed, long entriesDeleted, long entriesKept, long spaceSaved) Parameters Type Name System.Int32 level System.Int32 index System.TimeSpan elapsed System.Int64 entriesDeleted System.Int64 entriesKept System.Int64 spaceSaved Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Helpers.LengthPrefixSuffixFramer.html": {
    "href": "dotnet-api/code/EventStore.Core.Helpers.LengthPrefixSuffixFramer.html",
    "title": "Class LengthPrefixSuffixFramer | Event Store",
    "keywords": "Class LengthPrefixSuffixFramer Inheritance System.Object LengthPrefixSuffixFramer Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Helpers Assembly : EventStore.Core.dll Syntax public class LengthPrefixSuffixFramer Constructors LengthPrefixSuffixFramer(Action<BinaryReader>, Int32) Declaration public LengthPrefixSuffixFramer(Action<BinaryReader> packageHandler, int maxPackageSize = 16777216) Parameters Type Name System.Action < System.IO.BinaryReader > packageHandler System.Int32 maxPackageSize Properties HasData Declaration public bool HasData { get; } Property Value Type System.Boolean Methods FrameData(ArraySegment<Byte>) Declaration public IEnumerable<ArraySegment<byte>> FrameData(ArraySegment<byte> data) Parameters Type Name System.ArraySegment < System.Byte > data Returns Type Description System.Collections.Generic.IEnumerable < System.ArraySegment < System.Byte >> Reset() Declaration public void Reset() UnFrameData(ArraySegment<Byte>) Declaration public void UnFrameData(ArraySegment<byte> data) Parameters Type Name System.ArraySegment < System.Byte > data UnFrameData(IEnumerable<ArraySegment<Byte>>) Declaration public void UnFrameData(IEnumerable<ArraySegment<byte>> data) Parameters Type Name System.Collections.Generic.IEnumerable < System.ArraySegment < System.Byte >> data Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.QuerySourcesDefinitionOptions.html",
    "title": "Class QuerySourcesDefinitionOptions | Event Store",
    "keywords": "Class QuerySourcesDefinitionOptions Inheritance System.Object QuerySourcesDefinitionOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax [DataContract] public class QuerySourcesDefinitionOptions Properties DefinesCatalogTransform Declaration [DataMember(Name = \"definesCatalogTransform\")] public bool DefinesCatalogTransform { get; set; } Property Value Type System.Boolean DefinesFold Declaration [DataMember(Name = \"definesFold\")] public bool DefinesFold { get; set; } Property Value Type System.Boolean DefinesStateTransform Declaration [DataMember(Name = \"definesStateTransform\")] public bool DefinesStateTransform { get; set; } Property Value Type System.Boolean DisableParallelism Declaration [DataMember(Name = \"disableParallelism\")] public bool DisableParallelism { get; set; } Property Value Type System.Boolean HandlesDeletedNotifications Declaration [DataMember(Name = \"handlesDeletedNotifications\")] public bool HandlesDeletedNotifications { get; set; } Property Value Type System.Boolean IncludeLinks Declaration [DataMember(Name = \"$includeLinks\")] public bool IncludeLinks { get; set; } Property Value Type System.Boolean IsBiState Declaration [DataMember(Name = \"biState\")] public bool IsBiState { get; set; } Property Value Type System.Boolean PartitionResultStreamNamePattern Declaration [DataMember(Name = \"partitionResultStreamNamePattern\")] public string PartitionResultStreamNamePattern { get; set; } Property Value Type System.String ProcessingLag Declaration [DataMember(Name = \"processingLag\")] public int? ProcessingLag { get; set; } Property Value Type System.Nullable < System.Int32 > ProducesResults Declaration [DataMember(Name = \"producesResults\")] public bool ProducesResults { get; set; } Property Value Type System.Boolean ReorderEvents Declaration [DataMember(Name = \"reorderEvents\")] public bool ReorderEvents { get; set; } Property Value Type System.Boolean ResultStreamName Declaration [DataMember(Name = \"resultStreamName\")] public string ResultStreamName { get; set; } Property Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.QuerySourcesDefinition.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.QuerySourcesDefinition.html",
    "title": "Class QuerySourcesDefinition | Event Store",
    "keywords": "Class QuerySourcesDefinition Inheritance System.Object QuerySourcesDefinition Implements IQuerySources Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax [DataContract] public class QuerySourcesDefinition : IQuerySources Properties AllEvents Declaration [DataMember(Name = \"allEvents\")] public bool AllEvents { get; set; } Property Value Type System.Boolean AllStreams Declaration [DataMember(Name = \"allStreams\")] public bool AllStreams { get; set; } Property Value Type System.Boolean ByCustomPartitions Declaration [DataMember(Name = \"byCustomPartitions\")] public bool ByCustomPartitions { get; set; } Property Value Type System.Boolean ByStreams Declaration [DataMember(Name = \"byStreams\")] public bool ByStreams { get; set; } Property Value Type System.Boolean CatalogStream Declaration [DataMember(Name = \"catalogStream\")] public string CatalogStream { get; set; } Property Value Type System.String Categories Declaration [DataMember(Name = \"categories\")] public string[] Categories { get; set; } Property Value Type System.String [] Events Declaration [DataMember(Name = \"events\")] public string[] Events { get; set; } Property Value Type System.String [] LimitingCommitPosition Declaration [DataMember(Name = \"limitingCommitPosition\")] public long? LimitingCommitPosition { get; set; } Property Value Type System.Nullable < System.Int64 > Options Declaration [DataMember(Name = \"options\")] public QuerySourcesDefinitionOptions Options { get; set; } Property Value Type QuerySourcesDefinitionOptions Streams Declaration [DataMember(Name = \"streams\")] public string[] Streams { get; set; } Property Value Type System.String [] Methods From(IQuerySources) Declaration public static QuerySourcesDefinition From(IQuerySources sources) Parameters Type Name IQuerySources sources Returns Type Description QuerySourcesDefinition Explicit Interface Implementations IQuerySources.DefinesCatalogTransform Declaration bool IQuerySources.DefinesCatalogTransform { get; } Returns Type Description System.Boolean IQuerySources.DefinesFold Declaration bool IQuerySources.DefinesFold { get; } Returns Type Description System.Boolean IQuerySources.DefinesStateTransform Declaration bool IQuerySources.DefinesStateTransform { get; } Returns Type Description System.Boolean IQuerySources.DisableParallelismOption Declaration bool IQuerySources.DisableParallelismOption { get; } Returns Type Description System.Boolean IQuerySources.HandlesDeletedNotifications Declaration bool IQuerySources.HandlesDeletedNotifications { get; } Returns Type Description System.Boolean IQuerySources.IncludeLinksOption Declaration bool IQuerySources.IncludeLinksOption { get; } Returns Type Description System.Boolean IQuerySources.IsBiState Declaration bool IQuerySources.IsBiState { get; } Returns Type Description System.Boolean IQuerySources.PartitionResultStreamNamePatternOption Declaration string IQuerySources.PartitionResultStreamNamePatternOption { get; } Returns Type Description System.String IQuerySources.ProcessingLagOption Declaration int? IQuerySources.ProcessingLagOption { get; } Returns Type Description System.Nullable < System.Int32 > IQuerySources.ProducesResults Declaration bool IQuerySources.ProducesResults { get; } Returns Type Description System.Boolean IQuerySources.ReorderEventsOption Declaration bool IQuerySources.ReorderEventsOption { get; } Returns Type Description System.Boolean IQuerySources.ResultStreamNameOption Declaration string IQuerySources.ResultStreamNameOption { get; } Returns Type Description System.String Implements IQuerySources Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) QuerySourcesExtensions.HasStreams(IQuerySources) QuerySourcesExtensions.HasCategories(IQuerySources) QuerySourcesExtensions.HasEvents(IQuerySources) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.html",
    "title": "Class ProjectionManagementMessage | Event Store",
    "keywords": "Class ProjectionManagementMessage Inheritance System.Object ProjectionManagementMessage Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public static class ProjectionManagementMessage"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.Updated.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.Updated.html",
    "title": "Class ProjectionManagementMessage.Updated | Event Store",
    "keywords": "Class ProjectionManagementMessage.Updated Inheritance System.Object Message ProjectionManagementMessage.Updated Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class Updated : Message Constructors Updated(String) Declaration public Updated(string name) Parameters Type Name System.String name Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Name Declaration public string Name { get; } Property Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.Statistics.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.Statistics.html",
    "title": "Class ProjectionManagementMessage.Statistics | Event Store",
    "keywords": "Class ProjectionManagementMessage.Statistics Inheritance System.Object Message ProjectionManagementMessage.Statistics Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class Statistics : Message Constructors Statistics(ProjectionStatistics[]) Declaration public Statistics(ProjectionStatistics[] projections) Parameters Type Name ProjectionStatistics [] projections Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Projections Declaration public ProjectionStatistics[] Projections { get; } Property Value Type ProjectionStatistics [] Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.Starting.html",
    "title": "Class ProjectionManagementMessage.Starting | Event Store",
    "keywords": "Class ProjectionManagementMessage.Starting Inheritance System.Object Message ProjectionManagementMessage.Starting Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public sealed class Starting : Message Constructors Starting(Guid) Declaration public Starting(Guid epochId) Parameters Type Name System.Guid epochId Fields EpochId Declaration public readonly Guid EpochId Field Value Type System.Guid Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.SlaveProjectionsStarted.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.SlaveProjectionsStarted.html",
    "title": "Class ProjectionManagementMessage.SlaveProjectionsStarted | Event Store",
    "keywords": "Class ProjectionManagementMessage.SlaveProjectionsStarted Inheritance System.Object Message ProjectionManagementMessage.SlaveProjectionsStarted Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class SlaveProjectionsStarted : Message Constructors SlaveProjectionsStarted(Guid, Guid, SlaveProjectionCommunicationChannels) Declaration public SlaveProjectionsStarted(Guid coreProjectionCorrelationId, Guid workerId, SlaveProjectionCommunicationChannels slaveProjections) Parameters Type Name System.Guid coreProjectionCorrelationId System.Guid workerId SlaveProjectionCommunicationChannels slaveProjections Properties CoreProjectionCorrelationId Declaration public Guid CoreProjectionCorrelationId { get; } Property Value Type System.Guid MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId SlaveProjections Declaration public SlaveProjectionCommunicationChannels SlaveProjections { get; } Property Value Type SlaveProjectionCommunicationChannels WorkerId Declaration public Guid WorkerId { get; } Property Value Type System.Guid Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.RunAs.html",
    "title": "Class ProjectionManagementMessage.RunAs | Event Store",
    "keywords": "Class ProjectionManagementMessage.RunAs Inheritance System.Object ProjectionManagementMessage.RunAs Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public sealed class RunAs Constructors RunAs(IPrincipal) Declaration public RunAs(IPrincipal runAs) Parameters Type Name System.Security.Principal.IPrincipal runAs Properties Anonymous Declaration public static ProjectionManagementMessage.RunAs Anonymous { get; } Property Value Type ProjectionManagementMessage.RunAs Principal Declaration public IPrincipal Principal { get; } Property Value Type System.Security.Principal.IPrincipal System Declaration public static ProjectionManagementMessage.RunAs System { get; } Property Value Type ProjectionManagementMessage.RunAs Methods ValidateRunAs(ProjectionMode, ReadWrite, IPrincipal, ProjectionManagementMessage.Command.ControlMessage, Boolean) Declaration public static bool ValidateRunAs(ProjectionMode mode, ReadWrite readWrite, IPrincipal existingRunAs, ProjectionManagementMessage.Command.ControlMessage message, bool replace = false) Parameters Type Name ProjectionMode mode ReadWrite readWrite System.Security.Principal.IPrincipal existingRunAs ProjectionManagementMessage.Command.ControlMessage message System.Boolean replace Returns Type Description System.Boolean Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ReplicationMessageDto.SubscribeReplica.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ReplicationMessageDto.SubscribeReplica.html",
    "title": "Class ReplicationMessageDto.SubscribeReplica | Event Store",
    "keywords": "Class ReplicationMessageDto.SubscribeReplica Inheritance System.Object ReplicationMessageDto.SubscribeReplica Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax [ProtoContract] public class SubscribeReplica Constructors SubscribeReplica() Declaration public SubscribeReplica() SubscribeReplica(Int64, Byte[], ReplicationMessageDto.Epoch[], Byte[], Int32, Byte[], Byte[], Boolean) Declaration public SubscribeReplica(long logPosition, byte[] chunkId, ReplicationMessageDto.Epoch[] lastEpochs, byte[] ip, int port, byte[] masterId, byte[] subscriptionId, bool isPromotable) Parameters Type Name System.Int64 logPosition System.Byte [] chunkId ReplicationMessageDto.Epoch [] lastEpochs System.Byte [] ip System.Int32 port System.Byte [] masterId System.Byte [] subscriptionId System.Boolean isPromotable Properties ChunkId Declaration [ProtoMember(2)] public byte[] ChunkId { get; set; } Property Value Type System.Byte [] Ip Declaration [ProtoMember(4)] public byte[] Ip { get; set; } Property Value Type System.Byte [] IsPromotable Declaration [ProtoMember(8)] public bool IsPromotable { get; set; } Property Value Type System.Boolean LastEpochs Declaration [ProtoMember(3)] public ReplicationMessageDto.Epoch[] LastEpochs { get; set; } Property Value Type ReplicationMessageDto.Epoch [] LogPosition Declaration [ProtoMember(1)] public long LogPosition { get; set; } Property Value Type System.Int64 MasterId Declaration [ProtoMember(6)] public byte[] MasterId { get; set; } Property Value Type System.Byte [] Port Declaration [ProtoMember(5)] public int Port { get; set; } Property Value Type System.Int32 SubscriptionId Declaration [ProtoMember(7)] public byte[] SubscriptionId { get; set; } Property Value Type System.Byte [] Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ReplicationMessageDto.SlaveAssignment.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ReplicationMessageDto.SlaveAssignment.html",
    "title": "Class ReplicationMessageDto.SlaveAssignment | Event Store",
    "keywords": "Class ReplicationMessageDto.SlaveAssignment Inheritance System.Object ReplicationMessageDto.SlaveAssignment Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax [ProtoContract] public class SlaveAssignment Constructors SlaveAssignment() Declaration public SlaveAssignment() SlaveAssignment(Byte[], Byte[]) Declaration public SlaveAssignment(byte[] masterId, byte[] subscriptionId) Parameters Type Name System.Byte [] masterId System.Byte [] subscriptionId Properties MasterId Declaration [ProtoMember(1)] public byte[] MasterId { get; set; } Property Value Type System.Byte [] SubscriptionId Declaration [ProtoMember(2)] public byte[] SubscriptionId { get; set; } Property Value Type System.Byte [] Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ReplicationMessageDto.ReplicaSubscriptionRetry.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ReplicationMessageDto.ReplicaSubscriptionRetry.html",
    "title": "Class ReplicationMessageDto.ReplicaSubscriptionRetry | Event Store",
    "keywords": "Class ReplicationMessageDto.ReplicaSubscriptionRetry Inheritance System.Object ReplicationMessageDto.ReplicaSubscriptionRetry Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax [ProtoContract] public class ReplicaSubscriptionRetry Constructors ReplicaSubscriptionRetry() Declaration public ReplicaSubscriptionRetry() ReplicaSubscriptionRetry(Byte[], Byte[]) Declaration public ReplicaSubscriptionRetry(byte[] masterId, byte[] subscriptionId) Parameters Type Name System.Byte [] masterId System.Byte [] subscriptionId Properties MasterId Declaration [ProtoMember(1)] public byte[] MasterId { get; set; } Property Value Type System.Byte [] SubscriptionId Declaration [ProtoMember(2)] public byte[] SubscriptionId { get; set; } Property Value Type System.Byte [] Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ReplicationMessageDto.ReplicaSubscribed.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ReplicationMessageDto.ReplicaSubscribed.html",
    "title": "Class ReplicationMessageDto.ReplicaSubscribed | Event Store",
    "keywords": "Class ReplicationMessageDto.ReplicaSubscribed Inheritance System.Object ReplicationMessageDto.ReplicaSubscribed Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax [ProtoContract] public class ReplicaSubscribed Constructors ReplicaSubscribed() Declaration public ReplicaSubscribed() ReplicaSubscribed(Byte[], Byte[], Int64) Declaration public ReplicaSubscribed(byte[] masterId, byte[] subscriptionId, long subscriptionPosition) Parameters Type Name System.Byte [] masterId System.Byte [] subscriptionId System.Int64 subscriptionPosition Properties MasterId Declaration [ProtoMember(1)] public byte[] MasterId { get; set; } Property Value Type System.Byte [] SubscriptionId Declaration [ProtoMember(2)] public byte[] SubscriptionId { get; set; } Property Value Type System.Byte [] SubscriptionPosition Declaration [ProtoMember(3)] public long SubscriptionPosition { get; set; } Property Value Type System.Int64 Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ReplicationMessageDto.ReplicaLogPositionAck.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ReplicationMessageDto.ReplicaLogPositionAck.html",
    "title": "Class ReplicationMessageDto.ReplicaLogPositionAck | Event Store",
    "keywords": "Class ReplicationMessageDto.ReplicaLogPositionAck Inheritance System.Object ReplicationMessageDto.ReplicaLogPositionAck Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax [ProtoContract] public class ReplicaLogPositionAck Constructors ReplicaLogPositionAck() Declaration public ReplicaLogPositionAck() ReplicaLogPositionAck(Byte[], Int64) Declaration public ReplicaLogPositionAck(byte[] subscriptionId, long replicationLogPosition) Parameters Type Name System.Byte [] subscriptionId System.Int64 replicationLogPosition Properties ReplicationLogPosition Declaration [ProtoMember(2)] public long ReplicationLogPosition { get; set; } Property Value Type System.Int64 SubscriptionId Declaration [ProtoMember(1)] public byte[] SubscriptionId { get; set; } Property Value Type System.Byte [] Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ReplicationMessageDto.RawChunkBulk.html",
    "title": "Class ReplicationMessageDto.RawChunkBulk | Event Store",
    "keywords": "Class ReplicationMessageDto.RawChunkBulk Inheritance System.Object ReplicationMessageDto.RawChunkBulk Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax [ProtoContract] public class RawChunkBulk Constructors RawChunkBulk() Declaration public RawChunkBulk() RawChunkBulk(Byte[], Byte[], Int32, Int32, Int32, Byte[], Boolean) Declaration public RawChunkBulk(byte[] masterId, byte[] subscriptionId, int chunkStartNumber, int chunkEndNumber, int rawPosition, byte[] rawBytes, bool completeChunk) Parameters Type Name System.Byte [] masterId System.Byte [] subscriptionId System.Int32 chunkStartNumber System.Int32 chunkEndNumber System.Int32 rawPosition System.Byte [] rawBytes System.Boolean completeChunk Properties ChunkEndNumber Declaration [ProtoMember(4)] public int ChunkEndNumber { get; set; } Property Value Type System.Int32 ChunkStartNumber Declaration [ProtoMember(3)] public int ChunkStartNumber { get; set; } Property Value Type System.Int32 CompleteChunk Declaration [ProtoMember(7)] public bool CompleteChunk { get; set; } Property Value Type System.Boolean MasterId Declaration [ProtoMember(1)] public byte[] MasterId { get; set; } Property Value Type System.Byte [] RawBytes Declaration [ProtoMember(6)] public byte[] RawBytes { get; set; } Property Value Type System.Byte [] RawPosition Declaration [ProtoMember(5)] public int RawPosition { get; set; } Property Value Type System.Int32 SubscriptionId Declaration [ProtoMember(2)] public byte[] SubscriptionId { get; set; } Property Value Type System.Byte [] Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ReplicationMessageDto.PrepareAck.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ReplicationMessageDto.PrepareAck.html",
    "title": "Class ReplicationMessageDto.PrepareAck | Event Store",
    "keywords": "Class ReplicationMessageDto.PrepareAck Inheritance System.Object ReplicationMessageDto.PrepareAck Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax [ProtoContract] public class PrepareAck Constructors PrepareAck() Declaration public PrepareAck() PrepareAck(Int64, Byte) Declaration public PrepareAck(long logPosition, byte flags) Parameters Type Name System.Int64 logPosition System.Byte flags Properties Flags Declaration [ProtoMember(2)] public byte Flags { get; set; } Property Value Type System.Byte LogPosition Declaration [ProtoMember(1)] public long LogPosition { get; set; } Property Value Type System.Int64 Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ReplicationMessageDto.Epoch.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ReplicationMessageDto.Epoch.html",
    "title": "Class ReplicationMessageDto.Epoch | Event Store",
    "keywords": "Class ReplicationMessageDto.Epoch Inheritance System.Object ReplicationMessageDto.Epoch Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax [ProtoContract] public class Epoch Constructors Epoch() Declaration public Epoch() Epoch(Int64, Int32, Byte[]) Declaration public Epoch(long epochPosition, int epochNumber, byte[] epochId) Parameters Type Name System.Int64 epochPosition System.Int32 epochNumber System.Byte [] epochId Properties EpochId Declaration [ProtoMember(3)] public byte[] EpochId { get; set; } Property Value Type System.Byte [] EpochNumber Declaration [ProtoMember(2)] public int EpochNumber { get; set; } Property Value Type System.Int32 EpochPosition Declaration [ProtoMember(1)] public long EpochPosition { get; set; } Property Value Type System.Int64 Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.MonitoringMessage.TcpConnectionStats.html",
    "title": "Class MonitoringMessage.TcpConnectionStats | Event Store",
    "keywords": "Class MonitoringMessage.TcpConnectionStats Inheritance System.Object MonitoringMessage.TcpConnectionStats Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class TcpConnectionStats Properties ClientConnectionName Declaration public string ClientConnectionName { get; set; } Property Value Type System.String ConnectionId Declaration public Guid ConnectionId { get; set; } Property Value Type System.Guid IsExternalConnection Declaration public bool IsExternalConnection { get; set; } Property Value Type System.Boolean IsSslConnection Declaration public bool IsSslConnection { get; set; } Property Value Type System.Boolean LocalEndPoint Declaration public string LocalEndPoint { get; set; } Property Value Type System.String PendingReceivedBytes Declaration public int PendingReceivedBytes { get; set; } Property Value Type System.Int32 PendingSendBytes Declaration public int PendingSendBytes { get; set; } Property Value Type System.Int32 RemoteEndPoint Declaration public string RemoteEndPoint { get; set; } Property Value Type System.String TotalBytesReceived Declaration public long TotalBytesReceived { get; set; } Property Value Type System.Int64 TotalBytesSent Declaration public long TotalBytesSent { get; set; } Property Value Type System.Int64 Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.MonitoringMessage.SubscriptionInfo.html",
    "title": "Class MonitoringMessage.SubscriptionInfo | Event Store",
    "keywords": "Class MonitoringMessage.SubscriptionInfo Inheritance System.Object MonitoringMessage.SubscriptionInfo Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class SubscriptionInfo Properties AveragePerSecond Declaration public int AveragePerSecond { get; set; } Property Value Type System.Int32 BufferSize Declaration public int BufferSize { get; set; } Property Value Type System.Int32 CheckPointAfterMilliseconds Declaration public int CheckPointAfterMilliseconds { get; set; } Property Value Type System.Int32 Connections Declaration public List<MonitoringMessage.ConnectionInfo> Connections { get; set; } Property Value Type System.Collections.Generic.List < MonitoringMessage.ConnectionInfo > CountSinceLastMeasurement Declaration public long CountSinceLastMeasurement { get; set; } Property Value Type System.Int64 EventStreamId Declaration public string EventStreamId { get; set; } Property Value Type System.String ExtraStatistics Declaration public bool ExtraStatistics { get; set; } Property Value Type System.Boolean GroupName Declaration public string GroupName { get; set; } Property Value Type System.String LastKnownMessage Declaration public long LastKnownMessage { get; set; } Property Value Type System.Int64 LastProcessedEventNumber Declaration public long LastProcessedEventNumber { get; set; } Property Value Type System.Int64 LiveBufferCount Declaration public long LiveBufferCount { get; set; } Property Value Type System.Int64 LiveBufferSize Declaration public int LiveBufferSize { get; set; } Property Value Type System.Int32 MaxCheckPointCount Declaration public int MaxCheckPointCount { get; set; } Property Value Type System.Int32 MaxRetryCount Declaration public int MaxRetryCount { get; set; } Property Value Type System.Int32 MaxSubscriberCount Declaration public int MaxSubscriberCount { get; set; } Property Value Type System.Int32 MessageTimeoutMilliseconds Declaration public int MessageTimeoutMilliseconds { get; set; } Property Value Type System.Int32 MinCheckPointCount Declaration public int MinCheckPointCount { get; set; } Property Value Type System.Int32 NamedConsumerStrategy Declaration public string NamedConsumerStrategy { get; set; } Property Value Type System.String ReadBatchSize Declaration public int ReadBatchSize { get; set; } Property Value Type System.Int32 ReadBufferCount Declaration public int ReadBufferCount { get; set; } Property Value Type System.Int32 ResolveLinktos Declaration public bool ResolveLinktos { get; set; } Property Value Type System.Boolean RetryBufferCount Declaration public int RetryBufferCount { get; set; } Property Value Type System.Int32 StartFrom Declaration public long StartFrom { get; set; } Property Value Type System.Int64 Status Declaration public string Status { get; set; } Property Value Type System.String TotalInFlightMessages Declaration public int TotalInFlightMessages { get; set; } Property Value Type System.Int32 TotalItems Declaration public long TotalItems { get; set; } Property Value Type System.Int64 Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.MonitoringMessage.InternalStatsRequestResponse.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.MonitoringMessage.InternalStatsRequestResponse.html",
    "title": "Class MonitoringMessage.InternalStatsRequestResponse | Event Store",
    "keywords": "Class MonitoringMessage.InternalStatsRequestResponse Inheritance System.Object Message MonitoringMessage.InternalStatsRequestResponse Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class InternalStatsRequestResponse : Message Constructors InternalStatsRequestResponse(Dictionary<String, Object>) Declaration public InternalStatsRequestResponse(Dictionary<string, object> stats) Parameters Type Name System.Collections.Generic.Dictionary < System.String , System.Object > stats Fields Stats Declaration public readonly Dictionary<string, object> Stats Field Value Type System.Collections.Generic.Dictionary < System.String , System.Object > Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.MonitoringMessage.InternalStatsRequest.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.MonitoringMessage.InternalStatsRequest.html",
    "title": "Class MonitoringMessage.InternalStatsRequest | Event Store",
    "keywords": "Class MonitoringMessage.InternalStatsRequest Inheritance System.Object Message MonitoringMessage.InternalStatsRequest Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class InternalStatsRequest : Message Constructors InternalStatsRequest(IEnvelope) Declaration public InternalStatsRequest(IEnvelope envelope) Parameters Type Name IEnvelope envelope Fields Envelope Declaration public readonly IEnvelope Envelope Field Value Type IEnvelope Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.MonitoringMessage.GetStreamPersistentSubscriptionStats.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.MonitoringMessage.GetStreamPersistentSubscriptionStats.html",
    "title": "Class MonitoringMessage.GetStreamPersistentSubscriptionStats | Event Store",
    "keywords": "Class MonitoringMessage.GetStreamPersistentSubscriptionStats Inheritance System.Object Message MonitoringMessage.GetStreamPersistentSubscriptionStats Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class GetStreamPersistentSubscriptionStats : Message Constructors GetStreamPersistentSubscriptionStats(IEnvelope, String) Declaration public GetStreamPersistentSubscriptionStats(IEnvelope envelope, string eventStreamId) Parameters Type Name IEnvelope envelope System.String eventStreamId Fields Envelope Declaration public readonly IEnvelope Envelope Field Value Type IEnvelope Properties EventStreamId Declaration public string EventStreamId { get; } Property Value Type System.String MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.MonitoringMessage.GetPersistentSubscriptionStatsCompleted.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.MonitoringMessage.GetPersistentSubscriptionStatsCompleted.html",
    "title": "Class MonitoringMessage.GetPersistentSubscriptionStatsCompleted | Event Store",
    "keywords": "Class MonitoringMessage.GetPersistentSubscriptionStatsCompleted Inheritance System.Object Message MonitoringMessage.GetPersistentSubscriptionStatsCompleted Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class GetPersistentSubscriptionStatsCompleted : Message Constructors GetPersistentSubscriptionStatsCompleted(MonitoringMessage.GetPersistentSubscriptionStatsCompleted.OperationStatus, List<MonitoringMessage.SubscriptionInfo>, String) Declaration public GetPersistentSubscriptionStatsCompleted(MonitoringMessage.GetPersistentSubscriptionStatsCompleted.OperationStatus result, List<MonitoringMessage.SubscriptionInfo> subscriptionStats, string errorString = \"\") Parameters Type Name MonitoringMessage.GetPersistentSubscriptionStatsCompleted.OperationStatus result System.Collections.Generic.List < MonitoringMessage.SubscriptionInfo > subscriptionStats System.String errorString Fields ErrorString Declaration public string ErrorString Field Value Type System.String Result Declaration public readonly MonitoringMessage.GetPersistentSubscriptionStatsCompleted.OperationStatus Result Field Value Type MonitoringMessage.GetPersistentSubscriptionStatsCompleted.OperationStatus SubscriptionStats Declaration public readonly List<MonitoringMessage.SubscriptionInfo> SubscriptionStats Field Value Type System.Collections.Generic.List < MonitoringMessage.SubscriptionInfo > Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.MonitoringMessage.GetPersistentSubscriptionStatsCompleted.OperationStatus.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.MonitoringMessage.GetPersistentSubscriptionStatsCompleted.OperationStatus.html",
    "title": "Enum MonitoringMessage.GetPersistentSubscriptionStatsCompleted.OperationStatus | Event Store",
    "keywords": "Enum MonitoringMessage.GetPersistentSubscriptionStatsCompleted.OperationStatus Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public enum OperationStatus Fields Name Description Fail NotFound NotReady Success Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<MonitoringMessage.GetPersistentSubscriptionStatsCompleted.OperationStatus>() ProtobufExtensions.Serialize<MonitoringMessage.GetPersistentSubscriptionStatsCompleted.OperationStatus>() ProtobufExtensions.SerializeToArray<MonitoringMessage.GetPersistentSubscriptionStatsCompleted.OperationStatus>()"
  },
  "dotnet-api/code/EventStore.Core.Bus.QueueBatchDequeueResult.html": {
    "href": "dotnet-api/code/EventStore.Core.Bus.QueueBatchDequeueResult.html",
    "title": "Struct QueueBatchDequeueResult | Event Store",
    "keywords": "Struct QueueBatchDequeueResult A struct providing information for TryDequeue(Message[], out QueueBatchDequeueResult) result. Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Bus Assembly : EventStore.Core.dll Syntax public struct QueueBatchDequeueResult Fields DequeueCount Declaration public int DequeueCount Field Value Type System.Int32 EstimateCurrentQueueCount Declaration public int EstimateCurrentQueueCount Field Value Type System.Int32 Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) EnumExtensions.EnumValueName<T>(T) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Bus.NarrowingHandler-2.html": {
    "href": "dotnet-api/code/EventStore.Core.Bus.NarrowingHandler-2.html",
    "title": "Class NarrowingHandler<TInput, TOutput> | Event Store",
    "keywords": "Class NarrowingHandler<TInput, TOutput> Inheritance System.Object NarrowingHandler<TInput, TOutput> Implements IHandle <TInput> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Bus Assembly : EventStore.Core.dll Syntax public class NarrowingHandler<TInput, TOutput> : IHandle<TInput> where TInput : Message where TOutput : TInput Type Parameters Name Description TInput TOutput Constructors NarrowingHandler(IHandle<TOutput>) Declaration public NarrowingHandler(IHandle<TOutput> handler) Parameters Type Name IHandle <TOutput> handler Methods Handle(TInput) Declaration public void Handle(TInput message) Parameters Type Name TInput message Implements IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) HandleExtensions.WidenFrom<TInput, TOutput>(IHandle<TOutput>) HandleExtensions.NarrowTo<TInput, TOutput>(IHandle<TOutput>) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Bus.MultiQueuedHandler.html": {
    "href": "dotnet-api/code/EventStore.Core.Bus.MultiQueuedHandler.html",
    "title": "Class MultiQueuedHandler | Event Store",
    "keywords": "Class MultiQueuedHandler Inheritance System.Object MultiQueuedHandler Implements IHandle < Message > IPublisher IThreadSafePublisher Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Bus Assembly : EventStore.Core.dll Syntax public class MultiQueuedHandler : IHandle<Message>, IPublisher, IThreadSafePublisher Constructors MultiQueuedHandler(IQueuedHandler[], Func<Message, Int32>) Declaration public MultiQueuedHandler(IQueuedHandler[] queues, Func<Message, int> queueHash) Parameters Type Name IQueuedHandler [] queues System.Func < Message , System.Int32 > queueHash MultiQueuedHandler(QueuedHandler[]) Declaration public MultiQueuedHandler(params QueuedHandler[] queues) Parameters Type Name QueuedHandler [] queues MultiQueuedHandler(Int32, Func<Int32, IQueuedHandler>, Func<Message, Int32>) Declaration public MultiQueuedHandler(int queueCount, Func<int, IQueuedHandler> queueFactory, Func<Message, int> queueHash = null) Parameters Type Name System.Int32 queueCount System.Func < System.Int32 , IQueuedHandler > queueFactory System.Func < Message , System.Int32 > queueHash Fields Queues Declaration public readonly IQueuedHandler[] Queues Field Value Type IQueuedHandler [] Methods Handle(Message) Declaration public void Handle(Message message) Parameters Type Name Message message Publish(Message) Declaration public void Publish(Message message) Parameters Type Name Message message PublishToAll(Message) Declaration public void PublishToAll(Message message) Parameters Type Name Message message Start() Declaration public IEnumerable<Task> Start() Returns Type Description System.Collections.Generic.IEnumerable < System.Threading.Tasks.Task > Stop() Declaration public void Stop() Implements IHandle<T> IPublisher IThreadSafePublisher Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) HandleExtensions.WidenFrom<TInput, TOutput>(IHandle<TOutput>) HandleExtensions.NarrowTo<TInput, TOutput>(IHandle<TOutput>) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Bus.MPSCMessageQueue.html": {
    "href": "dotnet-api/code/EventStore.Core.Bus.MPSCMessageQueue.html",
    "title": "Class MPSCMessageQueue | Event Store",
    "keywords": "Class MPSCMessageQueue A much better concurrent queue than System.Collections.Concurrent.ConcurrentQueue<T> for multi producer single consumer scenarios. Inheritance System.Object MPSCMessageQueue Implements ISingleConsumerMessageQueue Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Bus Assembly : EventStore.Core.dll Syntax public sealed class MPSCMessageQueue : ISingleConsumerMessageQueue Constructors MPSCMessageQueue(Int32) Declaration public MPSCMessageQueue(int size) Parameters Type Name System.Int32 size Fields padding Declaration public long padding Field Value Type System.Int64 Methods Enqueue(Message) Declaration public void Enqueue(Message item) Parameters Type Name Message item EstimageCurrentQueueCount() Declaration public int EstimageCurrentQueueCount() Returns Type Description System.Int32 TryDequeue(Message[], out QueueBatchDequeueResult) Declaration public bool TryDequeue(Message[] segment, out QueueBatchDequeueResult result) Parameters Type Name Message [] segment QueueBatchDequeueResult result Returns Type Description System.Boolean Implements ISingleConsumerMessageQueue Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Bus.ISubscriber.html": {
    "href": "dotnet-api/code/EventStore.Core.Bus.ISubscriber.html",
    "title": "Interface ISubscriber | Event Store",
    "keywords": "Interface ISubscriber Namespace : EventStore.Core.Bus Assembly : EventStore.Core.dll Syntax public interface ISubscriber Methods Subscribe<T>(IHandle<T>) Declaration void Subscribe<T>(IHandle<T> handler) where T : Message Parameters Type Name IHandle <T> handler Type Parameters Name Description T Unsubscribe<T>(IHandle<T>) Declaration void Unsubscribe<T>(IHandle<T> handler) where T : Message Parameters Type Name IHandle <T> handler Type Parameters Name Description T Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Bus.ISingleConsumerMessageQueue.html": {
    "href": "dotnet-api/code/EventStore.Core.Bus.ISingleConsumerMessageQueue.html",
    "title": "Interface ISingleConsumerMessageQueue | Event Store",
    "keywords": "Interface ISingleConsumerMessageQueue A common interface for single consumer queues (**SC). Namespace : EventStore.Core.Bus Assembly : EventStore.Core.dll Syntax public interface ISingleConsumerMessageQueue Methods Enqueue(Message) Declaration void Enqueue(Message item) Parameters Type Name Message item TryDequeue(Message[], out QueueBatchDequeueResult) Declaration bool TryDequeue(Message[] segment, out QueueBatchDequeueResult result) Parameters Type Name Message [] segment QueueBatchDequeueResult result Returns Type Description System.Boolean Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Bus.AdHocHandler-1.html": {
    "href": "dotnet-api/code/EventStore.Core.Bus.AdHocHandler-1.html",
    "title": "Class AdHocHandler<T> | Event Store",
    "keywords": "Class AdHocHandler<T> Inheritance System.Object AdHocHandler<T> Implements IHandle <T> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Bus Assembly : EventStore.Core.dll Syntax public class AdHocHandler<T> : IHandle<T> where T : Message Type Parameters Name Description T Constructors AdHocHandler(Action<T>) Declaration public AdHocHandler(Action<T> handle) Parameters Type Name System.Action <T> handle Methods Handle(T) Declaration public void Handle(T message) Parameters Type Name T message Implements IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) HandleExtensions.WidenFrom<TInput, TOutput>(IHandle<TOutput>) HandleExtensions.NarrowTo<TInput, TOutput>(IHandle<TOutput>) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Authentication.html": {
    "href": "dotnet-api/code/EventStore.Core.Authentication.html",
    "title": "Namespace EventStore.Core.Authentication | Event Store",
    "keywords": "Namespace EventStore.Core.Authentication Classes AuthenticationRequest InternalAuthenticationProvider InternalAuthenticationProviderFactory OpenGenericPrincipal PasswordHashAlgorithm Interfaces IAuthenticationProvider IAuthenticationProviderFactory"
  },
  "dotnet-api/code/EventStore.Core.Authentication.IAuthenticationProviderFactory.html": {
    "href": "dotnet-api/code/EventStore.Core.Authentication.IAuthenticationProviderFactory.html",
    "title": "Interface IAuthenticationProviderFactory | Event Store",
    "keywords": "Interface IAuthenticationProviderFactory Namespace : EventStore.Core.Authentication Assembly : EventStore.Core.dll Syntax public interface IAuthenticationProviderFactory Methods BuildAuthenticationProvider(IPublisher, ISubscriber, IPublisher, InMemoryBus[]) Declaration IAuthenticationProvider BuildAuthenticationProvider(IPublisher mainQueue, ISubscriber mainBus, IPublisher workersQueue, InMemoryBus[] workerBusses) Parameters Type Name IPublisher mainQueue ISubscriber mainBus IPublisher workersQueue InMemoryBus [] workerBusses Returns Type Description IAuthenticationProvider RegisterHttpControllers(HttpService, HttpService, HttpSendService, IPublisher, IPublisher) Declaration void RegisterHttpControllers(HttpService externalHttpService, HttpService internalHttpService, HttpSendService httpSendService, IPublisher mainQueue, IPublisher networkSendQueue) Parameters Type Name HttpService externalHttpService HttpService internalHttpService HttpSendService httpSendService IPublisher mainQueue IPublisher networkSendQueue Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Authentication.IAuthenticationProvider.html": {
    "href": "dotnet-api/code/EventStore.Core.Authentication.IAuthenticationProvider.html",
    "title": "Interface IAuthenticationProvider | Event Store",
    "keywords": "Interface IAuthenticationProvider Namespace : EventStore.Core.Authentication Assembly : EventStore.Core.dll Syntax public interface IAuthenticationProvider Methods Authenticate(AuthenticationRequest) Declaration void Authenticate(AuthenticationRequest authenticationRequest) Parameters Type Name AuthenticationRequest authenticationRequest Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Common.Utils.VersionInfo.html": {
    "href": "dotnet-api/code/EventStore.Common.Utils.VersionInfo.html",
    "title": "Class VersionInfo | Event Store",
    "keywords": "Class VersionInfo These are patched by the build process! Do not edit them manually. Inheritance System.Object VersionInfo Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Common.Utils Assembly : EventStore.Common.dll Syntax public static class VersionInfo Fields Branch Declaration public static readonly string Branch Field Value Type System.String Hashtag Declaration public static readonly string Hashtag Field Value Type System.String Timestamp Declaration public static readonly string Timestamp Field Value Type System.String Version Declaration public static readonly string Version Field Value Type System.String"
  },
  "dotnet-api/code/EventStore.Common.Utils.StringExtensions.html": {
    "href": "dotnet-api/code/EventStore.Common.Utils.StringExtensions.html",
    "title": "Class StringExtensions | Event Store",
    "keywords": "Class StringExtensions Inheritance System.Object StringExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Common.Utils Assembly : EventStore.Common.dll Syntax public static class StringExtensions Methods IsEmptyString(String) Declaration public static bool IsEmptyString(this string s) Parameters Type Name System.String s Returns Type Description System.Boolean IsNotEmptyString(String) Declaration public static bool IsNotEmptyString(this string s) Parameters Type Name System.String s Returns Type Description System.Boolean"
  },
  "dotnet-api/code/EventStore.Common.Utils.IPFinder.html": {
    "href": "dotnet-api/code/EventStore.Common.Utils.IPFinder.html",
    "title": "Class IPFinder | Event Store",
    "keywords": "Class IPFinder Inheritance System.Object IPFinder Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Common.Utils Assembly : EventStore.Common.dll Syntax public static class IPFinder Methods GetNonLoopbackAddress() Declaration public static IPAddress GetNonLoopbackAddress() Returns Type Description System.Net.IPAddress"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetConfig.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetConfig.html",
    "title": "Class ProjectionManagementMessage.Command.GetConfig | Event Store",
    "keywords": "Class ProjectionManagementMessage.Command.GetConfig Inheritance System.Object Message ProjectionManagementMessage.Command.ControlMessage ProjectionManagementMessage.Command.GetConfig Inherited Members ProjectionManagementMessage.Command.ControlMessage.RunAs ProjectionManagementMessage.Command.ControlMessage.Envelope Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class GetConfig : ProjectionManagementMessage.Command.ControlMessage Constructors GetConfig(IEnvelope, String, ProjectionManagementMessage.RunAs) Declaration public GetConfig(IEnvelope envelope, string name, ProjectionManagementMessage.RunAs runAs) Parameters Type Name IEnvelope envelope System.String name ProjectionManagementMessage.RunAs runAs Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides ProjectionManagementMessage.Command.ControlMessage.MsgTypeId Name Declaration public string Name { get; } Property Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Enable.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Enable.html",
    "title": "Class ProjectionManagementMessage.Command.Enable | Event Store",
    "keywords": "Class ProjectionManagementMessage.Command.Enable Inheritance System.Object Message ProjectionManagementMessage.Command.ControlMessage ProjectionManagementMessage.Command.Enable Inherited Members ProjectionManagementMessage.Command.ControlMessage.RunAs ProjectionManagementMessage.Command.ControlMessage.Envelope Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class Enable : ProjectionManagementMessage.Command.ControlMessage Constructors Enable(IEnvelope, String, ProjectionManagementMessage.RunAs) Declaration public Enable(IEnvelope envelope, string name, ProjectionManagementMessage.RunAs runAs) Parameters Type Name IEnvelope envelope System.String name ProjectionManagementMessage.RunAs runAs Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides ProjectionManagementMessage.Command.ControlMessage.MsgTypeId Name Declaration public string Name { get; } Property Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Disable.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Disable.html",
    "title": "Class ProjectionManagementMessage.Command.Disable | Event Store",
    "keywords": "Class ProjectionManagementMessage.Command.Disable Inheritance System.Object Message ProjectionManagementMessage.Command.ControlMessage ProjectionManagementMessage.Command.Disable Inherited Members ProjectionManagementMessage.Command.ControlMessage.RunAs ProjectionManagementMessage.Command.ControlMessage.Envelope Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class Disable : ProjectionManagementMessage.Command.ControlMessage Constructors Disable(IEnvelope, String, ProjectionManagementMessage.RunAs) Declaration public Disable(IEnvelope envelope, string name, ProjectionManagementMessage.RunAs runAs) Parameters Type Name IEnvelope envelope System.String name ProjectionManagementMessage.RunAs runAs Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides ProjectionManagementMessage.Command.ControlMessage.MsgTypeId Name Declaration public string Name { get; } Property Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Delete.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Delete.html",
    "title": "Class ProjectionManagementMessage.Command.Delete | Event Store",
    "keywords": "Class ProjectionManagementMessage.Command.Delete Inheritance System.Object Message ProjectionManagementMessage.Command.ControlMessage ProjectionManagementMessage.Command.Delete Inherited Members ProjectionManagementMessage.Command.ControlMessage.RunAs ProjectionManagementMessage.Command.ControlMessage.Envelope Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class Delete : ProjectionManagementMessage.Command.ControlMessage Constructors Delete(IEnvelope, String, ProjectionManagementMessage.RunAs, Boolean, Boolean, Boolean) Declaration public Delete(IEnvelope envelope, string name, ProjectionManagementMessage.RunAs runAs, bool deleteCheckpointStream, bool deleteStateStream, bool deleteEmittedStreams) Parameters Type Name IEnvelope envelope System.String name ProjectionManagementMessage.RunAs runAs System.Boolean deleteCheckpointStream System.Boolean deleteStateStream System.Boolean deleteEmittedStreams Properties DeleteCheckpointStream Declaration public bool DeleteCheckpointStream { get; } Property Value Type System.Boolean DeleteEmittedStreams Declaration public bool DeleteEmittedStreams { get; } Property Value Type System.Boolean DeleteStateStream Declaration public bool DeleteStateStream { get; } Property Value Type System.Boolean MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides ProjectionManagementMessage.Command.ControlMessage.MsgTypeId Name Declaration public string Name { get; } Property Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.ControlMessage.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.ControlMessage.html",
    "title": "Class ProjectionManagementMessage.Command.ControlMessage | Event Store",
    "keywords": "Class ProjectionManagementMessage.Command.ControlMessage Inheritance System.Object Message ProjectionManagementMessage.Command.ControlMessage ProjectionManagementMessage.Command.Abort ProjectionManagementMessage.Command.Delete ProjectionManagementMessage.Command.Disable ProjectionManagementMessage.Command.Enable ProjectionManagementMessage.Command.GetConfig ProjectionManagementMessage.Command.GetQuery ProjectionManagementMessage.Command.Post ProjectionManagementMessage.Command.Reset ProjectionManagementMessage.Command.SetRunAs ProjectionManagementMessage.Command.StartSlaveProjections ProjectionManagementMessage.Command.UpdateConfig ProjectionManagementMessage.Command.UpdateQuery Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public abstract class ControlMessage : Message Constructors ControlMessage(IEnvelope, ProjectionManagementMessage.RunAs) Declaration protected ControlMessage(IEnvelope envelope, ProjectionManagementMessage.RunAs runAs) Parameters Type Name IEnvelope envelope ProjectionManagementMessage.RunAs runAs Fields RunAs Declaration public readonly ProjectionManagementMessage.RunAs RunAs Field Value Type ProjectionManagementMessage.RunAs Properties Envelope Declaration public IEnvelope Envelope { get; } Property Value Type IEnvelope MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Abort.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Abort.html",
    "title": "Class ProjectionManagementMessage.Command.Abort | Event Store",
    "keywords": "Class ProjectionManagementMessage.Command.Abort Inheritance System.Object Message ProjectionManagementMessage.Command.ControlMessage ProjectionManagementMessage.Command.Abort Inherited Members ProjectionManagementMessage.Command.ControlMessage.RunAs ProjectionManagementMessage.Command.ControlMessage.Envelope Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class Abort : ProjectionManagementMessage.Command.ControlMessage Constructors Abort(IEnvelope, String, ProjectionManagementMessage.RunAs) Declaration public Abort(IEnvelope envelope, string name, ProjectionManagementMessage.RunAs runAs) Parameters Type Name IEnvelope envelope System.String name ProjectionManagementMessage.RunAs runAs Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides ProjectionManagementMessage.Command.ControlMessage.MsgTypeId Name Declaration public string Name { get; } Property Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Exceptions.WrongFileVersionException.html": {
    "href": "dotnet-api/code/EventStore.Core.Exceptions.WrongFileVersionException.html",
    "title": "Class WrongFileVersionException | Event Store",
    "keywords": "Class WrongFileVersionException Inheritance System.Object System.Exception WrongFileVersionException Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Exceptions Assembly : EventStore.Core.dll Syntax public class WrongFileVersionException : Exception, _Exception, ISerializable Constructors WrongFileVersionException(String, Byte, Byte) Declaration public WrongFileVersionException(string filename, byte fileVersion, byte expectedVersion) Parameters Type Name System.String filename System.Byte fileVersion System.Byte expectedVersion Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Exceptions.FileBeingDeletedException.html": {
    "href": "dotnet-api/code/EventStore.Core.Exceptions.FileBeingDeletedException.html",
    "title": "Class FileBeingDeletedException | Event Store",
    "keywords": "Class FileBeingDeletedException Inheritance System.Object System.Exception FileBeingDeletedException Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Exceptions Assembly : EventStore.Core.dll Syntax public class FileBeingDeletedException : Exception, _Exception, ISerializable Constructors FileBeingDeletedException() Declaration public FileBeingDeletedException() FileBeingDeletedException(String) Declaration public FileBeingDeletedException(string message) Parameters Type Name System.String message FileBeingDeletedException(String, Exception) Declaration public FileBeingDeletedException(string message, Exception innerException) Parameters Type Name System.String message System.Exception innerException Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.DataStructures.ObjectPoolMaxLimitReachedException.html": {
    "href": "dotnet-api/code/EventStore.Core.DataStructures.ObjectPoolMaxLimitReachedException.html",
    "title": "Class ObjectPoolMaxLimitReachedException | Event Store",
    "keywords": "Class ObjectPoolMaxLimitReachedException Inheritance System.Object System.Exception ObjectPoolMaxLimitReachedException Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.DataStructures Assembly : EventStore.Core.dll Syntax public class ObjectPoolMaxLimitReachedException : Exception, _Exception, ISerializable Constructors ObjectPoolMaxLimitReachedException(String, Int32) Declaration public ObjectPoolMaxLimitReachedException(string poolName, int maxLimit) Parameters Type Name System.String poolName System.Int32 maxLimit ObjectPoolMaxLimitReachedException(String, Int32, Exception) Declaration public ObjectPoolMaxLimitReachedException(string poolName, int maxLimit, Exception innerException) Parameters Type Name System.String poolName System.Int32 maxLimit System.Exception innerException Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.DataStructures.ILRUCache-2.html": {
    "href": "dotnet-api/code/EventStore.Core.DataStructures.ILRUCache-2.html",
    "title": "Interface ILRUCache<TKey, TValue> | Event Store",
    "keywords": "Interface ILRUCache<TKey, TValue> Namespace : EventStore.Core.DataStructures Assembly : EventStore.Core.dll Syntax public interface ILRUCache<TKey, TValue> Type Parameters Name Description TKey TValue Methods Clear() Declaration void Clear() Put(TKey, TValue) Declaration TValue Put(TKey key, TValue value) Parameters Type Name TKey key TValue value Returns Type Description TValue Put<T>(TKey, T, Func<TKey, T, TValue>, Func<TKey, TValue, T, TValue>) Declaration TValue Put<T>(TKey key, T userData, Func<TKey, T, TValue> addFactory, Func<TKey, TValue, T, TValue> updateFactory) Parameters Type Name TKey key T userData System.Func <TKey, T, TValue> addFactory System.Func <TKey, TValue, T, TValue> updateFactory Returns Type Description TValue Type Parameters Name Description T TryGet(TKey, out TValue) Declaration bool TryGet(TKey key, out TValue value) Parameters Type Name TKey key TValue value Returns Type Description System.Boolean Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.TransactionLog.LogRecords.SystemRecordType.html": {
    "href": "dotnet-api/code/EventStore.Core.TransactionLog.LogRecords.SystemRecordType.html",
    "title": "Enum SystemRecordType | Event Store",
    "keywords": "Enum SystemRecordType Namespace : EventStore.Core.TransactionLog.LogRecords Assembly : EventStore.Core.dll Syntax public enum SystemRecordType : byte Fields Name Description Epoch Invalid Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<SystemRecordType>() ProtobufExtensions.Serialize<SystemRecordType>() ProtobufExtensions.SerializeToArray<SystemRecordType>()"
  },
  "dotnet-api/code/EventStore.Core.TransactionLog.LogRecords.SystemRecordSerialization.html": {
    "href": "dotnet-api/code/EventStore.Core.TransactionLog.LogRecords.SystemRecordSerialization.html",
    "title": "Enum SystemRecordSerialization | Event Store",
    "keywords": "Enum SystemRecordSerialization Namespace : EventStore.Core.TransactionLog.LogRecords Assembly : EventStore.Core.dll Syntax public enum SystemRecordSerialization : byte Fields Name Description Binary Bson Invalid Json Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<SystemRecordSerialization>() ProtobufExtensions.Serialize<SystemRecordSerialization>() ProtobufExtensions.SerializeToArray<SystemRecordSerialization>()"
  },
  "dotnet-api/code/EventStore.Core.TransactionLog.LogRecords.SystemLogRecord.html": {
    "href": "dotnet-api/code/EventStore.Core.TransactionLog.LogRecords.SystemLogRecord.html",
    "title": "Class SystemLogRecord | Event Store",
    "keywords": "Class SystemLogRecord Inheritance System.Object LogRecord SystemLogRecord Implements System.IEquatable < SystemLogRecord > Inherited Members LogRecord.NoData LogRecord.RecordType LogRecord.Version LogRecord.LogPosition LogRecord.GetNextLogPosition(Int64, Int32) LogRecord.GetPrevLogPosition(Int64, Int32) LogRecord.ReadFrom(BinaryReader) LogRecord.Prepare(Int64, Guid, Guid, Int64, Int32, String, Int64, PrepareFlags, String, Byte[], Byte[], Nullable<DateTime>) LogRecord.Commit(Int64, Guid, Int64, Int64) LogRecord.SingleWrite(Int64, Guid, Guid, String, Int64, String, Byte[], Byte[], Nullable<DateTime>, Nullable<PrepareFlags>) LogRecord.TransactionBegin(Int64, Guid, String, Int64) LogRecord.TransactionWrite(Int64, Guid, Guid, Int64, Int32, String, String, Byte[], Byte[], Boolean) LogRecord.TransactionEnd(Int64, Guid, Guid, Int64, String) LogRecord.DeleteTombstone(Int64, Guid, Guid, String, Int64, PrepareFlags) LogRecord.GetSizeWithLengthPrefixAndSuffix() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.TransactionLog.LogRecords Assembly : EventStore.Core.dll Syntax public class SystemLogRecord : LogRecord, IEquatable<SystemLogRecord> Constructors SystemLogRecord(Int64, DateTime, SystemRecordType, SystemRecordSerialization, Byte[]) Declaration public SystemLogRecord(long logPosition, DateTime timeStamp, SystemRecordType systemRecordType, SystemRecordSerialization systemRecordSerialization, byte[] data) Parameters Type Name System.Int64 logPosition System.DateTime timeStamp SystemRecordType systemRecordType SystemRecordSerialization systemRecordSerialization System.Byte [] data Fields Data Declaration public readonly byte[] Data Field Value Type System.Byte [] Reserved Declaration public readonly long Reserved Field Value Type System.Int64 SystemRecordSerialization Declaration public readonly SystemRecordSerialization SystemRecordSerialization Field Value Type SystemRecordSerialization SystemRecordType Declaration public readonly SystemRecordType SystemRecordType Field Value Type SystemRecordType SystemRecordVersion Declaration public const byte SystemRecordVersion = 0 Field Value Type System.Byte TimeStamp Declaration public readonly DateTime TimeStamp Field Value Type System.DateTime Methods Equals(SystemLogRecord) Declaration public bool Equals(SystemLogRecord other) Parameters Type Name SystemLogRecord other Returns Type Description System.Boolean Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) GetEpochRecord() Declaration public EpochRecord GetEpochRecord() Returns Type Description EpochRecord GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() WriteTo(BinaryWriter) Declaration public override void WriteTo(BinaryWriter writer) Parameters Type Name System.IO.BinaryWriter writer Overrides LogRecord.WriteTo(BinaryWriter) Operators Equality(SystemLogRecord, SystemLogRecord) Declaration public static bool operator ==(SystemLogRecord left, SystemLogRecord right) Parameters Type Name SystemLogRecord left SystemLogRecord right Returns Type Description System.Boolean Inequality(SystemLogRecord, SystemLogRecord) Declaration public static bool operator !=(SystemLogRecord left, SystemLogRecord right) Parameters Type Name SystemLogRecord left SystemLogRecord right Returns Type Description System.Boolean Implements System.IEquatable<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.TransactionLog.LogRecords.PrepareLogRecord.html": {
    "href": "dotnet-api/code/EventStore.Core.TransactionLog.LogRecords.PrepareLogRecord.html",
    "title": "Class PrepareLogRecord | Event Store",
    "keywords": "Class PrepareLogRecord Inheritance System.Object LogRecord PrepareLogRecord Implements System.IEquatable < PrepareLogRecord > Inherited Members LogRecord.NoData LogRecord.RecordType LogRecord.Version LogRecord.LogPosition LogRecord.GetNextLogPosition(Int64, Int32) LogRecord.GetPrevLogPosition(Int64, Int32) LogRecord.ReadFrom(BinaryReader) LogRecord.Prepare(Int64, Guid, Guid, Int64, Int32, String, Int64, PrepareFlags, String, Byte[], Byte[], Nullable<DateTime>) LogRecord.Commit(Int64, Guid, Int64, Int64) LogRecord.SingleWrite(Int64, Guid, Guid, String, Int64, String, Byte[], Byte[], Nullable<DateTime>, Nullable<PrepareFlags>) LogRecord.TransactionBegin(Int64, Guid, String, Int64) LogRecord.TransactionWrite(Int64, Guid, Guid, Int64, Int32, String, String, Byte[], Byte[], Boolean) LogRecord.TransactionEnd(Int64, Guid, Guid, Int64, String) LogRecord.DeleteTombstone(Int64, Guid, Guid, String, Int64, PrepareFlags) LogRecord.GetSizeWithLengthPrefixAndSuffix() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.TransactionLog.LogRecords Assembly : EventStore.Core.dll Syntax public class PrepareLogRecord : LogRecord, IEquatable<PrepareLogRecord> Constructors PrepareLogRecord(Int64, Guid, Guid, Int64, Int32, String, Int64, DateTime, PrepareFlags, String, Byte[], Byte[], Byte) Declaration public PrepareLogRecord(long logPosition, Guid correlationId, Guid eventId, long transactionPosition, int transactionOffset, string eventStreamId, long expectedVersion, DateTime timeStamp, PrepareFlags flags, string eventType, byte[] data, byte[] metadata, byte prepareRecordVersion = 1) Parameters Type Name System.Int64 logPosition System.Guid correlationId System.Guid eventId System.Int64 transactionPosition System.Int32 transactionOffset System.String eventStreamId System.Int64 expectedVersion System.DateTime timeStamp PrepareFlags flags System.String eventType System.Byte [] data System.Byte [] metadata System.Byte prepareRecordVersion Fields CorrelationId Declaration public readonly Guid CorrelationId Field Value Type System.Guid Data Declaration public readonly byte[] Data Field Value Type System.Byte [] EventId Declaration public readonly Guid EventId Field Value Type System.Guid EventStreamId Declaration public readonly string EventStreamId Field Value Type System.String EventType Declaration public readonly string EventType Field Value Type System.String ExpectedVersion Declaration public readonly long ExpectedVersion Field Value Type System.Int64 Flags Declaration public readonly PrepareFlags Flags Field Value Type PrepareFlags Metadata Declaration public readonly byte[] Metadata Field Value Type System.Byte [] PrepareRecordVersion Declaration public const byte PrepareRecordVersion = 1 Field Value Type System.Byte TimeStamp Declaration public readonly DateTime TimeStamp Field Value Type System.DateTime TransactionOffset Declaration public readonly int TransactionOffset Field Value Type System.Int32 TransactionPosition Declaration public readonly long TransactionPosition Field Value Type System.Int64 Properties InMemorySize Declaration public long InMemorySize { get; } Property Value Type System.Int64 Methods Equals(PrepareLogRecord) Declaration public bool Equals(PrepareLogRecord other) Parameters Type Name PrepareLogRecord other Returns Type Description System.Boolean Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() WriteTo(BinaryWriter) Declaration public override void WriteTo(BinaryWriter writer) Parameters Type Name System.IO.BinaryWriter writer Overrides LogRecord.WriteTo(BinaryWriter) Operators Equality(PrepareLogRecord, PrepareLogRecord) Declaration public static bool operator ==(PrepareLogRecord left, PrepareLogRecord right) Parameters Type Name PrepareLogRecord left PrepareLogRecord right Returns Type Description System.Boolean Inequality(PrepareLogRecord, PrepareLogRecord) Declaration public static bool operator !=(PrepareLogRecord left, PrepareLogRecord right) Parameters Type Name PrepareLogRecord left PrepareLogRecord right Returns Type Description System.Boolean Implements System.IEquatable<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.TransactionLog.LogRecords.PrepareFlagsExtensions.html": {
    "href": "dotnet-api/code/EventStore.Core.TransactionLog.LogRecords.PrepareFlagsExtensions.html",
    "title": "Class PrepareFlagsExtensions | Event Store",
    "keywords": "Class PrepareFlagsExtensions Inheritance System.Object PrepareFlagsExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.TransactionLog.LogRecords Assembly : EventStore.Core.dll Syntax public static class PrepareFlagsExtensions Methods HasAllOf(PrepareFlags, PrepareFlags) Declaration public static bool HasAllOf(this PrepareFlags flags, PrepareFlags flagSet) Parameters Type Name PrepareFlags flags PrepareFlags flagSet Returns Type Description System.Boolean HasAnyOf(PrepareFlags, PrepareFlags) Declaration public static bool HasAnyOf(this PrepareFlags flags, PrepareFlags flagSet) Parameters Type Name PrepareFlags flags PrepareFlags flagSet Returns Type Description System.Boolean HasNoneOf(PrepareFlags, PrepareFlags) Declaration public static bool HasNoneOf(this PrepareFlags flags, PrepareFlags flagSet) Parameters Type Name PrepareFlags flags PrepareFlags flagSet Returns Type Description System.Boolean"
  },
  "dotnet-api/code/EventStore.Core.TransactionLog.LogRecords.PrepareFlags.html": {
    "href": "dotnet-api/code/EventStore.Core.TransactionLog.LogRecords.PrepareFlags.html",
    "title": "Enum PrepareFlags | Event Store",
    "keywords": "Enum PrepareFlags Namespace : EventStore.Core.TransactionLog.LogRecords Assembly : EventStore.Core.dll Syntax [Flags] public enum PrepareFlags : ushort Fields Name Description Data DeleteTombstone IsCommitted IsJson None SingleWrite StreamDelete TransactionBegin TransactionEnd Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<PrepareFlags>() PrepareFlagsExtensions.HasAllOf(PrepareFlags) PrepareFlagsExtensions.HasAnyOf(PrepareFlags) PrepareFlagsExtensions.HasNoneOf(PrepareFlags) ProtobufExtensions.Serialize<PrepareFlags>() ProtobufExtensions.SerializeToArray<PrepareFlags>()"
  },
  "dotnet-api/code/EventStore.Core.TransactionLog.LogRecords.LogRecordVersion.html": {
    "href": "dotnet-api/code/EventStore.Core.TransactionLog.LogRecords.LogRecordVersion.html",
    "title": "Class LogRecordVersion | Event Store",
    "keywords": "Class LogRecordVersion Inheritance System.Object LogRecordVersion Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.TransactionLog.LogRecords Assembly : EventStore.Core.dll Syntax public class LogRecordVersion Fields LogRecordV0 Declaration public const byte LogRecordV0 = 0 Field Value Type System.Byte LogRecordV1 Declaration public const byte LogRecordV1 = 1 Field Value Type System.Byte Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.RequestManager.RequestManagementService.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.RequestManager.RequestManagementService.html",
    "title": "Class RequestManagementService | Event Store",
    "keywords": "Class RequestManagementService Inheritance System.Object RequestManagementService Implements IHandle < SystemMessage.SystemInit > IHandle < ClientMessage.WriteEvents > IHandle < ClientMessage.DeleteStream > IHandle < ClientMessage.TransactionStart > IHandle < ClientMessage.TransactionWrite > IHandle < ClientMessage.TransactionCommit > IHandle < StorageMessage.RequestCompleted > IHandle < StorageMessage.CheckStreamAccessCompleted > IHandle < StorageMessage.AlreadyCommitted > IHandle < StorageMessage.PrepareAck > IHandle < StorageMessage.CommitReplicated > IHandle < StorageMessage.WrongExpectedVersion > IHandle < StorageMessage.InvalidTransaction > IHandle < StorageMessage.StreamDeleted > IHandle < StorageMessage.RequestManagerTimerTick > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.RequestManager Assembly : EventStore.Core.dll Syntax public class RequestManagementService : IHandle<SystemMessage.SystemInit>, IHandle<ClientMessage.WriteEvents>, IHandle<ClientMessage.DeleteStream>, IHandle<ClientMessage.TransactionStart>, IHandle<ClientMessage.TransactionWrite>, IHandle<ClientMessage.TransactionCommit>, IHandle<StorageMessage.RequestCompleted>, IHandle<StorageMessage.CheckStreamAccessCompleted>, IHandle<StorageMessage.AlreadyCommitted>, IHandle<StorageMessage.PrepareAck>, IHandle<StorageMessage.CommitReplicated>, IHandle<StorageMessage.WrongExpectedVersion>, IHandle<StorageMessage.InvalidTransaction>, IHandle<StorageMessage.StreamDeleted>, IHandle<StorageMessage.RequestManagerTimerTick> Constructors RequestManagementService(IPublisher, Int32, TimeSpan, TimeSpan, Boolean) Declaration public RequestManagementService(IPublisher bus, int prepareCount, TimeSpan prepareTimeout, TimeSpan commitTimeout, bool betterOrdering) Parameters Type Name IPublisher bus System.Int32 prepareCount System.TimeSpan prepareTimeout System.TimeSpan commitTimeout System.Boolean betterOrdering Methods Handle(ClientMessage.DeleteStream) Declaration public void Handle(ClientMessage.DeleteStream message) Parameters Type Name ClientMessage.DeleteStream message Handle(ClientMessage.TransactionCommit) Declaration public void Handle(ClientMessage.TransactionCommit message) Parameters Type Name ClientMessage.TransactionCommit message Handle(ClientMessage.TransactionStart) Declaration public void Handle(ClientMessage.TransactionStart message) Parameters Type Name ClientMessage.TransactionStart message Handle(ClientMessage.TransactionWrite) Declaration public void Handle(ClientMessage.TransactionWrite message) Parameters Type Name ClientMessage.TransactionWrite message Handle(ClientMessage.WriteEvents) Declaration public void Handle(ClientMessage.WriteEvents message) Parameters Type Name ClientMessage.WriteEvents message Handle(StorageMessage.AlreadyCommitted) Declaration public void Handle(StorageMessage.AlreadyCommitted message) Parameters Type Name StorageMessage.AlreadyCommitted message Handle(StorageMessage.CheckStreamAccessCompleted) Declaration public void Handle(StorageMessage.CheckStreamAccessCompleted message) Parameters Type Name StorageMessage.CheckStreamAccessCompleted message Handle(StorageMessage.CommitReplicated) Declaration public void Handle(StorageMessage.CommitReplicated message) Parameters Type Name StorageMessage.CommitReplicated message Handle(StorageMessage.InvalidTransaction) Declaration public void Handle(StorageMessage.InvalidTransaction message) Parameters Type Name StorageMessage.InvalidTransaction message Handle(StorageMessage.PrepareAck) Declaration public void Handle(StorageMessage.PrepareAck message) Parameters Type Name StorageMessage.PrepareAck message Handle(StorageMessage.RequestCompleted) Declaration public void Handle(StorageMessage.RequestCompleted message) Parameters Type Name StorageMessage.RequestCompleted message Handle(StorageMessage.RequestManagerTimerTick) Declaration public void Handle(StorageMessage.RequestManagerTimerTick message) Parameters Type Name StorageMessage.RequestManagerTimerTick message Handle(StorageMessage.StreamDeleted) Declaration public void Handle(StorageMessage.StreamDeleted message) Parameters Type Name StorageMessage.StreamDeleted message Handle(StorageMessage.WrongExpectedVersion) Declaration public void Handle(StorageMessage.WrongExpectedVersion message) Parameters Type Name StorageMessage.WrongExpectedVersion message Handle(SystemMessage.SystemInit) Declaration public void Handle(SystemMessage.SystemInit message) Parameters Type Name SystemMessage.SystemInit message Implements IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Monitoring.Stats.QueueStats.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Monitoring.Stats.QueueStats.html",
    "title": "Class QueueStats | Event Store",
    "keywords": "Class QueueStats Inheritance System.Object QueueStats Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Services.Monitoring.Stats Assembly : EventStore.Core.dll Syntax public class QueueStats Constructors QueueStats(String, String, Int32, Int32, Double, Double, Nullable<TimeSpan>, Nullable<TimeSpan>, Int64, Int64, Int64, Type, Type) Declaration public QueueStats(string name, string groupName, int length, int avgItemsPerSecond, double avgProcessingTime, double idleTimePercent, TimeSpan? currentItemProcessingTime, TimeSpan? currentIdleTime, long totalItemsProcessed, long lengthCurrentTryPeak, long lengthLifetimePeak, Type lastProcessedMessageType, Type inProgressMessageType) Parameters Type Name System.String name System.String groupName System.Int32 length System.Int32 avgItemsPerSecond System.Double avgProcessingTime System.Double idleTimePercent System.Nullable < System.TimeSpan > currentItemProcessingTime System.Nullable < System.TimeSpan > currentIdleTime System.Int64 totalItemsProcessed System.Int64 lengthCurrentTryPeak System.Int64 lengthLifetimePeak System.Type lastProcessedMessageType System.Type inProgressMessageType Fields AvgItemsPerSecond The average number of items processed per second by the queue Declaration public readonly int AvgItemsPerSecond Field Value Type System.Int32 AvgProcessingTime Average number of items processed per second Declaration public readonly double AvgProcessingTime Field Value Type System.Double CurrentIdleTime Time elapsed since queue went idle Declaration public readonly TimeSpan? CurrentIdleTime Field Value Type System.Nullable < System.TimeSpan > CurrentItemProcessingTime Time elapsed processing the current item Declaration public readonly TimeSpan? CurrentItemProcessingTime Field Value Type System.Nullable < System.TimeSpan > GroupName Group queue is a member of Declaration public readonly string GroupName Field Value Type System.String IdleTimePercent Percentage of time queue spent idle Declaration public readonly double IdleTimePercent Field Value Type System.Double InProgressMessageType Current message type queue is processing Declaration public readonly Type InProgressMessageType Field Value Type System.Type LastProcessedMessageType Last message type processed Declaration public readonly Type LastProcessedMessageType Field Value Type System.Type Length Number of items in the queue Declaration public readonly int Length Field Value Type System.Int32 LengthCurrentTryPeak The highest number of items in the queue within the past 100ms Declaration public readonly long LengthCurrentTryPeak Field Value Type System.Int64 LengthLifetimePeak The highest number of items in the queue Declaration public readonly long LengthLifetimePeak Field Value Type System.Int64 Name Queue name Declaration public readonly string Name Field Value Type System.String TotalItemsProcessed The total number of items processed by the queue Declaration public readonly long TotalItemsProcessed Field Value Type System.Int64 Methods ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Monitoring.Stats.GcStats.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Monitoring.Stats.GcStats.html",
    "title": "Class GcStats | Event Store",
    "keywords": "Class GcStats Inheritance System.Object GcStats Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Monitoring.Stats Assembly : EventStore.Core.dll Syntax public class GcStats Constructors GcStats(Int64, Int64, Int64, Int64, Int64, Int64, Int64, Single, Single, Int64) Declaration public GcStats(long gcGen0Items, long gcGen1Items, long gcGen2Items, long gcGen0Size, long gcGen1Size, long gcGen2Size, long gcLargeHeapSize, float gcAllocationSpeed, float gcTimeInGc, long gcTotalBytesInHeaps) Parameters Type Name System.Int64 gcGen0Items System.Int64 gcGen1Items System.Int64 gcGen2Items System.Int64 gcGen0Size System.Int64 gcGen1Size System.Int64 gcGen2Size System.Int64 gcLargeHeapSize System.Single gcAllocationSpeed System.Single gcTimeInGc System.Int64 gcTotalBytesInHeaps Fields AllocationSpeed Memory allocation speed. Declaration public readonly float AllocationSpeed Field Value Type System.Single Gen0ItemsCount Number of Gen 0 Collections. Declaration public readonly long Gen0ItemsCount Field Value Type System.Int64 Gen0Size Gen 0 heap size. Declaration public readonly long Gen0Size Field Value Type System.Int64 Gen1ItemsCount Number of Gen 1 Collections. Declaration public readonly long Gen1ItemsCount Field Value Type System.Int64 Gen1Size Gen 1 heap size. Declaration public readonly long Gen1Size Field Value Type System.Int64 Gen2ItemsCount Number of Gen 2 Collections. Declaration public readonly long Gen2ItemsCount Field Value Type System.Int64 Gen2Size Gen 2 heap size. Declaration public readonly long Gen2Size Field Value Type System.Int64 LargeHeapSize Large Object Heap size. Declaration public readonly long LargeHeapSize Field Value Type System.Int64 TimeInGc % of Time in GC. Declaration public readonly float TimeInGc Field Value Type System.Single TotalBytesInHeaps Total Bytes in all Heaps. Declaration public readonly long TotalBytesInHeaps Field Value Type System.Int64 Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Monitoring.Stats.EsDriveInfo.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Monitoring.Stats.EsDriveInfo.html",
    "title": "Class EsDriveInfo | Event Store",
    "keywords": "Class EsDriveInfo Inheritance System.Object EsDriveInfo Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Monitoring.Stats Assembly : EventStore.Core.dll Syntax public class EsDriveInfo Fields AvailableBytes Remaining bytes of space available to Event Store Declaration public readonly long AvailableBytes Field Value Type System.Int64 DiskName Data storage path Declaration public readonly string DiskName Field Value Type System.String TotalBytes Total bytes of space available to Event Store Declaration public readonly long TotalBytes Field Value Type System.Int64 Usage Percentage usage of space used by Event Store Declaration public readonly string Usage Field Value Type System.String UsedBytes Total bytes of space used by Event Store Declaration public readonly long UsedBytes Field Value Type System.Int64 Methods FromDirectory(String, ILogger) Declaration public static EsDriveInfo FromDirectory(string path, ILogger log) Parameters Type Name System.String path ILogger log Returns Type Description EsDriveInfo Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.EventReorderingReaderSubscription.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.EventReorderingReaderSubscription.html",
    "title": "Class EventReorderingReaderSubscription | Event Store",
    "keywords": "Class EventReorderingReaderSubscription Inheritance System.Object ReaderSubscriptionBase EventReorderingReaderSubscription Implements IReaderSubscription IHandle < ReaderSubscriptionMessage.CommittedEventDistributed > IHandle < ReaderSubscriptionMessage.EventReaderIdle > IHandle < ReaderSubscriptionMessage.EventReaderStarting > IHandle < ReaderSubscriptionMessage.EventReaderEof > IHandle < ReaderSubscriptionMessage.EventReaderPartitionEof > IHandle < ReaderSubscriptionMessage.EventReaderPartitionDeleted > IHandle < ReaderSubscriptionMessage.EventReaderPartitionMeasured > IHandle < ReaderSubscriptionMessage.EventReaderNotAuthorized > Inherited Members ReaderSubscriptionBase._eventFilter ReaderSubscriptionBase._positionTagger ReaderSubscriptionBase._positionTracker ReaderSubscriptionBase._tag ReaderSubscriptionBase.Tag ReaderSubscriptionBase.SubscriptionId ReaderSubscriptionBase.ProcessOne(ReaderSubscriptionMessage.CommittedEventDistributed) ReaderSubscriptionBase.PublishPartitionDeleted(String, CheckpointTag) ReaderSubscriptionBase.CreatePausedEventReader(IPublisher, IODispatcher, Guid) ReaderSubscriptionBase.Handle(ReaderSubscriptionMessage.EventReaderEof) ReaderSubscriptionBase.Handle(ReaderSubscriptionMessage.EventReaderPartitionMeasured) ReaderSubscriptionBase.Handle(ReaderSubscriptionMessage.EventReaderNotAuthorized) ReaderSubscriptionBase.Handle(ReaderSubscriptionMessage.EventReaderStarting) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class EventReorderingReaderSubscription : ReaderSubscriptionBase, IReaderSubscription, IHandle<ReaderSubscriptionMessage.CommittedEventDistributed>, IHandle<ReaderSubscriptionMessage.EventReaderIdle>, IHandle<ReaderSubscriptionMessage.EventReaderStarting>, IHandle<ReaderSubscriptionMessage.EventReaderEof>, IHandle<ReaderSubscriptionMessage.EventReaderPartitionEof>, IHandle<ReaderSubscriptionMessage.EventReaderPartitionDeleted>, IHandle<ReaderSubscriptionMessage.EventReaderPartitionMeasured>, IHandle<ReaderSubscriptionMessage.EventReaderNotAuthorized> Constructors EventReorderingReaderSubscription(IPublisher, Guid, CheckpointTag, IReaderStrategy, ITimeProvider, Nullable<Int64>, Nullable<Int32>, Int32, Int32, Boolean, Nullable<Int32>) Declaration public EventReorderingReaderSubscription(IPublisher publisher, Guid subscriptionId, CheckpointTag from, IReaderStrategy readerStrategy, ITimeProvider timeProvider, long? checkpointUnhandledBytesThreshold, int? checkpointProcessedEventsThreshold, int checkpointAfterMs, int processingLagMs, bool stopOnEof = false, int? stopAfterNEvents = default(int? )) Parameters Type Name IPublisher publisher System.Guid subscriptionId CheckpointTag from IReaderStrategy readerStrategy ITimeProvider timeProvider System.Nullable < System.Int64 > checkpointUnhandledBytesThreshold System.Nullable < System.Int32 > checkpointProcessedEventsThreshold System.Int32 checkpointAfterMs System.Int32 processingLagMs System.Boolean stopOnEof System.Nullable < System.Int32 > stopAfterNEvents Methods EofReached() Declaration protected override void EofReached() Overrides ReaderSubscriptionBase.EofReached() Handle(ReaderSubscriptionMessage.CommittedEventDistributed) Declaration public void Handle(ReaderSubscriptionMessage.CommittedEventDistributed message) Parameters Type Name ReaderSubscriptionMessage.CommittedEventDistributed message Handle(ReaderSubscriptionMessage.EventReaderIdle) Declaration public void Handle(ReaderSubscriptionMessage.EventReaderIdle message) Parameters Type Name ReaderSubscriptionMessage.EventReaderIdle message Handle(ReaderSubscriptionMessage.EventReaderPartitionDeleted) Declaration public void Handle(ReaderSubscriptionMessage.EventReaderPartitionDeleted message) Parameters Type Name ReaderSubscriptionMessage.EventReaderPartitionDeleted message Handle(ReaderSubscriptionMessage.EventReaderPartitionEof) Declaration public void Handle(ReaderSubscriptionMessage.EventReaderPartitionEof message) Parameters Type Name ReaderSubscriptionMessage.EventReaderPartitionEof message Implements IReaderSubscription IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionEntry.html",
    "title": "Class PersistentSubscriptionEntry | Event Store",
    "keywords": "Class PersistentSubscriptionEntry Inheritance System.Object PersistentSubscriptionEntry Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.PersistentSubscription Assembly : EventStore.Core.dll Syntax public class PersistentSubscriptionEntry Fields ExtraStatistics Declaration public bool ExtraStatistics Field Value Type System.Boolean Group Declaration public string Group Field Value Type System.String HistoryBufferSize Declaration public int HistoryBufferSize Field Value Type System.Int32 LiveBufferSize Declaration public int LiveBufferSize Field Value Type System.Int32 MaxRetryCount Declaration public int MaxRetryCount Field Value Type System.Int32 MessageTimeout Declaration public int MessageTimeout Field Value Type System.Int32 PreferRoundRobin Declaration public bool PreferRoundRobin Field Value Type System.Boolean ReadBatchSize Declaration public int ReadBatchSize Field Value Type System.Int32 ResolveLinkTos Declaration public bool ResolveLinkTos Field Value Type System.Boolean StartFrom Declaration public long StartFrom Field Value Type System.Int64 Stream Declaration public string Stream Field Value Type System.String Properties CheckPointAfter Declaration public int CheckPointAfter { get; set; } Property Value Type System.Int32 MaxCheckPointCount Declaration public int MaxCheckPointCount { get; set; } Property Value Type System.Int32 MaxSubscriberCount Declaration public int MaxSubscriberCount { get; set; } Property Value Type System.Int32 MinCheckPointCount Declaration public int MinCheckPointCount { get; set; } Property Value Type System.Int32 NamedConsumerStrategy Declaration public string NamedConsumerStrategy { get; set; } Property Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionConfig.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionConfig.html",
    "title": "Class PersistentSubscriptionConfig | Event Store",
    "keywords": "Class PersistentSubscriptionConfig Inheritance System.Object PersistentSubscriptionConfig Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.PersistentSubscription Assembly : EventStore.Core.dll Syntax public class PersistentSubscriptionConfig Fields Entries Declaration public List<PersistentSubscriptionEntry> Entries Field Value Type System.Collections.Generic.List < PersistentSubscriptionEntry > Updated Declaration public DateTime Updated Field Value Type System.DateTime UpdatedBy Declaration public string UpdatedBy Field Value Type System.String Version Declaration public string Version Field Value Type System.String Methods FromSerializedForm(Byte[]) Declaration public static PersistentSubscriptionConfig FromSerializedForm(byte[] data) Parameters Type Name System.Byte [] data Returns Type Description PersistentSubscriptionConfig GetSerializedForm() Declaration public byte[] GetSerializedForm() Returns Type Description System.Byte [] Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionClient.html",
    "title": "Class PersistentSubscriptionClient | Event Store",
    "keywords": "Class PersistentSubscriptionClient Inheritance System.Object PersistentSubscriptionClient Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.PersistentSubscription Assembly : EventStore.Core.dll Syntax public class PersistentSubscriptionClient Constructors PersistentSubscriptionClient(Guid, Guid, IEnvelope, Int32, String, String, Stopwatch, Boolean) Declaration public PersistentSubscriptionClient(Guid correlationId, Guid connectionId, IEnvelope envelope, int inFlightMessages, string username, string from, Stopwatch watch, bool extraStatistics) Parameters Type Name System.Guid correlationId System.Guid connectionId IEnvelope envelope System.Int32 inFlightMessages System.String username System.String from System.Diagnostics.Stopwatch watch System.Boolean extraStatistics Fields From Declaration public readonly string From Field Value Type System.String MaximumInFlightMessages Declaration public readonly int MaximumInFlightMessages Field Value Type System.Int32 Username Declaration public readonly string Username Field Value Type System.String Properties AvailableSlots Declaration public int AvailableSlots { get; } Property Value Type System.Int32 ConnectionId Declaration public Guid ConnectionId { get; } Property Value Type System.Guid CorrelationId Declaration public Guid CorrelationId { get; } Property Value Type System.Guid InflightMessages Declaration public int InflightMessages { get; } Property Value Type System.Int32 LastTotalItems Declaration public long LastTotalItems { get; set; } Property Value Type System.Int64 TotalItems Declaration public long TotalItems { get; } Property Value Type System.Int64 Methods GetUnconfirmedEvents() Declaration public IEnumerable<ResolvedEvent> GetUnconfirmedEvents() Returns Type Description System.Collections.Generic.IEnumerable < ResolvedEvent > Push(ResolvedEvent, Int32) Declaration public bool Push(ResolvedEvent evnt, int retryCount) Parameters Type Name ResolvedEvent evnt System.Int32 retryCount Returns Type Description System.Boolean Events EventConfirmed Raised whenever an in-flight event has been confirmed. This could be because of ack, nak, timeout or disconnection. Declaration public event Action<PersistentSubscriptionClient, ResolvedEvent> EventConfirmed Event Type Type System.Action < PersistentSubscriptionClient , ResolvedEvent > Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionCheckpointWriter.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionCheckpointWriter.html",
    "title": "Class PersistentSubscriptionCheckpointWriter | Event Store",
    "keywords": "Class PersistentSubscriptionCheckpointWriter Inheritance System.Object PersistentSubscriptionCheckpointWriter Implements IPersistentSubscriptionCheckpointWriter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.PersistentSubscription Assembly : EventStore.Core.dll Syntax public class PersistentSubscriptionCheckpointWriter : IPersistentSubscriptionCheckpointWriter Constructors PersistentSubscriptionCheckpointWriter(String, IODispatcher) Declaration public PersistentSubscriptionCheckpointWriter(string subscriptionId, IODispatcher ioDispatcher) Parameters Type Name System.String subscriptionId IODispatcher ioDispatcher Methods BeginDelete(Action<IPersistentSubscriptionCheckpointWriter>) Declaration public void BeginDelete(Action<IPersistentSubscriptionCheckpointWriter> completed) Parameters Type Name System.Action < IPersistentSubscriptionCheckpointWriter > completed BeginWriteState(Int64) Declaration public void BeginWriteState(long state) Parameters Type Name System.Int64 state StartFrom(Int64) Declaration public void StartFrom(long version) Parameters Type Name System.Int64 version Implements IPersistentSubscriptionCheckpointWriter Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionCheckpointReader.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionCheckpointReader.html",
    "title": "Class PersistentSubscriptionCheckpointReader | Event Store",
    "keywords": "Class PersistentSubscriptionCheckpointReader Inheritance System.Object PersistentSubscriptionCheckpointReader Implements IPersistentSubscriptionCheckpointReader Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.PersistentSubscription Assembly : EventStore.Core.dll Syntax public class PersistentSubscriptionCheckpointReader : IPersistentSubscriptionCheckpointReader Constructors PersistentSubscriptionCheckpointReader(IODispatcher) Declaration public PersistentSubscriptionCheckpointReader(IODispatcher ioDispatcher) Parameters Type Name IODispatcher ioDispatcher Methods BeginLoadState(String, Action<Nullable<Int64>>) Declaration public void BeginLoadState(string subscriptionId, Action<long? > onStateLoaded) Parameters Type Name System.String subscriptionId System.Action < System.Nullable < System.Int64 >> onStateLoaded Implements IPersistentSubscriptionCheckpointReader Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.PersistentSubscription.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.PersistentSubscription.html",
    "title": "Class PersistentSubscription | Event Store",
    "keywords": "Class PersistentSubscription Inheritance System.Object PersistentSubscription Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.PersistentSubscription Assembly : EventStore.Core.dll Syntax public class PersistentSubscription Constructors PersistentSubscription(PersistentSubscriptionParams) Declaration public PersistentSubscription(PersistentSubscriptionParams persistentSubscriptionParams) Parameters Type Name PersistentSubscriptionParams persistentSubscriptionParams Properties ClientCount Declaration public int ClientCount { get; } Property Value Type System.Int32 EventStreamId Declaration public string EventStreamId { get; } Property Value Type System.String GroupName Declaration public string GroupName { get; } Property Value Type System.String HasClients Declaration public bool HasClients { get; } Property Value Type System.Boolean HasReachedMaxClientCount Declaration public bool HasReachedMaxClientCount { get; } Property Value Type System.Boolean OutstandingMessageCount Declaration public int OutstandingMessageCount { get; } Property Value Type System.Int32 ResolveLinkTos Declaration public bool ResolveLinkTos { get; } Property Value Type System.Boolean State Declaration public PersistentSubscriptionState State { get; } Property Value Type PersistentSubscriptionState SubscriptionId Declaration public string SubscriptionId { get; } Property Value Type System.String Methods AcknowledgeMessagesProcessed(Guid, Guid[]) Declaration public void AcknowledgeMessagesProcessed(Guid correlationId, Guid[] processedEventIds) Parameters Type Name System.Guid correlationId System.Guid [] processedEventIds AddClient(Guid, Guid, IEnvelope, Int32, String, String) Declaration public void AddClient(Guid correlationId, Guid connectionId, IEnvelope envelope, int maxInFlight, string user, string from) Parameters Type Name System.Guid correlationId System.Guid connectionId IEnvelope envelope System.Int32 maxInFlight System.String user System.String from AddMessageAsProcessing(ResolvedEvent, PersistentSubscriptionClient) Declaration public void AddMessageAsProcessing(ResolvedEvent ev, PersistentSubscriptionClient client) Parameters Type Name ResolvedEvent ev PersistentSubscriptionClient client Delete() Declaration public void Delete() GetNextNOrLessMessages(Int32) Declaration public IEnumerable<ResolvedEvent> GetNextNOrLessMessages(int count) Parameters Type Name System.Int32 count Returns Type Description System.Collections.Generic.IEnumerable < ResolvedEvent > GetStatistics() Declaration public MonitoringMessage.SubscriptionInfo GetStatistics() Returns Type Description MonitoringMessage.SubscriptionInfo HandleParkedReadCompleted(ResolvedEvent[], Int64, Boolean, Int64) Declaration public void HandleParkedReadCompleted(ResolvedEvent[] events, long newposition, bool isEndofStrem, long stopAt) Parameters Type Name ResolvedEvent [] events System.Int64 newposition System.Boolean isEndofStrem System.Int64 stopAt HandleReadCompleted(ResolvedEvent[], Int64, Boolean) Declaration public void HandleReadCompleted(ResolvedEvent[] events, long newposition, bool isEndOfStream) Parameters Type Name ResolvedEvent [] events System.Int64 newposition System.Boolean isEndOfStream InitAsNew() Declaration public void InitAsNew() NotAcknowledgeMessagesProcessed(Guid, Guid[], NakAction, String) Declaration public void NotAcknowledgeMessagesProcessed(Guid correlationId, Guid[] processedEventIds, NakAction action, string reason) Parameters Type Name System.Guid correlationId System.Guid [] processedEventIds NakAction action System.String reason NotifyClockTick(DateTime) Declaration public void NotifyClockTick(DateTime time) Parameters Type Name System.DateTime time NotifyLiveSubscriptionMessage(ResolvedEvent) Declaration public void NotifyLiveSubscriptionMessage(ResolvedEvent resolvedEvent) Parameters Type Name ResolvedEvent resolvedEvent RemoveClientByConnectionId(Guid) Declaration public void RemoveClientByConnectionId(Guid connectionId) Parameters Type Name System.Guid connectionId RemoveClientByCorrelationId(Guid, Boolean) Declaration public void RemoveClientByCorrelationId(Guid correlationId, bool sendDropNotification) Parameters Type Name System.Guid correlationId System.Boolean sendDropNotification RetryAllParkedMessages() Declaration public void RetryAllParkedMessages() RetrySingleMessage(ResolvedEvent) Declaration public void RetrySingleMessage(ResolvedEvent event) Parameters Type Name ResolvedEvent event Shutdown() Declaration public void Shutdown() TryMarkCheckpoint(Boolean) Declaration public void TryMarkCheckpoint(bool isTimeCheck) Parameters Type Name System.Boolean isTimeCheck TryReadingNewBatch() Declaration public void TryReadingNewBatch() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.OutstandingMessageCache.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.OutstandingMessageCache.html",
    "title": "Class OutstandingMessageCache | Event Store",
    "keywords": "Class OutstandingMessageCache Inheritance System.Object OutstandingMessageCache Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.PersistentSubscription Assembly : EventStore.Core.dll Syntax public class OutstandingMessageCache Constructors OutstandingMessageCache() Declaration public OutstandingMessageCache() Properties Count Declaration public int Count { get; } Property Value Type System.Int32 Methods GetLowestPosition() Declaration public long GetLowestPosition() Returns Type Description System.Int64 GetMessageById(Guid, out OutstandingMessage) Declaration public bool GetMessageById(Guid id, out OutstandingMessage outstandingMessage) Parameters Type Name System.Guid id OutstandingMessage outstandingMessage Returns Type Description System.Boolean GetMessagesExpiringBefore(DateTime) Declaration public IEnumerable<OutstandingMessage> GetMessagesExpiringBefore(DateTime time) Parameters Type Name System.DateTime time Returns Type Description System.Collections.Generic.IEnumerable < OutstandingMessage > Remove(IEnumerable<Guid>) Declaration public void Remove(IEnumerable<Guid> messageIds) Parameters Type Name System.Collections.Generic.IEnumerable < System.Guid > messageIds Remove(Guid) Declaration public void Remove(Guid messageId) Parameters Type Name System.Guid messageId StartMessage(OutstandingMessage, DateTime) Declaration public StartMessageResult StartMessage(OutstandingMessage message, DateTime expires) Parameters Type Name OutstandingMessage message System.DateTime expires Returns Type Description StartMessageResult WaitingTimeMessages() Declaration public IEnumerable<Tuple<DateTime, RetryableMessage>> WaitingTimeMessages() Returns Type Description System.Collections.Generic.IEnumerable < System.Tuple < System.DateTime , RetryableMessage >> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.OutstandingMessageCache.ByTypeComparer.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.OutstandingMessageCache.ByTypeComparer.html",
    "title": "Class OutstandingMessageCache.ByTypeComparer | Event Store",
    "keywords": "Class OutstandingMessageCache.ByTypeComparer Inheritance System.Object OutstandingMessageCache.ByTypeComparer Implements System.Collections.Generic.IComparer < System.Tuple < System.DateTime , RetryableMessage >> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.PersistentSubscription Assembly : EventStore.Core.dll Syntax public class ByTypeComparer : IComparer<Tuple<DateTime, RetryableMessage>> Methods Compare(Tuple<DateTime, RetryableMessage>, Tuple<DateTime, RetryableMessage>) Declaration public int Compare(Tuple<DateTime, RetryableMessage> x, Tuple<DateTime, RetryableMessage> y) Parameters Type Name System.Tuple < System.DateTime , RetryableMessage > x System.Tuple < System.DateTime , RetryableMessage > y Returns Type Description System.Int32 Implements System.Collections.Generic.IComparer<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.ProgramBase-1.html": {
    "href": "dotnet-api/code/EventStore.Core.ProgramBase-1.html",
    "title": "Class ProgramBase<TOptions> | Event Store",
    "keywords": "Class ProgramBase<TOptions> Inheritance System.Object ProgramBase<TOptions> Program Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core Assembly : EventStore.Core.dll Syntax public abstract class ProgramBase<TOptions> where TOptions : class, IOptions, new() Type Parameters Name Description TOptions Fields Log Declaration protected static readonly ILogger Log Field Value Type ILogger Methods Create(TOptions) Declaration protected abstract void Create(TOptions options) Parameters Type Name TOptions options GetCertificateStoreLocation(String) Declaration protected static StoreLocation GetCertificateStoreLocation(string certificateStoreLocation) Parameters Type Name System.String certificateStoreLocation Returns Type Description System.Security.Cryptography.X509Certificates.StoreLocation GetCertificateStoreName(String) Declaration protected static StoreName GetCertificateStoreName(string certificateStoreName) Parameters Type Name System.String certificateStoreName Returns Type Description System.Security.Cryptography.X509Certificates.StoreName GetComponentName(TOptions) Declaration protected abstract string GetComponentName(TOptions options) Parameters Type Name TOptions options Returns Type Description System.String GetIsStructuredLog(TOptions) Declaration protected abstract bool GetIsStructuredLog(TOptions options) Parameters Type Name TOptions options Returns Type Description System.Boolean GetLogsDirectory(TOptions) Declaration protected abstract string GetLogsDirectory(TOptions options) Parameters Type Name TOptions options Returns Type Description System.String OnProgramExit() Declaration protected virtual void OnProgramExit() PreInit(TOptions) Declaration protected virtual void PreInit(TOptions options) Parameters Type Name TOptions options Run(String[]) Declaration public void Run(string[] args) Parameters Type Name System.String [] args Start() Declaration protected abstract void Start() Stop() Declaration public abstract void Stop() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.PluginModel.html": {
    "href": "dotnet-api/code/EventStore.Core.PluginModel.html",
    "title": "Namespace EventStore.Core.PluginModel | Event Store",
    "keywords": "Namespace EventStore.Core.PluginModel Interfaces IAuthenticationPlugin IPersistentSubscriptionConsumerStrategyPlugin"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.RequestResponseQueueForwarder.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.RequestResponseQueueForwarder.html",
    "title": "Class RequestResponseQueueForwarder | Event Store",
    "keywords": "Class RequestResponseQueueForwarder Inheritance System.Object RequestResponseQueueForwarder Implements IHandle < ClientMessage.ReadEvent > IHandle < ClientMessage.ReadStreamEventsBackward > IHandle < ClientMessage.ReadStreamEventsForward > IHandle < ClientMessage.ReadAllEventsForward > IHandle < ClientMessage.WriteEvents > IHandle < ClientMessage.DeleteStream > IHandle < SystemMessage.SubSystemInitialized > IHandle < ProjectionCoreServiceMessage.SubComponentStarted > IHandle < ProjectionCoreServiceMessage.SubComponentStopped > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class RequestResponseQueueForwarder : IHandle<ClientMessage.ReadEvent>, IHandle<ClientMessage.ReadStreamEventsBackward>, IHandle<ClientMessage.ReadStreamEventsForward>, IHandle<ClientMessage.ReadAllEventsForward>, IHandle<ClientMessage.WriteEvents>, IHandle<ClientMessage.DeleteStream>, IHandle<SystemMessage.SubSystemInitialized>, IHandle<ProjectionCoreServiceMessage.SubComponentStarted>, IHandle<ProjectionCoreServiceMessage.SubComponentStopped> Constructors RequestResponseQueueForwarder(IPublisher, IPublisher) Declaration public RequestResponseQueueForwarder(IPublisher inputQueue, IPublisher externalRequestQueue) Parameters Type Name IPublisher inputQueue IPublisher externalRequestQueue Methods Handle(ClientMessage.DeleteStream) Declaration public void Handle(ClientMessage.DeleteStream msg) Parameters Type Name ClientMessage.DeleteStream msg Handle(ClientMessage.ReadAllEventsForward) Declaration public void Handle(ClientMessage.ReadAllEventsForward msg) Parameters Type Name ClientMessage.ReadAllEventsForward msg Handle(ClientMessage.ReadEvent) Declaration public void Handle(ClientMessage.ReadEvent msg) Parameters Type Name ClientMessage.ReadEvent msg Handle(ClientMessage.ReadStreamEventsBackward) Declaration public void Handle(ClientMessage.ReadStreamEventsBackward msg) Parameters Type Name ClientMessage.ReadStreamEventsBackward msg Handle(ClientMessage.ReadStreamEventsForward) Declaration public void Handle(ClientMessage.ReadStreamEventsForward msg) Parameters Type Name ClientMessage.ReadStreamEventsForward msg Handle(ClientMessage.WriteEvents) Declaration public void Handle(ClientMessage.WriteEvents msg) Parameters Type Name ClientMessage.WriteEvents msg Handle(SystemMessage.SubSystemInitialized) Declaration public void Handle(SystemMessage.SubSystemInitialized msg) Parameters Type Name SystemMessage.SubSystemInitialized msg Explicit Interface Implementations IHandle<ProjectionCoreServiceMessage.SubComponentStarted>.Handle(ProjectionCoreServiceMessage.SubComponentStarted) Declaration void IHandle<ProjectionCoreServiceMessage.SubComponentStarted>.Handle(ProjectionCoreServiceMessage.SubComponentStarted message) Parameters Type Name ProjectionCoreServiceMessage.SubComponentStarted message IHandle<ProjectionCoreServiceMessage.SubComponentStopped>.Handle(ProjectionCoreServiceMessage.SubComponentStopped) Declaration void IHandle<ProjectionCoreServiceMessage.SubComponentStopped>.Handle(ProjectionCoreServiceMessage.SubComponentStopped message) Parameters Type Name ProjectionCoreServiceMessage.SubComponentStopped message Implements IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ReaderSubscriptionOptions.html",
    "title": "Class ReaderSubscriptionOptions | Event Store",
    "keywords": "Class ReaderSubscriptionOptions Inheritance System.Object ReaderSubscriptionOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class ReaderSubscriptionOptions Constructors ReaderSubscriptionOptions(Int64, Nullable<Int32>, Int32, Boolean, Nullable<Int32>) Declaration public ReaderSubscriptionOptions(long checkpointUnhandledBytesThreshold, int? checkpointProcessedEventsThreshold, int checkpointAfterMs, bool stopOnEof, int? stopAfterNEvents) Parameters Type Name System.Int64 checkpointUnhandledBytesThreshold System.Nullable < System.Int32 > checkpointProcessedEventsThreshold System.Int32 checkpointAfterMs System.Boolean stopOnEof System.Nullable < System.Int32 > stopAfterNEvents Properties CheckpointAfterMs Declaration public int CheckpointAfterMs { get; } Property Value Type System.Int32 CheckpointProcessedEventsThreshold Declaration public int? CheckpointProcessedEventsThreshold { get; } Property Value Type System.Nullable < System.Int32 > CheckpointUnhandledBytesThreshold Declaration public long CheckpointUnhandledBytesThreshold { get; } Property Value Type System.Int64 StopAfterNEvents Declaration public int? StopAfterNEvents { get; } Property Value Type System.Nullable < System.Int32 > StopOnEof Declaration public bool StopOnEof { get; } Property Value Type System.Boolean Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Management.ProjectionStateHandlerFactory.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Management.ProjectionStateHandlerFactory.html",
    "title": "Class ProjectionStateHandlerFactory | Event Store",
    "keywords": "Class ProjectionStateHandlerFactory Inheritance System.Object ProjectionStateHandlerFactory Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Management Assembly : EventStore.Projections.Core.dll Syntax public class ProjectionStateHandlerFactory Methods Create(String, String, Action<Int32, Action>, Action<String, Object[]>) Declaration public IProjectionStateHandler Create(string factoryType, string source, Action<int, Action> cancelCallbackFactory = null, Action<string, object[]> logger = null) Parameters Type Name System.String factoryType System.String source System.Action < System.Int32 , System.Action > cancelCallbackFactory System.Action < System.String , System.Object []> logger Returns Type Description IProjectionStateHandler Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Management.ProjectionManagerResponseReader.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Management.ProjectionManagerResponseReader.html",
    "title": "Class ProjectionManagerResponseReader | Event Store",
    "keywords": "Class ProjectionManagerResponseReader Inheritance System.Object ProjectionManagerResponseReader Implements IHandle < ProjectionManagementMessage.Starting > IHandle < ProjectionManagementMessage.Internal.ReadTimeout > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Management Assembly : EventStore.Projections.Core.dll Syntax public class ProjectionManagerResponseReader : IHandle<ProjectionManagementMessage.Starting>, IHandle<ProjectionManagementMessage.Internal.ReadTimeout> Constructors ProjectionManagerResponseReader(IPublisher, IODispatcher, Int32) Declaration public ProjectionManagerResponseReader(IPublisher publisher, IODispatcher ioDispatcher, int numberOfWorkers) Parameters Type Name IPublisher publisher IODispatcher ioDispatcher System.Int32 numberOfWorkers Methods Handle(ProjectionManagementMessage.Internal.ReadTimeout) Declaration public void Handle(ProjectionManagementMessage.Internal.ReadTimeout timeout) Parameters Type Name ProjectionManagementMessage.Internal.ReadTimeout timeout Handle(ProjectionManagementMessage.Starting) Declaration public void Handle(ProjectionManagementMessage.Starting message) Parameters Type Name ProjectionManagementMessage.Starting message Implements IHandle<T> IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Management.ProjectionManagerMessageDispatcher.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Management.ProjectionManagerMessageDispatcher.html",
    "title": "Class ProjectionManagerMessageDispatcher | Event Store",
    "keywords": "Class ProjectionManagerMessageDispatcher Inheritance System.Object ProjectionManagerMessageDispatcher Implements IHandle < PartitionProcessingResultBase > IHandle < ReaderSubscriptionManagement.SpoolStreamReading > IHandle < CoreProjectionManagementControlMessage > IHandle < PartitionProcessingResultOutputBase > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Management Assembly : EventStore.Projections.Core.dll Syntax public class ProjectionManagerMessageDispatcher : IHandle<PartitionProcessingResultBase>, IHandle<ReaderSubscriptionManagement.SpoolStreamReading>, IHandle<CoreProjectionManagementControlMessage>, IHandle<PartitionProcessingResultOutputBase> Constructors ProjectionManagerMessageDispatcher(IDictionary<Guid, IPublisher>) Declaration public ProjectionManagerMessageDispatcher(IDictionary<Guid, IPublisher> queueMap) Parameters Type Name System.Collections.Generic.IDictionary < System.Guid , IPublisher > queueMap Methods Handle(CoreProjectionManagementControlMessage) Declaration public void Handle(CoreProjectionManagementControlMessage message) Parameters Type Name CoreProjectionManagementControlMessage message Handle(PartitionProcessingResultBase) Declaration public void Handle(PartitionProcessingResultBase message) Parameters Type Name PartitionProcessingResultBase message Handle(PartitionProcessingResultOutputBase) Declaration public void Handle(PartitionProcessingResultOutputBase message) Parameters Type Name PartitionProcessingResultOutputBase message Handle(ReaderSubscriptionManagement.SpoolStreamReading) Declaration public void Handle(ReaderSubscriptionManagement.SpoolStreamReading message) Parameters Type Name ReaderSubscriptionManagement.SpoolStreamReading message Implements IHandle<T> IHandle<T> IHandle<T> IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Management.ProjectionManagerCommandWriter.html",
    "title": "Class ProjectionManagerCommandWriter | Event Store",
    "keywords": "Class ProjectionManagerCommandWriter Inheritance System.Object ProjectionManagerCommandWriter Implements IHandle < CoreProjectionManagementMessage.CreatePrepared > IHandle < CoreProjectionManagementMessage.CreateAndPrepare > IHandle < CoreProjectionManagementMessage.CreateAndPrepareSlave > IHandle < CoreProjectionManagementMessage.LoadStopped > IHandle < CoreProjectionManagementMessage.Start > IHandle < CoreProjectionManagementMessage.Stop > IHandle < CoreProjectionManagementMessage.Kill > IHandle < CoreProjectionManagementMessage.Dispose > IHandle < CoreProjectionManagementMessage.GetState > IHandle < CoreProjectionManagementMessage.GetResult > IHandle < ProjectionManagementMessage.SlaveProjectionsStarted > IHandle < ProjectionManagementMessage.Starting > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Management Assembly : EventStore.Projections.Core.dll Syntax public sealed class ProjectionManagerCommandWriter : IHandle<CoreProjectionManagementMessage.CreatePrepared>, IHandle<CoreProjectionManagementMessage.CreateAndPrepare>, IHandle<CoreProjectionManagementMessage.CreateAndPrepareSlave>, IHandle<CoreProjectionManagementMessage.LoadStopped>, IHandle<CoreProjectionManagementMessage.Start>, IHandle<CoreProjectionManagementMessage.Stop>, IHandle<CoreProjectionManagementMessage.Kill>, IHandle<CoreProjectionManagementMessage.Dispose>, IHandle<CoreProjectionManagementMessage.GetState>, IHandle<CoreProjectionManagementMessage.GetResult>, IHandle<ProjectionManagementMessage.SlaveProjectionsStarted>, IHandle<ProjectionManagementMessage.Starting> Constructors ProjectionManagerCommandWriter(IMultiStreamMessageWriter) Declaration public ProjectionManagerCommandWriter(IMultiStreamMessageWriter commandWriter) Parameters Type Name IMultiStreamMessageWriter commandWriter Methods Handle(CoreProjectionManagementMessage.CreateAndPrepare) Declaration public void Handle(CoreProjectionManagementMessage.CreateAndPrepare message) Parameters Type Name CoreProjectionManagementMessage.CreateAndPrepare message Handle(CoreProjectionManagementMessage.CreateAndPrepareSlave) Declaration public void Handle(CoreProjectionManagementMessage.CreateAndPrepareSlave message) Parameters Type Name CoreProjectionManagementMessage.CreateAndPrepareSlave message Handle(CoreProjectionManagementMessage.CreatePrepared) Declaration public void Handle(CoreProjectionManagementMessage.CreatePrepared message) Parameters Type Name CoreProjectionManagementMessage.CreatePrepared message Handle(CoreProjectionManagementMessage.Dispose) Declaration public void Handle(CoreProjectionManagementMessage.Dispose message) Parameters Type Name CoreProjectionManagementMessage.Dispose message Handle(CoreProjectionManagementMessage.GetResult) Declaration public void Handle(CoreProjectionManagementMessage.GetResult message) Parameters Type Name CoreProjectionManagementMessage.GetResult message Handle(CoreProjectionManagementMessage.GetState) Declaration public void Handle(CoreProjectionManagementMessage.GetState message) Parameters Type Name CoreProjectionManagementMessage.GetState message Handle(CoreProjectionManagementMessage.Kill) Declaration public void Handle(CoreProjectionManagementMessage.Kill message) Parameters Type Name CoreProjectionManagementMessage.Kill message Handle(CoreProjectionManagementMessage.LoadStopped) Declaration public void Handle(CoreProjectionManagementMessage.LoadStopped message) Parameters Type Name CoreProjectionManagementMessage.LoadStopped message Handle(CoreProjectionManagementMessage.Start) Declaration public void Handle(CoreProjectionManagementMessage.Start message) Parameters Type Name CoreProjectionManagementMessage.Start message Handle(CoreProjectionManagementMessage.Stop) Declaration public void Handle(CoreProjectionManagementMessage.Stop message) Parameters Type Name CoreProjectionManagementMessage.Stop message Handle(ProjectionManagementMessage.SlaveProjectionsStarted) Declaration public void Handle(ProjectionManagementMessage.SlaveProjectionsStarted message) Parameters Type Name ProjectionManagementMessage.SlaveProjectionsStarted message Handle(ProjectionManagementMessage.Starting) Declaration public void Handle(ProjectionManagementMessage.Starting message) Parameters Type Name ProjectionManagementMessage.Starting message Implements IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.TimerService.IScheduler.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.TimerService.IScheduler.html",
    "title": "Interface IScheduler | Event Store",
    "keywords": "Interface IScheduler Inherited Members System.IDisposable.Dispose() Namespace : EventStore.Core.Services.TimerService Assembly : EventStore.Core.dll Syntax public interface IScheduler : IDisposable Methods Schedule(TimeSpan, Action<IScheduler, Object>, Object) Declaration void Schedule(TimeSpan after, Action<IScheduler, object> callback, object state) Parameters Type Name System.TimeSpan after System.Action < IScheduler , System.Object > callback System.Object state Stop() Declaration void Stop() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.TcpSendService.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.TcpSendService.html",
    "title": "Class TcpSendService | Event Store",
    "keywords": "Class TcpSendService Inheritance System.Object TcpSendService Implements IHandle < TcpMessage.TcpSend > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services Assembly : EventStore.Core.dll Syntax public class TcpSendService : IHandle<TcpMessage.TcpSend> Methods Handle(TcpMessage.TcpSend) Declaration public void Handle(TcpMessage.TcpSend message) Parameters Type Name TcpMessage.TcpSend message Implements IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) HandleExtensions.WidenFrom<TInput, TOutput>(IHandle<TOutput>) HandleExtensions.NarrowTo<TInput, TOutput>(IHandle<TOutput>) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.SystemUsers.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.SystemUsers.html",
    "title": "Class SystemUsers | Event Store",
    "keywords": "Class SystemUsers Inheritance System.Object SystemUsers Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services Assembly : EventStore.Core.dll Syntax public static class SystemUsers Fields Admin Declaration public const string Admin = \"admin\" Field Value Type System.String DefaultAdminPassword Declaration public const string DefaultAdminPassword = \"changeit\" Field Value Type System.String Operations Declaration public const string Operations = \"ops\" Field Value Type System.String"
  },
  "dotnet-api/code/EventStore.Core.Services.SystemStreams.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.SystemStreams.html",
    "title": "Class SystemStreams | Event Store",
    "keywords": "Class SystemStreams Inheritance System.Object SystemStreams Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services Assembly : EventStore.Core.dll Syntax public static class SystemStreams Fields AllStream Declaration public const string AllStream = \"$all\" Field Value Type System.String PersistentSubscriptionConfig Declaration public const string PersistentSubscriptionConfig = \"$persistentSubscriptionConfig\" Field Value Type System.String ScavengesStream Declaration public const string ScavengesStream = \"$scavenges\" Field Value Type System.String SettingsStream Declaration public const string SettingsStream = \"$settings\" Field Value Type System.String StatsStreamPrefix Declaration public const string StatsStreamPrefix = \"$stats\" Field Value Type System.String StreamsStream Declaration public const string StreamsStream = \"$streams\" Field Value Type System.String Methods IsMetastream(String) Declaration public static bool IsMetastream(string streamId) Parameters Type Name System.String streamId Returns Type Description System.Boolean IsSystemStream(String) Declaration public static bool IsSystemStream(string streamId) Parameters Type Name System.String streamId Returns Type Description System.Boolean MetastreamOf(String) Declaration public static string MetastreamOf(string streamId) Parameters Type Name System.String streamId Returns Type Description System.String OriginalStreamOf(String) Declaration public static string OriginalStreamOf(string metastreamId) Parameters Type Name System.String metastreamId Returns Type Description System.String"
  },
  "dotnet-api/code/EventStore.Core.Services.SystemRoles.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.SystemRoles.html",
    "title": "Class SystemRoles | Event Store",
    "keywords": "Class SystemRoles Inheritance System.Object SystemRoles Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services Assembly : EventStore.Core.dll Syntax public static class SystemRoles Fields Admins Declaration public const string Admins = \"$admins\" Field Value Type System.String All Declaration public const string All = \"$all\" Field Value Type System.String Operations Declaration public const string Operations = \"$ops\" Field Value Type System.String"
  },
  "dotnet-api/code/EventStore.Core.Services.RequestManager.Managers.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.RequestManager.Managers.html",
    "title": "Namespace EventStore.Core.Services.RequestManager.Managers | Event Store",
    "keywords": "Namespace EventStore.Core.Services.RequestManager.Managers Classes DeleteStreamTwoPhaseRequestManager SingleAckRequestManager TransactionCommitTwoPhaseRequestManager TwoPhaseRequestManagerBase WriteStreamTwoPhaseRequestManager"
  },
  "dotnet-api/code/EventStore.Core.Services.RequestManager.Managers.WriteStreamTwoPhaseRequestManager.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.RequestManager.Managers.WriteStreamTwoPhaseRequestManager.html",
    "title": "Class WriteStreamTwoPhaseRequestManager | Event Store",
    "keywords": "Class WriteStreamTwoPhaseRequestManager Inheritance System.Object TwoPhaseRequestManagerBase WriteStreamTwoPhaseRequestManager Implements IRequestManager IHandle < StorageMessage.CheckStreamAccessCompleted > IHandle < StorageMessage.AlreadyCommitted > IHandle < StorageMessage.PrepareAck > IHandle < StorageMessage.CommitReplicated > IHandle < StorageMessage.WrongExpectedVersion > IHandle < StorageMessage.StreamDeleted > IHandle < StorageMessage.RequestManagerTimerTick > IHandle < ClientMessage.WriteEvents > Inherited Members TwoPhaseRequestManagerBase.Publisher TwoPhaseRequestManagerBase.PublishEnvelope TwoPhaseRequestManagerBase.ResponseEnvelope TwoPhaseRequestManagerBase.ClientCorrId TwoPhaseRequestManagerBase.NextTimeoutTime TwoPhaseRequestManagerBase.PrepareTimeout TwoPhaseRequestManagerBase.CommitTimeout TwoPhaseRequestManagerBase.InitNoPreparePhase(IEnvelope, Guid, Guid, String, IPrincipal, StreamAccessType) TwoPhaseRequestManagerBase.InitTwoPhase(IEnvelope, Guid, Guid, Int64, IPrincipal, StreamAccessType) TwoPhaseRequestManagerBase.Handle(StorageMessage.CheckStreamAccessCompleted) TwoPhaseRequestManagerBase.Handle(StorageMessage.WrongExpectedVersion) TwoPhaseRequestManagerBase.Handle(StorageMessage.StreamDeleted) TwoPhaseRequestManagerBase.Handle(StorageMessage.RequestManagerTimerTick) TwoPhaseRequestManagerBase.Handle(StorageMessage.AlreadyCommitted) TwoPhaseRequestManagerBase.Handle(StorageMessage.PrepareAck) TwoPhaseRequestManagerBase.Handle(StorageMessage.CommitReplicated) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.RequestManager.Managers Assembly : EventStore.Core.dll Syntax public class WriteStreamTwoPhaseRequestManager : TwoPhaseRequestManagerBase, IRequestManager, IHandle<StorageMessage.CheckStreamAccessCompleted>, IHandle<StorageMessage.AlreadyCommitted>, IHandle<StorageMessage.PrepareAck>, IHandle<StorageMessage.CommitReplicated>, IHandle<StorageMessage.WrongExpectedVersion>, IHandle<StorageMessage.StreamDeleted>, IHandle<StorageMessage.RequestManagerTimerTick>, IHandle<ClientMessage.WriteEvents> Constructors WriteStreamTwoPhaseRequestManager(IPublisher, Int32, TimeSpan, TimeSpan, Boolean) Declaration public WriteStreamTwoPhaseRequestManager(IPublisher publisher, int prepareCount, TimeSpan prepareTimeout, TimeSpan commitTimeout, bool betterOrdering) Parameters Type Name IPublisher publisher System.Int32 prepareCount System.TimeSpan prepareTimeout System.TimeSpan commitTimeout System.Boolean betterOrdering Methods CompleteFailedRequest(OperationResult, String, Int64) Declaration protected override void CompleteFailedRequest(OperationResult result, string error, long currentVersion = -1L) Parameters Type Name OperationResult result System.String error System.Int64 currentVersion Overrides TwoPhaseRequestManagerBase.CompleteFailedRequest(OperationResult, String, Int64) CompleteSuccessRequest(Int64, Int64, Int64, Int64) Declaration protected override void CompleteSuccessRequest(long firstEventNumber, long lastEventNumber, long preparePosition, long commitPosition) Parameters Type Name System.Int64 firstEventNumber System.Int64 lastEventNumber System.Int64 preparePosition System.Int64 commitPosition Overrides TwoPhaseRequestManagerBase.CompleteSuccessRequest(Int64, Int64, Int64, Int64) Handle(ClientMessage.WriteEvents) Declaration public void Handle(ClientMessage.WriteEvents request) Parameters Type Name ClientMessage.WriteEvents request OnSecurityAccessGranted(Guid) Declaration protected override void OnSecurityAccessGranted(Guid internalCorrId) Parameters Type Name System.Guid internalCorrId Overrides TwoPhaseRequestManagerBase.OnSecurityAccessGranted(Guid) Implements IRequestManager IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.RequestManager.Managers.TwoPhaseRequestManagerBase.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.RequestManager.Managers.TwoPhaseRequestManagerBase.html",
    "title": "Class TwoPhaseRequestManagerBase | Event Store",
    "keywords": "Class TwoPhaseRequestManagerBase Inheritance System.Object TwoPhaseRequestManagerBase DeleteStreamTwoPhaseRequestManager TransactionCommitTwoPhaseRequestManager WriteStreamTwoPhaseRequestManager Implements IRequestManager IHandle < StorageMessage.CheckStreamAccessCompleted > IHandle < StorageMessage.AlreadyCommitted > IHandle < StorageMessage.PrepareAck > IHandle < StorageMessage.CommitReplicated > IHandle < StorageMessage.WrongExpectedVersion > IHandle < StorageMessage.StreamDeleted > IHandle < StorageMessage.RequestManagerTimerTick > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.RequestManager.Managers Assembly : EventStore.Core.dll Syntax public abstract class TwoPhaseRequestManagerBase : IRequestManager, IHandle<StorageMessage.CheckStreamAccessCompleted>, IHandle<StorageMessage.AlreadyCommitted>, IHandle<StorageMessage.PrepareAck>, IHandle<StorageMessage.CommitReplicated>, IHandle<StorageMessage.WrongExpectedVersion>, IHandle<StorageMessage.StreamDeleted>, IHandle<StorageMessage.RequestManagerTimerTick> Constructors TwoPhaseRequestManagerBase(IPublisher, Int32, TimeSpan, TimeSpan, Boolean) Declaration protected TwoPhaseRequestManagerBase(IPublisher publisher, int prepareCount, TimeSpan prepareTimeout, TimeSpan commitTimeout, bool betterOrdering) Parameters Type Name IPublisher publisher System.Int32 prepareCount System.TimeSpan prepareTimeout System.TimeSpan commitTimeout System.Boolean betterOrdering Fields CommitTimeout Declaration protected readonly TimeSpan CommitTimeout Field Value Type System.TimeSpan PrepareTimeout Declaration protected readonly TimeSpan PrepareTimeout Field Value Type System.TimeSpan PublishEnvelope Declaration protected readonly IEnvelope PublishEnvelope Field Value Type IEnvelope Publisher Declaration protected readonly IPublisher Publisher Field Value Type IPublisher Properties ClientCorrId Declaration protected Guid ClientCorrId { get; } Property Value Type System.Guid NextTimeoutTime Declaration protected DateTime NextTimeoutTime { get; } Property Value Type System.DateTime ResponseEnvelope Declaration protected IEnvelope ResponseEnvelope { get; } Property Value Type IEnvelope Methods CompleteFailedRequest(OperationResult, String, Int64) Declaration protected virtual void CompleteFailedRequest(OperationResult result, string error, long currentVersion = -1L) Parameters Type Name OperationResult result System.String error System.Int64 currentVersion CompleteSuccessRequest(Int64, Int64, Int64, Int64) Declaration protected virtual void CompleteSuccessRequest(long firstEventNumber, long lastEventNumber, long preparePosition, long commitPosition) Parameters Type Name System.Int64 firstEventNumber System.Int64 lastEventNumber System.Int64 preparePosition System.Int64 commitPosition Handle(StorageMessage.AlreadyCommitted) Declaration public void Handle(StorageMessage.AlreadyCommitted message) Parameters Type Name StorageMessage.AlreadyCommitted message Handle(StorageMessage.CheckStreamAccessCompleted) Declaration public void Handle(StorageMessage.CheckStreamAccessCompleted message) Parameters Type Name StorageMessage.CheckStreamAccessCompleted message Handle(StorageMessage.CommitReplicated) Declaration public void Handle(StorageMessage.CommitReplicated message) Parameters Type Name StorageMessage.CommitReplicated message Handle(StorageMessage.PrepareAck) Declaration public void Handle(StorageMessage.PrepareAck message) Parameters Type Name StorageMessage.PrepareAck message Handle(StorageMessage.RequestManagerTimerTick) Declaration public void Handle(StorageMessage.RequestManagerTimerTick message) Parameters Type Name StorageMessage.RequestManagerTimerTick message Handle(StorageMessage.StreamDeleted) Declaration public void Handle(StorageMessage.StreamDeleted message) Parameters Type Name StorageMessage.StreamDeleted message Handle(StorageMessage.WrongExpectedVersion) Declaration public void Handle(StorageMessage.WrongExpectedVersion message) Parameters Type Name StorageMessage.WrongExpectedVersion message InitNoPreparePhase(IEnvelope, Guid, Guid, String, IPrincipal, StreamAccessType) Declaration protected void InitNoPreparePhase(IEnvelope responseEnvelope, Guid internalCorrId, Guid clientCorrId, string eventStreamId, IPrincipal user, StreamAccessType accessType) Parameters Type Name IEnvelope responseEnvelope System.Guid internalCorrId System.Guid clientCorrId System.String eventStreamId System.Security.Principal.IPrincipal user StreamAccessType accessType InitTwoPhase(IEnvelope, Guid, Guid, Int64, IPrincipal, StreamAccessType) Declaration protected void InitTwoPhase(IEnvelope responseEnvelope, Guid internalCorrId, Guid clientCorrId, long transactionId, IPrincipal user, StreamAccessType accessType) Parameters Type Name IEnvelope responseEnvelope System.Guid internalCorrId System.Guid clientCorrId System.Int64 transactionId System.Security.Principal.IPrincipal user StreamAccessType accessType OnSecurityAccessGranted(Guid) Declaration protected abstract void OnSecurityAccessGranted(Guid internalCorrId) Parameters Type Name System.Guid internalCorrId Implements IRequestManager IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.AwakeReaderService.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.AwakeReaderService.html",
    "title": "Namespace EventStore.Core.Services.AwakeReaderService | Event Store",
    "keywords": "Namespace EventStore.Core.Services.AwakeReaderService Classes AwakeService AwakeServiceMessage AwakeServiceMessage.SubscribeAwake AwakeServiceMessage.UnsubscribeAwake"
  },
  "dotnet-api/code/EventStore.Core.Services.AwakeReaderService.AwakeServiceMessage.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.AwakeReaderService.AwakeServiceMessage.html",
    "title": "Class AwakeServiceMessage | Event Store",
    "keywords": "Class AwakeServiceMessage Inheritance System.Object AwakeServiceMessage Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.AwakeReaderService Assembly : EventStore.Core.dll Syntax public class AwakeServiceMessage Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.AwakeReaderService.AwakeServiceMessage.UnsubscribeAwake.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.AwakeReaderService.AwakeServiceMessage.UnsubscribeAwake.html",
    "title": "Class AwakeServiceMessage.UnsubscribeAwake | Event Store",
    "keywords": "Class AwakeServiceMessage.UnsubscribeAwake Inheritance System.Object Message AwakeServiceMessage.UnsubscribeAwake Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.AwakeReaderService Assembly : EventStore.Core.dll Syntax public sealed class UnsubscribeAwake : Message Constructors UnsubscribeAwake(Guid) Declaration public UnsubscribeAwake(Guid correlationId) Parameters Type Name System.Guid correlationId Fields CorrelationId Declaration public readonly Guid CorrelationId Field Value Type System.Guid Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Index.IndexEntry.html": {
    "href": "dotnet-api/code/EventStore.Core.Index.IndexEntry.html",
    "title": "Struct IndexEntry | Event Store",
    "keywords": "Struct IndexEntry Implements System.IComparable < IndexEntry > System.IEquatable < IndexEntry > Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Index Assembly : EventStore.Core.dll Syntax public struct IndexEntry : IComparable<IndexEntry>, IEquatable<IndexEntry> Constructors IndexEntry(UInt64, Int64, Int64) Declaration public IndexEntry(ulong stream, long version, long position) Parameters Type Name System.UInt64 stream System.Int64 version System.Int64 position Fields Bytes Declaration public byte *Bytes Field Value Type System.Byte * Position Declaration public long Position Field Value Type System.Int64 Stream Declaration public ulong Stream Field Value Type System.UInt64 Version Declaration public long Version Field Value Type System.Int64 Methods CompareTo(IndexEntry) Declaration public int CompareTo(IndexEntry other) Parameters Type Name IndexEntry other Returns Type Description System.Int32 Equals(IndexEntry) Declaration public bool Equals(IndexEntry other) Parameters Type Name IndexEntry other Returns Type Description System.Boolean ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Implements System.IComparable<T> System.IEquatable<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) EnumExtensions.EnumValueName<T>(T) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Index.Hashes.Murmur2Unsafe.html": {
    "href": "dotnet-api/code/EventStore.Core.Index.Hashes.Murmur2Unsafe.html",
    "title": "Class Murmur2Unsafe | Event Store",
    "keywords": "Class Murmur2Unsafe Inheritance System.Object Murmur2Unsafe Implements IHasher Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Index.Hashes Assembly : EventStore.Core.dll Syntax public class Murmur2Unsafe : IHasher Methods Hash(Byte[]) Declaration public uint Hash(byte[] data) Parameters Type Name System.Byte [] data Returns Type Description System.UInt32 Hash(Byte[], Int32, UInt32, UInt32) Declaration public uint Hash(byte[] data, int offset, uint len, uint seed) Parameters Type Name System.Byte [] data System.Int32 offset System.UInt32 len System.UInt32 seed Returns Type Description System.UInt32 Hash(String) Declaration public uint Hash(string s) Parameters Type Name System.String s Returns Type Description System.UInt32 Implements IHasher Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Exceptions.UnableToAcquireLockInReasonableTimeException.html": {
    "href": "dotnet-api/code/EventStore.Core.Exceptions.UnableToAcquireLockInReasonableTimeException.html",
    "title": "Class UnableToAcquireLockInReasonableTimeException | Event Store",
    "keywords": "Class UnableToAcquireLockInReasonableTimeException Inheritance System.Object System.Exception UnableToAcquireLockInReasonableTimeException Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Exceptions Assembly : EventStore.Core.dll Syntax public class UnableToAcquireLockInReasonableTimeException : Exception, _Exception, ISerializable Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.DataStructures.ObjectPoolDisposingException.html": {
    "href": "dotnet-api/code/EventStore.Core.DataStructures.ObjectPoolDisposingException.html",
    "title": "Class ObjectPoolDisposingException | Event Store",
    "keywords": "Class ObjectPoolDisposingException Inheritance System.Object System.Exception ObjectPoolDisposingException Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.DataStructures Assembly : EventStore.Core.dll Syntax public class ObjectPoolDisposingException : Exception, _Exception, ISerializable Constructors ObjectPoolDisposingException(String) Declaration public ObjectPoolDisposingException(string poolName) Parameters Type Name System.String poolName ObjectPoolDisposingException(String, Exception) Declaration public ObjectPoolDisposingException(string poolName, Exception innerException) Parameters Type Name System.String poolName System.Exception innerException Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.DataStructures.BoundedQueue-1.html": {
    "href": "dotnet-api/code/EventStore.Core.DataStructures.BoundedQueue-1.html",
    "title": "Class BoundedQueue<T> | Event Store",
    "keywords": "Class BoundedQueue<T> Inheritance System.Object BoundedQueue<T> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.DataStructures Assembly : EventStore.Core.dll Syntax public class BoundedQueue<T> Type Parameters Name Description T Constructors BoundedQueue(Int32) Declaration public BoundedQueue(int maxCapacity) Parameters Type Name System.Int32 maxCapacity Properties Count Declaration public int Count { get; } Property Value Type System.Int32 MaxCapacity Declaration public int MaxCapacity { get; } Property Value Type System.Int32 Methods CanAccept() Declaration public bool CanAccept() Returns Type Description System.Boolean Dequeue() Declaration public T Dequeue() Returns Type Description T Enqueue(T) Declaration public void Enqueue(T obj) Parameters Type Name T obj Peek() Declaration public T Peek() Returns Type Description T Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Standard.IndexEventsByEventType.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Standard.IndexEventsByEventType.html",
    "title": "Class IndexEventsByEventType | Event Store",
    "keywords": "Class IndexEventsByEventType Inheritance System.Object IndexEventsByEventType Implements IProjectionStateHandler System.IDisposable ISourceDefinitionSource IProjectionCheckpointHandler Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Standard Assembly : EventStore.Projections.Core.dll Syntax public class IndexEventsByEventType : IProjectionStateHandler, IDisposable, ISourceDefinitionSource, IProjectionCheckpointHandler Constructors IndexEventsByEventType(String, Action<String, Object[]>) Declaration public IndexEventsByEventType(string source, Action<string, object[]> logger) Parameters Type Name System.String source System.Action < System.String , System.Object []> logger Methods ConfigureSourceProcessingStrategy(SourceDefinitionBuilder) Declaration public void ConfigureSourceProcessingStrategy(SourceDefinitionBuilder builder) Parameters Type Name SourceDefinitionBuilder builder Dispose() Declaration public void Dispose() GetSourceDefinition() Declaration public IQuerySources GetSourceDefinition() Returns Type Description IQuerySources GetStatePartition(CheckpointTag, String, ResolvedEvent) Declaration public string GetStatePartition(CheckpointTag eventPosition, string category, ResolvedEvent data) Parameters Type Name CheckpointTag eventPosition System.String category ResolvedEvent data Returns Type Description System.String Initialize() Declaration public void Initialize() InitializeShared() Declaration public void InitializeShared() Load(String) Declaration public void Load(string state) Parameters Type Name System.String state LoadShared(String) Declaration public void LoadShared(string state) Parameters Type Name System.String state ProcessEvent(String, CheckpointTag, String, ResolvedEvent, out String, out String, out EmittedEventEnvelope[]) Declaration public bool ProcessEvent(string partition, CheckpointTag eventPosition, string category1, ResolvedEvent data, out string newState, out string newSharedState, out EmittedEventEnvelope[] emittedEvents) Parameters Type Name System.String partition CheckpointTag eventPosition System.String category1 ResolvedEvent data System.String newState System.String newSharedState EmittedEventEnvelope [] emittedEvents Returns Type Description System.Boolean ProcessNewCheckpoint(CheckpointTag, out EmittedEventEnvelope[]) Declaration public void ProcessNewCheckpoint(CheckpointTag checkpointPosition, out EmittedEventEnvelope[] emittedEvents) Parameters Type Name CheckpointTag checkpointPosition EmittedEventEnvelope [] emittedEvents ProcessPartitionCreated(String, CheckpointTag, ResolvedEvent, out EmittedEventEnvelope[]) Declaration public bool ProcessPartitionCreated(string partition, CheckpointTag createPosition, ResolvedEvent data, out EmittedEventEnvelope[] emittedEvents) Parameters Type Name System.String partition CheckpointTag createPosition ResolvedEvent data EmittedEventEnvelope [] emittedEvents Returns Type Description System.Boolean ProcessPartitionDeleted(String, CheckpointTag, out String) Declaration public bool ProcessPartitionDeleted(string partition, CheckpointTag deletePosition, out string newState) Parameters Type Name System.String partition CheckpointTag deletePosition System.String newState Returns Type Description System.Boolean TransformCatalogEvent(CheckpointTag, ResolvedEvent) Declaration public string TransformCatalogEvent(CheckpointTag eventPosition, ResolvedEvent data) Parameters Type Name CheckpointTag eventPosition ResolvedEvent data Returns Type Description System.String TransformStateToResult() Declaration public string TransformStateToResult() Returns Type Description System.String Implements IProjectionStateHandler System.IDisposable ISourceDefinitionSource IProjectionCheckpointHandler Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProjectionStateHandlerTestExtensions.ProcessEvent(IProjectionStateHandler, String, CheckpointTag, String, String, String, Guid, Int64, String, String, out String, out EmittedEventEnvelope[], Boolean) ProjectionStateHandlerTestExtensions.ProcessEvent(IProjectionStateHandler, String, CheckpointTag, String, String, String, Guid, Int64, String, String, out String, out String, out EmittedEventEnvelope[], Boolean) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Standard.CategorizeStreamByPath.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Standard.CategorizeStreamByPath.html",
    "title": "Class CategorizeStreamByPath | Event Store",
    "keywords": "Class CategorizeStreamByPath Inheritance System.Object CategorizeStreamByPath Implements IProjectionStateHandler System.IDisposable ISourceDefinitionSource Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Standard Assembly : EventStore.Projections.Core.dll Syntax public class CategorizeStreamByPath : IProjectionStateHandler, IDisposable, ISourceDefinitionSource Constructors CategorizeStreamByPath(String, Action<String, Object[]>) Declaration public CategorizeStreamByPath(string source, Action<string, object[]> logger) Parameters Type Name System.String source System.Action < System.String , System.Object []> logger Methods ConfigureSourceProcessingStrategy(SourceDefinitionBuilder) Declaration public void ConfigureSourceProcessingStrategy(SourceDefinitionBuilder builder) Parameters Type Name SourceDefinitionBuilder builder Dispose() Declaration public void Dispose() GetSourceDefinition() Declaration public IQuerySources GetSourceDefinition() Returns Type Description IQuerySources GetStatePartition(CheckpointTag, String, ResolvedEvent) Declaration public string GetStatePartition(CheckpointTag eventPosition, string category, ResolvedEvent data) Parameters Type Name CheckpointTag eventPosition System.String category ResolvedEvent data Returns Type Description System.String Initialize() Declaration public void Initialize() InitializeShared() Declaration public void InitializeShared() Load(String) Declaration public void Load(string state) Parameters Type Name System.String state LoadShared(String) Declaration public void LoadShared(string state) Parameters Type Name System.String state ProcessEvent(String, CheckpointTag, String, ResolvedEvent, out String, out String, out EmittedEventEnvelope[]) Declaration public bool ProcessEvent(string partition, CheckpointTag eventPosition, string category1, ResolvedEvent data, out string newState, out string newSharedState, out EmittedEventEnvelope[] emittedEvents) Parameters Type Name System.String partition CheckpointTag eventPosition System.String category1 ResolvedEvent data System.String newState System.String newSharedState EmittedEventEnvelope [] emittedEvents Returns Type Description System.Boolean ProcessPartitionCreated(String, CheckpointTag, ResolvedEvent, out EmittedEventEnvelope[]) Declaration public bool ProcessPartitionCreated(string partition, CheckpointTag createPosition, ResolvedEvent data, out EmittedEventEnvelope[] emittedEvents) Parameters Type Name System.String partition CheckpointTag createPosition ResolvedEvent data EmittedEventEnvelope [] emittedEvents Returns Type Description System.Boolean ProcessPartitionDeleted(String, CheckpointTag, out String) Declaration public bool ProcessPartitionDeleted(string partition, CheckpointTag deletePosition, out string newState) Parameters Type Name System.String partition CheckpointTag deletePosition System.String newState Returns Type Description System.Boolean TransformCatalogEvent(CheckpointTag, ResolvedEvent) Declaration public string TransformCatalogEvent(CheckpointTag eventPosition, ResolvedEvent data) Parameters Type Name CheckpointTag eventPosition ResolvedEvent data Returns Type Description System.String TransformStateToResult() Declaration public string TransformStateToResult() Returns Type Description System.String Implements IProjectionStateHandler System.IDisposable ISourceDefinitionSource Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProjectionStateHandlerTestExtensions.ProcessEvent(IProjectionStateHandler, String, CheckpointTag, String, String, String, Guid, Int64, String, String, out String, out EmittedEventEnvelope[], Boolean) ProjectionStateHandlerTestExtensions.ProcessEvent(IProjectionStateHandler, String, CheckpointTag, String, String, String, Guid, Int64, String, String, out String, out String, out EmittedEventEnvelope[], Boolean) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Standard.CategorizeEventsByStreamPath.html",
    "title": "Class CategorizeEventsByStreamPath | Event Store",
    "keywords": "Class CategorizeEventsByStreamPath Inheritance System.Object CategorizeEventsByStreamPath Implements IProjectionStateHandler System.IDisposable ISourceDefinitionSource Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Standard Assembly : EventStore.Projections.Core.dll Syntax public class CategorizeEventsByStreamPath : IProjectionStateHandler, IDisposable, ISourceDefinitionSource Constructors CategorizeEventsByStreamPath(String, Action<String, Object[]>) Declaration public CategorizeEventsByStreamPath(string source, Action<string, object[]> logger) Parameters Type Name System.String source System.Action < System.String , System.Object []> logger Methods ConfigureSourceProcessingStrategy(SourceDefinitionBuilder) Declaration public void ConfigureSourceProcessingStrategy(SourceDefinitionBuilder builder) Parameters Type Name SourceDefinitionBuilder builder Dispose() Declaration public void Dispose() GetSourceDefinition() Declaration public IQuerySources GetSourceDefinition() Returns Type Description IQuerySources GetStatePartition(CheckpointTag, String, ResolvedEvent) Declaration public string GetStatePartition(CheckpointTag eventPosition, string category, ResolvedEvent data) Parameters Type Name CheckpointTag eventPosition System.String category ResolvedEvent data Returns Type Description System.String Initialize() Declaration public void Initialize() InitializeShared() Declaration public void InitializeShared() Load(String) Declaration public void Load(string state) Parameters Type Name System.String state LoadShared(String) Declaration public void LoadShared(string state) Parameters Type Name System.String state ProcessEvent(String, CheckpointTag, String, ResolvedEvent, out String, out String, out EmittedEventEnvelope[]) Declaration public bool ProcessEvent(string partition, CheckpointTag eventPosition, string category1, ResolvedEvent data, out string newState, out string newSharedState, out EmittedEventEnvelope[] emittedEvents) Parameters Type Name System.String partition CheckpointTag eventPosition System.String category1 ResolvedEvent data System.String newState System.String newSharedState EmittedEventEnvelope [] emittedEvents Returns Type Description System.Boolean ProcessPartitionCreated(String, CheckpointTag, ResolvedEvent, out EmittedEventEnvelope[]) Declaration public bool ProcessPartitionCreated(string partition, CheckpointTag createPosition, ResolvedEvent data, out EmittedEventEnvelope[] emittedEvents) Parameters Type Name System.String partition CheckpointTag createPosition ResolvedEvent data EmittedEventEnvelope [] emittedEvents Returns Type Description System.Boolean ProcessPartitionDeleted(String, CheckpointTag, out String) Declaration public bool ProcessPartitionDeleted(string partition, CheckpointTag deletePosition, out string newState) Parameters Type Name System.String partition CheckpointTag deletePosition System.String newState Returns Type Description System.Boolean TransformCatalogEvent(CheckpointTag, ResolvedEvent) Declaration public string TransformCatalogEvent(CheckpointTag eventPosition, ResolvedEvent data) Parameters Type Name CheckpointTag eventPosition ResolvedEvent data Returns Type Description System.String TransformStateToResult() Declaration public string TransformStateToResult() Returns Type Description System.String Implements IProjectionStateHandler System.IDisposable ISourceDefinitionSource Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProjectionStateHandlerTestExtensions.ProcessEvent(IProjectionStateHandler, String, CheckpointTag, String, String, String, Guid, Int64, String, String, out String, out EmittedEventEnvelope[], Boolean) ProjectionStateHandlerTestExtensions.ProcessEvent(IProjectionStateHandler, String, CheckpointTag, String, String, String, Guid, Int64, String, String, out String, out String, out EmittedEventEnvelope[], Boolean) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Standard.ByCorrelationId.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Standard.ByCorrelationId.html",
    "title": "Class ByCorrelationId | Event Store",
    "keywords": "Class ByCorrelationId Inheritance System.Object ByCorrelationId Implements IProjectionStateHandler System.IDisposable ISourceDefinitionSource Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Standard Assembly : EventStore.Projections.Core.dll Syntax public class ByCorrelationId : IProjectionStateHandler, IDisposable, ISourceDefinitionSource Constructors ByCorrelationId(String, Action<String, Object[]>) Declaration public ByCorrelationId(string source, Action<string, object[]> logger) Parameters Type Name System.String source System.Action < System.String , System.Object []> logger Methods ConfigureSourceProcessingStrategy(SourceDefinitionBuilder) Declaration public void ConfigureSourceProcessingStrategy(SourceDefinitionBuilder builder) Parameters Type Name SourceDefinitionBuilder builder Dispose() Declaration public void Dispose() GetSourceDefinition() Declaration public IQuerySources GetSourceDefinition() Returns Type Description IQuerySources GetStatePartition(CheckpointTag, String, ResolvedEvent) Declaration public string GetStatePartition(CheckpointTag eventPosition, string category, ResolvedEvent data) Parameters Type Name CheckpointTag eventPosition System.String category ResolvedEvent data Returns Type Description System.String Initialize() Declaration public void Initialize() InitializeShared() Declaration public void InitializeShared() Load(String) Declaration public void Load(string state) Parameters Type Name System.String state LoadShared(String) Declaration public void LoadShared(string state) Parameters Type Name System.String state ProcessEvent(String, CheckpointTag, String, ResolvedEvent, out String, out String, out EmittedEventEnvelope[]) Declaration public bool ProcessEvent(string partition, CheckpointTag eventPosition, string category1, ResolvedEvent data, out string newState, out string newSharedState, out EmittedEventEnvelope[] emittedEvents) Parameters Type Name System.String partition CheckpointTag eventPosition System.String category1 ResolvedEvent data System.String newState System.String newSharedState EmittedEventEnvelope [] emittedEvents Returns Type Description System.Boolean ProcessPartitionCreated(String, CheckpointTag, ResolvedEvent, out EmittedEventEnvelope[]) Declaration public bool ProcessPartitionCreated(string partition, CheckpointTag createPosition, ResolvedEvent data, out EmittedEventEnvelope[] emittedEvents) Parameters Type Name System.String partition CheckpointTag createPosition ResolvedEvent data EmittedEventEnvelope [] emittedEvents Returns Type Description System.Boolean ProcessPartitionDeleted(String, CheckpointTag, out String) Declaration public bool ProcessPartitionDeleted(string partition, CheckpointTag deletePosition, out string newState) Parameters Type Name System.String partition CheckpointTag deletePosition System.String newState Returns Type Description System.Boolean TransformCatalogEvent(CheckpointTag, ResolvedEvent) Declaration public string TransformCatalogEvent(CheckpointTag eventPosition, ResolvedEvent data) Parameters Type Name CheckpointTag eventPosition ResolvedEvent data Returns Type Description System.String TransformStateToResult() Declaration public string TransformStateToResult() Returns Type Description System.String Implements IProjectionStateHandler System.IDisposable ISourceDefinitionSource Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProjectionStateHandlerTestExtensions.ProcessEvent(IProjectionStateHandler, String, CheckpointTag, String, String, String, Guid, Int64, String, String, out String, out EmittedEventEnvelope[], Boolean) ProjectionStateHandlerTestExtensions.ProcessEvent(IProjectionStateHandler, String, CheckpointTag, String, String, String, Guid, Int64, String, String, out String, out String, out EmittedEventEnvelope[], Boolean) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.html",
    "title": "Namespace EventStore.Projections.Core.Services | Event Store",
    "keywords": "Namespace EventStore.Projections.Core.Services Classes ProjectionConfig ProjectionEventTypes ProjectionStateHandlerTestExtensions ProjectionStatistics PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase> ReaderSubscriptionDispatcher SpooledStreamReadingDispatcher Interfaces IProjectionCheckpointHandler IProjectionStateHandler ISingletonTimeoutScheduler ISourceDefinitionSource Enums ProjectionMode ReadWrite"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.v8.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.v8.html",
    "title": "Namespace EventStore.Projections.Core.Services.v8 | Event Store",
    "keywords": "Namespace EventStore.Projections.Core.Services.v8 Classes DefaultV8ProjectionStateHandler V8ProjectionStateHandler V8ProjectionStateHandler.EmittedEventJsonContract"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.v8.V8ProjectionStateHandler.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.v8.V8ProjectionStateHandler.html",
    "title": "Class V8ProjectionStateHandler | Event Store",
    "keywords": "Class V8ProjectionStateHandler Inheritance System.Object V8ProjectionStateHandler DefaultV8ProjectionStateHandler Implements IProjectionStateHandler System.IDisposable ISourceDefinitionSource Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.v8 Assembly : EventStore.Projections.Core.dll Syntax public class V8ProjectionStateHandler : IProjectionStateHandler, IDisposable, ISourceDefinitionSource Constructors V8ProjectionStateHandler(String, String, Func<String, Tuple<String, String>>, Action<String, Object[]>, Action<Int32, Action>) Declaration public V8ProjectionStateHandler(string preludeName, string querySource, Func<string, Tuple<string, string>> getModuleSource, Action<string, object[]> logger, Action<int, Action> cancelCallbackFactory) Parameters Type Name System.String preludeName System.String querySource System.Func < System.String , System.Tuple < System.String , System.String >> getModuleSource System.Action < System.String , System.Object []> logger System.Action < System.Int32 , System.Action > cancelCallbackFactory Methods Dispose() Declaration public void Dispose() GetSourceDefinition() Declaration public IQuerySources GetSourceDefinition() Returns Type Description IQuerySources GetStatePartition(CheckpointTag, String, ResolvedEvent) Declaration public string GetStatePartition(CheckpointTag eventPosition, string category, ResolvedEvent event) Parameters Type Name CheckpointTag eventPosition System.String category ResolvedEvent event Returns Type Description System.String Initialize() Declaration public void Initialize() InitializeShared() Declaration public void InitializeShared() Load(String) Declaration public void Load(string state) Parameters Type Name System.String state LoadShared(String) Declaration public void LoadShared(string state) Parameters Type Name System.String state ProcessEvent(String, CheckpointTag, String, ResolvedEvent, out String, out String, out EmittedEventEnvelope[]) Declaration public bool ProcessEvent(string partition, CheckpointTag eventPosition, string category, ResolvedEvent data, out string newState, out string newSharedState, out EmittedEventEnvelope[] emittedEvents) Parameters Type Name System.String partition CheckpointTag eventPosition System.String category ResolvedEvent data System.String newState System.String newSharedState EmittedEventEnvelope [] emittedEvents Returns Type Description System.Boolean ProcessPartitionCreated(String, CheckpointTag, ResolvedEvent, out EmittedEventEnvelope[]) Declaration public bool ProcessPartitionCreated(string partition, CheckpointTag createPosition, ResolvedEvent data, out EmittedEventEnvelope[] emittedEvents) Parameters Type Name System.String partition CheckpointTag createPosition ResolvedEvent data EmittedEventEnvelope [] emittedEvents Returns Type Description System.Boolean ProcessPartitionDeleted(String, CheckpointTag, out String) Declaration public bool ProcessPartitionDeleted(string partition, CheckpointTag deletePosition, out string newState) Parameters Type Name System.String partition CheckpointTag deletePosition System.String newState Returns Type Description System.Boolean TransformCatalogEvent(CheckpointTag, ResolvedEvent) Declaration public string TransformCatalogEvent(CheckpointTag eventPosition, ResolvedEvent data) Parameters Type Name CheckpointTag eventPosition ResolvedEvent data Returns Type Description System.String TransformStateToResult() Declaration public string TransformStateToResult() Returns Type Description System.String Implements IProjectionStateHandler System.IDisposable ISourceDefinitionSource Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProjectionStateHandlerTestExtensions.ProcessEvent(IProjectionStateHandler, String, CheckpointTag, String, String, String, Guid, Int64, String, String, out String, out EmittedEventEnvelope[], Boolean) ProjectionStateHandlerTestExtensions.ProcessEvent(IProjectionStateHandler, String, CheckpointTag, String, String, String, Guid, Int64, String, String, out String, out String, out EmittedEventEnvelope[], Boolean) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.v8.V8ProjectionStateHandler.EmittedEventJsonContract.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.v8.V8ProjectionStateHandler.EmittedEventJsonContract.html",
    "title": "Class V8ProjectionStateHandler.EmittedEventJsonContract | Event Store",
    "keywords": "Class V8ProjectionStateHandler.EmittedEventJsonContract Inheritance System.Object V8ProjectionStateHandler.EmittedEventJsonContract Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.v8 Assembly : EventStore.Projections.Core.dll Syntax [DataContract] public class EmittedEventJsonContract Fields body Declaration [DataMember] public string body Field Value Type System.String eventName Declaration [DataMember] public string eventName Field Value Type System.String isJson Declaration [DataMember] public bool isJson Field Value Type System.Boolean metadata Declaration [DataMember] public Dictionary<string, JRaw> metadata Field Value Type System.Collections.Generic.Dictionary < System.String , Newtonsoft.Json.Linq.JRaw > streamId Declaration [DataMember] public string streamId Field Value Type System.String Methods GetExtraMetadata() Declaration public ExtraMetaData GetExtraMetadata() Returns Type Description ExtraMetaData Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.v8.DefaultV8ProjectionStateHandler.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.v8.DefaultV8ProjectionStateHandler.html",
    "title": "Class DefaultV8ProjectionStateHandler | Event Store",
    "keywords": "Class DefaultV8ProjectionStateHandler Inheritance System.Object V8ProjectionStateHandler DefaultV8ProjectionStateHandler Implements IProjectionStateHandler System.IDisposable ISourceDefinitionSource Inherited Members V8ProjectionStateHandler.Load(String) V8ProjectionStateHandler.LoadShared(String) V8ProjectionStateHandler.Initialize() V8ProjectionStateHandler.InitializeShared() V8ProjectionStateHandler.GetStatePartition(CheckpointTag, String, ResolvedEvent) V8ProjectionStateHandler.TransformCatalogEvent(CheckpointTag, ResolvedEvent) V8ProjectionStateHandler.ProcessEvent(String, CheckpointTag, String, ResolvedEvent, String, String, EmittedEventEnvelope[]) V8ProjectionStateHandler.ProcessPartitionCreated(String, CheckpointTag, ResolvedEvent, EmittedEventEnvelope[]) V8ProjectionStateHandler.ProcessPartitionDeleted(String, CheckpointTag, String) V8ProjectionStateHandler.TransformStateToResult() V8ProjectionStateHandler.Dispose() V8ProjectionStateHandler.GetSourceDefinition() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.v8 Assembly : EventStore.Projections.Core.dll Syntax public class DefaultV8ProjectionStateHandler : V8ProjectionStateHandler, IProjectionStateHandler, IDisposable, ISourceDefinitionSource Constructors DefaultV8ProjectionStateHandler(String, Action<String, Object[]>, Action<Int32, Action>) Declaration public DefaultV8ProjectionStateHandler(string query, Action<string, object[]> logger, Action<int, Action> cancelCallbackFactory) Parameters Type Name System.String query System.Action < System.String , System.Object []> logger System.Action < System.Int32 , System.Action > cancelCallbackFactory Methods GetModuleSource(String) Declaration public static Tuple<string, string> GetModuleSource(string name) Parameters Type Name System.String name Returns Type Description System.Tuple < System.String , System.String > Implements IProjectionStateHandler System.IDisposable ISourceDefinitionSource Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProjectionStateHandlerTestExtensions.ProcessEvent(IProjectionStateHandler, String, CheckpointTag, String, String, String, Guid, Int64, String, String, out String, out EmittedEventEnvelope[], Boolean) ProjectionStateHandlerTestExtensions.ProcessEvent(IProjectionStateHandler, String, CheckpointTag, String, String, String, Guid, Int64, String, String, out String, out String, out EmittedEventEnvelope[], Boolean) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.SpooledStreamReadingDispatcher.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.SpooledStreamReadingDispatcher.html",
    "title": "Class SpooledStreamReadingDispatcher | Event Store",
    "keywords": "Class SpooledStreamReadingDispatcher Inheritance System.Object PublishSubscribeDispatcher < System.Tuple < System.Guid , System.String >, ReaderSubscriptionManagement.SpoolStreamReading , ReaderSubscriptionManagement.SpoolStreamReading , PartitionProcessingResultBase > SpooledStreamReadingDispatcher Inherited Members PublishSubscribeDispatcher<Tuple<Guid, String>, ReaderSubscriptionManagement.SpoolStreamReading, ReaderSubscriptionManagement.SpoolStreamReading, PartitionProcessingResultBase>.PublishSubscribe(ReaderSubscriptionManagement.SpoolStreamReading, Object) PublishSubscribeDispatcher<Tuple<Guid, String>, ReaderSubscriptionManagement.SpoolStreamReading, ReaderSubscriptionManagement.SpoolStreamReading, PartitionProcessingResultBase>.PublishSubscribe(IPublisher, ReaderSubscriptionManagement.SpoolStreamReading, Object) PublishSubscribeDispatcher<Tuple<Guid, String>, ReaderSubscriptionManagement.SpoolStreamReading, ReaderSubscriptionManagement.SpoolStreamReading, PartitionProcessingResultBase>.Publish(ReaderSubscriptionManagement.SpoolStreamReading) PublishSubscribeDispatcher<Tuple<Guid, String>, ReaderSubscriptionManagement.SpoolStreamReading, ReaderSubscriptionManagement.SpoolStreamReading, PartitionProcessingResultBase>.Publish(IPublisher, ReaderSubscriptionManagement.SpoolStreamReading) PublishSubscribeDispatcher<Tuple<Guid, String>, ReaderSubscriptionManagement.SpoolStreamReading, ReaderSubscriptionManagement.SpoolStreamReading, PartitionProcessingResultBase>.Cancel(Tuple<Guid, String>) PublishSubscribeDispatcher<Tuple<Guid, String>, ReaderSubscriptionManagement.SpoolStreamReading, ReaderSubscriptionManagement.SpoolStreamReading, PartitionProcessingResultBase>.CancelAll() PublishSubscribeDispatcher<Tuple<Guid, String>, ReaderSubscriptionManagement.SpoolStreamReading, ReaderSubscriptionManagement.SpoolStreamReading, PartitionProcessingResultBase>.CreateSubscriber<T>() PublishSubscribeDispatcher<Tuple<Guid, String>, ReaderSubscriptionManagement.SpoolStreamReading, ReaderSubscriptionManagement.SpoolStreamReading, PartitionProcessingResultBase>.Handle<T>(T) PublishSubscribeDispatcher<Tuple<Guid, String>, ReaderSubscriptionManagement.SpoolStreamReading, ReaderSubscriptionManagement.SpoolStreamReading, PartitionProcessingResultBase>.Subscribed(Tuple<Guid, String>, Object) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services Assembly : EventStore.Projections.Core.dll Syntax public sealed class SpooledStreamReadingDispatcher : PublishSubscribeDispatcher<Tuple<Guid, string>, ReaderSubscriptionManagement.SpoolStreamReading, ReaderSubscriptionManagement.SpoolStreamReading, PartitionProcessingResultBase> Constructors SpooledStreamReadingDispatcher(IPublisher) Declaration public SpooledStreamReadingDispatcher(IPublisher publisher) Parameters Type Name IPublisher publisher Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.ReaderSubscriptionDispatcher.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.ReaderSubscriptionDispatcher.html",
    "title": "Class ReaderSubscriptionDispatcher | Event Store",
    "keywords": "Class ReaderSubscriptionDispatcher Inheritance System.Object PublishSubscribeDispatcher < System.Guid , ReaderSubscriptionManagement.Subscribe , ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage , EventReaderSubscriptionMessageBase > ReaderSubscriptionDispatcher Inherited Members PublishSubscribeDispatcher<Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase>.PublishSubscribe(ReaderSubscriptionManagement.Subscribe, Object) PublishSubscribeDispatcher<Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase>.PublishSubscribe(IPublisher, ReaderSubscriptionManagement.Subscribe, Object) PublishSubscribeDispatcher<Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase>.Publish(ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage) PublishSubscribeDispatcher<Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase>.Publish(IPublisher, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage) PublishSubscribeDispatcher<Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase>.Cancel(Guid) PublishSubscribeDispatcher<Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase>.CancelAll() PublishSubscribeDispatcher<Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase>.CreateSubscriber<T>() PublishSubscribeDispatcher<Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase>.Handle<T>(T) PublishSubscribeDispatcher<Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase>.Subscribed(Guid, Object) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services Assembly : EventStore.Projections.Core.dll Syntax public sealed class ReaderSubscriptionDispatcher : PublishSubscribeDispatcher<Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase> Constructors ReaderSubscriptionDispatcher(IPublisher) Declaration public ReaderSubscriptionDispatcher(IPublisher publisher) Parameters Type Name IPublisher publisher Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.ReadStreamEvents.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.ReadStreamEvents.html",
    "title": "Class TcpClientMessageDto.ReadStreamEvents | Event Store",
    "keywords": "Class TcpClientMessageDto.ReadStreamEvents Inheritance System.Object TcpClientMessageDto.ReadStreamEvents Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax [Serializable] [ProtoContract(Name = \"ReadStreamEvents\")] public class ReadStreamEvents Constructors ReadStreamEvents(String, Int64, Int32, Boolean, Boolean) Declaration public ReadStreamEvents(string eventStreamId, long fromEventNumber, int maxCount, bool resolveLinkTos, bool requireMaster) Parameters Type Name System.String eventStreamId System.Int64 fromEventNumber System.Int32 maxCount System.Boolean resolveLinkTos System.Boolean requireMaster Fields EventStreamId Declaration [ProtoMember(1, IsRequired = true, Name = \"event_stream_id\", DataFormat = DataFormat.Default)] public readonly string EventStreamId Field Value Type System.String FromEventNumber Declaration [ProtoMember(2, IsRequired = true, Name = \"from_event_number\", DataFormat = DataFormat.TwosComplement)] public readonly long FromEventNumber Field Value Type System.Int64 MaxCount Declaration [ProtoMember(3, IsRequired = true, Name = \"max_count\", DataFormat = DataFormat.TwosComplement)] public readonly int MaxCount Field Value Type System.Int32 RequireMaster Declaration [ProtoMember(5, IsRequired = true, Name = \"require_master\", DataFormat = DataFormat.Default)] public readonly bool RequireMaster Field Value Type System.Boolean ResolveLinkTos Declaration [ProtoMember(4, IsRequired = true, Name = \"resolve_link_tos\", DataFormat = DataFormat.Default)] public readonly bool ResolveLinkTos Field Value Type System.Boolean Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.ReadEventCompleted.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.ReadEventCompleted.html",
    "title": "Class TcpClientMessageDto.ReadEventCompleted | Event Store",
    "keywords": "Class TcpClientMessageDto.ReadEventCompleted Inheritance System.Object TcpClientMessageDto.ReadEventCompleted Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax [Serializable] [ProtoContract(Name = \"ReadEventCompleted\")] public class ReadEventCompleted Constructors ReadEventCompleted(TcpClientMessageDto.ReadEventCompleted.ReadEventResult, TcpClientMessageDto.ResolvedIndexedEvent, String) Declaration public ReadEventCompleted(TcpClientMessageDto.ReadEventCompleted.ReadEventResult result, TcpClientMessageDto.ResolvedIndexedEvent event, string error) Parameters Type Name TcpClientMessageDto.ReadEventCompleted.ReadEventResult result TcpClientMessageDto.ResolvedIndexedEvent event System.String error Fields Error Declaration [ProtoMember(3, IsRequired = false, Name = \"error\", DataFormat = DataFormat.Default)] public readonly string Error Field Value Type System.String Event Declaration [ProtoMember(2, IsRequired = true, Name = \"event\", DataFormat = DataFormat.Default)] public readonly TcpClientMessageDto.ResolvedIndexedEvent Event Field Value Type TcpClientMessageDto.ResolvedIndexedEvent Result Declaration [ProtoMember(1, IsRequired = true, Name = \"result\", DataFormat = DataFormat.TwosComplement)] public readonly TcpClientMessageDto.ReadEventCompleted.ReadEventResult Result Field Value Type TcpClientMessageDto.ReadEventCompleted.ReadEventResult Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.ReadEventCompleted.ReadEventResult.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.ReadEventCompleted.ReadEventResult.html",
    "title": "Enum TcpClientMessageDto.ReadEventCompleted.ReadEventResult | Event Store",
    "keywords": "Enum TcpClientMessageDto.ReadEventCompleted.ReadEventResult Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax [ProtoContract(Name = \"ReadEventResult\")] public enum ReadEventResult Fields Name Description AccessDenied Error NoStream NotFound StreamDeleted Success Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<TcpClientMessageDto.ReadEventCompleted.ReadEventResult>() ProtobufExtensions.Serialize<TcpClientMessageDto.ReadEventCompleted.ReadEventResult>() ProtobufExtensions.SerializeToArray<TcpClientMessageDto.ReadEventCompleted.ReadEventResult>()"
  },
  "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.ReadEvent.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.ReadEvent.html",
    "title": "Class TcpClientMessageDto.ReadEvent | Event Store",
    "keywords": "Class TcpClientMessageDto.ReadEvent Inheritance System.Object TcpClientMessageDto.ReadEvent Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax [Serializable] [ProtoContract(Name = \"ReadEvent\")] public class ReadEvent Constructors ReadEvent(String, Int64, Boolean, Boolean) Declaration public ReadEvent(string eventStreamId, long eventNumber, bool resolveLinkTos, bool requireMaster) Parameters Type Name System.String eventStreamId System.Int64 eventNumber System.Boolean resolveLinkTos System.Boolean requireMaster Fields EventNumber Declaration [ProtoMember(2, IsRequired = true, Name = \"event_number\", DataFormat = DataFormat.TwosComplement)] public readonly long EventNumber Field Value Type System.Int64 EventStreamId Declaration [ProtoMember(1, IsRequired = true, Name = \"event_stream_id\", DataFormat = DataFormat.Default)] public readonly string EventStreamId Field Value Type System.String RequireMaster Declaration [ProtoMember(4, IsRequired = true, Name = \"require_master\", DataFormat = DataFormat.Default)] public readonly bool RequireMaster Field Value Type System.Boolean ResolveLinkTos Declaration [ProtoMember(3, IsRequired = true, Name = \"resolve_link_tos\", DataFormat = DataFormat.Default)] public readonly bool ResolveLinkTos Field Value Type System.Boolean Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.EmittedStreamsDeleter.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.EmittedStreamsDeleter.html",
    "title": "Class EmittedStreamsDeleter | Event Store",
    "keywords": "Class EmittedStreamsDeleter Inheritance System.Object EmittedStreamsDeleter Implements IEmittedStreamsDeleter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class EmittedStreamsDeleter : IEmittedStreamsDeleter Constructors EmittedStreamsDeleter(IODispatcher, String, String) Declaration public EmittedStreamsDeleter(IODispatcher ioDispatcher, string emittedStreamsId, string emittedStreamsCheckpointStreamId) Parameters Type Name IODispatcher ioDispatcher System.String emittedStreamsId System.String emittedStreamsCheckpointStreamId Methods DeleteEmittedStreams(Action) Declaration public void DeleteEmittedStreams(Action onEmittedStreamsDeleted) Parameters Type Name System.Action onEmittedStreamsDeleted Implements IEmittedStreamsDeleter Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Util.MiniWeb.html": {
    "href": "dotnet-api/code/EventStore.Core.Util.MiniWeb.html",
    "title": "Class MiniWeb | Event Store",
    "keywords": "Class MiniWeb Inheritance System.Object MiniWeb Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Util Assembly : EventStore.Core.dll Syntax public class MiniWeb Constructors MiniWeb(String) Declaration public MiniWeb(string localWebRootPath) Parameters Type Name System.String localWebRootPath MiniWeb(String, String) Declaration public MiniWeb(string localWebRootPath, string fileSystemRoot) Parameters Type Name System.String localWebRootPath System.String fileSystemRoot Methods GetWebRootFileSystemDirectory(String) Declaration public static string GetWebRootFileSystemDirectory(string debugPath = null) Parameters Type Name System.String debugPath Returns Type Description System.String RegisterControllerActions(IHttpService) Declaration public void RegisterControllerActions(IHttpService service) Parameters Type Name IHttpService service Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Util.MD5Hash.html": {
    "href": "dotnet-api/code/EventStore.Core.Util.MD5Hash.html",
    "title": "Class MD5Hash | Event Store",
    "keywords": "Class MD5Hash Inheritance System.Object MD5Hash Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Util Assembly : EventStore.Core.dll Syntax public class MD5Hash Methods ContinuousHashFor(MD5, Stream, Int32, Int64) Declaration public static void ContinuousHashFor(MD5 md5, Stream s, int startPosition, long count) Parameters Type Name System.Security.Cryptography.MD5 md5 System.IO.Stream s System.Int32 startPosition System.Int64 count GetHashFor(Stream) Declaration public static byte[] GetHashFor(Stream s) Parameters Type Name System.IO.Stream s Returns Type Description System.Byte [] GetHashFor(Stream, Int32, Int64) Declaration public static byte[] GetHashFor(Stream s, int startPosition, long count) Parameters Type Name System.IO.Stream s System.Int32 startPosition System.Int64 count Returns Type Description System.Byte [] Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Util.FileUtils.html": {
    "href": "dotnet-api/code/EventStore.Core.Util.FileUtils.html",
    "title": "Class FileUtils | Event Store",
    "keywords": "Class FileUtils Inheritance System.Object FileUtils Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Util Assembly : EventStore.Core.dll Syntax public static class FileUtils Methods DirectoryCopy(String, String, Boolean) Declaration public static void DirectoryCopy(string sourceDirName, string destDirName, bool copySubDirs) Parameters Type Name System.String sourceDirName System.String destDirName System.Boolean copySubDirs"
  },
  "dotnet-api/code/EventStore.Core.Util.DefaultFiles.html": {
    "href": "dotnet-api/code/EventStore.Core.Util.DefaultFiles.html",
    "title": "Class DefaultFiles | Event Store",
    "keywords": "Class DefaultFiles Inheritance System.Object DefaultFiles Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Util Assembly : EventStore.Core.dll Syntax public class DefaultFiles Fields DefaultConfigFile Declaration public static readonly string DefaultConfigFile Field Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.TransactionLog.html": {
    "href": "dotnet-api/code/EventStore.Core.TransactionLog.html",
    "title": "Namespace EventStore.Core.TransactionLog | Event Store",
    "keywords": "Namespace EventStore.Core.TransactionLog Structs RecordReadResult RecordWriteResult SeqReadResult TFReaderLease Interfaces ITransactionFileChaser ITransactionFileReader ITransactionFileWriter"
  },
  "dotnet-api/code/EventStore.Core.TransactionLog.Unbuffered.html": {
    "href": "dotnet-api/code/EventStore.Core.TransactionLog.Unbuffered.html",
    "title": "Namespace EventStore.Core.TransactionLog.Unbuffered | Event Store",
    "keywords": "Namespace EventStore.Core.TransactionLog.Unbuffered Classes NativeFileUnix NativeFileWindows UnbufferedFileStream Interfaces INativeFile Enums ExtendedFileOptions"
  },
  "dotnet-api/code/EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.html": {
    "href": "dotnet-api/code/EventStore.Core.TransactionLog.Unbuffered.UnbufferedFileStream.html",
    "title": "Class UnbufferedFileStream | Event Store",
    "keywords": "Class UnbufferedFileStream Inheritance System.Object System.MarshalByRefObject System.IO.Stream UnbufferedFileStream Implements System.IDisposable Inherited Members System.IO.Stream.Null System.IO.Stream.BeginRead(System.Byte[], System.Int32, System.Int32, System.AsyncCallback, System.Object) System.IO.Stream.BeginWrite(System.Byte[], System.Int32, System.Int32, System.AsyncCallback, System.Object) System.IO.Stream.Close() System.IO.Stream.CopyTo(System.IO.Stream) System.IO.Stream.CopyTo(System.IO.Stream, System.Int32) System.IO.Stream.CopyToAsync(System.IO.Stream) System.IO.Stream.CopyToAsync(System.IO.Stream, System.Int32) System.IO.Stream.CopyToAsync(System.IO.Stream, System.Int32, System.Threading.CancellationToken) System.IO.Stream.CreateWaitHandle() System.IO.Stream.Dispose() System.IO.Stream.EndRead(System.IAsyncResult) System.IO.Stream.EndWrite(System.IAsyncResult) System.IO.Stream.FlushAsync() System.IO.Stream.FlushAsync(System.Threading.CancellationToken) System.IO.Stream.ObjectInvariant() System.IO.Stream.ReadAsync(System.Byte[], System.Int32, System.Int32) System.IO.Stream.ReadAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken) System.IO.Stream.ReadByte() System.IO.Stream.Synchronized(System.IO.Stream) System.IO.Stream.WriteAsync(System.Byte[], System.Int32, System.Int32) System.IO.Stream.WriteAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken) System.IO.Stream.WriteByte(System.Byte) System.IO.Stream.CanTimeout System.IO.Stream.ReadTimeout System.IO.Stream.WriteTimeout System.MarshalByRefObject.CreateObjRef(System.Type) System.MarshalByRefObject.GetLifetimeService() System.MarshalByRefObject.InitializeLifetimeService() System.MarshalByRefObject.MemberwiseClone(System.Boolean) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.TransactionLog.Unbuffered Assembly : EventStore.Core.dll Syntax public class UnbufferedFileStream : Stream, IDisposable Properties CanRead Declaration public override bool CanRead { get; } Property Value Type System.Boolean Overrides System.IO.Stream.CanRead CanSeek Declaration public override bool CanSeek { get; } Property Value Type System.Boolean Overrides System.IO.Stream.CanSeek CanWrite Declaration public override bool CanWrite { get; } Property Value Type System.Boolean Overrides System.IO.Stream.CanWrite Length Declaration public override long Length { get; } Property Value Type System.Int64 Overrides System.IO.Stream.Length Position Declaration public override long Position { get; set; } Property Value Type System.Int64 Overrides System.IO.Stream.Position Methods Create(String, FileMode, FileAccess, FileShare, Boolean, Int32, Int32, Boolean, UInt32) Declaration public static UnbufferedFileStream Create(string path, FileMode mode, FileAccess acc, FileShare share, bool sequential, int internalWriteBufferSize, int internalReadBufferSize, bool writeThrough, uint minBlockSize) Parameters Type Name System.String path System.IO.FileMode mode System.IO.FileAccess acc System.IO.FileShare share System.Boolean sequential System.Int32 internalWriteBufferSize System.Int32 internalReadBufferSize System.Boolean writeThrough System.UInt32 minBlockSize Returns Type Description UnbufferedFileStream Dispose(Boolean) Declaration protected override void Dispose(bool disposing) Parameters Type Name System.Boolean disposing Overrides System.IO.Stream.Dispose(System.Boolean) Flush() Declaration public override void Flush() Overrides System.IO.Stream.Flush() Read(Byte[], Int32, Int32) Declaration public override int Read(byte[] buffer, int offset, int count) Parameters Type Name System.Byte [] buffer System.Int32 offset System.Int32 count Returns Type Description System.Int32 Overrides System.IO.Stream.Read(System.Byte[], System.Int32, System.Int32) Seek(Int64, SeekOrigin) Declaration public override long Seek(long offset, SeekOrigin origin) Parameters Type Name System.Int64 offset System.IO.SeekOrigin origin Returns Type Description System.Int64 Overrides System.IO.Stream.Seek(System.Int64, System.IO.SeekOrigin) SetLength(Int64) Declaration public override void SetLength(long value) Parameters Type Name System.Int64 value Overrides System.IO.Stream.SetLength(System.Int64) Write(Byte[], Int32, Int32) Declaration public override void Write(byte[] buffer, int offset, int count) Parameters Type Name System.Byte [] buffer System.Int32 offset System.Int32 count Overrides System.IO.Stream.Write(System.Byte[], System.Int32, System.Int32) Implements System.IDisposable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.TransactionLog.Unbuffered.NativeFileWindows.html": {
    "href": "dotnet-api/code/EventStore.Core.TransactionLog.Unbuffered.NativeFileWindows.html",
    "title": "Class NativeFileWindows | Event Store",
    "keywords": "Class NativeFileWindows Inheritance System.Object NativeFileWindows Implements INativeFile Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.TransactionLog.Unbuffered Assembly : EventStore.Native.dll Syntax public class NativeFileWindows : INativeFile Methods Create(String, FileAccess, FileShare, FileMode, Int32) Declaration public SafeFileHandle Create(string path, FileAccess acc, FileShare readWrite, FileMode mode, int flags) Parameters Type Name System.String path System.IO.FileAccess acc System.IO.FileShare readWrite System.IO.FileMode mode System.Int32 flags Returns Type Description Microsoft.Win32.SafeHandles.SafeFileHandle CreateUnbufferedRW(String, FileAccess, FileShare, FileMode, Boolean) Declaration public SafeFileHandle CreateUnbufferedRW(string path, FileAccess acc, FileShare share, FileMode mode, bool writeThrough) Parameters Type Name System.String path System.IO.FileAccess acc System.IO.FileShare share System.IO.FileMode mode System.Boolean writeThrough Returns Type Description Microsoft.Win32.SafeHandles.SafeFileHandle GetDriveSectorSize(String) Declaration public uint GetDriveSectorSize(string path) Parameters Type Name System.String path Returns Type Description System.UInt32 GetFileSize(SafeFileHandle) Declaration public long GetFileSize(SafeFileHandle handle) Parameters Type Name Microsoft.Win32.SafeHandles.SafeFileHandle handle Returns Type Description System.Int64 GetPageSize(String) Declaration public long GetPageSize(string path) Parameters Type Name System.String path Returns Type Description System.Int64 Read(SafeFileHandle, Byte*, Int32, Int32) Declaration public int Read(SafeFileHandle handle, byte *buffer, int offset, int count) Parameters Type Name Microsoft.Win32.SafeHandles.SafeFileHandle handle System.Byte * buffer System.Int32 offset System.Int32 count Returns Type Description System.Int32 Seek(SafeFileHandle, Int64, SeekOrigin) Declaration public void Seek(SafeFileHandle handle, long position, SeekOrigin origin) Parameters Type Name Microsoft.Win32.SafeHandles.SafeFileHandle handle System.Int64 position System.IO.SeekOrigin origin SetFileSize(SafeFileHandle, Int64) Declaration public void SetFileSize(SafeFileHandle handle, long count) Parameters Type Name Microsoft.Win32.SafeHandles.SafeFileHandle handle System.Int64 count Write(SafeFileHandle, Byte*, UInt32, ref Int32) Declaration public void Write(SafeFileHandle handle, byte *buffer, uint count, ref int written) Parameters Type Name Microsoft.Win32.SafeHandles.SafeFileHandle handle System.Byte * buffer System.UInt32 count System.Int32 written Implements INativeFile Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.TransactionLog.Unbuffered.NativeFileUnix.html": {
    "href": "dotnet-api/code/EventStore.Core.TransactionLog.Unbuffered.NativeFileUnix.html",
    "title": "Class NativeFileUnix | Event Store",
    "keywords": "Class NativeFileUnix Inheritance System.Object NativeFileUnix Implements INativeFile Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.TransactionLog.Unbuffered Assembly : EventStore.Native.dll Syntax public class NativeFileUnix : INativeFile Methods Create(String, FileAccess, FileShare, FileMode, Int32) Declaration public SafeFileHandle Create(string path, FileAccess acc, FileShare readWrite, FileMode mode, int flags) Parameters Type Name System.String path System.IO.FileAccess acc System.IO.FileShare readWrite System.IO.FileMode mode System.Int32 flags Returns Type Description Microsoft.Win32.SafeHandles.SafeFileHandle CreateUnbufferedRW(String, FileAccess, FileShare, FileMode, Boolean) Declaration public SafeFileHandle CreateUnbufferedRW(string path, FileAccess acc, FileShare share, FileMode mode, bool writeThrough) Parameters Type Name System.String path System.IO.FileAccess acc System.IO.FileShare share System.IO.FileMode mode System.Boolean writeThrough Returns Type Description Microsoft.Win32.SafeHandles.SafeFileHandle GetDriveSectorSize(String) Declaration public uint GetDriveSectorSize(string path) Parameters Type Name System.String path Returns Type Description System.UInt32 GetFileSize(SafeFileHandle) Declaration public long GetFileSize(SafeFileHandle handle) Parameters Type Name Microsoft.Win32.SafeHandles.SafeFileHandle handle Returns Type Description System.Int64 GetPageSize(String) Declaration public long GetPageSize(string path) Parameters Type Name System.String path Returns Type Description System.Int64 Read(SafeFileHandle, Byte*, Int32, Int32) Declaration public int Read(SafeFileHandle handle, byte *buffer, int offset, int count) Parameters Type Name Microsoft.Win32.SafeHandles.SafeFileHandle handle System.Byte * buffer System.Int32 offset System.Int32 count Returns Type Description System.Int32 Seek(SafeFileHandle, Int64, SeekOrigin) Declaration public void Seek(SafeFileHandle handle, long position, SeekOrigin origin) Parameters Type Name Microsoft.Win32.SafeHandles.SafeFileHandle handle System.Int64 position System.IO.SeekOrigin origin SetFileSize(SafeFileHandle, Int64) Declaration public void SetFileSize(SafeFileHandle handle, long count) Parameters Type Name Microsoft.Win32.SafeHandles.SafeFileHandle handle System.Int64 count Write(SafeFileHandle, Byte*, UInt32, ref Int32) Declaration public void Write(SafeFileHandle handle, byte *buffer, uint count, ref int written) Parameters Type Name Microsoft.Win32.SafeHandles.SafeFileHandle handle System.Byte * buffer System.UInt32 count System.Int32 written Implements INativeFile Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.TransactionLog.Unbuffered.INativeFile.html": {
    "href": "dotnet-api/code/EventStore.Core.TransactionLog.Unbuffered.INativeFile.html",
    "title": "Interface INativeFile | Event Store",
    "keywords": "Interface INativeFile Namespace : EventStore.Core.TransactionLog.Unbuffered Assembly : EventStore.Native.dll Syntax public interface INativeFile Methods Create(String, FileAccess, FileShare, FileMode, Int32) Declaration SafeFileHandle Create(string path, FileAccess acc, FileShare readWrite, FileMode mode, int flags) Parameters Type Name System.String path System.IO.FileAccess acc System.IO.FileShare readWrite System.IO.FileMode mode System.Int32 flags Returns Type Description Microsoft.Win32.SafeHandles.SafeFileHandle CreateUnbufferedRW(String, FileAccess, FileShare, FileMode, Boolean) Declaration SafeFileHandle CreateUnbufferedRW(string path, FileAccess acc, FileShare share, FileMode mode, bool writeThrough) Parameters Type Name System.String path System.IO.FileAccess acc System.IO.FileShare share System.IO.FileMode mode System.Boolean writeThrough Returns Type Description Microsoft.Win32.SafeHandles.SafeFileHandle GetDriveSectorSize(String) Declaration uint GetDriveSectorSize(string path) Parameters Type Name System.String path Returns Type Description System.UInt32 GetFileSize(SafeFileHandle) Declaration long GetFileSize(SafeFileHandle handle) Parameters Type Name Microsoft.Win32.SafeHandles.SafeFileHandle handle Returns Type Description System.Int64 GetPageSize(String) Declaration long GetPageSize(string path) Parameters Type Name System.String path Returns Type Description System.Int64 Read(SafeFileHandle, Byte*, Int32, Int32) Declaration int Read(SafeFileHandle handle, byte *buffer, int offset, int count) Parameters Type Name Microsoft.Win32.SafeHandles.SafeFileHandle handle System.Byte * buffer System.Int32 offset System.Int32 count Returns Type Description System.Int32 Seek(SafeFileHandle, Int64, SeekOrigin) Declaration void Seek(SafeFileHandle handle, long position, SeekOrigin origin) Parameters Type Name Microsoft.Win32.SafeHandles.SafeFileHandle handle System.Int64 position System.IO.SeekOrigin origin SetFileSize(SafeFileHandle, Int64) Declaration void SetFileSize(SafeFileHandle handle, long count) Parameters Type Name Microsoft.Win32.SafeHandles.SafeFileHandle handle System.Int64 count Write(SafeFileHandle, Byte*, UInt32, ref Int32) Declaration void Write(SafeFileHandle handle, byte *buffer, uint count, ref int written) Parameters Type Name Microsoft.Win32.SafeHandles.SafeFileHandle handle System.Byte * buffer System.UInt32 count System.Int32 written Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Monitoring.StatsCollectorEnvelope.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Monitoring.StatsCollectorEnvelope.html",
    "title": "Class StatsCollectorEnvelope | Event Store",
    "keywords": "Class StatsCollectorEnvelope Inheritance System.Object StatsCollectorEnvelope Implements IEnvelope Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Monitoring Assembly : EventStore.Core.dll Syntax public class StatsCollectorEnvelope : IEnvelope Constructors StatsCollectorEnvelope(StatsContainer) Declaration public StatsCollectorEnvelope(StatsContainer statsContainer) Parameters Type Name StatsContainer statsContainer Methods ReplyWith<T>(T) Declaration public void ReplyWith<T>(T message) where T : Message Parameters Type Name T message Type Parameters Name Description T Implements IEnvelope Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Monitoring.Stats.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Monitoring.Stats.html",
    "title": "Namespace EventStore.Core.Services.Monitoring.Stats | Event Store",
    "keywords": "Namespace EventStore.Core.Services.Monitoring.Stats Classes DiskIo EsDriveInfo GcStats QueueStats StatMetadata StatsContainer"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.html",
    "title": "Class ProjectionCoreServiceMessage | Event Store",
    "keywords": "Class ProjectionCoreServiceMessage Inheritance System.Object ProjectionCoreServiceMessage Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public static class ProjectionCoreServiceMessage"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStopped.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStopped.html",
    "title": "Class ProjectionCoreServiceMessage.SubComponentStopped | Event Store",
    "keywords": "Class ProjectionCoreServiceMessage.SubComponentStopped Inheritance System.Object Message ProjectionCoreServiceMessage.SubComponentStopped Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class SubComponentStopped : Message Constructors SubComponentStopped(String) Declaration public SubComponentStopped(string subComponent) Parameters Type Name System.String subComponent Fields SubComponent Declaration public readonly string SubComponent Field Value Type System.String Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStarted.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.SubComponentStarted.html",
    "title": "Class ProjectionCoreServiceMessage.SubComponentStarted | Event Store",
    "keywords": "Class ProjectionCoreServiceMessage.SubComponentStarted Inheritance System.Object Message ProjectionCoreServiceMessage.SubComponentStarted Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class SubComponentStarted : Message Constructors SubComponentStarted(String) Declaration public SubComponentStarted(string subComponent) Parameters Type Name System.String subComponent Fields SubComponent Declaration public readonly string SubComponent Field Value Type System.String Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Cluster.MemberInfo.html": {
    "href": "dotnet-api/code/EventStore.Core.Cluster.MemberInfo.html",
    "title": "Class MemberInfo | Event Store",
    "keywords": "Class MemberInfo Inheritance System.Object MemberInfo Implements System.IEquatable < MemberInfo > Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Cluster Assembly : EventStore.Core.dll Syntax public class MemberInfo : IEquatable<MemberInfo> Fields ChaserCheckpoint Declaration public readonly long ChaserCheckpoint Field Value Type System.Int64 EpochId Declaration public readonly Guid EpochId Field Value Type System.Guid EpochNumber Declaration public readonly int EpochNumber Field Value Type System.Int32 EpochPosition Declaration public readonly long EpochPosition Field Value Type System.Int64 ExternalHttpEndPoint Declaration public readonly IPEndPoint ExternalHttpEndPoint Field Value Type System.Net.IPEndPoint ExternalSecureTcpEndPoint Declaration public readonly IPEndPoint ExternalSecureTcpEndPoint Field Value Type System.Net.IPEndPoint ExternalTcpEndPoint Declaration public readonly IPEndPoint ExternalTcpEndPoint Field Value Type System.Net.IPEndPoint InstanceId Declaration public readonly Guid InstanceId Field Value Type System.Guid InternalHttpEndPoint Declaration public readonly IPEndPoint InternalHttpEndPoint Field Value Type System.Net.IPEndPoint InternalSecureTcpEndPoint Declaration public readonly IPEndPoint InternalSecureTcpEndPoint Field Value Type System.Net.IPEndPoint InternalTcpEndPoint Declaration public readonly IPEndPoint InternalTcpEndPoint Field Value Type System.Net.IPEndPoint IsAlive Declaration public readonly bool IsAlive Field Value Type System.Boolean LastCommitPosition Declaration public readonly long LastCommitPosition Field Value Type System.Int64 NodePriority Declaration public readonly int NodePriority Field Value Type System.Int32 State Declaration public readonly VNodeState State Field Value Type VNodeState TimeStamp Declaration public readonly DateTime TimeStamp Field Value Type System.DateTime WriterCheckpoint Declaration public readonly long WriterCheckpoint Field Value Type System.Int64 Methods Equals(MemberInfo) Declaration public bool Equals(MemberInfo other) Parameters Type Name MemberInfo other Returns Type Description System.Boolean Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) ForManager(Guid, DateTime, Boolean, IPEndPoint, IPEndPoint) Declaration public static MemberInfo ForManager(Guid instanceId, DateTime timeStamp, bool isAlive, IPEndPoint internalHttpEndPoint, IPEndPoint externalHttpEndPoint) Parameters Type Name System.Guid instanceId System.DateTime timeStamp System.Boolean isAlive System.Net.IPEndPoint internalHttpEndPoint System.Net.IPEndPoint externalHttpEndPoint Returns Type Description MemberInfo ForVNode(Guid, DateTime, VNodeState, Boolean, IPEndPoint, IPEndPoint, IPEndPoint, IPEndPoint, IPEndPoint, IPEndPoint, Int64, Int64, Int64, Int64, Int32, Guid, Int32) Declaration public static MemberInfo ForVNode(Guid instanceId, DateTime timeStamp, VNodeState state, bool isAlive, IPEndPoint internalTcpEndPoint, IPEndPoint internalSecureTcpEndPoint, IPEndPoint externalTcpEndPoint, IPEndPoint externalSecureTcpEndPoint, IPEndPoint internalHttpEndPoint, IPEndPoint externalHttpEndPoint, long lastCommitPosition, long writerCheckpoint, long chaserCheckpoint, long epochPosition, int epochNumber, Guid epochId, int nodePriority) Parameters Type Name System.Guid instanceId System.DateTime timeStamp VNodeState state System.Boolean isAlive System.Net.IPEndPoint internalTcpEndPoint System.Net.IPEndPoint internalSecureTcpEndPoint System.Net.IPEndPoint externalTcpEndPoint System.Net.IPEndPoint externalSecureTcpEndPoint System.Net.IPEndPoint internalHttpEndPoint System.Net.IPEndPoint externalHttpEndPoint System.Int64 lastCommitPosition System.Int64 writerCheckpoint System.Int64 chaserCheckpoint System.Int64 epochPosition System.Int32 epochNumber System.Guid epochId System.Int32 nodePriority Returns Type Description MemberInfo GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() Is(IPEndPoint) Declaration public bool Is(IPEndPoint endPoint) Parameters Type Name System.Net.IPEndPoint endPoint Returns Type Description System.Boolean ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Updated(Nullable<VNodeState>, Nullable<Boolean>, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, EpochRecord) Declaration public MemberInfo Updated(VNodeState? state = default(VNodeState? ), bool? isAlive = default(bool? ), long? lastCommitPosition = default(long? ), long? writerCheckpoint = default(long? ), long? chaserCheckpoint = default(long? ), EpochRecord epoch = null) Parameters Type Name System.Nullable < VNodeState > state System.Nullable < System.Boolean > isAlive System.Nullable < System.Int64 > lastCommitPosition System.Nullable < System.Int64 > writerCheckpoint System.Nullable < System.Int64 > chaserCheckpoint EpochRecord epoch Returns Type Description MemberInfo Implements System.IEquatable<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Bus.QueuedHandlerAutoReset.html": {
    "href": "dotnet-api/code/EventStore.Core.Bus.QueuedHandlerAutoReset.html",
    "title": "Class QueuedHandlerAutoReset | Event Store",
    "keywords": "Class QueuedHandlerAutoReset Lightweight in-memory queue with a separate thread in which it passes messages to the consumer. It also tracks statistics about the message processing to help in identifying bottlenecks Inheritance System.Object QueuedHandlerAutoReset Implements IQueuedHandler IHandle < Message > IPublisher IMonitoredQueue IThreadSafePublisher Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Bus Assembly : EventStore.Core.dll Syntax public class QueuedHandlerAutoReset : IQueuedHandler, IHandle<Message>, IPublisher, IMonitoredQueue, IThreadSafePublisher Constructors QueuedHandlerAutoReset(IHandle<Message>, String, Boolean, Nullable<TimeSpan>, Nullable<TimeSpan>, String) Declaration public QueuedHandlerAutoReset(IHandle<Message> consumer, string name, bool watchSlowMsg = true, TimeSpan? slowMsgThreshold = default(TimeSpan? ), TimeSpan? threadStopWaitTimeout = default(TimeSpan? ), string groupName = null) Parameters Type Name IHandle < Message > consumer System.String name System.Boolean watchSlowMsg System.Nullable < System.TimeSpan > slowMsgThreshold System.Nullable < System.TimeSpan > threadStopWaitTimeout System.String groupName Properties MessageCount Declaration public int MessageCount { get; } Property Value Type System.Int32 Name Declaration public string Name { get; } Property Value Type System.String Methods GetStatistics() Declaration public QueueStats GetStatistics() Returns Type Description QueueStats Handle(Message) Declaration public void Handle(Message message) Parameters Type Name Message message Publish(Message) Declaration public void Publish(Message message) Parameters Type Name Message message RequestStop() Declaration public void RequestStop() Start() Declaration public Task Start() Returns Type Description System.Threading.Tasks.Task Stop() Declaration public void Stop() Implements IQueuedHandler IHandle<T> IPublisher IMonitoredQueue IThreadSafePublisher Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) HandleExtensions.WidenFrom<TInput, TOutput>(IHandle<TOutput>) HandleExtensions.NarrowTo<TInput, TOutput>(IHandle<TOutput>) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Bus.QueuedHandler.html": {
    "href": "dotnet-api/code/EventStore.Core.Bus.QueuedHandler.html",
    "title": "Class QueuedHandler | Event Store",
    "keywords": "Class QueuedHandler Inheritance System.Object QueuedHandlerMRES QueuedHandler Implements IMonitoredQueue IThreadSafePublisher IQueuedHandler IHandle < Message > IPublisher Inherited Members QueuedHandlerMRES.MessageCount QueuedHandlerMRES.Name QueuedHandlerMRES.Start() QueuedHandlerMRES.Stop() QueuedHandlerMRES.RequestStop() QueuedHandlerMRES.Publish(Message) QueuedHandlerMRES.Handle(Message) QueuedHandlerMRES.GetStatistics() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Bus Assembly : EventStore.Core.dll Syntax public class QueuedHandler : QueuedHandlerMRES, IMonitoredQueue, IThreadSafePublisher, IQueuedHandler, IHandle<Message>, IPublisher Fields DefaultStopWaitTimeout Declaration public static readonly TimeSpan DefaultStopWaitTimeout Field Value Type System.TimeSpan VerySlowMsgThreshold Declaration public static readonly TimeSpan VerySlowMsgThreshold Field Value Type System.TimeSpan Methods CreateQueuedHandler(IHandle<Message>, String, Boolean, Nullable<TimeSpan>, Nullable<TimeSpan>, String) Declaration public static IQueuedHandler CreateQueuedHandler(IHandle<Message> consumer, string name, bool watchSlowMsg = true, TimeSpan? slowMsgThreshold = default(TimeSpan? ), TimeSpan? threadStopWaitTimeout = default(TimeSpan? ), string groupName = null) Parameters Type Name IHandle < Message > consumer System.String name System.Boolean watchSlowMsg System.Nullable < System.TimeSpan > slowMsgThreshold System.Nullable < System.TimeSpan > threadStopWaitTimeout System.String groupName Returns Type Description IQueuedHandler Implements IMonitoredQueue IThreadSafePublisher IQueuedHandler IHandle<T> IPublisher Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) HandleExtensions.WidenFrom<TInput, TOutput>(IHandle<TOutput>) HandleExtensions.NarrowTo<TInput, TOutput>(IHandle<TOutput>) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Bus.QueueStatsCollector.html": {
    "href": "dotnet-api/code/EventStore.Core.Bus.QueueStatsCollector.html",
    "title": "Class QueueStatsCollector | Event Store",
    "keywords": "Class QueueStatsCollector Inheritance System.Object QueueStatsCollector Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Bus Assembly : EventStore.Core.dll Syntax public class QueueStatsCollector Constructors QueueStatsCollector(String, String) Declaration public QueueStatsCollector(string name, string groupName = null) Parameters Type Name System.String name System.String groupName Fields GroupName Declaration public readonly string GroupName Field Value Type System.String Name Declaration public readonly string Name Field Value Type System.String Properties InProgressMessage Declaration public Type InProgressMessage { get; } Property Value Type System.Type Methods Dequeued(Message) Declaration [Conditional(\"DEBUG\")] public void Dequeued(Message msg) Parameters Type Name Message msg Enqueued() Declaration [Conditional(\"DEBUG\")] public void Enqueued() EnterBusy() Declaration public void EnterBusy() EnterIdle() Declaration public void EnterIdle() GetStatistics(Int32) Declaration public QueueStats GetStatistics(int currentQueueLength) Parameters Type Name System.Int32 currentQueueLength Returns Type Description QueueStats ProcessingEnded(Int32) Declaration public void ProcessingEnded(int itemsProcessed) Parameters Type Name System.Int32 itemsProcessed ProcessingStarted(Type, Int32) Declaration public void ProcessingStarted(Type msgType, int queueLength) Parameters Type Name System.Type msgType System.Int32 queueLength ProcessingStarted<T>(Int32) Declaration public void ProcessingStarted<T>(int queueLength) Parameters Type Name System.Int32 queueLength Type Parameters Name Description T Start() Declaration public void Start() Stop() Declaration public void Stop() WaitIdle(Boolean, Boolean, Int32) Declaration [Conditional(\"DEBUG\")] public static void WaitIdle(bool waitForCheckpoints = true, bool waitForNonEmptyTf = false, int multiplier = 1) Parameters Type Name System.Boolean waitForCheckpoints System.Boolean waitForNonEmptyTf System.Int32 multiplier Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Rags.ConsoleCharacter.html": {
    "href": "dotnet-api/code/EventStore.Rags.ConsoleCharacter.html",
    "title": "Struct ConsoleCharacter | Event Store",
    "keywords": "Struct ConsoleCharacter A wrapper for char that encapsulates foreground and background colors. Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Rags Assembly : EventStore.Rags.dll Syntax public struct ConsoleCharacter Constructors ConsoleCharacter(Char, Nullable<ConsoleColor>, Nullable<ConsoleColor>) Create a new ConsoleCharacter given a char value and optionally set the foreground or background coor. Declaration public ConsoleCharacter(char value, ConsoleColor? foregroundColor = default(ConsoleColor? ), ConsoleColor? backgroundColor = default(ConsoleColor? )) Parameters Type Name System.Char value System.Nullable < System.ConsoleColor > foregroundColor System.Nullable < System.ConsoleColor > backgroundColor Properties BackgroundColor The console background color to use when printing this character. Declaration public ConsoleColor BackgroundColor { get; set; } Property Value Type System.ConsoleColor ForegroundColor The console foreground color to use when printing this character. Declaration public ConsoleColor ForegroundColor { get; set; } Property Value Type System.ConsoleColor Value The value of the character. Declaration public char Value { get; set; } Property Value Type System.Char Methods Equals(Object) ConsoleCharacters can be compared to other ConsoleCharacter instances or char values. Declaration public override bool Equals(object obj) Parameters Type Name System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) GetHashCode() Override of GetHashcode that returns the internal char's hashcode. Declaration public override int GetHashCode() Returns Type Description System.Int32 the internal char's hashcode. Overrides System.ValueType.GetHashCode() ToString() Gets the string representation of the character. Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Write() Write this formatted character to the console. Declaration public void Write() Operators Equality(ConsoleCharacter, ConsoleCharacter) Operator overload for Equals. Declaration public static bool operator ==(ConsoleCharacter a, ConsoleCharacter b) Parameters Type Name ConsoleCharacter a ConsoleCharacter b Returns Type Description System.Boolean Equality(ConsoleCharacter, Char) Operator overload for Equals. Declaration public static bool operator ==(ConsoleCharacter a, char b) Parameters Type Name ConsoleCharacter a System.Char b Returns Type Description System.Boolean Inequality(ConsoleCharacter, ConsoleCharacter) Operator overload for !Equals. Declaration public static bool operator !=(ConsoleCharacter a, ConsoleCharacter b) Parameters Type Name ConsoleCharacter a ConsoleCharacter b Returns Type Description System.Boolean Inequality(ConsoleCharacter, Char) Operator overload for !Equals. Declaration public static bool operator !=(ConsoleCharacter a, char b) Parameters Type Name ConsoleCharacter a System.Char b Returns Type Description System.Boolean Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) EnumExtensions.EnumValueName<T>(T) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Rags.CommandLine.html": {
    "href": "dotnet-api/code/EventStore.Rags.CommandLine.html",
    "title": "Class CommandLine | Event Store",
    "keywords": "Class CommandLine Inheritance System.Object CommandLine Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Rags Assembly : EventStore.Rags.dll Syntax public class CommandLine Methods Parse<T>(String[]) Declaration public static IEnumerable<OptionSource> Parse<T>(string[] args) Parameters Type Name System.String [] args Returns Type Description System.Collections.Generic.IEnumerable < OptionSource > Type Parameters Name Description T Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.MultiStreamMultiOutputCheckpointManager.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.MultiStreamMultiOutputCheckpointManager.html",
    "title": "Class MultiStreamMultiOutputCheckpointManager | Event Store",
    "keywords": "Class MultiStreamMultiOutputCheckpointManager Inheritance System.Object CoreProjectionCheckpointManager DefaultCheckpointManager MultiStreamMultiOutputCheckpointManager Implements ICoreProjectionCheckpointManager IEmittedEventWriter IHandle < CoreProjectionCheckpointWriterMessage.CheckpointWritten > IHandle < CoreProjectionCheckpointWriterMessage.RestartRequested > IEmittedStreamContainer IProjectionCheckpointManager IHandle < CoreProjectionProcessingMessage.ReadyForCheckpoint > IHandle < CoreProjectionProcessingMessage.RestartRequested > IHandle < CoreProjectionProcessingMessage.Failed > IHandle < CoreProjectionProcessingMessage.EmittedStreamAwaiting > IHandle < CoreProjectionProcessingMessage.EmittedStreamWriteCompleted > Inherited Members DefaultCheckpointManager._projectionVersion DefaultCheckpointManager._ioDispatcher DefaultCheckpointManager.BeginWriteCheckpoint(CheckpointTag, String) DefaultCheckpointManager.PartitionCompleted(String) DefaultCheckpointManager.BeginLoadPartitionStateAt(String, CheckpointTag, Action<PartitionState>) DefaultCheckpointManager.CreateProjectionCheckpoint(CheckpointTag) DefaultCheckpointManager.Handle(CoreProjectionCheckpointWriterMessage.CheckpointWritten) DefaultCheckpointManager.Handle(CoreProjectionCheckpointWriterMessage.RestartRequested) DefaultCheckpointManager.CapturePartitionStateUpdated(String, PartitionState, PartitionState) DefaultCheckpointManager.EmitPartitionCheckpoints() CoreProjectionCheckpointManager._namingBuilder CoreProjectionCheckpointManager._projectionConfig CoreProjectionCheckpointManager._logger CoreProjectionCheckpointManager._publisher CoreProjectionCheckpointManager._currentCheckpoint CoreProjectionCheckpointManager._stopping CoreProjectionCheckpointManager._stopped CoreProjectionCheckpointManager.Stopping() CoreProjectionCheckpointManager.Stopped() CoreProjectionCheckpointManager.StateUpdated(String, PartitionState, PartitionState) CoreProjectionCheckpointManager.EventProcessed(CheckpointTag, Single) CoreProjectionCheckpointManager.EventsEmitted(EmittedEventEnvelope[], Guid, String) CoreProjectionCheckpointManager.CheckpointSuggested(CheckpointTag, Single) CoreProjectionCheckpointManager.Progress(Single) CoreProjectionCheckpointManager.LastProcessedEventPosition CoreProjectionCheckpointManager.Handle(CoreProjectionProcessingMessage.ReadyForCheckpoint) CoreProjectionCheckpointManager.Handle(CoreProjectionProcessingMessage.RestartRequested) CoreProjectionCheckpointManager.Handle(CoreProjectionProcessingMessage.Failed) CoreProjectionCheckpointManager.PrerecordedEventsLoaded(CheckpointTag) CoreProjectionCheckpointManager.EnsureStarted() CoreProjectionCheckpointManager.SendPrerecordedEvent(ResolvedEvent, CheckpointTag, Int64) CoreProjectionCheckpointManager.RequestRestart(String) CoreProjectionCheckpointManager.CheckpointWritten(CheckpointTag) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class MultiStreamMultiOutputCheckpointManager : DefaultCheckpointManager, ICoreProjectionCheckpointManager, IEmittedEventWriter, IHandle<CoreProjectionCheckpointWriterMessage.CheckpointWritten>, IHandle<CoreProjectionCheckpointWriterMessage.RestartRequested>, IEmittedStreamContainer, IProjectionCheckpointManager, IHandle<CoreProjectionProcessingMessage.ReadyForCheckpoint>, IHandle<CoreProjectionProcessingMessage.RestartRequested>, IHandle<CoreProjectionProcessingMessage.Failed>, IHandle<CoreProjectionProcessingMessage.EmittedStreamAwaiting>, IHandle<CoreProjectionProcessingMessage.EmittedStreamWriteCompleted> Constructors MultiStreamMultiOutputCheckpointManager(IPublisher, Guid, ProjectionVersion, IPrincipal, IODispatcher, ProjectionConfig, String, PositionTagger, ProjectionNamesBuilder, Boolean, Boolean, Boolean, CoreProjectionCheckpointWriter) Declaration public MultiStreamMultiOutputCheckpointManager(IPublisher publisher, Guid projectionCorrelationId, ProjectionVersion projectionVersion, IPrincipal runAs, IODispatcher ioDispatcher, ProjectionConfig projectionConfig, string name, PositionTagger positionTagger, ProjectionNamesBuilder namingBuilder, bool usePersistentCheckpoints, bool producesRunningResults, bool definesFold, CoreProjectionCheckpointWriter coreProjectionCheckpointWriter) Parameters Type Name IPublisher publisher System.Guid projectionCorrelationId ProjectionVersion projectionVersion System.Security.Principal.IPrincipal runAs IODispatcher ioDispatcher ProjectionConfig projectionConfig System.String name PositionTagger positionTagger ProjectionNamesBuilder namingBuilder System.Boolean usePersistentCheckpoints System.Boolean producesRunningResults System.Boolean definesFold CoreProjectionCheckpointWriter coreProjectionCheckpointWriter Methods BeginLoadPrerecordedEvents(CheckpointTag) Declaration public override void BeginLoadPrerecordedEvents(CheckpointTag checkpointTag) Parameters Type Name CheckpointTag checkpointTag Overrides CoreProjectionCheckpointManager.BeginLoadPrerecordedEvents(CheckpointTag) GetStatistics(ProjectionStatistics) Declaration public override void GetStatistics(ProjectionStatistics info) Parameters Type Name ProjectionStatistics info Overrides DefaultCheckpointManager.GetStatistics(ProjectionStatistics) Handle(CoreProjectionProcessingMessage.EmittedStreamAwaiting) Declaration public void Handle(CoreProjectionProcessingMessage.EmittedStreamAwaiting message) Parameters Type Name CoreProjectionProcessingMessage.EmittedStreamAwaiting message Handle(CoreProjectionProcessingMessage.EmittedStreamWriteCompleted) Declaration public void Handle(CoreProjectionProcessingMessage.EmittedStreamWriteCompleted message) Parameters Type Name CoreProjectionProcessingMessage.EmittedStreamWriteCompleted message Initialize() Declaration public override void Initialize() Overrides DefaultCheckpointManager.Initialize() RecordEventOrder(ResolvedEvent, CheckpointTag, Action) Declaration public override void RecordEventOrder(ResolvedEvent resolvedEvent, CheckpointTag orderCheckpointTag, Action committed) Parameters Type Name ResolvedEvent resolvedEvent CheckpointTag orderCheckpointTag System.Action committed Overrides DefaultCheckpointManager.RecordEventOrder(ResolvedEvent, CheckpointTag, Action) Start(CheckpointTag, PartitionState) Declaration public override void Start(CheckpointTag checkpointTag, PartitionState rootPartitionState) Parameters Type Name CheckpointTag checkpointTag PartitionState rootPartitionState Overrides CoreProjectionCheckpointManager.Start(CheckpointTag, PartitionState) Implements ICoreProjectionCheckpointManager IEmittedEventWriter IHandle<T> IHandle<T> IEmittedStreamContainer IProjectionCheckpointManager IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.MultiStreamEventReader.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.MultiStreamEventReader.html",
    "title": "Class MultiStreamEventReader | Event Store",
    "keywords": "Class MultiStreamEventReader Inheritance System.Object EventReader MultiStreamEventReader Implements IEventReader System.IDisposable IHandle < ClientMessage.ReadStreamEventsForwardCompleted > IHandle < ProjectionManagementMessage.Internal.ReadTimeout > Inherited Members EventReader.EventReaderCorrelationId EventReader._publisher EventReader._stopOnEof EventReader._disposed EventReader.PauseRequested EventReader.Paused EventReader.ReadAs EventReader.Resume() EventReader.Pause() EventReader.Dispose() EventReader.SendEof() EventReader.SendPartitionEof(String, CheckpointTag) EventReader.SendPartitionDeleted_WhenReadingDataStream(String, Nullable<Int64>, Nullable<TFPos>, Nullable<TFPos>, String, Nullable<Int32>, CheckpointTag) EventReader.SendNotAuthorized() EventReader.GetLastCommitPositionFrom(ClientMessage.ReadStreamEventsForwardCompleted) EventReader.PauseOrContinueProcessing() EventReader.NotifyIfStarting(Int64) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class MultiStreamEventReader : EventReader, IEventReader, IDisposable, IHandle<ClientMessage.ReadStreamEventsForwardCompleted>, IHandle<ProjectionManagementMessage.Internal.ReadTimeout> Constructors MultiStreamEventReader(IODispatcher, IPublisher, Guid, IPrincipal, Int32, String[], Dictionary<String, Int64>, Boolean, ITimeProvider, Boolean, Nullable<Int32>) Declaration public MultiStreamEventReader(IODispatcher ioDispatcher, IPublisher publisher, Guid eventReaderCorrelationId, IPrincipal readAs, int phase, string[] streams, Dictionary<string, long> fromPositions, bool resolveLinkTos, ITimeProvider timeProvider, bool stopOnEof = false, int? stopAfterNEvents = default(int? )) Parameters Type Name IODispatcher ioDispatcher IPublisher publisher System.Guid eventReaderCorrelationId System.Security.Principal.IPrincipal readAs System.Int32 phase System.String [] streams System.Collections.Generic.Dictionary < System.String , System.Int64 > fromPositions System.Boolean resolveLinkTos ITimeProvider timeProvider System.Boolean stopOnEof System.Nullable < System.Int32 > stopAfterNEvents Methods AreEventsRequested() Declaration protected override bool AreEventsRequested() Returns Type Description System.Boolean Overrides EventReader.AreEventsRequested() Handle(ClientMessage.ReadStreamEventsForwardCompleted) Declaration public void Handle(ClientMessage.ReadStreamEventsForwardCompleted message) Parameters Type Name ClientMessage.ReadStreamEventsForwardCompleted message Handle(ProjectionManagementMessage.Internal.ReadTimeout) Declaration public void Handle(ProjectionManagementMessage.Internal.ReadTimeout message) Parameters Type Name ProjectionManagementMessage.Internal.ReadTimeout message RequestEvents() Declaration protected override void RequestEvents() Overrides EventReader.RequestEvents() Implements IEventReader System.IDisposable IHandle<T> IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.TransactionLog.Chunks.TFChunkDbTruncator.html": {
    "href": "dotnet-api/code/EventStore.Core.TransactionLog.Chunks.TFChunkDbTruncator.html",
    "title": "Class TFChunkDbTruncator | Event Store",
    "keywords": "Class TFChunkDbTruncator Inheritance System.Object TFChunkDbTruncator Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.TransactionLog.Chunks Assembly : EventStore.Core.dll Syntax public class TFChunkDbTruncator Constructors TFChunkDbTruncator(TFChunkDbConfig) Declaration public TFChunkDbTruncator(TFChunkDbConfig config) Parameters Type Name TFChunkDbConfig config Methods TruncateDb(Int64) Declaration public void TruncateDb(long truncateChk) Parameters Type Name System.Int64 truncateChk Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig.html": {
    "href": "dotnet-api/code/EventStore.Core.TransactionLog.Chunks.TFChunkDbConfig.html",
    "title": "Class TFChunkDbConfig | Event Store",
    "keywords": "Class TFChunkDbConfig Inheritance System.Object TFChunkDbConfig Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.TransactionLog.Chunks Assembly : EventStore.Core.dll Syntax public class TFChunkDbConfig Constructors TFChunkDbConfig(String, IFileNamingStrategy, Int32, Int64, ICheckpoint, ICheckpoint, ICheckpoint, ICheckpoint, ICheckpoint, Int32, Boolean, Boolean, Boolean, Boolean, Boolean) Declaration public TFChunkDbConfig(string path, IFileNamingStrategy fileNamingStrategy, int chunkSize, long maxChunksCacheSize, ICheckpoint writerCheckpoint, ICheckpoint chaserCheckpoint, ICheckpoint epochCheckpoint, ICheckpoint truncateCheckpoint, ICheckpoint replicationCheckpoint, int initialReaderCount, bool inMemDb = false, bool unbuffered = false, bool writethrough = false, bool optimizeReadSideCache = false, bool reduceFileCachePressure = false) Parameters Type Name System.String path IFileNamingStrategy fileNamingStrategy System.Int32 chunkSize System.Int64 maxChunksCacheSize ICheckpoint writerCheckpoint ICheckpoint chaserCheckpoint ICheckpoint epochCheckpoint ICheckpoint truncateCheckpoint ICheckpoint replicationCheckpoint System.Int32 initialReaderCount System.Boolean inMemDb System.Boolean unbuffered System.Boolean writethrough System.Boolean optimizeReadSideCache System.Boolean reduceFileCachePressure Fields ChaserCheckpoint Declaration public readonly ICheckpoint ChaserCheckpoint Field Value Type ICheckpoint ChunkSize Declaration public readonly int ChunkSize Field Value Type System.Int32 EpochCheckpoint Declaration public readonly ICheckpoint EpochCheckpoint Field Value Type ICheckpoint FileNamingStrategy Declaration public readonly IFileNamingStrategy FileNamingStrategy Field Value Type IFileNamingStrategy InitialReaderCount Declaration public readonly int InitialReaderCount Field Value Type System.Int32 InMemDb Declaration public readonly bool InMemDb Field Value Type System.Boolean MaxChunksCacheSize Declaration public readonly long MaxChunksCacheSize Field Value Type System.Int64 OptimizeReadSideCache Declaration public readonly bool OptimizeReadSideCache Field Value Type System.Boolean Path Declaration public readonly string Path Field Value Type System.String ReduceFileCachePressure Declaration public readonly bool ReduceFileCachePressure Field Value Type System.Boolean ReplicationCheckpoint Declaration public readonly ICheckpoint ReplicationCheckpoint Field Value Type ICheckpoint TruncateCheckpoint Declaration public readonly ICheckpoint TruncateCheckpoint Field Value Type ICheckpoint Unbuffered Declaration public readonly bool Unbuffered Field Value Type System.Boolean WriterCheckpoint Declaration public readonly ICheckpoint WriterCheckpoint Field Value Type ICheckpoint WriteThrough Declaration public readonly bool WriteThrough Field Value Type System.Boolean Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.TransactionLog.Chunks.TFChunkDb.html": {
    "href": "dotnet-api/code/EventStore.Core.TransactionLog.Chunks.TFChunkDb.html",
    "title": "Class TFChunkDb | Event Store",
    "keywords": "Class TFChunkDb Inheritance System.Object TFChunkDb Implements System.IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.TransactionLog.Chunks Assembly : EventStore.Core.dll Syntax public class TFChunkDb : IDisposable Constructors TFChunkDb(TFChunkDbConfig) Declaration public TFChunkDb(TFChunkDbConfig config) Parameters Type Name TFChunkDbConfig config Fields Config Declaration public readonly TFChunkDbConfig Config Field Value Type TFChunkDbConfig Manager Declaration public readonly TFChunkManager Manager Field Value Type TFChunkManager Methods Close() Declaration public void Close() Dispose() Declaration public void Dispose() Open(Boolean, Boolean, Int32) Declaration public void Open(bool verifyHash = true, bool readOnly = false, int threads = 1) Parameters Type Name System.Boolean verifyHash System.Boolean readOnly System.Int32 threads Implements System.IDisposable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Tcp.ProtobufExtensions.html",
    "title": "Class ProtobufExtensions | Event Store",
    "keywords": "Class ProtobufExtensions Inheritance System.Object ProtobufExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Transport.Tcp Assembly : EventStore.Core.dll Syntax public static class ProtobufExtensions Methods Deserialize<T>(ArraySegment<Byte>) Declaration public static T Deserialize<T>(this ArraySegment<byte> data) Parameters Type Name System.ArraySegment < System.Byte > data Returns Type Description T Type Parameters Name Description T Deserialize<T>(Byte[]) Declaration public static T Deserialize<T>(this byte[] data) Parameters Type Name System.Byte [] data Returns Type Description T Type Parameters Name Description T Serialize<T>(T) Declaration public static ArraySegment<byte> Serialize<T>(this T protoContract) Parameters Type Name T protoContract Returns Type Description System.ArraySegment < System.Byte > Type Parameters Name Description T SerializeToArray<T>(T) Declaration public static byte[] SerializeToArray<T>(this T protoContract) Parameters Type Name T protoContract Returns Type Description System.Byte [] Type Parameters Name Description T"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Tcp.InternalTcpDispatcher.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Tcp.InternalTcpDispatcher.html",
    "title": "Class InternalTcpDispatcher | Event Store",
    "keywords": "Class InternalTcpDispatcher Inheritance System.Object TcpDispatcher ClientTcpDispatcher InternalTcpDispatcher Implements ITcpDispatcher Inherited Members TcpDispatcher.AddWrapper<T>(Func<T, TcpPackage>, ClientVersion) TcpDispatcher.AddUnwrapper<T>(TcpCommand, Func<TcpPackage, IEnvelope, T>, ClientVersion) TcpDispatcher.AddUnwrapper<T>(TcpCommand, Func<TcpPackage, IEnvelope, TcpConnectionManager, T>, ClientVersion) TcpDispatcher.AddUnwrapper<T>(TcpCommand, Func<TcpPackage, IEnvelope, IPrincipal, T>, ClientVersion) TcpDispatcher.AddUnwrapper<T>(TcpCommand, Func<TcpPackage, IEnvelope, IPrincipal, String, String, T>, ClientVersion) TcpDispatcher.AddUnwrapper<T>(TcpCommand, Func<TcpPackage, IEnvelope, IPrincipal, String, String, TcpConnectionManager, T>, ClientVersion) TcpDispatcher.WrapMessage(Message, Byte) TcpDispatcher.UnwrapPackage(TcpPackage, IEnvelope, IPrincipal, String, String, TcpConnectionManager, Byte) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Transport.Tcp Assembly : EventStore.Core.dll Syntax public class InternalTcpDispatcher : ClientTcpDispatcher, ITcpDispatcher Constructors InternalTcpDispatcher() Declaration public InternalTcpDispatcher() Implements ITcpDispatcher Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Tcp.ITcpDispatcher.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Tcp.ITcpDispatcher.html",
    "title": "Interface ITcpDispatcher | Event Store",
    "keywords": "Interface ITcpDispatcher Namespace : EventStore.Core.Services.Transport.Tcp Assembly : EventStore.Core.dll Syntax public interface ITcpDispatcher Methods UnwrapPackage(TcpPackage, IEnvelope, IPrincipal, String, String, TcpConnectionManager, Byte) Declaration Message UnwrapPackage(TcpPackage package, IEnvelope envelope, IPrincipal user, string login, string pass, TcpConnectionManager connection, byte version) Parameters Type Name TcpPackage package IEnvelope envelope System.Security.Principal.IPrincipal user System.String login System.String pass TcpConnectionManager connection System.Byte version Returns Type Description Message WrapMessage(Message, Byte) Declaration TcpPackage? WrapMessage(Message message, byte version) Parameters Type Name Message message System.Byte version Returns Type Description System.Nullable < TcpPackage > Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.TimerService.TimerMessage.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.TimerService.TimerMessage.html",
    "title": "Class TimerMessage | Event Store",
    "keywords": "Class TimerMessage Inheritance System.Object TimerMessage Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.TimerService Assembly : EventStore.Core.dll Syntax public static class TimerMessage"
  },
  "dotnet-api/code/EventStore.Core.Services.TimerService.TimerMessage.Schedule.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.TimerService.TimerMessage.Schedule.html",
    "title": "Class TimerMessage.Schedule | Event Store",
    "keywords": "Class TimerMessage.Schedule Inheritance System.Object Message TimerMessage.Schedule Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.TimerService Assembly : EventStore.Core.dll Syntax public class Schedule : Message Fields Envelope Declaration public readonly IEnvelope Envelope Field Value Type IEnvelope ReplyMessage Declaration public readonly Message ReplyMessage Field Value Type Message TriggerAfter Declaration public readonly TimeSpan TriggerAfter Field Value Type System.TimeSpan Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Methods Create<T>(TimeSpan, IEnvelope, T) Declaration public static TimerMessage.Schedule Create<T>(TimeSpan triggerAfter, IEnvelope envelope, T replyMessage) where T : Message Parameters Type Name System.TimeSpan triggerAfter IEnvelope envelope T replyMessage Returns Type Description TimerMessage.Schedule Type Parameters Name Description T Reply() Declaration public void Reply() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Storage.ReaderIndex.AllReader.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Storage.ReaderIndex.AllReader.html",
    "title": "Class AllReader | Event Store",
    "keywords": "Class AllReader Inheritance System.Object AllReader Implements IAllReader Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Storage.ReaderIndex Assembly : EventStore.Core.dll Syntax public class AllReader : IAllReader Constructors AllReader(IIndexBackend, IIndexCommitter, ICheckpoint) Declaration public AllReader(IIndexBackend backend, IIndexCommitter indexCommitter, ICheckpoint replicationCheckpoint) Parameters Type Name IIndexBackend backend IIndexCommitter indexCommitter ICheckpoint replicationCheckpoint Methods ReadAllEventsBackward(TFPos, Int32) Declaration public IndexReadAllResult ReadAllEventsBackward(TFPos pos, int maxCount) Parameters Type Name TFPos pos System.Int32 maxCount Returns Type Description IndexReadAllResult ReadAllEventsForward(TFPos, Int32) Declaration public IndexReadAllResult ReadAllEventsForward(TFPos pos, int maxCount) Parameters Type Name TFPos pos System.Int32 maxCount Returns Type Description IndexReadAllResult Implements IAllReader Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Storage.IndexCommitterService.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Storage.IndexCommitterService.html",
    "title": "Class IndexCommitterService | Event Store",
    "keywords": "Class IndexCommitterService Inheritance System.Object IndexCommitterService Implements IIndexCommitterService IMonitoredQueue IHandle < SystemMessage.StateChangeMessage > IHandle < SystemMessage.BecomeShuttingDown > IHandle < StorageMessage.CommitAck > IHandle < ClientMessage.MergeIndexes > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Storage Assembly : EventStore.Core.dll Syntax public class IndexCommitterService : IIndexCommitterService, IMonitoredQueue, IHandle<SystemMessage.StateChangeMessage>, IHandle<SystemMessage.BecomeShuttingDown>, IHandle<StorageMessage.CommitAck>, IHandle<ClientMessage.MergeIndexes> Constructors IndexCommitterService(IIndexCommitter, IPublisher, ICheckpoint, ICheckpoint, Int32, ITableIndex) Declaration public IndexCommitterService(IIndexCommitter indexCommitter, IPublisher publisher, ICheckpoint replicationCheckpoint, ICheckpoint writerCheckpoint, int commitCount, ITableIndex tableIndex) Parameters Type Name IIndexCommitter indexCommitter IPublisher publisher ICheckpoint replicationCheckpoint ICheckpoint writerCheckpoint System.Int32 commitCount ITableIndex tableIndex Properties Name Declaration public string Name { get; } Property Value Type System.String Task Declaration public Task Task { get; } Property Value Type System.Threading.Tasks.Task Methods AddPendingCommit(CommitLogRecord, Int64) Declaration public void AddPendingCommit(CommitLogRecord commit, long postPosition) Parameters Type Name CommitLogRecord commit System.Int64 postPosition AddPendingPrepare(PrepareLogRecord[], Int64) Declaration public void AddPendingPrepare(PrepareLogRecord[] prepares, long postPosition) Parameters Type Name PrepareLogRecord [] prepares System.Int64 postPosition GetCommitLastEventNumber(CommitLogRecord) Declaration public long GetCommitLastEventNumber(CommitLogRecord commit) Parameters Type Name CommitLogRecord commit Returns Type Description System.Int64 GetStatistics() Declaration public QueueStats GetStatistics() Returns Type Description QueueStats Handle(ClientMessage.MergeIndexes) Declaration public void Handle(ClientMessage.MergeIndexes message) Parameters Type Name ClientMessage.MergeIndexes message Handle(StorageMessage.CommitAck) Declaration public void Handle(StorageMessage.CommitAck message) Parameters Type Name StorageMessage.CommitAck message Handle(SystemMessage.BecomeShuttingDown) Declaration public void Handle(SystemMessage.BecomeShuttingDown message) Parameters Type Name SystemMessage.BecomeShuttingDown message Handle(SystemMessage.StateChangeMessage) Declaration public void Handle(SystemMessage.StateChangeMessage msg) Parameters Type Name SystemMessage.StateChangeMessage msg HandleReplicatedQueue() Declaration public void HandleReplicatedQueue() Init(Int64) Declaration public void Init(long checkpointPosition) Parameters Type Name System.Int64 checkpointPosition Stop() Declaration public void Stop() Implements IIndexCommitterService IMonitoredQueue IHandle<T> IHandle<T> IHandle<T> IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Storage.IIndexCommitterService.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Storage.IIndexCommitterService.html",
    "title": "Interface IIndexCommitterService | Event Store",
    "keywords": "Interface IIndexCommitterService Namespace : EventStore.Core.Services.Storage Assembly : EventStore.Core.dll Syntax public interface IIndexCommitterService Methods AddPendingCommit(CommitLogRecord, Int64) Declaration void AddPendingCommit(CommitLogRecord commit, long postPosition) Parameters Type Name CommitLogRecord commit System.Int64 postPosition AddPendingPrepare(PrepareLogRecord[], Int64) Declaration void AddPendingPrepare(PrepareLogRecord[] prepares, long postPosition) Parameters Type Name PrepareLogRecord [] prepares System.Int64 postPosition GetCommitLastEventNumber(CommitLogRecord) Declaration long GetCommitLastEventNumber(CommitLogRecord record) Parameters Type Name CommitLogRecord record Returns Type Description System.Int64 Init(Int64) Declaration void Init(long checkpointPosition) Parameters Type Name System.Int64 checkpointPosition Stop() Declaration void Stop() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Storage.EpochManager.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Storage.EpochManager.html",
    "title": "Namespace EventStore.Core.Services.Storage.EpochManager | Event Store",
    "keywords": "Namespace EventStore.Core.Services.Storage.EpochManager Classes EpochManager Interfaces IEpochManager"
  },
  "dotnet-api/code/EventStore.Core.Services.Storage.EpochManager.IEpochManager.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Storage.EpochManager.IEpochManager.html",
    "title": "Interface IEpochManager | Event Store",
    "keywords": "Interface IEpochManager Namespace : EventStore.Core.Services.Storage.EpochManager Assembly : EventStore.Core.dll Syntax public interface IEpochManager Properties LastEpochNumber Declaration int LastEpochNumber { get; } Property Value Type System.Int32 Methods GetEpoch(Int32, Boolean) Declaration EpochRecord GetEpoch(int epochNumber, bool throwIfNotFound) Parameters Type Name System.Int32 epochNumber System.Boolean throwIfNotFound Returns Type Description EpochRecord GetEpochWithAllEpochs(Int32, Boolean) Declaration EpochRecord GetEpochWithAllEpochs(int epochNumber, bool throwIfNotFound) Parameters Type Name System.Int32 epochNumber System.Boolean throwIfNotFound Returns Type Description EpochRecord GetLastEpoch() Declaration EpochRecord GetLastEpoch() Returns Type Description EpochRecord GetLastEpochs(Int32) Declaration EpochRecord[] GetLastEpochs(int maxCount) Parameters Type Name System.Int32 maxCount Returns Type Description EpochRecord [] Init() Declaration void Init() IsCorrectEpochAt(Int64, Int32, Guid) Declaration bool IsCorrectEpochAt(long epochPosition, int epochNumber, Guid epochId) Parameters Type Name System.Int64 epochPosition System.Int32 epochNumber System.Guid epochId Returns Type Description System.Boolean SetLastEpoch(EpochRecord) Declaration void SetLastEpoch(EpochRecord epoch) Parameters Type Name EpochRecord epoch WriteNewEpoch() Declaration void WriteNewEpoch() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Storage.EpochManager.EpochManager.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Storage.EpochManager.EpochManager.html",
    "title": "Class EpochManager | Event Store",
    "keywords": "Class EpochManager Inheritance System.Object EpochManager Implements IEpochManager Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Storage.EpochManager Assembly : EventStore.Core.dll Syntax public class EpochManager : IEpochManager Constructors EpochManager(IPublisher, Int32, ICheckpoint, ITransactionFileWriter, Int32, Int32, Func<ITransactionFileReader>) Declaration public EpochManager(IPublisher bus, int cachedEpochCount, ICheckpoint checkpoint, ITransactionFileWriter writer, int initialReaderCount, int maxReaderCount, Func<ITransactionFileReader> readerFactory) Parameters Type Name IPublisher bus System.Int32 cachedEpochCount ICheckpoint checkpoint ITransactionFileWriter writer System.Int32 initialReaderCount System.Int32 maxReaderCount System.Func < ITransactionFileReader > readerFactory Fields CachedEpochCount Declaration public readonly int CachedEpochCount Field Value Type System.Int32 Properties LastEpochNumber Declaration public int LastEpochNumber { get; } Property Value Type System.Int32 Methods GetEpoch(Int32, Boolean) Declaration public EpochRecord GetEpoch(int epochNumber, bool throwIfNotFound) Parameters Type Name System.Int32 epochNumber System.Boolean throwIfNotFound Returns Type Description EpochRecord GetEpochWithAllEpochs(Int32, Boolean) Declaration public EpochRecord GetEpochWithAllEpochs(int epochNumber, bool throwIfNotFound) Parameters Type Name System.Int32 epochNumber System.Boolean throwIfNotFound Returns Type Description EpochRecord GetLastEpoch() Declaration public EpochRecord GetLastEpoch() Returns Type Description EpochRecord GetLastEpochs(Int32) Declaration public EpochRecord[] GetLastEpochs(int maxCount) Parameters Type Name System.Int32 maxCount Returns Type Description EpochRecord [] Init() Declaration public void Init() IsCorrectEpochAt(Int64, Int32, Guid) Declaration public bool IsCorrectEpochAt(long epochPosition, int epochNumber, Guid epochId) Parameters Type Name System.Int64 epochPosition System.Int32 epochNumber System.Guid epochId Returns Type Description System.Boolean SetLastEpoch(EpochRecord) Declaration public void SetLastEpoch(EpochRecord epoch) Parameters Type Name EpochRecord epoch WriteNewEpoch() Declaration public void WriteNewEpoch() Implements IEpochManager Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.RequestManager.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.RequestManager.html",
    "title": "Namespace EventStore.Core.Services.RequestManager | Event Store",
    "keywords": "Namespace EventStore.Core.Services.RequestManager Classes RequestManagementService Interfaces IRequestManager"
  },
  "dotnet-api/code/EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ReplicationMessage.ReplicaSubscriptionRequest.html",
    "title": "Class ReplicationMessage.ReplicaSubscriptionRequest | Event Store",
    "keywords": "Class ReplicationMessage.ReplicaSubscriptionRequest Inheritance System.Object Message ReplicationMessage.ReplicaSubscriptionRequest Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class ReplicaSubscriptionRequest : Message Constructors ReplicaSubscriptionRequest(Guid, IEnvelope, TcpConnectionManager, Int64, Guid, Epoch[], IPEndPoint, Guid, Guid, Boolean) Declaration public ReplicaSubscriptionRequest(Guid correlationId, IEnvelope envelope, TcpConnectionManager connection, long logPosition, Guid chunkId, Epoch[] lastEpochs, IPEndPoint replicaEndPoint, Guid masterId, Guid subscriptionId, bool isPromotable) Parameters Type Name System.Guid correlationId IEnvelope envelope TcpConnectionManager connection System.Int64 logPosition System.Guid chunkId Epoch [] lastEpochs System.Net.IPEndPoint replicaEndPoint System.Guid masterId System.Guid subscriptionId System.Boolean isPromotable Fields ChunkId Declaration public readonly Guid ChunkId Field Value Type System.Guid Connection Declaration public readonly TcpConnectionManager Connection Field Value Type TcpConnectionManager CorrelationId Declaration public readonly Guid CorrelationId Field Value Type System.Guid Envelope Declaration public readonly IEnvelope Envelope Field Value Type IEnvelope IsPromotable Declaration public readonly bool IsPromotable Field Value Type System.Boolean LastEpochs Declaration public readonly Epoch[] LastEpochs Field Value Type Epoch [] LogPosition Declaration public readonly long LogPosition Field Value Type System.Int64 MasterId Declaration public readonly Guid MasterId Field Value Type System.Guid ReplicaEndPoint Declaration public readonly IPEndPoint ReplicaEndPoint Field Value Type System.Net.IPEndPoint SubscriptionId Declaration public readonly Guid SubscriptionId Field Value Type System.Guid Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ReplicationMessage.ReplicaSubscribed.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ReplicationMessage.ReplicaSubscribed.html",
    "title": "Class ReplicationMessage.ReplicaSubscribed | Event Store",
    "keywords": "Class ReplicationMessage.ReplicaSubscribed Inheritance System.Object Message ReplicationMessage.ReplicaSubscribed Implements ReplicationMessage.IReplicationMessage Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class ReplicaSubscribed : Message, ReplicationMessage.IReplicationMessage Constructors ReplicaSubscribed(Guid, Guid, Int64) Declaration public ReplicaSubscribed(Guid masterId, Guid subscriptionId, long subscriptionPosition) Parameters Type Name System.Guid masterId System.Guid subscriptionId System.Int64 subscriptionPosition ReplicaSubscribed(Guid, Guid, Int64, IPEndPoint) Declaration public ReplicaSubscribed(Guid masterId, Guid subscriptionId, long subscriptionPosition, IPEndPoint masterEndPoint) Parameters Type Name System.Guid masterId System.Guid subscriptionId System.Int64 subscriptionPosition System.Net.IPEndPoint masterEndPoint Fields MasterEndPoint Declaration public readonly IPEndPoint MasterEndPoint Field Value Type System.Net.IPEndPoint MasterId Declaration public readonly Guid MasterId Field Value Type System.Guid SubscriptionId Declaration public readonly Guid SubscriptionId Field Value Type System.Guid SubscriptionPosition Declaration public readonly long SubscriptionPosition Field Value Type System.Int64 Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Explicit Interface Implementations ReplicationMessage.IReplicationMessage.MasterId Declaration Guid ReplicationMessage.IReplicationMessage.MasterId { get; } Returns Type Description System.Guid ReplicationMessage.IReplicationMessage.SubscriptionId Declaration Guid ReplicationMessage.IReplicationMessage.SubscriptionId { get; } Returns Type Description System.Guid Implements ReplicationMessage.IReplicationMessage Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ReplicationMessage.ReplicaLogPositionAck.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ReplicationMessage.ReplicaLogPositionAck.html",
    "title": "Class ReplicationMessage.ReplicaLogPositionAck | Event Store",
    "keywords": "Class ReplicationMessage.ReplicaLogPositionAck Inheritance System.Object Message ReplicationMessage.ReplicaLogPositionAck Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class ReplicaLogPositionAck : Message Constructors ReplicaLogPositionAck(Guid, Int64) Declaration public ReplicaLogPositionAck(Guid subscriptionId, long replicationLogPosition) Parameters Type Name System.Guid subscriptionId System.Int64 replicationLogPosition Fields ReplicationLogPosition Declaration public readonly long ReplicationLogPosition Field Value Type System.Int64 SubscriptionId Declaration public readonly Guid SubscriptionId Field Value Type System.Guid Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ReplicationMessage.ReconnectToMaster.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ReplicationMessage.ReconnectToMaster.html",
    "title": "Class ReplicationMessage.ReconnectToMaster | Event Store",
    "keywords": "Class ReplicationMessage.ReconnectToMaster Inheritance System.Object Message ReplicationMessage.ReconnectToMaster Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class ReconnectToMaster : Message Constructors ReconnectToMaster(Guid, VNodeInfo) Declaration public ReconnectToMaster(Guid stateCorrelationId, VNodeInfo master) Parameters Type Name System.Guid stateCorrelationId VNodeInfo master Fields Master Declaration public readonly VNodeInfo Master Field Value Type VNodeInfo StateCorrelationId Declaration public readonly Guid StateCorrelationId Field Value Type System.Guid Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ReplicationMessage.RawChunkBulk.html",
    "title": "Class ReplicationMessage.RawChunkBulk | Event Store",
    "keywords": "Class ReplicationMessage.RawChunkBulk Inheritance System.Object Message ReplicationMessage.RawChunkBulk Implements ReplicationMessage.IReplicationMessage Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class RawChunkBulk : Message, ReplicationMessage.IReplicationMessage Constructors RawChunkBulk(Guid, Guid, Int32, Int32, Int32, Byte[], Boolean) Declaration public RawChunkBulk(Guid masterId, Guid subscriptionId, int chunkStartNumber, int chunkEndNumber, int rawPosition, byte[] rawBytes, bool completeChunk) Parameters Type Name System.Guid masterId System.Guid subscriptionId System.Int32 chunkStartNumber System.Int32 chunkEndNumber System.Int32 rawPosition System.Byte [] rawBytes System.Boolean completeChunk Fields ChunkEndNumber Declaration public readonly int ChunkEndNumber Field Value Type System.Int32 ChunkStartNumber Declaration public readonly int ChunkStartNumber Field Value Type System.Int32 CompleteChunk Declaration public readonly bool CompleteChunk Field Value Type System.Boolean MasterId Declaration public readonly Guid MasterId Field Value Type System.Guid RawBytes Declaration public readonly byte[] RawBytes Field Value Type System.Byte [] RawPosition Declaration public readonly int RawPosition Field Value Type System.Int32 SubscriptionId Declaration public readonly Guid SubscriptionId Field Value Type System.Guid Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Methods ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Explicit Interface Implementations ReplicationMessage.IReplicationMessage.MasterId Declaration Guid ReplicationMessage.IReplicationMessage.MasterId { get; } Returns Type Description System.Guid ReplicationMessage.IReplicationMessage.SubscriptionId Declaration Guid ReplicationMessage.IReplicationMessage.SubscriptionId { get; } Returns Type Description System.Guid Implements ReplicationMessage.IReplicationMessage Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ReplicationMessage.IReplicationMessage.html",
    "title": "Interface ReplicationMessage.IReplicationMessage | Event Store",
    "keywords": "Interface ReplicationMessage.IReplicationMessage Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public interface IReplicationMessage Properties MasterId Declaration Guid MasterId { get; } Property Value Type System.Guid SubscriptionId Declaration Guid SubscriptionId { get; } Property Value Type System.Guid Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.InternalAuthenticationProviderMessages.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.InternalAuthenticationProviderMessages.html",
    "title": "Class InternalAuthenticationProviderMessages | Event Store",
    "keywords": "Class InternalAuthenticationProviderMessages Inheritance System.Object InternalAuthenticationProviderMessages Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public abstract class InternalAuthenticationProviderMessages Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.InternalAuthenticationProviderMessages.ResetPasswordCache.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.InternalAuthenticationProviderMessages.ResetPasswordCache.html",
    "title": "Class InternalAuthenticationProviderMessages.ResetPasswordCache | Event Store",
    "keywords": "Class InternalAuthenticationProviderMessages.ResetPasswordCache Inheritance System.Object Message InternalAuthenticationProviderMessages.ResetPasswordCache Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public sealed class ResetPasswordCache : Message Constructors ResetPasswordCache(String) Declaration public ResetPasswordCache(string loginName) Parameters Type Name System.String loginName Fields LoginName Declaration public readonly string LoginName Field Value Type System.String Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.IQueueAffineMessage.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.IQueueAffineMessage.html",
    "title": "Interface IQueueAffineMessage | Event Store",
    "keywords": "Interface IQueueAffineMessage Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public interface IQueueAffineMessage Properties QueueId Declaration int QueueId { get; } Property Value Type System.Int32 Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.SubscriptionMessage.PersistentSubscriptionTimerTick.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.SubscriptionMessage.PersistentSubscriptionTimerTick.html",
    "title": "Class SubscriptionMessage.PersistentSubscriptionTimerTick | Event Store",
    "keywords": "Class SubscriptionMessage.PersistentSubscriptionTimerTick Inheritance System.Object Message SubscriptionMessage.PersistentSubscriptionTimerTick Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class PersistentSubscriptionTimerTick : Message Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.SubscriptionMessage.CheckPollTimeout.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.SubscriptionMessage.CheckPollTimeout.html",
    "title": "Class SubscriptionMessage.CheckPollTimeout | Event Store",
    "keywords": "Class SubscriptionMessage.CheckPollTimeout Inheritance System.Object Message SubscriptionMessage.CheckPollTimeout Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class CheckPollTimeout : Message Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.StorageMessage.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.StorageMessage.html",
    "title": "Class StorageMessage | Event Store",
    "keywords": "Class StorageMessage Inheritance System.Object StorageMessage Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public static class StorageMessage"
  },
  "dotnet-api/code/EventStore.Core.Messages.StorageMessage.WrongExpectedVersion.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.StorageMessage.WrongExpectedVersion.html",
    "title": "Class StorageMessage.WrongExpectedVersion | Event Store",
    "keywords": "Class StorageMessage.WrongExpectedVersion Inheritance System.Object Message StorageMessage.WrongExpectedVersion Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class WrongExpectedVersion : Message Constructors WrongExpectedVersion(Guid, Int64) Declaration public WrongExpectedVersion(Guid correlationId, long currentVersion) Parameters Type Name System.Guid correlationId System.Int64 currentVersion Fields CorrelationId Declaration public readonly Guid CorrelationId Field Value Type System.Guid CurrentVersion Declaration public readonly long CurrentVersion Field Value Type System.Int64 Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.MonitoringMessage.GetPersistentSubscriptionStats.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.MonitoringMessage.GetPersistentSubscriptionStats.html",
    "title": "Class MonitoringMessage.GetPersistentSubscriptionStats | Event Store",
    "keywords": "Class MonitoringMessage.GetPersistentSubscriptionStats Inheritance System.Object Message MonitoringMessage.GetPersistentSubscriptionStats Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class GetPersistentSubscriptionStats : Message Constructors GetPersistentSubscriptionStats(IEnvelope, String, String) Declaration public GetPersistentSubscriptionStats(IEnvelope envelope, string eventStreamId, string groupName) Parameters Type Name IEnvelope envelope System.String eventStreamId System.String groupName Fields Envelope Declaration public readonly IEnvelope Envelope Field Value Type IEnvelope Properties EventStreamId Declaration public string EventStreamId { get; } Property Value Type System.String GroupName Declaration public string GroupName { get; } Property Value Type System.String MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.HttpClientMessageDto.ReadEventCompletedText.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.HttpClientMessageDto.ReadEventCompletedText.html",
    "title": "Class HttpClientMessageDto.ReadEventCompletedText | Event Store",
    "keywords": "Class HttpClientMessageDto.ReadEventCompletedText Inheritance System.Object HttpClientMessageDto.ReadEventCompletedText Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class ReadEventCompletedText Constructors ReadEventCompletedText() Declaration public ReadEventCompletedText() ReadEventCompletedText(ResolvedEvent) Declaration public ReadEventCompletedText(ResolvedEvent evnt) Parameters Type Name ResolvedEvent evnt Properties data Declaration public object data { get; set; } Property Value Type System.Object eventId Declaration public string eventId { get; set; } Property Value Type System.String eventNumber Declaration public long eventNumber { get; set; } Property Value Type System.Int64 eventStreamId Declaration public string eventStreamId { get; set; } Property Value Type System.String eventType Declaration public string eventType { get; set; } Property Value Type System.String metadata Declaration public object metadata { get; set; } Property Value Type System.Object Methods ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.HttpClientMessageDto.ClientEventText.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.HttpClientMessageDto.ClientEventText.html",
    "title": "Class HttpClientMessageDto.ClientEventText | Event Store",
    "keywords": "Class HttpClientMessageDto.ClientEventText Inheritance System.Object HttpClientMessageDto.ClientEventText Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class ClientEventText Constructors ClientEventText() Declaration public ClientEventText() ClientEventText(Guid, String, Byte[], Byte[]) Declaration public ClientEventText(Guid eventId, string eventType, byte[] data, byte[] metadata) Parameters Type Name System.Guid eventId System.String eventType System.Byte [] data System.Byte [] metadata ClientEventText(Guid, String, String, String) Declaration public ClientEventText(Guid eventId, string eventType, string data, string metadata) Parameters Type Name System.Guid eventId System.String eventType System.String data System.String metadata Properties data Declaration public string data { get; set; } Property Value Type System.String eventId Declaration public Guid eventId { get; set; } Property Value Type System.Guid eventType Declaration public string eventType { get; set; } Property Value Type System.String metadata Declaration public string metadata { get; set; } Property Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.HttpClientMessageDto.ClientEventDynamic.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.HttpClientMessageDto.ClientEventDynamic.html",
    "title": "Class HttpClientMessageDto.ClientEventDynamic | Event Store",
    "keywords": "Class HttpClientMessageDto.ClientEventDynamic Inheritance System.Object HttpClientMessageDto.ClientEventDynamic Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class ClientEventDynamic Properties data Declaration public object data { get; set; } Property Value Type System.Object eventId Declaration public Guid eventId { get; set; } Property Value Type System.Guid eventType Declaration public string eventType { get; set; } Property Value Type System.String metadata Declaration public object metadata { get; set; } Property Value Type System.Object Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.GossipMessage.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.GossipMessage.html",
    "title": "Class GossipMessage | Event Store",
    "keywords": "Class GossipMessage Inheritance System.Object GossipMessage Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public static class GossipMessage"
  },
  "dotnet-api/code/EventStore.Core.Messages.GossipMessage.SendGossip.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.GossipMessage.SendGossip.html",
    "title": "Class GossipMessage.SendGossip | Event Store",
    "keywords": "Class GossipMessage.SendGossip Inheritance System.Object Message GossipMessage.SendGossip Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class SendGossip : Message Constructors SendGossip(ClusterInfo, IPEndPoint) Declaration public SendGossip(ClusterInfo clusterInfo, IPEndPoint serverEndPoint) Parameters Type Name ClusterInfo clusterInfo System.Net.IPEndPoint serverEndPoint Fields ClusterInfo Declaration public readonly ClusterInfo ClusterInfo Field Value Type ClusterInfo ServerEndPoint Declaration public readonly IPEndPoint ServerEndPoint Field Value Type System.Net.IPEndPoint Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.GossipMessage.RetrieveGossipSeedSources.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.GossipMessage.RetrieveGossipSeedSources.html",
    "title": "Class GossipMessage.RetrieveGossipSeedSources | Event Store",
    "keywords": "Class GossipMessage.RetrieveGossipSeedSources Inheritance System.Object Message GossipMessage.RetrieveGossipSeedSources Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class RetrieveGossipSeedSources : Message Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.GossipMessage.GotGossipSeedSources.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.GossipMessage.GotGossipSeedSources.html",
    "title": "Class GossipMessage.GotGossipSeedSources | Event Store",
    "keywords": "Class GossipMessage.GotGossipSeedSources Inheritance System.Object Message GossipMessage.GotGossipSeedSources Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class GotGossipSeedSources : Message Constructors GotGossipSeedSources(IPEndPoint[]) Declaration public GotGossipSeedSources(IPEndPoint[] gossipSeeds) Parameters Type Name System.Net.IPEndPoint [] gossipSeeds Fields GossipSeeds Declaration public readonly IPEndPoint[] GossipSeeds Field Value Type System.Net.IPEndPoint [] Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.GossipMessage.GossipUpdated.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.GossipMessage.GossipUpdated.html",
    "title": "Class GossipMessage.GossipUpdated | Event Store",
    "keywords": "Class GossipMessage.GossipUpdated Inheritance System.Object Message GossipMessage.GossipUpdated Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class GossipUpdated : Message Constructors GossipUpdated(ClusterInfo) Declaration public GossipUpdated(ClusterInfo clusterInfo) Parameters Type Name ClusterInfo clusterInfo Fields ClusterInfo Declaration public readonly ClusterInfo ClusterInfo Field Value Type ClusterInfo Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ClientMessage.WriteRequestMessage.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ClientMessage.WriteRequestMessage.html",
    "title": "Class ClientMessage.WriteRequestMessage | Event Store",
    "keywords": "Class ClientMessage.WriteRequestMessage Inheritance System.Object Message ClientMessage.WriteRequestMessage ClientMessage.DeleteStream ClientMessage.TransactionCommit ClientMessage.TransactionStart ClientMessage.TransactionWrite ClientMessage.WriteEvents Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public abstract class WriteRequestMessage : Message Constructors WriteRequestMessage(Guid, Guid, IEnvelope, Boolean, IPrincipal, String, String) Declaration protected WriteRequestMessage(Guid internalCorrId, Guid correlationId, IEnvelope envelope, bool requireMaster, IPrincipal user, string login, string password) Parameters Type Name System.Guid internalCorrId System.Guid correlationId IEnvelope envelope System.Boolean requireMaster System.Security.Principal.IPrincipal user System.String login System.String password Fields CorrelationId Declaration public readonly Guid CorrelationId Field Value Type System.Guid Envelope Declaration public readonly IEnvelope Envelope Field Value Type IEnvelope InternalCorrId Declaration public readonly Guid InternalCorrId Field Value Type System.Guid Login Declaration public readonly string Login Field Value Type System.String Password Declaration public readonly string Password Field Value Type System.String RequireMaster Declaration public readonly bool RequireMaster Field Value Type System.Boolean User Declaration public readonly IPrincipal User Field Value Type System.Security.Principal.IPrincipal Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ClientMessage.WriteEventsCompleted.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ClientMessage.WriteEventsCompleted.html",
    "title": "Class ClientMessage.WriteEventsCompleted | Event Store",
    "keywords": "Class ClientMessage.WriteEventsCompleted Inheritance System.Object Message ClientMessage.WriteEventsCompleted Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class WriteEventsCompleted : Message Constructors WriteEventsCompleted(Guid, OperationResult, String, Int64) Declaration public WriteEventsCompleted(Guid correlationId, OperationResult result, string message, long currentVersion = -1L) Parameters Type Name System.Guid correlationId OperationResult result System.String message System.Int64 currentVersion WriteEventsCompleted(Guid, Int64, Int64, Int64, Int64) Declaration public WriteEventsCompleted(Guid correlationId, long firstEventNumber, long lastEventNumber, long preparePosition, long commitPosition) Parameters Type Name System.Guid correlationId System.Int64 firstEventNumber System.Int64 lastEventNumber System.Int64 preparePosition System.Int64 commitPosition Fields CommitPosition Declaration public readonly long CommitPosition Field Value Type System.Int64 CorrelationId Declaration public readonly Guid CorrelationId Field Value Type System.Guid CurrentVersion Declaration public readonly long CurrentVersion Field Value Type System.Int64 FirstEventNumber Declaration public readonly long FirstEventNumber Field Value Type System.Int64 LastEventNumber Declaration public readonly long LastEventNumber Field Value Type System.Int64 Message Declaration public readonly string Message Field Value Type System.String PreparePosition Declaration public readonly long PreparePosition Field Value Type System.Int64 Result Declaration public readonly OperationResult Result Field Value Type OperationResult Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Methods ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() WithCorrelationId(Guid) Declaration public ClientMessage.WriteEventsCompleted WithCorrelationId(Guid newCorrId) Parameters Type Name System.Guid newCorrId Returns Type Description ClientMessage.WriteEventsCompleted Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Data.VNodeStateExtensions.html": {
    "href": "dotnet-api/code/EventStore.Core.Data.VNodeStateExtensions.html",
    "title": "Class VNodeStateExtensions | Event Store",
    "keywords": "Class VNodeStateExtensions Inheritance System.Object VNodeStateExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Data Assembly : EventStore.Core.dll Syntax public static class VNodeStateExtensions Methods IsReplica(VNodeState) Declaration public static bool IsReplica(this VNodeState state) Parameters Type Name VNodeState state Returns Type Description System.Boolean"
  },
  "dotnet-api/code/EventStore.Core.Data.VNodeState.html": {
    "href": "dotnet-api/code/EventStore.Core.Data.VNodeState.html",
    "title": "Enum VNodeState | Event Store",
    "keywords": "Enum VNodeState Namespace : EventStore.Core.Data Assembly : EventStore.Core.dll Syntax public enum VNodeState Fields Name Description CatchingUp Clone Initializing Manager Master PreMaster PreReplica Shutdown ShuttingDown Slave Unknown Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<VNodeState>() VNodeStateExtensions.IsReplica() ProtobufExtensions.Serialize<VNodeState>() ProtobufExtensions.SerializeToArray<VNodeState>()"
  },
  "dotnet-api/code/EventStore.Core.Data.ExpectedVersion.html": {
    "href": "dotnet-api/code/EventStore.Core.Data.ExpectedVersion.html",
    "title": "Class ExpectedVersion | Event Store",
    "keywords": "Class ExpectedVersion Inheritance System.Object ExpectedVersion Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Data Assembly : EventStore.Core.dll Syntax public static class ExpectedVersion Fields Any Declaration public const long Any = -2L Field Value Type System.Int64 Invalid Declaration public const long Invalid = -3L Field Value Type System.Int64 NoStream Declaration public const long NoStream = -1L Field Value Type System.Int64 StreamExists Declaration public const long StreamExists = -4L Field Value Type System.Int64"
  },
  "dotnet-api/code/EventStore.Core.Data.EventRecord.html": {
    "href": "dotnet-api/code/EventStore.Core.Data.EventRecord.html",
    "title": "Class EventRecord | Event Store",
    "keywords": "Class EventRecord Inheritance System.Object EventRecord Implements System.IEquatable < EventRecord > Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Data Assembly : EventStore.Core.dll Syntax public class EventRecord : IEquatable<EventRecord> Constructors EventRecord(Int64, PrepareLogRecord) Declaration public EventRecord(long eventNumber, PrepareLogRecord prepare) Parameters Type Name System.Int64 eventNumber PrepareLogRecord prepare EventRecord(Int64, Int64, Guid, Guid, Int64, Int32, String, Int64, DateTime, PrepareFlags, String, Byte[], Byte[]) Declaration public EventRecord(long eventNumber, long logPosition, Guid correlationId, Guid eventId, long transactionPosition, int transactionOffset, string eventStreamId, long expectedVersion, DateTime timeStamp, PrepareFlags flags, string eventType, byte[] data, byte[] metadata) Parameters Type Name System.Int64 eventNumber System.Int64 logPosition System.Guid correlationId System.Guid eventId System.Int64 transactionPosition System.Int32 transactionOffset System.String eventStreamId System.Int64 expectedVersion System.DateTime timeStamp PrepareFlags flags System.String eventType System.Byte [] data System.Byte [] metadata Fields CorrelationId Declaration public readonly Guid CorrelationId Field Value Type System.Guid Data Declaration public readonly byte[] Data Field Value Type System.Byte [] EventId Declaration public readonly Guid EventId Field Value Type System.Guid EventNumber Declaration public readonly long EventNumber Field Value Type System.Int64 EventStreamId Declaration public readonly string EventStreamId Field Value Type System.String EventType Declaration public readonly string EventType Field Value Type System.String ExpectedVersion Declaration public readonly long ExpectedVersion Field Value Type System.Int64 Flags Declaration public readonly PrepareFlags Flags Field Value Type PrepareFlags LogPosition Declaration public readonly long LogPosition Field Value Type System.Int64 Metadata Declaration public readonly byte[] Metadata Field Value Type System.Byte [] TimeStamp Declaration public readonly DateTime TimeStamp Field Value Type System.DateTime TransactionOffset Declaration public readonly int TransactionOffset Field Value Type System.Int32 TransactionPosition Declaration public readonly long TransactionPosition Field Value Type System.Int64 Properties IsJson Declaration public bool IsJson { get; } Property Value Type System.Boolean Methods Equals(EventRecord) Declaration public bool Equals(EventRecord other) Parameters Type Name EventRecord other Returns Type Description System.Boolean Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Operators Equality(EventRecord, EventRecord) Declaration public static bool operator ==(EventRecord left, EventRecord right) Parameters Type Name EventRecord left EventRecord right Returns Type Description System.Boolean Inequality(EventRecord, EventRecord) Declaration public static bool operator !=(EventRecord left, EventRecord right) Parameters Type Name EventRecord left EventRecord right Returns Type Description System.Boolean Implements System.IEquatable<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Data.EventNumber.html": {
    "href": "dotnet-api/code/EventStore.Core.Data.EventNumber.html",
    "title": "Class EventNumber | Event Store",
    "keywords": "Class EventNumber Inheritance System.Object EventNumber Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Data Assembly : EventStore.Core.dll Syntax public static class EventNumber Fields DeletedStream Declaration public const long DeletedStream = 9223372036854775807L Field Value Type System.Int64 Invalid Declaration public const long Invalid = -2147483648L Field Value Type System.Int64"
  },
  "dotnet-api/code/EventStore.Core.Data.Event.html": {
    "href": "dotnet-api/code/EventStore.Core.Data.Event.html",
    "title": "Class Event | Event Store",
    "keywords": "Class Event Inheritance System.Object Event Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Data Assembly : EventStore.Core.dll Syntax public class Event Constructors Event(Guid, String, Boolean, Byte[], Byte[]) Declaration public Event(Guid eventId, string eventType, bool isJson, byte[] data, byte[] metadata) Parameters Type Name System.Guid eventId System.String eventType System.Boolean isJson System.Byte [] data System.Byte [] metadata Event(Guid, String, Boolean, String, String) Declaration public Event(Guid eventId, string eventType, bool isJson, string data, string metadata) Parameters Type Name System.Guid eventId System.String eventType System.Boolean isJson System.String data System.String metadata Fields Data Declaration public readonly byte[] Data Field Value Type System.Byte [] EventId Declaration public readonly Guid EventId Field Value Type System.Guid EventType Declaration public readonly string EventType Field Value Type System.String IsJson Declaration public readonly bool IsJson Field Value Type System.Boolean Metadata Declaration public readonly byte[] Metadata Field Value Type System.Byte [] Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Bus.html": {
    "href": "dotnet-api/code/EventStore.Core.Bus.html",
    "title": "Namespace EventStore.Core.Bus | Event Store",
    "keywords": "Namespace EventStore.Core.Bus Classes AdHocHandler<T> HandleExtensions InMemoryBus Synchronously dispatches messages to zero or more subscribers. Subscribers are responsible for handling exceptions InMemoryBus2 Synchronously dispatches messages to zero or more subscribers. Subscribers are responsible for handling exceptions InMemoryBusUnoptimized Synchronously dispatches messages to zero or more subscribers. Subscribers are responsible for handling exceptions MPSCMessageQueue A much better concurrent queue than System.Collections.Concurrent.ConcurrentQueue<T> for multi producer single consumer scenarios. MultiQueuedHandler NarrowingHandler<TInput, TOutput> QueuedHandler QueuedHandlerAutoReset Lightweight in-memory queue with a separate thread in which it passes messages to the consumer. It also tracks statistics about the message processing to help in identifying bottlenecks QueuedHandlerAutoResetWithMpsc Lightweight in-memory queue with a separate thread in which it passes messages to the consumer. It also tracks statistics about the message processing to help in identifying bottlenecks QueuedHandlerMRES Lightweight in-memory queue with a separate thread in which it passes messages to the consumer. It also tracks statistics about the message processing to help in identifying bottlenecks QueuedHandlerMresWithMpsc Lightweight in-memory queue with a separate thread in which it passes messages to the consumer. It also tracks statistics about the message processing to help in identifying bottlenecks QueuedHandlerPulse Lightweight in-memory queue with a separate thread in which it passes messages to the consumer. It also tracks statistics about the message processing to help in identifying bottlenecks QueuedHandlerSleep Lightweight in-memory queue with a separate thread in which it passes messages to the consumer. It also tracks statistics about the message processing to help in identifying bottlenecks QueuedHandlerThreadPool Lightweight in-memory queue with a separate thread in which it passes messages to the consumer. It also tracks statistics about the message processing to help in identifying bottlenecks QueueMonitor QueueStatsCollector SPSCMessageQueue A much better concurrent queue than System.Collections.Concurrent.ConcurrentQueue<T> for single producer single consumer scenarios. WideningHandler<TInput, TOutput> Structs QueueBatchDequeueResult A struct providing information for TryDequeue(Message[], out QueueBatchDequeueResult) result. Interfaces IBus IHandle<T> IMonitoredQueue IPublisher IQueuedHandler ISingleConsumerMessageQueue A common interface for single consumer queues (**SC). ISubscriber IThreadSafePublisher Marks IPublisher as being OK for cross-thread publishing (e.g. in replying to envelopes)."
  },
  "dotnet-api/code/EventStore.Core.Bus.WideningHandler-2.html": {
    "href": "dotnet-api/code/EventStore.Core.Bus.WideningHandler-2.html",
    "title": "Class WideningHandler<TInput, TOutput> | Event Store",
    "keywords": "Class WideningHandler<TInput, TOutput> Inheritance System.Object WideningHandler<TInput, TOutput> Implements IHandle <TInput> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Bus Assembly : EventStore.Core.dll Syntax public class WideningHandler<TInput, TOutput> : IHandle<TInput> where TInput : TOutput where TOutput : Message Type Parameters Name Description TInput TOutput Constructors WideningHandler(IHandle<TOutput>) Declaration public WideningHandler(IHandle<TOutput> handler) Parameters Type Name IHandle <TOutput> handler Methods Handle(TInput) Declaration public void Handle(TInput message) Parameters Type Name TInput message ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Implements IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) HandleExtensions.WidenFrom<TInput, TOutput>(IHandle<TOutput>) HandleExtensions.NarrowTo<TInput, TOutput>(IHandle<TOutput>) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Bus.SPSCMessageQueue.html": {
    "href": "dotnet-api/code/EventStore.Core.Bus.SPSCMessageQueue.html",
    "title": "Class SPSCMessageQueue | Event Store",
    "keywords": "Class SPSCMessageQueue A much better concurrent queue than System.Collections.Concurrent.ConcurrentQueue<T> for single producer single consumer scenarios. Inheritance System.Object SPSCMessageQueue Implements ISingleConsumerMessageQueue Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Bus Assembly : EventStore.Core.dll Syntax public sealed class SPSCMessageQueue : ISingleConsumerMessageQueue Constructors SPSCMessageQueue(Int32) Declaration public SPSCMessageQueue(int size) Parameters Type Name System.Int32 size Fields padding Declaration public long padding Field Value Type System.Int64 Methods Enqueue(Message) Declaration public void Enqueue(Message item) Parameters Type Name Message item TryDequeue(Message[], out QueueBatchDequeueResult) Declaration public bool TryDequeue(Message[] segment, out QueueBatchDequeueResult result) Parameters Type Name Message [] segment QueueBatchDequeueResult result Returns Type Description System.Boolean Implements ISingleConsumerMessageQueue Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Bus.QueuedHandlerThreadPool.html": {
    "href": "dotnet-api/code/EventStore.Core.Bus.QueuedHandlerThreadPool.html",
    "title": "Class QueuedHandlerThreadPool | Event Store",
    "keywords": "Class QueuedHandlerThreadPool Lightweight in-memory queue with a separate thread in which it passes messages to the consumer. It also tracks statistics about the message processing to help in identifying bottlenecks Inheritance System.Object QueuedHandlerThreadPool Implements IQueuedHandler IHandle < Message > IPublisher IMonitoredQueue IThreadSafePublisher Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Bus Assembly : EventStore.Core.dll Syntax public class QueuedHandlerThreadPool : IQueuedHandler, IHandle<Message>, IPublisher, IMonitoredQueue, IThreadSafePublisher Constructors QueuedHandlerThreadPool(IHandle<Message>, String, Boolean, Nullable<TimeSpan>, Nullable<TimeSpan>, String) Declaration public QueuedHandlerThreadPool(IHandle<Message> consumer, string name, bool watchSlowMsg = true, TimeSpan? slowMsgThreshold = default(TimeSpan? ), TimeSpan? threadStopWaitTimeout = default(TimeSpan? ), string groupName = null) Parameters Type Name IHandle < Message > consumer System.String name System.Boolean watchSlowMsg System.Nullable < System.TimeSpan > slowMsgThreshold System.Nullable < System.TimeSpan > threadStopWaitTimeout System.String groupName Properties MessageCount Declaration public int MessageCount { get; } Property Value Type System.Int32 Name Declaration public string Name { get; } Property Value Type System.String Methods GetStatistics() Declaration public QueueStats GetStatistics() Returns Type Description QueueStats Handle(Message) Declaration public void Handle(Message message) Parameters Type Name Message message Publish(Message) Declaration public void Publish(Message message) Parameters Type Name Message message RequestStop() Declaration public void RequestStop() Start() Declaration public Task Start() Returns Type Description System.Threading.Tasks.Task Stop() Declaration public void Stop() Implements IQueuedHandler IHandle<T> IPublisher IMonitoredQueue IThreadSafePublisher Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) HandleExtensions.WidenFrom<TInput, TOutput>(IHandle<TOutput>) HandleExtensions.NarrowTo<TInput, TOutput>(IHandle<TOutput>) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Common.Log.NLoggerHelperMethods.html": {
    "href": "dotnet-api/code/EventStore.Common.Log.NLoggerHelperMethods.html",
    "title": "Class NLoggerHelperMethods | Event Store",
    "keywords": "Class NLoggerHelperMethods Inheritance System.Object NLoggerHelperMethods Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Common.Log Assembly : EventStore.Common.dll Syntax public static class NLoggerHelperMethods Methods IsDotNet() Declaration [ConditionMethod(\"is-dot-net\")] public static bool IsDotNet() Returns Type Description System.Boolean IsMono() Declaration [ConditionMethod(\"is-mono\")] public static bool IsMono() Returns Type Description System.Boolean IsStructured() Declaration [ConditionMethod(\"is-structured\")] public static bool IsStructured() Returns Type Description System.Boolean"
  },
  "dotnet-api/code/EventStore.Common.Log.LogManager.html": {
    "href": "dotnet-api/code/EventStore.Common.Log.LogManager.html",
    "title": "Class LogManager | Event Store",
    "keywords": "Class LogManager Inheritance System.Object LogManager Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Common.Log Assembly : EventStore.Common.dll Syntax public static class LogManager Properties Initialized Declaration public static bool Initialized { get; } Property Value Type System.Boolean LogsDirectory Declaration public static string LogsDirectory { get; } Property Value Type System.String StructuredLog Declaration public static bool StructuredLog { get; } Property Value Type System.Boolean Methods Finish() Declaration public static void Finish() GetLogger(String) Declaration public static ILogger GetLogger(string logName) Parameters Type Name System.String logName Returns Type Description ILogger GetLoggerFor(Type) Declaration public static ILogger GetLoggerFor(Type type) Parameters Type Name System.Type type Returns Type Description ILogger GetLoggerFor<T>() Declaration public static ILogger GetLoggerFor<T>() Returns Type Description ILogger Type Parameters Name Description T Init(String, String, Boolean, String) Declaration public static void Init(string componentName, string logsDirectory, bool isStructured, string configurationDirectory) Parameters Type Name System.String componentName System.String logsDirectory System.Boolean isStructured System.String configurationDirectory SetLogFactory(Func<String, ILogger>) Declaration public static void SetLogFactory(Func<string, ILogger> factory) Parameters Type Name System.Func < System.String , ILogger > factory"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.ReadPage.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.ReadPage.html",
    "title": "Class FeedReaderMessage.ReadPage | Event Store",
    "keywords": "Class FeedReaderMessage.ReadPage Inheritance System.Object Message FeedReaderMessage.FeedReaderMessageBase FeedReaderMessage.ReadPage Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages.EventReaders.Feeds Assembly : EventStore.Projections.Core.dll Syntax public sealed class ReadPage : FeedReaderMessage.FeedReaderMessageBase Constructors ReadPage(Guid, IEnvelope, IPrincipal, QuerySourcesDefinition, CheckpointTag, Int32) Declaration public ReadPage(Guid correlationId, IEnvelope envelope, IPrincipal user, QuerySourcesDefinition querySource, CheckpointTag fromPosition, int maxEvents) Parameters Type Name System.Guid correlationId IEnvelope envelope System.Security.Principal.IPrincipal user QuerySourcesDefinition querySource CheckpointTag fromPosition System.Int32 maxEvents Fields CorrelationId Declaration public readonly Guid CorrelationId Field Value Type System.Guid Envelope Declaration public readonly IEnvelope Envelope Field Value Type IEnvelope FromPosition Declaration public readonly CheckpointTag FromPosition Field Value Type CheckpointTag MaxEvents Declaration public readonly int MaxEvents Field Value Type System.Int32 QuerySource Declaration public readonly QuerySourcesDefinition QuerySource Field Value Type QuerySourcesDefinition User Declaration public readonly IPrincipal User Field Value Type System.Security.Principal.IPrincipal Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides FeedReaderMessage.FeedReaderMessageBase.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedReaderMessageBase.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedReaderMessageBase.html",
    "title": "Class FeedReaderMessage.FeedReaderMessageBase | Event Store",
    "keywords": "Class FeedReaderMessage.FeedReaderMessageBase Inheritance System.Object Message FeedReaderMessage.FeedReaderMessageBase FeedReaderMessage.FeedPage FeedReaderMessage.ReadPage Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages.EventReaders.Feeds Assembly : EventStore.Projections.Core.dll Syntax public abstract class FeedReaderMessageBase : Message Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage.html",
    "title": "Class FeedReaderMessage.FeedPage | Event Store",
    "keywords": "Class FeedReaderMessage.FeedPage Inheritance System.Object Message FeedReaderMessage.FeedReaderMessageBase FeedReaderMessage.FeedPage Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages.EventReaders.Feeds Assembly : EventStore.Projections.Core.dll Syntax public sealed class FeedPage : FeedReaderMessage.FeedReaderMessageBase Constructors FeedPage(Guid, FeedReaderMessage.FeedPage.ErrorStatus, TaggedResolvedEvent[], CheckpointTag) Declaration public FeedPage(Guid correlationId, FeedReaderMessage.FeedPage.ErrorStatus error, TaggedResolvedEvent[] events, CheckpointTag lastReaderPosition) Parameters Type Name System.Guid correlationId FeedReaderMessage.FeedPage.ErrorStatus error TaggedResolvedEvent [] events CheckpointTag lastReaderPosition Fields CorrelationId Declaration public readonly Guid CorrelationId Field Value Type System.Guid Error Declaration public readonly FeedReaderMessage.FeedPage.ErrorStatus Error Field Value Type FeedReaderMessage.FeedPage.ErrorStatus Events Declaration public readonly TaggedResolvedEvent[] Events Field Value Type TaggedResolvedEvent [] LastReaderPosition Declaration public readonly CheckpointTag LastReaderPosition Field Value Type CheckpointTag Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides FeedReaderMessage.FeedReaderMessageBase.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage.ErrorStatus.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.FeedPage.ErrorStatus.html",
    "title": "Enum FeedReaderMessage.FeedPage.ErrorStatus | Event Store",
    "keywords": "Enum FeedReaderMessage.FeedPage.ErrorStatus Namespace : EventStore.Projections.Core.Messages.EventReaders.Feeds Assembly : EventStore.Projections.Core.dll Syntax public enum ErrorStatus Fields Name Description NotAuthorized Success Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<FeedReaderMessage.FeedPage.ErrorStatus>() ProtobufExtensions.Serialize<FeedReaderMessage.FeedPage.ErrorStatus>() ProtobufExtensions.SerializeToArray<FeedReaderMessage.FeedPage.ErrorStatus>()"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.EventReaderSubscriptionMessageBase.html",
    "title": "Class EventReaderSubscriptionMessageBase | Event Store",
    "keywords": "Class EventReaderSubscriptionMessageBase Inheritance System.Object Message EventReaderSubscriptionMessageBase EventReaderSubscriptionMessage.CheckpointSuggested EventReaderSubscriptionMessage.CommittedEventReceived EventReaderSubscriptionMessage.EofReached EventReaderSubscriptionMessage.Failed EventReaderSubscriptionMessage.NotAuthorized EventReaderSubscriptionMessage.PartitionDeleted EventReaderSubscriptionMessage.PartitionEofReached EventReaderSubscriptionMessage.PartitionMeasured EventReaderSubscriptionMessage.ProgressChanged EventReaderSubscriptionMessage.ReaderAssignedReader EventReaderSubscriptionMessage.SubscriptionStarted Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public abstract class EventReaderSubscriptionMessageBase : Message Properties CheckpointTag Declaration public CheckpointTag CheckpointTag { get; } Property Value Type CheckpointTag MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Progress Declaration public float Progress { get; } Property Value Type System.Single Source Declaration public object Source { get; } Property Value Type System.Object SubscriptionId Declaration public Guid SubscriptionId { get; } Property Value Type System.Guid SubscriptionMessageSequenceNumber Declaration public long SubscriptionMessageSequenceNumber { get; } Property Value Type System.Int64 Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Storage.ReaderIndex.IndexReadStreamResult.html",
    "title": "Struct IndexReadStreamResult | Event Store",
    "keywords": "Struct IndexReadStreamResult Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Services.Storage.ReaderIndex Assembly : EventStore.Core.dll Syntax public struct IndexReadStreamResult Constructors IndexReadStreamResult(Int64, Int32, EventRecord[], StreamMetadata, Int64, Int64, Boolean) Declaration public IndexReadStreamResult(long fromEventNumber, int maxCount, EventRecord[] records, StreamMetadata metadata, long nextEventNumber, long lastEventNumber, bool isEndOfStream) Parameters Type Name System.Int64 fromEventNumber System.Int32 maxCount EventRecord [] records StreamMetadata metadata System.Int64 nextEventNumber System.Int64 lastEventNumber System.Boolean isEndOfStream IndexReadStreamResult(Int64, Int32, ReadStreamResult, StreamMetadata, Int64) Declaration public IndexReadStreamResult(long fromEventNumber, int maxCount, ReadStreamResult result, StreamMetadata metadata, long lastEventNumber) Parameters Type Name System.Int64 fromEventNumber System.Int32 maxCount ReadStreamResult result StreamMetadata metadata System.Int64 lastEventNumber Fields FromEventNumber Declaration public readonly long FromEventNumber Field Value Type System.Int64 IsEndOfStream Declaration public readonly bool IsEndOfStream Field Value Type System.Boolean LastEventNumber Declaration public readonly long LastEventNumber Field Value Type System.Int64 MaxCount Declaration public readonly int MaxCount Field Value Type System.Int32 Metadata Declaration public readonly StreamMetadata Metadata Field Value Type StreamMetadata NextEventNumber Declaration public readonly long NextEventNumber Field Value Type System.Int64 Records Declaration public readonly EventRecord[] Records Field Value Type EventRecord [] Result Declaration public readonly ReadStreamResult Result Field Value Type ReadStreamResult Methods ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) EnumExtensions.EnumValueName<T>(T) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Storage.ReaderIndex.IndexReadEventResult.html",
    "title": "Struct IndexReadEventResult | Event Store",
    "keywords": "Struct IndexReadEventResult Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Services.Storage.ReaderIndex Assembly : EventStore.Core.dll Syntax public struct IndexReadEventResult Constructors IndexReadEventResult(ReadEventResult, EventRecord, StreamMetadata, Int64, Boolean) Declaration public IndexReadEventResult(ReadEventResult result, EventRecord record, StreamMetadata metadata, long lastEventNumber, bool originalStreamExists) Parameters Type Name ReadEventResult result EventRecord record StreamMetadata metadata System.Int64 lastEventNumber System.Boolean originalStreamExists IndexReadEventResult(ReadEventResult, StreamMetadata, Int64, Boolean) Declaration public IndexReadEventResult(ReadEventResult result, StreamMetadata metadata, long lastEventNumber, bool originalStreamExists) Parameters Type Name ReadEventResult result StreamMetadata metadata System.Int64 lastEventNumber System.Boolean originalStreamExists Fields LastEventNumber Declaration public readonly long LastEventNumber Field Value Type System.Int64 Metadata Declaration public readonly StreamMetadata Metadata Field Value Type StreamMetadata OriginalStreamExists Declaration public readonly bool OriginalStreamExists Field Value Type System.Boolean Record Declaration public readonly EventRecord Record Field Value Type EventRecord Result Declaration public readonly ReadEventResult Result Field Value Type ReadEventResult Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) EnumExtensions.EnumValueName<T>(T) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Storage.ReaderIndex.IndexReadAllResult.html",
    "title": "Struct IndexReadAllResult | Event Store",
    "keywords": "Struct IndexReadAllResult Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Services.Storage.ReaderIndex Assembly : EventStore.Core.dll Syntax public struct IndexReadAllResult Constructors IndexReadAllResult(List<CommitEventRecord>, TFPos, TFPos, TFPos) Declaration public IndexReadAllResult(List<CommitEventRecord> records, TFPos currentPos, TFPos nextPos, TFPos prevPos) Parameters Type Name System.Collections.Generic.List < CommitEventRecord > records TFPos currentPos TFPos nextPos TFPos prevPos Fields CurrentPos Declaration public readonly TFPos CurrentPos Field Value Type TFPos NextPos Declaration public readonly TFPos NextPos Field Value Type TFPos PrevPos Declaration public readonly TFPos PrevPos Field Value Type TFPos Records Declaration public readonly List<CommitEventRecord> Records Field Value Type System.Collections.Generic.List < CommitEventRecord > Methods ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) EnumExtensions.EnumValueName<T>(T) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Storage.ReaderIndex.IndexCommitter.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Storage.ReaderIndex.IndexCommitter.html",
    "title": "Class IndexCommitter | Event Store",
    "keywords": "Class IndexCommitter Inheritance System.Object IndexCommitter Implements IIndexCommitter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Storage.ReaderIndex Assembly : EventStore.Core.dll Syntax public class IndexCommitter : IIndexCommitter Constructors IndexCommitter(IPublisher, IIndexBackend, IIndexReader, ITableIndex, Boolean) Declaration public IndexCommitter(IPublisher bus, IIndexBackend backend, IIndexReader indexReader, ITableIndex tableIndex, bool additionalCommitChecks) Parameters Type Name IPublisher bus IIndexBackend backend IIndexReader indexReader ITableIndex tableIndex System.Boolean additionalCommitChecks Fields Log Declaration public static readonly ILogger Log Field Value Type ILogger Properties LastCommitPosition Declaration public long LastCommitPosition { get; } Property Value Type System.Int64 Methods Commit(CommitLogRecord, Boolean, Boolean) Declaration public long Commit(CommitLogRecord commit, bool isTfEof, bool cacheLastEventNumber) Parameters Type Name CommitLogRecord commit System.Boolean isTfEof System.Boolean cacheLastEventNumber Returns Type Description System.Int64 Commit(IList<PrepareLogRecord>, Boolean, Boolean) Declaration public long Commit(IList<PrepareLogRecord> commitedPrepares, bool isTfEof, bool cacheLastEventNumber) Parameters Type Name System.Collections.Generic.IList < PrepareLogRecord > commitedPrepares System.Boolean isTfEof System.Boolean cacheLastEventNumber Returns Type Description System.Int64 Dispose() Declaration public void Dispose() GetCommitLastEventNumber(CommitLogRecord) Declaration public long GetCommitLastEventNumber(CommitLogRecord commit) Parameters Type Name CommitLogRecord commit Returns Type Description System.Int64 Init(Int64) Declaration public void Init(long buildToPosition) Parameters Type Name System.Int64 buildToPosition Implements IIndexCommitter Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.TransactionCommitCompleted.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.TransactionCommitCompleted.html",
    "title": "Class TcpClientMessageDto.TransactionCommitCompleted | Event Store",
    "keywords": "Class TcpClientMessageDto.TransactionCommitCompleted Inheritance System.Object TcpClientMessageDto.TransactionCommitCompleted Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax [Serializable] [ProtoContract(Name = \"TransactionCommitCompleted\")] public class TransactionCommitCompleted Constructors TransactionCommitCompleted(Int64, TcpClientMessageDto.OperationResult, String, Int64, Int64, Nullable<Int64>, Nullable<Int64>) Declaration public TransactionCommitCompleted(long transactionId, TcpClientMessageDto.OperationResult result, string message, long firstEventNumber, long lastEventNumber, long? preparePosition, long? commitPosition) Parameters Type Name System.Int64 transactionId TcpClientMessageDto.OperationResult result System.String message System.Int64 firstEventNumber System.Int64 lastEventNumber System.Nullable < System.Int64 > preparePosition System.Nullable < System.Int64 > commitPosition Fields CommitPosition Declaration [ProtoMember(7, IsRequired = false, Name = \"commit_position\", DataFormat = DataFormat.TwosComplement)] public readonly long? CommitPosition Field Value Type System.Nullable < System.Int64 > FirstEventNumber Declaration [ProtoMember(4, IsRequired = true, Name = \"first_event_number\", DataFormat = DataFormat.TwosComplement)] public readonly long FirstEventNumber Field Value Type System.Int64 LastEventNumber Declaration [ProtoMember(5, IsRequired = true, Name = \"last_event_number\", DataFormat = DataFormat.TwosComplement)] public readonly long LastEventNumber Field Value Type System.Int64 Message Declaration [ProtoMember(3, IsRequired = false, Name = \"message\", DataFormat = DataFormat.Default)] public readonly string Message Field Value Type System.String PreparePosition Declaration [ProtoMember(6, IsRequired = false, Name = \"prepare_position\", DataFormat = DataFormat.TwosComplement)] public readonly long? PreparePosition Field Value Type System.Nullable < System.Int64 > Result Declaration [ProtoMember(2, IsRequired = true, Name = \"result\", DataFormat = DataFormat.TwosComplement)] public readonly TcpClientMessageDto.OperationResult Result Field Value Type TcpClientMessageDto.OperationResult TransactionId Declaration [ProtoMember(1, IsRequired = true, Name = \"transaction_id\", DataFormat = DataFormat.TwosComplement)] public readonly long TransactionId Field Value Type System.Int64 Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.TransactionCommit.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.TransactionCommit.html",
    "title": "Class TcpClientMessageDto.TransactionCommit | Event Store",
    "keywords": "Class TcpClientMessageDto.TransactionCommit Inheritance System.Object TcpClientMessageDto.TransactionCommit Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax [Serializable] [ProtoContract(Name = \"TransactionCommit\")] public class TransactionCommit Constructors TransactionCommit(Int64, Boolean) Declaration public TransactionCommit(long transactionId, bool requireMaster) Parameters Type Name System.Int64 transactionId System.Boolean requireMaster Fields RequireMaster Declaration [ProtoMember(2, IsRequired = true, Name = \"require_master\", DataFormat = DataFormat.Default)] public readonly bool RequireMaster Field Value Type System.Boolean TransactionId Declaration [ProtoMember(1, IsRequired = true, Name = \"transaction_id\", DataFormat = DataFormat.TwosComplement)] public readonly long TransactionId Field Value Type System.Int64 Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.SubscriptionDropped.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.SubscriptionDropped.html",
    "title": "Class TcpClientMessageDto.SubscriptionDropped | Event Store",
    "keywords": "Class TcpClientMessageDto.SubscriptionDropped Inheritance System.Object TcpClientMessageDto.SubscriptionDropped Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax [Serializable] [ProtoContract(Name = \"SubscriptionDropped\")] public class SubscriptionDropped Constructors SubscriptionDropped(TcpClientMessageDto.SubscriptionDropped.SubscriptionDropReason) Declaration public SubscriptionDropped(TcpClientMessageDto.SubscriptionDropped.SubscriptionDropReason reason) Parameters Type Name TcpClientMessageDto.SubscriptionDropped.SubscriptionDropReason reason Fields Reason Declaration [ProtoMember(1, IsRequired = false, Name = \"reason\", DataFormat = DataFormat.TwosComplement)] public readonly TcpClientMessageDto.SubscriptionDropped.SubscriptionDropReason Reason Field Value Type TcpClientMessageDto.SubscriptionDropped.SubscriptionDropReason Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.SubscriptionDropped.SubscriptionDropReason.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.SubscriptionDropped.SubscriptionDropReason.html",
    "title": "Enum TcpClientMessageDto.SubscriptionDropped.SubscriptionDropReason | Event Store",
    "keywords": "Enum TcpClientMessageDto.SubscriptionDropped.SubscriptionDropReason Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax [ProtoContract(Name = \"SubscriptionDropReason\")] public enum SubscriptionDropReason Fields Name Description AccessDenied NotFound PersistentSubscriptionDeleted SubscriberMaxCountReached Unsubscribed Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<TcpClientMessageDto.SubscriptionDropped.SubscriptionDropReason>() ProtobufExtensions.Serialize<TcpClientMessageDto.SubscriptionDropped.SubscriptionDropReason>() ProtobufExtensions.SerializeToArray<TcpClientMessageDto.SubscriptionDropped.SubscriptionDropReason>()"
  },
  "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.SubscriptionConfirmation.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.SubscriptionConfirmation.html",
    "title": "Class TcpClientMessageDto.SubscriptionConfirmation | Event Store",
    "keywords": "Class TcpClientMessageDto.SubscriptionConfirmation Inheritance System.Object TcpClientMessageDto.SubscriptionConfirmation Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax [Serializable] [ProtoContract(Name = \"SubscriptionConfirmation\")] public class SubscriptionConfirmation Constructors SubscriptionConfirmation(Int64, Nullable<Int64>) Declaration public SubscriptionConfirmation(long lastCommitPosition, long? lastEventNumber) Parameters Type Name System.Int64 lastCommitPosition System.Nullable < System.Int64 > lastEventNumber Fields LastCommitPosition Declaration [ProtoMember(1, IsRequired = true, Name = \"last_commit_position\", DataFormat = DataFormat.TwosComplement)] public readonly long LastCommitPosition Field Value Type System.Int64 LastEventNumber Declaration [ProtoMember(2, IsRequired = false, Name = \"last_event_number\", DataFormat = DataFormat.TwosComplement)] public readonly long? LastEventNumber Field Value Type System.Nullable < System.Int64 > Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.NotHandled.MasterInfo.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.NotHandled.MasterInfo.html",
    "title": "Class TcpClientMessageDto.NotHandled.MasterInfo | Event Store",
    "keywords": "Class TcpClientMessageDto.NotHandled.MasterInfo Inheritance System.Object TcpClientMessageDto.NotHandled.MasterInfo Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax [Serializable] [ProtoContract(Name = \"MasterInfo\")] public class MasterInfo Constructors MasterInfo(IPEndPoint, IPEndPoint, IPEndPoint) Declaration public MasterInfo(IPEndPoint externalTcpEndPoint, IPEndPoint externalSecureTcpEndPoint, IPEndPoint externalHttpEndPoint) Parameters Type Name System.Net.IPEndPoint externalTcpEndPoint System.Net.IPEndPoint externalSecureTcpEndPoint System.Net.IPEndPoint externalHttpEndPoint MasterInfo(String, Int32, String, Int32, String, Nullable<Int32>) Declaration public MasterInfo(string externalTcpAddress, int externalTcpPort, string externalHttpAddress, int externalHttpPort, string externalSecureTcpAddress, int? externalSecureTcpPort) Parameters Type Name System.String externalTcpAddress System.Int32 externalTcpPort System.String externalHttpAddress System.Int32 externalHttpPort System.String externalSecureTcpAddress System.Nullable < System.Int32 > externalSecureTcpPort Fields ExternalHttpAddress Declaration [ProtoMember(3, IsRequired = true, Name = \"external_http_address\", DataFormat = DataFormat.Default)] public readonly string ExternalHttpAddress Field Value Type System.String ExternalHttpPort Declaration [ProtoMember(4, IsRequired = true, Name = \"external_http_port\", DataFormat = DataFormat.TwosComplement)] public readonly int ExternalHttpPort Field Value Type System.Int32 ExternalSecureTcpAddress Declaration [ProtoMember(5, IsRequired = false, Name = \"external_secure_tcp_address\", DataFormat = DataFormat.Default)] public readonly string ExternalSecureTcpAddress Field Value Type System.String ExternalSecureTcpPort Declaration [ProtoMember(6, IsRequired = false, Name = \"external_secure_tcp_port\", DataFormat = DataFormat.TwosComplement)] public readonly int? ExternalSecureTcpPort Field Value Type System.Nullable < System.Int32 > ExternalTcpAddress Declaration [ProtoMember(1, IsRequired = true, Name = \"external_tcp_address\", DataFormat = DataFormat.Default)] public readonly string ExternalTcpAddress Field Value Type System.String ExternalTcpPort Declaration [ProtoMember(2, IsRequired = true, Name = \"external_tcp_port\", DataFormat = DataFormat.TwosComplement)] public readonly int ExternalTcpPort Field Value Type System.Int32 Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.NewEvent.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.NewEvent.html",
    "title": "Class TcpClientMessageDto.NewEvent | Event Store",
    "keywords": "Class TcpClientMessageDto.NewEvent Inheritance System.Object TcpClientMessageDto.NewEvent Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax [Serializable] [ProtoContract(Name = \"NewEvent\")] public class NewEvent Constructors NewEvent(Byte[], String, Int32, Int32, Byte[], Byte[]) Declaration public NewEvent(byte[] eventId, string eventType, int dataContentType, int metadataContentType, byte[] data, byte[] metadata) Parameters Type Name System.Byte [] eventId System.String eventType System.Int32 dataContentType System.Int32 metadataContentType System.Byte [] data System.Byte [] metadata Fields Data Declaration [ProtoMember(5, IsRequired = true, Name = \"data\", DataFormat = DataFormat.Default)] public readonly byte[] Data Field Value Type System.Byte [] DataContentType Declaration [ProtoMember(3, IsRequired = true, Name = \"data_content_type\", DataFormat = DataFormat.TwosComplement)] public readonly int DataContentType Field Value Type System.Int32 EventId Declaration [ProtoMember(1, IsRequired = true, Name = \"event_id\", DataFormat = DataFormat.Default)] public readonly byte[] EventId Field Value Type System.Byte [] EventType Declaration [ProtoMember(2, IsRequired = true, Name = \"event_type\", DataFormat = DataFormat.Default)] public readonly string EventType Field Value Type System.String Metadata Declaration [ProtoMember(6, IsRequired = false, Name = \"metadata\", DataFormat = DataFormat.Default)] public readonly byte[] Metadata Field Value Type System.Byte [] MetadataContentType Declaration [ProtoMember(4, IsRequired = true, Name = \"metadata_content_type\", DataFormat = DataFormat.TwosComplement)] public readonly int MetadataContentType Field Value Type System.Int32 Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.IdentifyClient.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.IdentifyClient.html",
    "title": "Class TcpClientMessageDto.IdentifyClient | Event Store",
    "keywords": "Class TcpClientMessageDto.IdentifyClient Inheritance System.Object TcpClientMessageDto.IdentifyClient Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax [Serializable] [ProtoContract(Name = \"IdentifyClient\")] public class IdentifyClient Constructors IdentifyClient(Int32, String) Declaration public IdentifyClient(int version, string connectionName) Parameters Type Name System.Int32 version System.String connectionName Fields ConnectionName Declaration [ProtoMember(2, IsRequired = false, Name = \"connection_name\", DataFormat = DataFormat.Default)] public readonly string ConnectionName Field Value Type System.String Version Declaration [ProtoMember(1, IsRequired = true, Name = \"version\", DataFormat = DataFormat.TwosComplement)] public readonly int Version Field Value Type System.Int32 Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.EventRecord.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.EventRecord.html",
    "title": "Class TcpClientMessageDto.EventRecord | Event Store",
    "keywords": "Class TcpClientMessageDto.EventRecord Inheritance System.Object TcpClientMessageDto.EventRecord Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax [Serializable] [ProtoContract(Name = \"EventRecord\")] public class EventRecord Constructors EventRecord(EventRecord) Declaration public EventRecord(EventRecord eventRecord) Parameters Type Name EventRecord eventRecord EventRecord(EventRecord, Int64) Declaration public EventRecord(EventRecord eventRecord, long eventNumber) Parameters Type Name EventRecord eventRecord System.Int64 eventNumber EventRecord(String, Int64, Byte[], String, Int32, Int32, Byte[], Byte[], Nullable<Int64>, Nullable<Int64>) Declaration public EventRecord(string eventStreamId, long eventNumber, byte[] eventId, string eventType, int dataContentType, int metadataContentType, byte[] data, byte[] metadata, long? created, long? createdEpoch) Parameters Type Name System.String eventStreamId System.Int64 eventNumber System.Byte [] eventId System.String eventType System.Int32 dataContentType System.Int32 metadataContentType System.Byte [] data System.Byte [] metadata System.Nullable < System.Int64 > created System.Nullable < System.Int64 > createdEpoch Fields Created Declaration [ProtoMember(9, IsRequired = false, Name = \"created\", DataFormat = DataFormat.TwosComplement)] public readonly long? Created Field Value Type System.Nullable < System.Int64 > CreatedEpoch Declaration [ProtoMember(10, IsRequired = false, Name = \"created_epoch\", DataFormat = DataFormat.TwosComplement)] public readonly long? CreatedEpoch Field Value Type System.Nullable < System.Int64 > Data Declaration [ProtoMember(7, IsRequired = true, Name = \"data\", DataFormat = DataFormat.Default)] public readonly byte[] Data Field Value Type System.Byte [] DataContentType Declaration [ProtoMember(5, IsRequired = true, Name = \"data_content_type\", DataFormat = DataFormat.TwosComplement)] public readonly int DataContentType Field Value Type System.Int32 EventId Declaration [ProtoMember(3, IsRequired = true, Name = \"event_id\", DataFormat = DataFormat.Default)] public readonly byte[] EventId Field Value Type System.Byte [] EventNumber Declaration [ProtoMember(2, IsRequired = true, Name = \"event_number\", DataFormat = DataFormat.TwosComplement)] public readonly long EventNumber Field Value Type System.Int64 EventStreamId Declaration [ProtoMember(1, IsRequired = true, Name = \"event_stream_id\", DataFormat = DataFormat.Default)] public readonly string EventStreamId Field Value Type System.String EventType Declaration [ProtoMember(4, IsRequired = true, Name = \"event_type\", DataFormat = DataFormat.Default)] public readonly string EventType Field Value Type System.String Metadata Declaration [ProtoMember(8, IsRequired = false, Name = \"metadata\", DataFormat = DataFormat.Default)] public readonly byte[] Metadata Field Value Type System.Byte [] MetadataContentType Declaration [ProtoMember(6, IsRequired = true, Name = \"metadata_content_type\", DataFormat = DataFormat.TwosComplement)] public readonly int MetadataContentType Field Value Type System.Int32 Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.DeleteStreamCompleted.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.DeleteStreamCompleted.html",
    "title": "Class TcpClientMessageDto.DeleteStreamCompleted | Event Store",
    "keywords": "Class TcpClientMessageDto.DeleteStreamCompleted Inheritance System.Object TcpClientMessageDto.DeleteStreamCompleted Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax [Serializable] [ProtoContract(Name = \"DeleteStreamCompleted\")] public class DeleteStreamCompleted Constructors DeleteStreamCompleted(TcpClientMessageDto.OperationResult, String, Nullable<Int64>, Nullable<Int64>) Declaration public DeleteStreamCompleted(TcpClientMessageDto.OperationResult result, string message, long? preparePosition, long? commitPosition) Parameters Type Name TcpClientMessageDto.OperationResult result System.String message System.Nullable < System.Int64 > preparePosition System.Nullable < System.Int64 > commitPosition Fields CommitPosition Declaration [ProtoMember(4, IsRequired = false, Name = \"commit_position\", DataFormat = DataFormat.TwosComplement)] public readonly long? CommitPosition Field Value Type System.Nullable < System.Int64 > Message Declaration [ProtoMember(2, IsRequired = false, Name = \"message\", DataFormat = DataFormat.Default)] public readonly string Message Field Value Type System.String PreparePosition Declaration [ProtoMember(3, IsRequired = false, Name = \"prepare_position\", DataFormat = DataFormat.TwosComplement)] public readonly long? PreparePosition Field Value Type System.Nullable < System.Int64 > Result Declaration [ProtoMember(1, IsRequired = true, Name = \"result\", DataFormat = DataFormat.TwosComplement)] public readonly TcpClientMessageDto.OperationResult Result Field Value Type TcpClientMessageDto.OperationResult Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.DeleteStream.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.DeleteStream.html",
    "title": "Class TcpClientMessageDto.DeleteStream | Event Store",
    "keywords": "Class TcpClientMessageDto.DeleteStream Inheritance System.Object TcpClientMessageDto.DeleteStream Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax [Serializable] [ProtoContract(Name = \"DeleteStream\")] public class DeleteStream Constructors DeleteStream(String, Int64, Boolean, Nullable<Boolean>) Declaration public DeleteStream(string eventStreamId, long expectedVersion, bool requireMaster, bool? hardDelete) Parameters Type Name System.String eventStreamId System.Int64 expectedVersion System.Boolean requireMaster System.Nullable < System.Boolean > hardDelete Fields EventStreamId Declaration [ProtoMember(1, IsRequired = true, Name = \"event_stream_id\", DataFormat = DataFormat.Default)] public readonly string EventStreamId Field Value Type System.String ExpectedVersion Declaration [ProtoMember(2, IsRequired = true, Name = \"expected_version\", DataFormat = DataFormat.TwosComplement)] public readonly long ExpectedVersion Field Value Type System.Int64 HardDelete Declaration [ProtoMember(4, IsRequired = false, Name = \"hard_delete\", DataFormat = DataFormat.Default)] public readonly bool? HardDelete Field Value Type System.Nullable < System.Boolean > RequireMaster Declaration [ProtoMember(3, IsRequired = true, Name = \"require_master\", DataFormat = DataFormat.Default)] public readonly bool RequireMaster Field Value Type System.Boolean Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.DeletePersistentSubscriptionCompleted.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.DeletePersistentSubscriptionCompleted.html",
    "title": "Class TcpClientMessageDto.DeletePersistentSubscriptionCompleted | Event Store",
    "keywords": "Class TcpClientMessageDto.DeletePersistentSubscriptionCompleted Inheritance System.Object TcpClientMessageDto.DeletePersistentSubscriptionCompleted Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax [Serializable] [ProtoContract(Name = \"DeletePersistentSubscriptionCompleted\")] public class DeletePersistentSubscriptionCompleted Constructors DeletePersistentSubscriptionCompleted(TcpClientMessageDto.DeletePersistentSubscriptionCompleted.DeletePersistentSubscriptionResult, String) Declaration public DeletePersistentSubscriptionCompleted(TcpClientMessageDto.DeletePersistentSubscriptionCompleted.DeletePersistentSubscriptionResult result, string reason) Parameters Type Name TcpClientMessageDto.DeletePersistentSubscriptionCompleted.DeletePersistentSubscriptionResult result System.String reason Fields Reason Declaration [ProtoMember(2, IsRequired = false, Name = \"reason\", DataFormat = DataFormat.Default)] public readonly string Reason Field Value Type System.String Result Declaration [ProtoMember(1, IsRequired = true, Name = \"result\", DataFormat = DataFormat.TwosComplement)] public readonly TcpClientMessageDto.DeletePersistentSubscriptionCompleted.DeletePersistentSubscriptionResult Result Field Value Type TcpClientMessageDto.DeletePersistentSubscriptionCompleted.DeletePersistentSubscriptionResult Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.EventReaderCoreService.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.EventReaderCoreService.html",
    "title": "Class EventReaderCoreService | Event Store",
    "keywords": "Class EventReaderCoreService Inheritance System.Object EventReaderCoreService Implements IHandle < ReaderCoreServiceMessage.StartReader > IHandle < ReaderCoreServiceMessage.StopReader > IHandle < ReaderSubscriptionManagement.Subscribe > IHandle < ReaderSubscriptionManagement.Unsubscribe > IHandle < ReaderSubscriptionManagement.Pause > IHandle < ReaderSubscriptionManagement.Resume > IHandle < ReaderSubscriptionManagement.SpoolStreamReadingCore > IHandle < ReaderSubscriptionManagement.CompleteSpooledStreamReading > IHandle < ReaderSubscriptionMessage.CommittedEventDistributed > IHandle < ReaderSubscriptionMessage.EventReaderIdle > IHandle < ReaderSubscriptionMessage.EventReaderStarting > IHandle < ReaderSubscriptionMessage.EventReaderNotAuthorized > IHandle < ReaderSubscriptionMessage.EventReaderEof > IHandle < ReaderSubscriptionMessage.EventReaderPartitionEof > IHandle < ReaderSubscriptionMessage.EventReaderPartitionDeleted > IHandle < ReaderSubscriptionMessage.EventReaderPartitionMeasured > IHandle < ReaderSubscriptionMessage.Faulted > IHandle < ReaderCoreServiceMessage.ReaderTick > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class EventReaderCoreService : IHandle<ReaderCoreServiceMessage.StartReader>, IHandle<ReaderCoreServiceMessage.StopReader>, IHandle<ReaderSubscriptionManagement.Subscribe>, IHandle<ReaderSubscriptionManagement.Unsubscribe>, IHandle<ReaderSubscriptionManagement.Pause>, IHandle<ReaderSubscriptionManagement.Resume>, IHandle<ReaderSubscriptionManagement.SpoolStreamReadingCore>, IHandle<ReaderSubscriptionManagement.CompleteSpooledStreamReading>, IHandle<ReaderSubscriptionMessage.CommittedEventDistributed>, IHandle<ReaderSubscriptionMessage.EventReaderIdle>, IHandle<ReaderSubscriptionMessage.EventReaderStarting>, IHandle<ReaderSubscriptionMessage.EventReaderNotAuthorized>, IHandle<ReaderSubscriptionMessage.EventReaderEof>, IHandle<ReaderSubscriptionMessage.EventReaderPartitionEof>, IHandle<ReaderSubscriptionMessage.EventReaderPartitionDeleted>, IHandle<ReaderSubscriptionMessage.EventReaderPartitionMeasured>, IHandle<ReaderSubscriptionMessage.Faulted>, IHandle<ReaderCoreServiceMessage.ReaderTick> Constructors EventReaderCoreService(IPublisher, IODispatcher, Int32, ICheckpoint, Boolean, Boolean) Declaration public EventReaderCoreService(IPublisher publisher, IODispatcher ioDispatcher, int eventCacheSize, ICheckpoint writerCheckpoint, bool runHeadingReader, bool faultOutOfOrderProjections) Parameters Type Name IPublisher publisher IODispatcher ioDispatcher System.Int32 eventCacheSize ICheckpoint writerCheckpoint System.Boolean runHeadingReader System.Boolean faultOutOfOrderProjections Methods Handle(ReaderCoreServiceMessage.ReaderTick) Declaration public void Handle(ReaderCoreServiceMessage.ReaderTick message) Parameters Type Name ReaderCoreServiceMessage.ReaderTick message Handle(ReaderCoreServiceMessage.StartReader) Declaration public void Handle(ReaderCoreServiceMessage.StartReader message) Parameters Type Name ReaderCoreServiceMessage.StartReader message Handle(ReaderCoreServiceMessage.StopReader) Declaration public void Handle(ReaderCoreServiceMessage.StopReader message) Parameters Type Name ReaderCoreServiceMessage.StopReader message Handle(ReaderSubscriptionManagement.CompleteSpooledStreamReading) Declaration public void Handle(ReaderSubscriptionManagement.CompleteSpooledStreamReading message) Parameters Type Name ReaderSubscriptionManagement.CompleteSpooledStreamReading message Handle(ReaderSubscriptionManagement.Pause) Declaration public void Handle(ReaderSubscriptionManagement.Pause message) Parameters Type Name ReaderSubscriptionManagement.Pause message Handle(ReaderSubscriptionManagement.Resume) Declaration public void Handle(ReaderSubscriptionManagement.Resume message) Parameters Type Name ReaderSubscriptionManagement.Resume message Handle(ReaderSubscriptionManagement.SpoolStreamReadingCore) Declaration public void Handle(ReaderSubscriptionManagement.SpoolStreamReadingCore message) Parameters Type Name ReaderSubscriptionManagement.SpoolStreamReadingCore message Handle(ReaderSubscriptionManagement.Subscribe) Declaration public void Handle(ReaderSubscriptionManagement.Subscribe message) Parameters Type Name ReaderSubscriptionManagement.Subscribe message Handle(ReaderSubscriptionManagement.Unsubscribe) Declaration public void Handle(ReaderSubscriptionManagement.Unsubscribe message) Parameters Type Name ReaderSubscriptionManagement.Unsubscribe message Handle(ReaderSubscriptionMessage.CommittedEventDistributed) Declaration public void Handle(ReaderSubscriptionMessage.CommittedEventDistributed message) Parameters Type Name ReaderSubscriptionMessage.CommittedEventDistributed message Handle(ReaderSubscriptionMessage.EventReaderEof) Declaration public void Handle(ReaderSubscriptionMessage.EventReaderEof message) Parameters Type Name ReaderSubscriptionMessage.EventReaderEof message Handle(ReaderSubscriptionMessage.EventReaderIdle) Declaration public void Handle(ReaderSubscriptionMessage.EventReaderIdle message) Parameters Type Name ReaderSubscriptionMessage.EventReaderIdle message Handle(ReaderSubscriptionMessage.EventReaderNotAuthorized) Declaration public void Handle(ReaderSubscriptionMessage.EventReaderNotAuthorized message) Parameters Type Name ReaderSubscriptionMessage.EventReaderNotAuthorized message Handle(ReaderSubscriptionMessage.EventReaderPartitionDeleted) Declaration public void Handle(ReaderSubscriptionMessage.EventReaderPartitionDeleted message) Parameters Type Name ReaderSubscriptionMessage.EventReaderPartitionDeleted message Handle(ReaderSubscriptionMessage.EventReaderPartitionEof) Declaration public void Handle(ReaderSubscriptionMessage.EventReaderPartitionEof message) Parameters Type Name ReaderSubscriptionMessage.EventReaderPartitionEof message Handle(ReaderSubscriptionMessage.EventReaderPartitionMeasured) Declaration public void Handle(ReaderSubscriptionMessage.EventReaderPartitionMeasured message) Parameters Type Name ReaderSubscriptionMessage.EventReaderPartitionMeasured message Handle(ReaderSubscriptionMessage.EventReaderStarting) Declaration public void Handle(ReaderSubscriptionMessage.EventReaderStarting message) Parameters Type Name ReaderSubscriptionMessage.EventReaderStarting message Handle(ReaderSubscriptionMessage.Faulted) Declaration public void Handle(ReaderSubscriptionMessage.Faulted message) Parameters Type Name ReaderSubscriptionMessage.Faulted message Implements IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ClientMessage.TransactionCommitCompleted.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ClientMessage.TransactionCommitCompleted.html",
    "title": "Class ClientMessage.TransactionCommitCompleted | Event Store",
    "keywords": "Class ClientMessage.TransactionCommitCompleted Inheritance System.Object Message ClientMessage.TransactionCommitCompleted Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class TransactionCommitCompleted : Message Constructors TransactionCommitCompleted(Guid, Int64, OperationResult, String) Declaration public TransactionCommitCompleted(Guid correlationId, long transactionId, OperationResult result, string message) Parameters Type Name System.Guid correlationId System.Int64 transactionId OperationResult result System.String message TransactionCommitCompleted(Guid, Int64, Int64, Int64, Int64, Int64) Declaration public TransactionCommitCompleted(Guid correlationId, long transactionId, long firstEventNumber, long lastEventNumber, long preparePosition, long commitPosition) Parameters Type Name System.Guid correlationId System.Int64 transactionId System.Int64 firstEventNumber System.Int64 lastEventNumber System.Int64 preparePosition System.Int64 commitPosition Fields CommitPosition Declaration public readonly long CommitPosition Field Value Type System.Int64 CorrelationId Declaration public readonly Guid CorrelationId Field Value Type System.Guid FirstEventNumber Declaration public readonly long FirstEventNumber Field Value Type System.Int64 LastEventNumber Declaration public readonly long LastEventNumber Field Value Type System.Int64 Message Declaration public readonly string Message Field Value Type System.String PreparePosition Declaration public readonly long PreparePosition Field Value Type System.Int64 Result Declaration public readonly OperationResult Result Field Value Type OperationResult TransactionId Declaration public readonly long TransactionId Field Value Type System.Int64 Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Methods WithCorrelationId(Guid) Declaration public ClientMessage.TransactionCommitCompleted WithCorrelationId(Guid newCorrId) Parameters Type Name System.Guid newCorrId Returns Type Description ClientMessage.TransactionCommitCompleted Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ClientMessage.TransactionCommit.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ClientMessage.TransactionCommit.html",
    "title": "Class ClientMessage.TransactionCommit | Event Store",
    "keywords": "Class ClientMessage.TransactionCommit Inheritance System.Object Message ClientMessage.WriteRequestMessage ClientMessage.TransactionCommit Inherited Members ClientMessage.WriteRequestMessage.InternalCorrId ClientMessage.WriteRequestMessage.CorrelationId ClientMessage.WriteRequestMessage.Envelope ClientMessage.WriteRequestMessage.RequireMaster ClientMessage.WriteRequestMessage.User ClientMessage.WriteRequestMessage.Login ClientMessage.WriteRequestMessage.Password Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class TransactionCommit : ClientMessage.WriteRequestMessage Constructors TransactionCommit(Guid, Guid, IEnvelope, Boolean, Int64, IPrincipal, String, String) Declaration public TransactionCommit(Guid internalCorrId, Guid correlationId, IEnvelope envelope, bool requireMaster, long transactionId, IPrincipal user, string login = null, string password = null) Parameters Type Name System.Guid internalCorrId System.Guid correlationId IEnvelope envelope System.Boolean requireMaster System.Int64 transactionId System.Security.Principal.IPrincipal user System.String login System.String password Fields TransactionId Declaration public readonly long TransactionId Field Value Type System.Int64 Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides ClientMessage.WriteRequestMessage.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.DefaultCheckpointManager.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.DefaultCheckpointManager.html",
    "title": "Class DefaultCheckpointManager | Event Store",
    "keywords": "Class DefaultCheckpointManager Inheritance System.Object CoreProjectionCheckpointManager DefaultCheckpointManager MultiStreamMultiOutputCheckpointManager Implements IProjectionCheckpointManager IHandle < CoreProjectionProcessingMessage.ReadyForCheckpoint > IHandle < CoreProjectionProcessingMessage.RestartRequested > IHandle < CoreProjectionProcessingMessage.Failed > ICoreProjectionCheckpointManager IEmittedEventWriter IHandle < CoreProjectionCheckpointWriterMessage.CheckpointWritten > IHandle < CoreProjectionCheckpointWriterMessage.RestartRequested > Inherited Members CoreProjectionCheckpointManager._namingBuilder CoreProjectionCheckpointManager._projectionConfig CoreProjectionCheckpointManager._logger CoreProjectionCheckpointManager._publisher CoreProjectionCheckpointManager._currentCheckpoint CoreProjectionCheckpointManager._stopping CoreProjectionCheckpointManager._stopped CoreProjectionCheckpointManager.Start(CheckpointTag, PartitionState) CoreProjectionCheckpointManager.Stopping() CoreProjectionCheckpointManager.Stopped() CoreProjectionCheckpointManager.StateUpdated(String, PartitionState, PartitionState) CoreProjectionCheckpointManager.EventProcessed(CheckpointTag, Single) CoreProjectionCheckpointManager.EventsEmitted(EmittedEventEnvelope[], Guid, String) CoreProjectionCheckpointManager.CheckpointSuggested(CheckpointTag, Single) CoreProjectionCheckpointManager.Progress(Single) CoreProjectionCheckpointManager.LastProcessedEventPosition CoreProjectionCheckpointManager.Handle(CoreProjectionProcessingMessage.ReadyForCheckpoint) CoreProjectionCheckpointManager.Handle(CoreProjectionProcessingMessage.RestartRequested) CoreProjectionCheckpointManager.Handle(CoreProjectionProcessingMessage.Failed) CoreProjectionCheckpointManager.PrerecordedEventsLoaded(CheckpointTag) CoreProjectionCheckpointManager.EnsureStarted() CoreProjectionCheckpointManager.SendPrerecordedEvent(ResolvedEvent, CheckpointTag, Int64) CoreProjectionCheckpointManager.RequestRestart(String) CoreProjectionCheckpointManager.CheckpointWritten(CheckpointTag) CoreProjectionCheckpointManager.BeginLoadPrerecordedEvents(CheckpointTag) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class DefaultCheckpointManager : CoreProjectionCheckpointManager, IProjectionCheckpointManager, IHandle<CoreProjectionProcessingMessage.ReadyForCheckpoint>, IHandle<CoreProjectionProcessingMessage.RestartRequested>, IHandle<CoreProjectionProcessingMessage.Failed>, ICoreProjectionCheckpointManager, IEmittedEventWriter, IHandle<CoreProjectionCheckpointWriterMessage.CheckpointWritten>, IHandle<CoreProjectionCheckpointWriterMessage.RestartRequested> Constructors DefaultCheckpointManager(IPublisher, Guid, ProjectionVersion, IPrincipal, IODispatcher, ProjectionConfig, String, PositionTagger, ProjectionNamesBuilder, Boolean, Boolean, Boolean, CoreProjectionCheckpointWriter) Declaration public DefaultCheckpointManager(IPublisher publisher, Guid projectionCorrelationId, ProjectionVersion projectionVersion, IPrincipal runAs, IODispatcher ioDispatcher, ProjectionConfig projectionConfig, string name, PositionTagger positionTagger, ProjectionNamesBuilder namingBuilder, bool usePersistentCheckpoints, bool producesRunningResults, bool definesFold, CoreProjectionCheckpointWriter coreProjectionCheckpointWriter) Parameters Type Name IPublisher publisher System.Guid projectionCorrelationId ProjectionVersion projectionVersion System.Security.Principal.IPrincipal runAs IODispatcher ioDispatcher ProjectionConfig projectionConfig System.String name PositionTagger positionTagger ProjectionNamesBuilder namingBuilder System.Boolean usePersistentCheckpoints System.Boolean producesRunningResults System.Boolean definesFold CoreProjectionCheckpointWriter coreProjectionCheckpointWriter Fields _ioDispatcher Declaration protected readonly IODispatcher _ioDispatcher Field Value Type IODispatcher _projectionVersion Declaration protected readonly ProjectionVersion _projectionVersion Field Value Type ProjectionVersion Methods BeginLoadPartitionStateAt(String, CheckpointTag, Action<PartitionState>) Declaration public override void BeginLoadPartitionStateAt(string statePartition, CheckpointTag requestedStateCheckpointTag, Action<PartitionState> loadCompleted) Parameters Type Name System.String statePartition CheckpointTag requestedStateCheckpointTag System.Action < PartitionState > loadCompleted Overrides CoreProjectionCheckpointManager.BeginLoadPartitionStateAt(String, CheckpointTag, Action<PartitionState>) BeginWriteCheckpoint(CheckpointTag, String) Declaration protected override void BeginWriteCheckpoint(CheckpointTag requestedCheckpointPosition, string requestedCheckpointState) Parameters Type Name CheckpointTag requestedCheckpointPosition System.String requestedCheckpointState Overrides CoreProjectionCheckpointManager.BeginWriteCheckpoint(CheckpointTag, String) CapturePartitionStateUpdated(String, PartitionState, PartitionState) Declaration protected override void CapturePartitionStateUpdated(string partition, PartitionState oldState, PartitionState newState) Parameters Type Name System.String partition PartitionState oldState PartitionState newState Overrides CoreProjectionCheckpointManager.CapturePartitionStateUpdated(String, PartitionState, PartitionState) CreateProjectionCheckpoint(CheckpointTag) Declaration protected override ProjectionCheckpoint CreateProjectionCheckpoint(CheckpointTag checkpointPosition) Parameters Type Name CheckpointTag checkpointPosition Returns Type Description ProjectionCheckpoint Overrides CoreProjectionCheckpointManager.CreateProjectionCheckpoint(CheckpointTag) EmitPartitionCheckpoints() Declaration protected override void EmitPartitionCheckpoints() Overrides CoreProjectionCheckpointManager.EmitPartitionCheckpoints() GetStatistics(ProjectionStatistics) Declaration public override void GetStatistics(ProjectionStatistics info) Parameters Type Name ProjectionStatistics info Overrides CoreProjectionCheckpointManager.GetStatistics(ProjectionStatistics) Handle(CoreProjectionCheckpointWriterMessage.CheckpointWritten) Declaration public void Handle(CoreProjectionCheckpointWriterMessage.CheckpointWritten message) Parameters Type Name CoreProjectionCheckpointWriterMessage.CheckpointWritten message Handle(CoreProjectionCheckpointWriterMessage.RestartRequested) Declaration public void Handle(CoreProjectionCheckpointWriterMessage.RestartRequested message) Parameters Type Name CoreProjectionCheckpointWriterMessage.RestartRequested message Initialize() Declaration public override void Initialize() Overrides CoreProjectionCheckpointManager.Initialize() PartitionCompleted(String) Declaration public override void PartitionCompleted(string partition) Parameters Type Name System.String partition Overrides CoreProjectionCheckpointManager.PartitionCompleted(String) RecordEventOrder(ResolvedEvent, CheckpointTag, Action) Declaration public override void RecordEventOrder(ResolvedEvent resolvedEvent, CheckpointTag orderCheckpointTag, Action committed) Parameters Type Name ResolvedEvent resolvedEvent CheckpointTag orderCheckpointTag System.Action committed Overrides CoreProjectionCheckpointManager.RecordEventOrder(ResolvedEvent, CheckpointTag, Action) Implements IProjectionCheckpointManager IHandle<T> IHandle<T> IHandle<T> ICoreProjectionCheckpointManager IEmittedEventWriter IHandle<T> IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.CoreProjectionQueue.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.CoreProjectionQueue.html",
    "title": "Class CoreProjectionQueue | Event Store",
    "keywords": "Class CoreProjectionQueue Inheritance System.Object CoreProjectionQueue Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class CoreProjectionQueue Constructors CoreProjectionQueue(IPublisher, Int32, Boolean) Declaration public CoreProjectionQueue(IPublisher publisher, int pendingEventsThreshold, bool orderedPartitionProcessing) Parameters Type Name IPublisher publisher System.Int32 pendingEventsThreshold System.Boolean orderedPartitionProcessing Properties IsRunning Declaration public bool IsRunning { get; } Property Value Type System.Boolean Methods EnqueueOutOfOrderTask(WorkItem) Declaration public void EnqueueOutOfOrderTask(WorkItem workItem) Parameters Type Name WorkItem workItem EnqueueTask(WorkItem, CheckpointTag, Boolean) Declaration public void EnqueueTask(WorkItem workItem, CheckpointTag workItemCheckpointTag, bool allowCurrentPosition = false) Parameters Type Name WorkItem workItem CheckpointTag workItemCheckpointTag System.Boolean allowCurrentPosition GetBufferedEventCount() Declaration public int GetBufferedEventCount() Returns Type Description System.Int32 GetStatus() Declaration public string GetStatus() Returns Type Description System.String InitializeQueue(CheckpointTag) Declaration public void InitializeQueue(CheckpointTag startingPosition) Parameters Type Name CheckpointTag startingPosition ProcessEvent() Declaration public bool ProcessEvent() Returns Type Description System.Boolean SetIsRunning(Boolean) Declaration public void SetIsRunning(bool isRunning) Parameters Type Name System.Boolean isRunning Subscribed(Guid) Declaration public void Subscribed(Guid currentSubscriptionId) Parameters Type Name System.Guid currentSubscriptionId Unsubscribed() Declaration public void Unsubscribed() Events EnsureTickPending Declaration public event Action EnsureTickPending Event Type Type System.Action Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointWriter.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointWriter.html",
    "title": "Class CoreProjectionCheckpointWriter | Event Store",
    "keywords": "Class CoreProjectionCheckpointWriter Inheritance System.Object CoreProjectionCheckpointWriter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class CoreProjectionCheckpointWriter Constructors CoreProjectionCheckpointWriter(String, IODispatcher, ProjectionVersion, String) Declaration public CoreProjectionCheckpointWriter(string projectionCheckpointStreamId, IODispatcher ioDispatcher, ProjectionVersion projectionVersion, string name) Parameters Type Name System.String projectionCheckpointStreamId IODispatcher ioDispatcher ProjectionVersion projectionVersion System.String name Methods BeginWriteCheckpoint(IEnvelope, CheckpointTag, String) Declaration public void BeginWriteCheckpoint(IEnvelope envelope, CheckpointTag requestedCheckpointPosition, string requestedCheckpointState) Parameters Type Name IEnvelope envelope CheckpointTag requestedCheckpointPosition System.String requestedCheckpointState GetStatistics(ProjectionStatistics) Declaration public void GetStatistics(ProjectionStatistics info) Parameters Type Name ProjectionStatistics info Initialize() Declaration public void Initialize() StartFrom(CheckpointTag, Int64) Declaration public void StartFrom(CheckpointTag checkpointTag, long checkpointEventNumber) Parameters Type Name CheckpointTag checkpointTag System.Int64 checkpointEventNumber Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointReader.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointReader.html",
    "title": "Class CoreProjectionCheckpointReader | Event Store",
    "keywords": "Class CoreProjectionCheckpointReader Inheritance System.Object CoreProjectionCheckpointReader Implements ICoreProjectionCheckpointReader Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class CoreProjectionCheckpointReader : ICoreProjectionCheckpointReader Constructors CoreProjectionCheckpointReader(IPublisher, Guid, IODispatcher, String, ProjectionVersion, Boolean) Declaration public CoreProjectionCheckpointReader(IPublisher publisher, Guid projectionCorrelationId, IODispatcher ioDispatcher, string projectionCheckpointStreamId, ProjectionVersion projectionVersion, bool useCheckpoints) Parameters Type Name IPublisher publisher System.Guid projectionCorrelationId IODispatcher ioDispatcher System.String projectionCheckpointStreamId ProjectionVersion projectionVersion System.Boolean useCheckpoints Methods BeforeBeginLoadState() Declaration protected void BeforeBeginLoadState() BeginLoadState() Declaration public void BeginLoadState() CheckpointLoaded(CheckpointTag, String) Declaration protected void CheckpointLoaded(CheckpointTag checkpointTag, string checkpointData) Parameters Type Name CheckpointTag checkpointTag System.String checkpointData Initialize() Declaration public void Initialize() RequestLoadState() Declaration protected void RequestLoadState() Implements ICoreProjectionCheckpointReader Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.CoreProjectionCheckpointManager.html",
    "title": "Class CoreProjectionCheckpointManager | Event Store",
    "keywords": "Class CoreProjectionCheckpointManager Inheritance System.Object CoreProjectionCheckpointManager DefaultCheckpointManager Implements IProjectionCheckpointManager IHandle < CoreProjectionProcessingMessage.ReadyForCheckpoint > IHandle < CoreProjectionProcessingMessage.RestartRequested > IHandle < CoreProjectionProcessingMessage.Failed > ICoreProjectionCheckpointManager IEmittedEventWriter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public abstract class CoreProjectionCheckpointManager : IProjectionCheckpointManager, IHandle<CoreProjectionProcessingMessage.ReadyForCheckpoint>, IHandle<CoreProjectionProcessingMessage.RestartRequested>, IHandle<CoreProjectionProcessingMessage.Failed>, ICoreProjectionCheckpointManager, IEmittedEventWriter Constructors CoreProjectionCheckpointManager(IPublisher, Guid, ProjectionConfig, String, PositionTagger, ProjectionNamesBuilder, Boolean) Declaration protected CoreProjectionCheckpointManager(IPublisher publisher, Guid projectionCorrelationId, ProjectionConfig projectionConfig, string name, PositionTagger positionTagger, ProjectionNamesBuilder namingBuilder, bool usePersistentCheckpoints) Parameters Type Name IPublisher publisher System.Guid projectionCorrelationId ProjectionConfig projectionConfig System.String name PositionTagger positionTagger ProjectionNamesBuilder namingBuilder System.Boolean usePersistentCheckpoints Fields _currentCheckpoint Declaration protected ProjectionCheckpoint _currentCheckpoint Field Value Type ProjectionCheckpoint _logger Declaration protected readonly ILogger _logger Field Value Type ILogger _namingBuilder Declaration protected readonly ProjectionNamesBuilder _namingBuilder Field Value Type ProjectionNamesBuilder _projectionConfig Declaration protected readonly ProjectionConfig _projectionConfig Field Value Type ProjectionConfig _publisher Declaration protected readonly IPublisher _publisher Field Value Type IPublisher _stopped Declaration protected bool _stopped Field Value Type System.Boolean _stopping Declaration protected bool _stopping Field Value Type System.Boolean Properties LastProcessedEventPosition Declaration public CheckpointTag LastProcessedEventPosition { get; } Property Value Type CheckpointTag Methods BeginLoadPartitionStateAt(String, CheckpointTag, Action<PartitionState>) Declaration public abstract void BeginLoadPartitionStateAt(string statePartition, CheckpointTag requestedStateCheckpointTag, Action<PartitionState> loadCompleted) Parameters Type Name System.String statePartition CheckpointTag requestedStateCheckpointTag System.Action < PartitionState > loadCompleted BeginLoadPrerecordedEvents(CheckpointTag) Declaration public virtual void BeginLoadPrerecordedEvents(CheckpointTag checkpointTag) Parameters Type Name CheckpointTag checkpointTag BeginWriteCheckpoint(CheckpointTag, String) Declaration protected abstract void BeginWriteCheckpoint(CheckpointTag requestedCheckpointPosition, string requestedCheckpointState) Parameters Type Name CheckpointTag requestedCheckpointPosition System.String requestedCheckpointState CapturePartitionStateUpdated(String, PartitionState, PartitionState) Declaration protected abstract void CapturePartitionStateUpdated(string partition, PartitionState oldState, PartitionState newState) Parameters Type Name System.String partition PartitionState oldState PartitionState newState CheckpointSuggested(CheckpointTag, Single) Declaration public bool CheckpointSuggested(CheckpointTag checkpointTag, float progress) Parameters Type Name CheckpointTag checkpointTag System.Single progress Returns Type Description System.Boolean CheckpointWritten(CheckpointTag) Declaration protected void CheckpointWritten(CheckpointTag lastCompletedCheckpointPosition) Parameters Type Name CheckpointTag lastCompletedCheckpointPosition CreateProjectionCheckpoint(CheckpointTag) Declaration protected abstract ProjectionCheckpoint CreateProjectionCheckpoint(CheckpointTag checkpointPosition) Parameters Type Name CheckpointTag checkpointPosition Returns Type Description ProjectionCheckpoint EmitPartitionCheckpoints() Declaration protected abstract void EmitPartitionCheckpoints() EnsureStarted() Declaration protected void EnsureStarted() EventProcessed(CheckpointTag, Single) Declaration public void EventProcessed(CheckpointTag checkpointTag, float progress) Parameters Type Name CheckpointTag checkpointTag System.Single progress EventsEmitted(EmittedEventEnvelope[], Guid, String) Declaration public void EventsEmitted(EmittedEventEnvelope[] scheduledWrites, Guid causedBy, string correlationId) Parameters Type Name EmittedEventEnvelope [] scheduledWrites System.Guid causedBy System.String correlationId GetStatistics(ProjectionStatistics) Declaration public virtual void GetStatistics(ProjectionStatistics info) Parameters Type Name ProjectionStatistics info Handle(CoreProjectionProcessingMessage.Failed) Declaration public void Handle(CoreProjectionProcessingMessage.Failed message) Parameters Type Name CoreProjectionProcessingMessage.Failed message Handle(CoreProjectionProcessingMessage.ReadyForCheckpoint) Declaration public void Handle(CoreProjectionProcessingMessage.ReadyForCheckpoint message) Parameters Type Name CoreProjectionProcessingMessage.ReadyForCheckpoint message Handle(CoreProjectionProcessingMessage.RestartRequested) Declaration public void Handle(CoreProjectionProcessingMessage.RestartRequested message) Parameters Type Name CoreProjectionProcessingMessage.RestartRequested message Initialize() Declaration public virtual void Initialize() PartitionCompleted(String) Declaration public abstract void PartitionCompleted(string partition) Parameters Type Name System.String partition PrerecordedEventsLoaded(CheckpointTag) Declaration protected void PrerecordedEventsLoaded(CheckpointTag checkpointTag) Parameters Type Name CheckpointTag checkpointTag Progress(Single) Declaration public void Progress(float progress) Parameters Type Name System.Single progress RecordEventOrder(ResolvedEvent, CheckpointTag, Action) Declaration public abstract void RecordEventOrder(ResolvedEvent resolvedEvent, CheckpointTag orderCheckpointTag, Action committed) Parameters Type Name ResolvedEvent resolvedEvent CheckpointTag orderCheckpointTag System.Action committed RequestRestart(String) Declaration protected void RequestRestart(string reason) Parameters Type Name System.String reason SendPrerecordedEvent(ResolvedEvent, CheckpointTag, Int64) Declaration protected void SendPrerecordedEvent(ResolvedEvent pair, CheckpointTag positionTag, long prerecordedEventMessageSequenceNumber) Parameters Type Name ResolvedEvent pair CheckpointTag positionTag System.Int64 prerecordedEventMessageSequenceNumber Start(CheckpointTag, PartitionState) Declaration public virtual void Start(CheckpointTag checkpointTag, PartitionState rootPartitionState) Parameters Type Name CheckpointTag checkpointTag PartitionState rootPartitionState StateUpdated(String, PartitionState, PartitionState) Declaration public void StateUpdated(string partition, PartitionState oldState, PartitionState newState) Parameters Type Name System.String partition PartitionState oldState PartitionState newState Stopped() Declaration public void Stopped() Stopping() Declaration public void Stopping() Implements IProjectionCheckpointManager IHandle<T> IHandle<T> IHandle<T> ICoreProjectionCheckpointManager IEmittedEventWriter Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.CoreProjection.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.CoreProjection.html",
    "title": "Class CoreProjection | Event Store",
    "keywords": "Class CoreProjection Inheritance System.Object CoreProjection Implements System.IDisposable ICoreProjection IHandle < CoreProjectionProcessingMessage.CheckpointLoaded > IHandle < CoreProjectionProcessingMessage.PrerecordedEventsLoaded > IHandle < CoreProjectionProcessingMessage.CheckpointCompleted > IHandle < CoreProjectionProcessingMessage.RestartRequested > IHandle < CoreProjectionProcessingMessage.Failed > ICoreProjectionForProcessingPhase IHandle < CoreProjectionManagementMessage.GetState > IHandle < CoreProjectionManagementMessage.GetResult > IHandle < ProjectionManagementMessage.SlaveProjectionsStarted > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class CoreProjection : IDisposable, ICoreProjection, IHandle<CoreProjectionProcessingMessage.CheckpointLoaded>, IHandle<CoreProjectionProcessingMessage.PrerecordedEventsLoaded>, IHandle<CoreProjectionProcessingMessage.CheckpointCompleted>, IHandle<CoreProjectionProcessingMessage.RestartRequested>, IHandle<CoreProjectionProcessingMessage.Failed>, ICoreProjectionForProcessingPhase, IHandle<CoreProjectionManagementMessage.GetState>, IHandle<CoreProjectionManagementMessage.GetResult>, IHandle<ProjectionManagementMessage.SlaveProjectionsStarted> Constructors CoreProjection(ProjectionProcessingStrategy, ProjectionVersion, Guid, IPublisher, Guid, IPrincipal, IPublisher, IODispatcher, ReaderSubscriptionDispatcher, ILogger, ProjectionNamesBuilder, CoreProjectionCheckpointWriter, PartitionStateCache, String, ITimeProvider) Declaration public CoreProjection(ProjectionProcessingStrategy projectionProcessingStrategy, ProjectionVersion version, Guid projectionCorrelationId, IPublisher inputQueue, Guid workerId, IPrincipal runAs, IPublisher publisher, IODispatcher ioDispatcher, ReaderSubscriptionDispatcher subscriptionDispatcher, ILogger logger, ProjectionNamesBuilder namingBuilder, CoreProjectionCheckpointWriter coreProjectionCheckpointWriter, PartitionStateCache partitionStateCache, string effectiveProjectionName, ITimeProvider timeProvider) Parameters Type Name ProjectionProcessingStrategy projectionProcessingStrategy ProjectionVersion version System.Guid projectionCorrelationId IPublisher inputQueue System.Guid workerId System.Security.Principal.IPrincipal runAs IPublisher publisher IODispatcher ioDispatcher ReaderSubscriptionDispatcher subscriptionDispatcher ILogger logger ProjectionNamesBuilder namingBuilder CoreProjectionCheckpointWriter coreProjectionCheckpointWriter PartitionStateCache partitionStateCache System.String effectiveProjectionName ITimeProvider timeProvider Properties LastProcessedEventPosition Declaration public CheckpointTag LastProcessedEventPosition { get; } Property Value Type CheckpointTag Methods CompletePhase() Declaration public void CompletePhase() Dispose() Declaration public void Dispose() EnsureTickPending() Declaration public void EnsureTickPending() EnsureUnsubscribed() Declaration public void EnsureUnsubscribed() Handle(CoreProjectionProcessingMessage.CheckpointCompleted) Declaration public void Handle(CoreProjectionProcessingMessage.CheckpointCompleted message) Parameters Type Name CoreProjectionProcessingMessage.CheckpointCompleted message Handle(CoreProjectionProcessingMessage.CheckpointLoaded) Declaration public void Handle(CoreProjectionProcessingMessage.CheckpointLoaded message) Parameters Type Name CoreProjectionProcessingMessage.CheckpointLoaded message Handle(CoreProjectionProcessingMessage.Failed) Declaration public void Handle(CoreProjectionProcessingMessage.Failed message) Parameters Type Name CoreProjectionProcessingMessage.Failed message Handle(CoreProjectionProcessingMessage.PrerecordedEventsLoaded) Declaration public void Handle(CoreProjectionProcessingMessage.PrerecordedEventsLoaded message) Parameters Type Name CoreProjectionProcessingMessage.PrerecordedEventsLoaded message Handle(CoreProjectionProcessingMessage.RestartRequested) Declaration public void Handle(CoreProjectionProcessingMessage.RestartRequested message) Parameters Type Name CoreProjectionProcessingMessage.RestartRequested message Handle(CoreProjectionManagementMessage.GetResult) Declaration public void Handle(CoreProjectionManagementMessage.GetResult message) Parameters Type Name CoreProjectionManagementMessage.GetResult message Handle(CoreProjectionManagementMessage.GetState) Declaration public void Handle(CoreProjectionManagementMessage.GetState message) Parameters Type Name CoreProjectionManagementMessage.GetState message Handle(ProjectionManagementMessage.SlaveProjectionsStarted) Declaration public void Handle(ProjectionManagementMessage.SlaveProjectionsStarted message) Parameters Type Name ProjectionManagementMessage.SlaveProjectionsStarted message Kill() Declaration public void Kill() LoadStopped() Declaration public void LoadStopped() SetCurrentCheckpointSuggestedWorkItem(CheckpointSuggestedWorkItem) Declaration public void SetCurrentCheckpointSuggestedWorkItem(CheckpointSuggestedWorkItem checkpointSuggestedWorkItem) Parameters Type Name CheckpointSuggestedWorkItem checkpointSuggestedWorkItem SetFaulted(Exception) Declaration public void SetFaulted(Exception ex) Parameters Type Name System.Exception ex SetFaulted(String) Declaration public void SetFaulted(string reason) Parameters Type Name System.String reason SetFaulting(String) Declaration public void SetFaulting(string reason) Parameters Type Name System.String reason Start() Declaration public void Start() Stop() Declaration public void Stop() Subscribed() Declaration public void Subscribed() Implements System.IDisposable ICoreProjection IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> ICoreProjectionForProcessingPhase IHandle<T> IHandle<T> IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ContinuousProjectionProcessingStrategy.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ContinuousProjectionProcessingStrategy.html",
    "title": "Class ContinuousProjectionProcessingStrategy | Event Store",
    "keywords": "Class ContinuousProjectionProcessingStrategy Inheritance System.Object ProjectionProcessingStrategy EventReaderBasedProjectionProcessingStrategy DefaultProjectionProcessingStrategy ContinuousProjectionProcessingStrategy Inherited Members DefaultProjectionProcessingStrategy.CreateFirstProcessingPhase(IPublisher, IPublisher, Guid, PartitionStateCache, Action, CoreProjection, ReaderSubscriptionDispatcher, CheckpointTag, ICoreProjectionCheckpointManager, IReaderStrategy, IResultWriter, IEmittedStreamsTracker) DefaultProjectionProcessingStrategy.CreateStatePartitionSelector() EventReaderBasedProjectionProcessingStrategy._projectionConfig EventReaderBasedProjectionProcessingStrategy._sourceDefinition EventReaderBasedProjectionProcessingStrategy.CreateProcessingPhases(IPublisher, IPublisher, Guid, PartitionStateCache, Action, CoreProjection, ProjectionNamesBuilder, ITimeProvider, IODispatcher, CoreProjectionCheckpointWriter) EventReaderBasedProjectionProcessingStrategy.CreateReaderStrategy(ITimeProvider) EventReaderBasedProjectionProcessingStrategy.GetSourceDefinition() EventReaderBasedProjectionProcessingStrategy.GetRequiresRootPartition() EventReaderBasedProjectionProcessingStrategy.EnrichStatistics(ProjectionStatistics) EventReaderBasedProjectionProcessingStrategy.CreateCheckpointManager(Guid, IPublisher, IODispatcher, ProjectionNamesBuilder, CoreProjectionCheckpointWriter, Boolean, IReaderStrategy) EventReaderBasedProjectionProcessingStrategy.CreateFirstPhaseResultWriter(IEmittedEventWriter, CheckpointTag, ProjectionNamesBuilder) ProjectionProcessingStrategy._name ProjectionProcessingStrategy._projectionVersion ProjectionProcessingStrategy._logger ProjectionProcessingStrategy.Create(Guid, IPublisher, Guid, IPrincipal, IPublisher, IODispatcher, ReaderSubscriptionDispatcher, ITimeProvider) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class ContinuousProjectionProcessingStrategy : DefaultProjectionProcessingStrategy Constructors ContinuousProjectionProcessingStrategy(String, ProjectionVersion, IProjectionStateHandler, ProjectionConfig, IQuerySources, ILogger, ReaderSubscriptionDispatcher) Declaration public ContinuousProjectionProcessingStrategy(string name, ProjectionVersion projectionVersion, IProjectionStateHandler stateHandler, ProjectionConfig projectionConfig, IQuerySources sourceDefinition, ILogger logger, ReaderSubscriptionDispatcher subscriptionDispatcher) Parameters Type Name System.String name ProjectionVersion projectionVersion IProjectionStateHandler stateHandler ProjectionConfig projectionConfig IQuerySources sourceDefinition ILogger logger ReaderSubscriptionDispatcher subscriptionDispatcher Methods CreateFirstPhaseResultEmitter(ProjectionNamesBuilder) Declaration protected override IResultEventEmitter CreateFirstPhaseResultEmitter(ProjectionNamesBuilder namingBuilder) Parameters Type Name ProjectionNamesBuilder namingBuilder Returns Type Description IResultEventEmitter Overrides EventReaderBasedProjectionProcessingStrategy.CreateFirstPhaseResultEmitter(ProjectionNamesBuilder) CreateProjectionProcessingPhases(IPublisher, IPublisher, Guid, ProjectionNamesBuilder, PartitionStateCache, CoreProjection, IODispatcher, IProjectionProcessingPhase) Declaration protected override IProjectionProcessingPhase[] CreateProjectionProcessingPhases(IPublisher publisher, IPublisher inputQueue, Guid projectionCorrelationId, ProjectionNamesBuilder namingBuilder, PartitionStateCache partitionStateCache, CoreProjection coreProjection, IODispatcher ioDispatcher, IProjectionProcessingPhase firstPhase) Parameters Type Name IPublisher publisher IPublisher inputQueue System.Guid projectionCorrelationId ProjectionNamesBuilder namingBuilder PartitionStateCache partitionStateCache CoreProjection coreProjection IODispatcher ioDispatcher IProjectionProcessingPhase firstPhase Returns Type Description IProjectionProcessingPhase [] Overrides EventReaderBasedProjectionProcessingStrategy.CreateProjectionProcessingPhases(IPublisher, IPublisher, Guid, ProjectionNamesBuilder, PartitionStateCache, CoreProjection, IODispatcher, IProjectionProcessingPhase) GetIsSlaveProjection() Declaration public override bool GetIsSlaveProjection() Returns Type Description System.Boolean Overrides ProjectionProcessingStrategy.GetIsSlaveProjection() GetProducesRunningResults() Declaration public override bool GetProducesRunningResults() Returns Type Description System.Boolean Overrides ProjectionProcessingStrategy.GetProducesRunningResults() GetSlaveProjections() Declaration public override SlaveProjectionDefinitions GetSlaveProjections() Returns Type Description SlaveProjectionDefinitions Overrides ProjectionProcessingStrategy.GetSlaveProjections() GetStopOnEof() Declaration public override bool GetStopOnEof() Returns Type Description System.Boolean Overrides ProjectionProcessingStrategy.GetStopOnEof() GetUseCheckpoints() Declaration public override bool GetUseCheckpoints() Returns Type Description System.Boolean Overrides ProjectionProcessingStrategy.GetUseCheckpoints() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.CheckpointWorkItemBase.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.CheckpointWorkItemBase.html",
    "title": "Class CheckpointWorkItemBase | Event Store",
    "keywords": "Class CheckpointWorkItemBase Inheritance System.Object StagedTask WorkItem CheckpointWorkItemBase CheckpointSuggestedWorkItem Inherited Members WorkItem._requiresRunning WorkItem.Queue WorkItem.Process(Int32, Action<Int32, Object>) WorkItem.RecordEventOrder() WorkItem.GetStatePartition() WorkItem.Load(CheckpointTag) WorkItem.ProcessEvent() WorkItem.WriteOutput() WorkItem.CompleteItem() WorkItem.NextStage(Object) WorkItem.SetCheckpointTag(CheckpointTag) WorkItem.SetProjectionQueue(CoreProjectionQueue) StagedTask.InitialCorrelationId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class CheckpointWorkItemBase : WorkItem Constructors CheckpointWorkItemBase() Declaration protected CheckpointWorkItemBase() CheckpointWorkItemBase(Object) Declaration protected CheckpointWorkItemBase(object correlation) Parameters Type Name System.Object correlation Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.CheckpointTagVersion.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.CheckpointTagVersion.html",
    "title": "Struct CheckpointTagVersion | Event Store",
    "keywords": "Struct CheckpointTagVersion Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public struct CheckpointTagVersion Fields ExtraMetadata Declaration public Dictionary<string, JToken> ExtraMetadata Field Value Type System.Collections.Generic.Dictionary < System.String , Newtonsoft.Json.Linq.JToken > SystemVersion Declaration public int SystemVersion Field Value Type System.Int32 Tag Declaration public CheckpointTag Tag Field Value Type CheckpointTag Version Declaration public ProjectionVersion Version Field Value Type ProjectionVersion Methods AdjustBy(PositionTagger, ProjectionVersion) Declaration public CheckpointTag AdjustBy(PositionTagger tagger, ProjectionVersion version) Parameters Type Name PositionTagger tagger ProjectionVersion version Returns Type Description CheckpointTag Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) EnumExtensions.EnumValueName<T>(T) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.CheckpointTagJsonConverter.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.CheckpointTagJsonConverter.html",
    "title": "Class CheckpointTagJsonConverter | Event Store",
    "keywords": "Class CheckpointTagJsonConverter Inheritance System.Object Newtonsoft.Json.JsonConverter CheckpointTagJsonConverter Inherited Members Newtonsoft.Json.JsonConverter.CanRead Newtonsoft.Json.JsonConverter.CanWrite System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class CheckpointTagJsonConverter : JsonConverter Methods CanConvert(Type) Declaration public override bool CanConvert(Type objectType) Parameters Type Name System.Type objectType Returns Type Description System.Boolean Overrides Newtonsoft.Json.JsonConverter.CanConvert(System.Type) ReadJson(JsonReader, Type, Object, JsonSerializer) Declaration public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer) Parameters Type Name Newtonsoft.Json.JsonReader reader System.Type objectType System.Object existingValue Newtonsoft.Json.JsonSerializer serializer Returns Type Description System.Object Overrides Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, System.Object, Newtonsoft.Json.JsonSerializer) WriteJson(JsonWriter, Object, JsonSerializer) Declaration public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer) Parameters Type Name Newtonsoft.Json.JsonWriter writer System.Object value Newtonsoft.Json.JsonSerializer serializer Overrides Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, System.Object, Newtonsoft.Json.JsonSerializer) Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParamsBuilder.html",
    "title": "Class PersistentSubscriptionParamsBuilder | Event Store",
    "keywords": "Class PersistentSubscriptionParamsBuilder Builds a PersistentSubscriptionParams object. Inheritance System.Object PersistentSubscriptionParamsBuilder Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.PersistentSubscription Assembly : EventStore.Core.dll Syntax public class PersistentSubscriptionParamsBuilder Methods CheckPointAfter(TimeSpan) Sets the time after which the subscription should be checkpointed Declaration public PersistentSubscriptionParamsBuilder CheckPointAfter(TimeSpan time) Parameters Type Name System.TimeSpan time Returns Type Description PersistentSubscriptionParamsBuilder A new PersistentSubscriptionParamsBuilder CreateFor(String, String) Creates a new PersistentSubscriptionParamsBuilder object Declaration public static PersistentSubscriptionParamsBuilder CreateFor(string streamName, string groupName) Parameters Type Name System.String streamName System.String groupName Returns Type Description PersistentSubscriptionParamsBuilder a new PersistentSubscriptionParamsBuilder object CustomConsumerStrategy(IPersistentSubscriptionConsumerStrategy) Sets the consumer strategy to the one provided. Declaration public PersistentSubscriptionParamsBuilder CustomConsumerStrategy(IPersistentSubscriptionConsumerStrategy consumerStrategy) Parameters Type Name IPersistentSubscriptionConsumerStrategy consumerStrategy Returns Type Description PersistentSubscriptionParamsBuilder DoNotResolveLinkTos() Sets the option to not resolve linktos on events that are found for this subscription. Declaration public PersistentSubscriptionParamsBuilder DoNotResolveLinkTos() Returns Type Description PersistentSubscriptionParamsBuilder A new PersistentSubscriptionParamsBuilder DontTimeoutMessages() Sets the timeout timespan to about 30k years. Declaration public PersistentSubscriptionParamsBuilder DontTimeoutMessages() Returns Type Description PersistentSubscriptionParamsBuilder A new PersistentSubscriptionParamsBuilder MaximumToCheckPoint(Int32) Sets the maximum number of items to checkpoint Declaration public PersistentSubscriptionParamsBuilder MaximumToCheckPoint(int count) Parameters Type Name System.Int32 count Returns Type Description PersistentSubscriptionParamsBuilder A new PersistentSubscriptionParamsBuilder MinimumToCheckPoint(Int32) Sets the minimum number of items to checkpoint Declaration public PersistentSubscriptionParamsBuilder MinimumToCheckPoint(int count) Parameters Type Name System.Int32 count Returns Type Description PersistentSubscriptionParamsBuilder A new PersistentSubscriptionParamsBuilder PreferDispatchToSingle() If set the subscription will prefer if possible to dispatch only to a single of the connected clients. If however the buffer limits are reached on that client it will begin sending to other clients. Declaration public PersistentSubscriptionParamsBuilder PreferDispatchToSingle() Returns Type Description PersistentSubscriptionParamsBuilder A new PersistentSubscriptionParamsBuilder PreferRoundRobin() If set the subscription will prefer if possible to round robin between the clients that are connected. Declaration public PersistentSubscriptionParamsBuilder PreferRoundRobin() Returns Type Description PersistentSubscriptionParamsBuilder A new PersistentSubscriptionParamsBuilder ResolveLinkTos() Sets the option to resolve linktos on events that are found for this subscription. Declaration public PersistentSubscriptionParamsBuilder ResolveLinkTos() Returns Type Description PersistentSubscriptionParamsBuilder A new PersistentSubscriptionParamsBuilder StartFrom(Int32) Sets that the subscription should start from a specified location of the stream. Declaration public PersistentSubscriptionParamsBuilder StartFrom(int position) Parameters Type Name System.Int32 position Returns Type Description PersistentSubscriptionParamsBuilder A new PersistentSubscriptionParamsBuilder StartFromBeginning() Sets that the subscription should start from the beginning of the stream. Declaration public PersistentSubscriptionParamsBuilder StartFromBeginning() Returns Type Description PersistentSubscriptionParamsBuilder A new PersistentSubscriptionParamsBuilder StartFromCurrent() Sets that the subscription should start from where the stream is when the subscription is first connected. Declaration public PersistentSubscriptionParamsBuilder StartFromCurrent() Returns Type Description PersistentSubscriptionParamsBuilder A new PersistentSubscriptionParamsBuilder WithCheckpointReader(IPersistentSubscriptionCheckpointReader) Sets the checkpoint reader for the instance Declaration public PersistentSubscriptionParamsBuilder WithCheckpointReader(IPersistentSubscriptionCheckpointReader reader) Parameters Type Name IPersistentSubscriptionCheckpointReader reader Returns Type Description PersistentSubscriptionParamsBuilder WithCheckpointWriter(IPersistentSubscriptionCheckpointWriter) Sets the check point reader for the subscription Declaration public PersistentSubscriptionParamsBuilder WithCheckpointWriter(IPersistentSubscriptionCheckpointWriter writer) Parameters Type Name IPersistentSubscriptionCheckpointWriter writer Returns Type Description PersistentSubscriptionParamsBuilder WithEventLoader(IPersistentSubscriptionStreamReader) Sets the event loader for the subscription Declaration public PersistentSubscriptionParamsBuilder WithEventLoader(IPersistentSubscriptionStreamReader loader) Parameters Type Name IPersistentSubscriptionStreamReader loader Returns Type Description PersistentSubscriptionParamsBuilder WithExtraStatistics() Sets the option to include further latency statistics. These statistics have a cost and should not be used in high performance situations. Declaration public PersistentSubscriptionParamsBuilder WithExtraStatistics() Returns Type Description PersistentSubscriptionParamsBuilder A new PersistentSubscriptionParamsBuilder WithHistoryBufferSizeOf(Int32) Sets the size of the read batch used when paging in history for the subscription sizes should not be too big ... Declaration public PersistentSubscriptionParamsBuilder WithHistoryBufferSizeOf(int count) Parameters Type Name System.Int32 count Returns Type Description PersistentSubscriptionParamsBuilder A new PersistentSubscriptionParamsBuilder WithLiveBufferSizeOf(Int32) Sets the size of the live buffer for the subscription. This is the buffer used to cache messages while sending messages as they happen. The count is in terms of the number of messages to cache. Declaration public PersistentSubscriptionParamsBuilder WithLiveBufferSizeOf(int count) Parameters Type Name System.Int32 count Returns Type Description PersistentSubscriptionParamsBuilder A new PersistentSubscriptionParamsBuilder WithMaxRetriesOf(Int32) Sets the number of times a message should be retried before being considered a bad message Declaration public PersistentSubscriptionParamsBuilder WithMaxRetriesOf(int count) Parameters Type Name System.Int32 count Returns Type Description PersistentSubscriptionParamsBuilder A new PersistentSubscriptionParamsBuilder WithMessageParker(IPersistentSubscriptionMessageParker) Sets the message parker for the instance Declaration public PersistentSubscriptionParamsBuilder WithMessageParker(IPersistentSubscriptionMessageParker parker) Parameters Type Name IPersistentSubscriptionMessageParker parker Returns Type Description PersistentSubscriptionParamsBuilder WithMessageTimeoutOf(TimeSpan) Sets the timeout for a message (will be retried if an ack is not received within this timespan) Declaration public PersistentSubscriptionParamsBuilder WithMessageTimeoutOf(TimeSpan timeout) Parameters Type Name System.TimeSpan timeout Returns Type Description PersistentSubscriptionParamsBuilder A new PersistentSubscriptionParamsBuilder WithNamedConsumerStrategy(IPersistentSubscriptionConsumerStrategy) Sets the size of the read batch used when paging in history for the subscription sizes should not be too big ... Declaration public PersistentSubscriptionParamsBuilder WithNamedConsumerStrategy(IPersistentSubscriptionConsumerStrategy consumerStrategy) Parameters Type Name IPersistentSubscriptionConsumerStrategy consumerStrategy Returns Type Description PersistentSubscriptionParamsBuilder A new PersistentSubscriptionParamsBuilder WithReadBatchOf(Int32) Sets the size of the read batch used when paging in history for the subscription sizes should not be too big ... Declaration public PersistentSubscriptionParamsBuilder WithReadBatchOf(int count) Parameters Type Name System.Int32 count Returns Type Description PersistentSubscriptionParamsBuilder A new PersistentSubscriptionParamsBuilder Operators Implicit(PersistentSubscriptionParamsBuilder to PersistentSubscriptionParams) Builds a PersistentSubscriptionParams object from a PersistentSubscriptionParamsBuilder . Declaration public static implicit operator PersistentSubscriptionParams(PersistentSubscriptionParamsBuilder builder) Parameters Type Name PersistentSubscriptionParamsBuilder builder Returns Type Description PersistentSubscriptionParams Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionParams.html",
    "title": "Class PersistentSubscriptionParams | Event Store",
    "keywords": "Class PersistentSubscriptionParams Inheritance System.Object PersistentSubscriptionParams Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.PersistentSubscription Assembly : EventStore.Core.dll Syntax public class PersistentSubscriptionParams Constructors PersistentSubscriptionParams(Boolean, String, String, String, Int64, Boolean, TimeSpan, Int32, Int32, Int32, Int32, TimeSpan, Int32, Int32, Int32, IPersistentSubscriptionConsumerStrategy, IPersistentSubscriptionStreamReader, IPersistentSubscriptionCheckpointReader, IPersistentSubscriptionCheckpointWriter, IPersistentSubscriptionMessageParker) Declaration public PersistentSubscriptionParams(bool resolveLinkTos, string subscriptionId, string eventStreamId, string groupName, long startFrom, bool extraStatistics, TimeSpan messageTimeout, int maxRetryCount, int liveBufferSize, int bufferSize, int readBatchSize, TimeSpan checkPointAfter, int minCheckPointCount, int maxCheckPointCount, int maxSubscriberCount, IPersistentSubscriptionConsumerStrategy consumerStrategy, IPersistentSubscriptionStreamReader streamReader, IPersistentSubscriptionCheckpointReader checkpointReader, IPersistentSubscriptionCheckpointWriter checkpointWriter, IPersistentSubscriptionMessageParker messageParker) Parameters Type Name System.Boolean resolveLinkTos System.String subscriptionId System.String eventStreamId System.String groupName System.Int64 startFrom System.Boolean extraStatistics System.TimeSpan messageTimeout System.Int32 maxRetryCount System.Int32 liveBufferSize System.Int32 bufferSize System.Int32 readBatchSize System.TimeSpan checkPointAfter System.Int32 minCheckPointCount System.Int32 maxCheckPointCount System.Int32 maxSubscriberCount IPersistentSubscriptionConsumerStrategy consumerStrategy IPersistentSubscriptionStreamReader streamReader IPersistentSubscriptionCheckpointReader checkpointReader IPersistentSubscriptionCheckpointWriter checkpointWriter IPersistentSubscriptionMessageParker messageParker Properties BufferSize Declaration public int BufferSize { get; } Property Value Type System.Int32 CheckPointAfter Declaration public TimeSpan CheckPointAfter { get; } Property Value Type System.TimeSpan CheckpointReader Declaration public IPersistentSubscriptionCheckpointReader CheckpointReader { get; } Property Value Type IPersistentSubscriptionCheckpointReader CheckpointWriter Declaration public IPersistentSubscriptionCheckpointWriter CheckpointWriter { get; } Property Value Type IPersistentSubscriptionCheckpointWriter ConsumerStrategy Declaration public IPersistentSubscriptionConsumerStrategy ConsumerStrategy { get; } Property Value Type IPersistentSubscriptionConsumerStrategy EventStreamId Declaration public string EventStreamId { get; } Property Value Type System.String ExtraStatistics Declaration public bool ExtraStatistics { get; } Property Value Type System.Boolean GroupName Declaration public string GroupName { get; } Property Value Type System.String LiveBufferSize Declaration public int LiveBufferSize { get; } Property Value Type System.Int32 MaxCheckPointCount Declaration public int MaxCheckPointCount { get; } Property Value Type System.Int32 MaxRetryCount Declaration public int MaxRetryCount { get; } Property Value Type System.Int32 MaxSubscriberCount Declaration public int MaxSubscriberCount { get; } Property Value Type System.Int32 MessageParker Declaration public IPersistentSubscriptionMessageParker MessageParker { get; } Property Value Type IPersistentSubscriptionMessageParker MessageTimeout Declaration public TimeSpan MessageTimeout { get; } Property Value Type System.TimeSpan MinCheckPointCount Declaration public int MinCheckPointCount { get; } Property Value Type System.Int32 ParkedMessageStream Declaration public string ParkedMessageStream { get; } Property Value Type System.String ReadBatchSize Declaration public int ReadBatchSize { get; } Property Value Type System.Int32 ResolveLinkTos Declaration public bool ResolveLinkTos { get; } Property Value Type System.Boolean StartFrom Declaration public long StartFrom { get; } Property Value Type System.Int64 StreamReader Declaration public IPersistentSubscriptionStreamReader StreamReader { get; } Property Value Type IPersistentSubscriptionStreamReader SubscriptionId Declaration public string SubscriptionId { get; } Property Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionMessageParker.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionMessageParker.html",
    "title": "Class PersistentSubscriptionMessageParker | Event Store",
    "keywords": "Class PersistentSubscriptionMessageParker Inheritance System.Object PersistentSubscriptionMessageParker Implements IPersistentSubscriptionMessageParker Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.PersistentSubscription Assembly : EventStore.Core.dll Syntax public class PersistentSubscriptionMessageParker : IPersistentSubscriptionMessageParker Constructors PersistentSubscriptionMessageParker(String, IODispatcher) Declaration public PersistentSubscriptionMessageParker(string subscriptionId, IODispatcher ioDispatcher) Parameters Type Name System.String subscriptionId IODispatcher ioDispatcher Methods BeginDelete(Action<IPersistentSubscriptionMessageParker>) Declaration public void BeginDelete(Action<IPersistentSubscriptionMessageParker> completed) Parameters Type Name System.Action < IPersistentSubscriptionMessageParker > completed BeginMarkParkedMessagesReprocessed(Int64) Declaration public void BeginMarkParkedMessagesReprocessed(long sequence) Parameters Type Name System.Int64 sequence BeginParkMessage(ResolvedEvent, String, Action<ResolvedEvent, OperationResult>) Declaration public void BeginParkMessage(ResolvedEvent ev, string reason, Action<ResolvedEvent, OperationResult> completed) Parameters Type Name ResolvedEvent ev System.String reason System.Action < ResolvedEvent , OperationResult > completed BeginReadEndSequence(Action<Nullable<Int64>>) Declaration public void BeginReadEndSequence(Action<long? > completed) Parameters Type Name System.Action < System.Nullable < System.Int64 >> completed Implements IPersistentSubscriptionMessageParker Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ReplicationMessage.SlaveAssignment.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ReplicationMessage.SlaveAssignment.html",
    "title": "Class ReplicationMessage.SlaveAssignment | Event Store",
    "keywords": "Class ReplicationMessage.SlaveAssignment Inheritance System.Object Message ReplicationMessage.SlaveAssignment Implements ReplicationMessage.IReplicationMessage Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class SlaveAssignment : Message, ReplicationMessage.IReplicationMessage Constructors SlaveAssignment(Guid, Guid) Declaration public SlaveAssignment(Guid masterId, Guid subscriptionId) Parameters Type Name System.Guid masterId System.Guid subscriptionId Fields MasterId Declaration public readonly Guid MasterId Field Value Type System.Guid SubscriptionId Declaration public readonly Guid SubscriptionId Field Value Type System.Guid Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Explicit Interface Implementations ReplicationMessage.IReplicationMessage.MasterId Declaration Guid ReplicationMessage.IReplicationMessage.MasterId { get; } Returns Type Description System.Guid ReplicationMessage.IReplicationMessage.SubscriptionId Declaration Guid ReplicationMessage.IReplicationMessage.SubscriptionId { get; } Returns Type Description System.Guid Implements ReplicationMessage.IReplicationMessage Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.MonitoringMessage.GetFreshTcpConnectionStatsCompleted.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.MonitoringMessage.GetFreshTcpConnectionStatsCompleted.html",
    "title": "Class MonitoringMessage.GetFreshTcpConnectionStatsCompleted | Event Store",
    "keywords": "Class MonitoringMessage.GetFreshTcpConnectionStatsCompleted Inheritance System.Object Message MonitoringMessage.GetFreshTcpConnectionStatsCompleted Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class GetFreshTcpConnectionStatsCompleted : Message Constructors GetFreshTcpConnectionStatsCompleted(List<MonitoringMessage.TcpConnectionStats>) Declaration public GetFreshTcpConnectionStatsCompleted(List<MonitoringMessage.TcpConnectionStats> connectionStats) Parameters Type Name System.Collections.Generic.List < MonitoringMessage.TcpConnectionStats > connectionStats Fields ConnectionStats Declaration public readonly List<MonitoringMessage.TcpConnectionStats> ConnectionStats Field Value Type System.Collections.Generic.List < MonitoringMessage.TcpConnectionStats > Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.MonitoringMessage.GetFreshTcpConnectionStats.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.MonitoringMessage.GetFreshTcpConnectionStats.html",
    "title": "Class MonitoringMessage.GetFreshTcpConnectionStats | Event Store",
    "keywords": "Class MonitoringMessage.GetFreshTcpConnectionStats Inheritance System.Object Message MonitoringMessage.GetFreshTcpConnectionStats Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class GetFreshTcpConnectionStats : Message Constructors GetFreshTcpConnectionStats(IEnvelope) Declaration public GetFreshTcpConnectionStats(IEnvelope envelope) Parameters Type Name IEnvelope envelope Fields Envelope Declaration public readonly IEnvelope Envelope Field Value Type IEnvelope Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.MonitoringMessage.GetFreshStatsCompleted.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.MonitoringMessage.GetFreshStatsCompleted.html",
    "title": "Class MonitoringMessage.GetFreshStatsCompleted | Event Store",
    "keywords": "Class MonitoringMessage.GetFreshStatsCompleted Inheritance System.Object Message MonitoringMessage.GetFreshStatsCompleted Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class GetFreshStatsCompleted : Message Constructors GetFreshStatsCompleted(Boolean, Dictionary<String, Object>) Declaration public GetFreshStatsCompleted(bool success, Dictionary<string, object> stats) Parameters Type Name System.Boolean success System.Collections.Generic.Dictionary < System.String , System.Object > stats Fields Stats Declaration public readonly Dictionary<string, object> Stats Field Value Type System.Collections.Generic.Dictionary < System.String , System.Object > Success Declaration public readonly bool Success Field Value Type System.Boolean Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Rags.ValidationArgException.html": {
    "href": "dotnet-api/code/EventStore.Rags.ValidationArgException.html",
    "title": "Class ValidationArgException | Event Store",
    "keywords": "Class ValidationArgException An exception that should be thrown when an argument's value is not valid. Inheritance System.Object System.Exception ArgException ValidationArgException Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Rags Assembly : EventStore.Rags.dll Syntax public class ValidationArgException : ArgException, _Exception, ISerializable Constructors ValidationArgException(String) Creates a new ValidationArgException given a user friendly message Declaration public ValidationArgException(string msg) Parameters Type Name System.String msg ValidationArgException(String, Exception) Creates a new ValidationArgException given a user friendly message Declaration public ValidationArgException(string msg, Exception inner) Parameters Type Name System.String msg System.Exception inner Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Rags.UnknownActionArgException.html": {
    "href": "dotnet-api/code/EventStore.Rags.UnknownActionArgException.html",
    "title": "Class UnknownActionArgException | Event Store",
    "keywords": "Class UnknownActionArgException An exception that should be thrown when an unknown action argument is specified. Inheritance System.Object System.Exception ArgException UnknownActionArgException Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Rags Assembly : EventStore.Rags.dll Syntax public class UnknownActionArgException : ArgException, _Exception, ISerializable Constructors UnknownActionArgException(String) Creates a new UnknownActionArgException given a user friendly message Declaration public UnknownActionArgException(string msg) Parameters Type Name System.String msg UnknownActionArgException(String, Exception) Creates a new UnknownActionArgException given a user friendly message Declaration public UnknownActionArgException(string msg, Exception inner) Parameters Type Name System.String msg System.Exception inner Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.MultiStreamPositionTagger.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.MultiStreamPositionTagger.html",
    "title": "Class MultiStreamPositionTagger | Event Store",
    "keywords": "Class MultiStreamPositionTagger Inheritance System.Object PositionTagger MultiStreamPositionTagger Inherited Members PositionTagger.Phase System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class MultiStreamPositionTagger : PositionTagger Constructors MultiStreamPositionTagger(Int32, String[]) Declaration public MultiStreamPositionTagger(int phase, string[] streams) Parameters Type Name System.Int32 phase System.String [] streams Methods AdjustTag(CheckpointTag) Declaration public override CheckpointTag AdjustTag(CheckpointTag tag) Parameters Type Name CheckpointTag tag Returns Type Description CheckpointTag Overrides PositionTagger.AdjustTag(CheckpointTag) IsCompatible(CheckpointTag) Declaration public override bool IsCompatible(CheckpointTag checkpointTag) Parameters Type Name CheckpointTag checkpointTag Returns Type Description System.Boolean Overrides PositionTagger.IsCompatible(CheckpointTag) IsMessageAfterCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.CommittedEventDistributed) Declaration public override bool IsMessageAfterCheckpointTag(CheckpointTag previous, ReaderSubscriptionMessage.CommittedEventDistributed committedEvent) Parameters Type Name CheckpointTag previous ReaderSubscriptionMessage.CommittedEventDistributed committedEvent Returns Type Description System.Boolean Overrides PositionTagger.IsMessageAfterCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.CommittedEventDistributed) MakeCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.CommittedEventDistributed) Declaration public override CheckpointTag MakeCheckpointTag(CheckpointTag previous, ReaderSubscriptionMessage.CommittedEventDistributed committedEvent) Parameters Type Name CheckpointTag previous ReaderSubscriptionMessage.CommittedEventDistributed committedEvent Returns Type Description CheckpointTag Overrides PositionTagger.MakeCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.CommittedEventDistributed) MakeCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.EventReaderPartitionDeleted) Declaration public override CheckpointTag MakeCheckpointTag(CheckpointTag previous, ReaderSubscriptionMessage.EventReaderPartitionDeleted partitionDeleted) Parameters Type Name CheckpointTag previous ReaderSubscriptionMessage.EventReaderPartitionDeleted partitionDeleted Returns Type Description CheckpointTag Overrides PositionTagger.MakeCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.EventReaderPartitionDeleted) MakeCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.EventReaderPartitionEof) Declaration public override CheckpointTag MakeCheckpointTag(CheckpointTag previous, ReaderSubscriptionMessage.EventReaderPartitionEof partitionEof) Parameters Type Name CheckpointTag previous ReaderSubscriptionMessage.EventReaderPartitionEof partitionEof Returns Type Description CheckpointTag Overrides PositionTagger.MakeCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.EventReaderPartitionEof) MakeZeroCheckpointTag() Declaration public override CheckpointTag MakeZeroCheckpointTag() Returns Type Description CheckpointTag Overrides PositionTagger.MakeZeroCheckpointTag() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepareSlave.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepareSlave.html",
    "title": "Class CoreProjectionManagementMessage.CreateAndPrepareSlave | Event Store",
    "keywords": "Class CoreProjectionManagementMessage.CreateAndPrepareSlave Inheritance System.Object Message CoreProjectionManagementMessageBase CoreProjectionManagementControlMessage CoreProjectionManagementMessage.CreateAndPrepareSlave Inherited Members CoreProjectionManagementControlMessage.WorkerId CoreProjectionManagementMessageBase.ProjectionId Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class CreateAndPrepareSlave : CoreProjectionManagementControlMessage Constructors CreateAndPrepareSlave(Guid, Guid, String, ProjectionVersion, ProjectionConfig, Guid, Guid, String, String) Declaration public CreateAndPrepareSlave(Guid projectionId, Guid workerId, string name, ProjectionVersion version, ProjectionConfig config, Guid masterMasterWorkerId, Guid masterCoreProjectionId, string handlerType, string query) Parameters Type Name System.Guid projectionId System.Guid workerId System.String name ProjectionVersion version ProjectionConfig config System.Guid masterMasterWorkerId System.Guid masterCoreProjectionId System.String handlerType System.String query Properties Config Declaration public ProjectionConfig Config { get; } Property Value Type ProjectionConfig HandlerType Declaration public string HandlerType { get; } Property Value Type System.String MasterCoreProjectionId Declaration public Guid MasterCoreProjectionId { get; } Property Value Type System.Guid MasterWorkerId Declaration public Guid MasterWorkerId { get; } Property Value Type System.Guid MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides CoreProjectionManagementControlMessage.MsgTypeId Name Declaration public string Name { get; } Property Value Type System.String Query Declaration public string Query { get; } Property Value Type System.String Version Declaration public ProjectionVersion Version { get; } Property Value Type ProjectionVersion Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Tcp.ClientVersion.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Tcp.ClientVersion.html",
    "title": "Enum ClientVersion | Event Store",
    "keywords": "Enum ClientVersion Namespace : EventStore.Core.Services.Transport.Tcp Assembly : EventStore.Core.dll Syntax public enum ClientVersion : byte Fields Name Description V1 V2 Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<ClientVersion>() ProtobufExtensions.Serialize<ClientVersion>() ProtobufExtensions.SerializeToArray<ClientVersion>()"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Tcp.ClientTcpDispatcher.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Tcp.ClientTcpDispatcher.html",
    "title": "Class ClientTcpDispatcher | Event Store",
    "keywords": "Class ClientTcpDispatcher Inheritance System.Object TcpDispatcher ClientTcpDispatcher InternalTcpDispatcher Implements ITcpDispatcher Inherited Members TcpDispatcher.AddWrapper<T>(Func<T, TcpPackage>, ClientVersion) TcpDispatcher.AddUnwrapper<T>(TcpCommand, Func<TcpPackage, IEnvelope, T>, ClientVersion) TcpDispatcher.AddUnwrapper<T>(TcpCommand, Func<TcpPackage, IEnvelope, TcpConnectionManager, T>, ClientVersion) TcpDispatcher.AddUnwrapper<T>(TcpCommand, Func<TcpPackage, IEnvelope, IPrincipal, T>, ClientVersion) TcpDispatcher.AddUnwrapper<T>(TcpCommand, Func<TcpPackage, IEnvelope, IPrincipal, String, String, T>, ClientVersion) TcpDispatcher.AddUnwrapper<T>(TcpCommand, Func<TcpPackage, IEnvelope, IPrincipal, String, String, TcpConnectionManager, T>, ClientVersion) TcpDispatcher.WrapMessage(Message, Byte) TcpDispatcher.UnwrapPackage(TcpPackage, IEnvelope, IPrincipal, String, String, TcpConnectionManager, Byte) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Transport.Tcp Assembly : EventStore.Core.dll Syntax public class ClientTcpDispatcher : TcpDispatcher, ITcpDispatcher Constructors ClientTcpDispatcher() Declaration public ClientTcpDispatcher() Implements ITcpDispatcher Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Http.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Http.html",
    "title": "Namespace EventStore.Core.Services.Transport.Http | Event Store",
    "keywords": "Namespace EventStore.Core.Services.Transport.Http Classes AutoEventConverter Configure ControllerAction Convert DescriptionDocument Format HttpMessagePipe HttpResponseConfiguratorArgs HttpResponseFormatterArgs HttpService Link Links MessageSender<T> NaiveUriRouter ResponseConfiguration SendToHttpEnvelope SendToHttpEnvelope<TExpectedResponseMessage> SendToHttpWithConversionEnvelope<TExpectedResponseMessage, TExpectedHttpFormattedResponseMessage> TrieUriRouter UriToActionMatch Structs RequestParams Interfaces IHttpController IHttpForwarder IHttpSender IHttpService IMessageSender ISender<T> IUriRouter Enums ServiceAccessibility"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Http.UriToActionMatch.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Http.UriToActionMatch.html",
    "title": "Class UriToActionMatch | Event Store",
    "keywords": "Class UriToActionMatch Inheritance System.Object UriToActionMatch Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Transport.Http Assembly : EventStore.Core.dll Syntax public class UriToActionMatch Constructors UriToActionMatch(UriTemplateMatch, ControllerAction, Func<HttpEntityManager, UriTemplateMatch, RequestParams>) Declaration public UriToActionMatch(UriTemplateMatch templateMatch, ControllerAction controllerAction, Func<HttpEntityManager, UriTemplateMatch, RequestParams> requestHandler) Parameters Type Name System.UriTemplateMatch templateMatch ControllerAction controllerAction System.Func < HttpEntityManager , System.UriTemplateMatch , RequestParams > requestHandler Fields ControllerAction Declaration public readonly ControllerAction ControllerAction Field Value Type ControllerAction RequestHandler Declaration public readonly Func<HttpEntityManager, UriTemplateMatch, RequestParams> RequestHandler Field Value Type System.Func < HttpEntityManager , System.UriTemplateMatch , RequestParams > TemplateMatch Declaration public readonly UriTemplateMatch TemplateMatch Field Value Type System.UriTemplateMatch Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Http.TrieUriRouter.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Http.TrieUriRouter.html",
    "title": "Class TrieUriRouter | Event Store",
    "keywords": "Class TrieUriRouter Inheritance System.Object TrieUriRouter Implements IUriRouter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Transport.Http Assembly : EventStore.Core.dll Syntax public class TrieUriRouter : IUriRouter Methods GetAllUriMatches(Uri) Declaration public List<UriToActionMatch> GetAllUriMatches(Uri uri) Parameters Type Name System.Uri uri Returns Type Description System.Collections.Generic.List < UriToActionMatch > RegisterAction(ControllerAction, Func<HttpEntityManager, UriTemplateMatch, RequestParams>) Declaration public void RegisterAction(ControllerAction action, Func<HttpEntityManager, UriTemplateMatch, RequestParams> handler) Parameters Type Name ControllerAction action System.Func < HttpEntityManager , System.UriTemplateMatch , RequestParams > handler Implements IUriRouter Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Http.ServiceAccessibility.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Http.ServiceAccessibility.html",
    "title": "Enum ServiceAccessibility | Event Store",
    "keywords": "Enum ServiceAccessibility Namespace : EventStore.Core.Services.Transport.Http Assembly : EventStore.Core.dll Syntax public enum ServiceAccessibility Fields Name Description Private Public Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<ServiceAccessibility>() ProtobufExtensions.Serialize<ServiceAccessibility>() ProtobufExtensions.SerializeToArray<ServiceAccessibility>()"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Http.SendToHttpWithConversionEnvelope-2.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Http.SendToHttpWithConversionEnvelope-2.html",
    "title": "Class SendToHttpWithConversionEnvelope<TExpectedResponseMessage, TExpectedHttpFormattedResponseMessage> | Event Store",
    "keywords": "Class SendToHttpWithConversionEnvelope<TExpectedResponseMessage, TExpectedHttpFormattedResponseMessage> Inheritance System.Object SendToHttpWithConversionEnvelope<TExpectedResponseMessage, TExpectedHttpFormattedResponseMessage> Implements IEnvelope Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Transport.Http Assembly : EventStore.Core.dll Syntax public class SendToHttpWithConversionEnvelope<TExpectedResponseMessage, TExpectedHttpFormattedResponseMessage> : IEnvelope where TExpectedResponseMessage : Message Type Parameters Name Description TExpectedResponseMessage TExpectedHttpFormattedResponseMessage Constructors SendToHttpWithConversionEnvelope(IPublisher, HttpEntityManager, Func<ICodec, TExpectedHttpFormattedResponseMessage, String>, Func<ICodec, TExpectedHttpFormattedResponseMessage, ResponseConfiguration>, Func<TExpectedResponseMessage, TExpectedHttpFormattedResponseMessage>, IEnvelope) Declaration public SendToHttpWithConversionEnvelope(IPublisher networkSendQueue, HttpEntityManager entity, Func<ICodec, TExpectedHttpFormattedResponseMessage, string> formatter, Func<ICodec, TExpectedHttpFormattedResponseMessage, ResponseConfiguration> configurator, Func<TExpectedResponseMessage, TExpectedHttpFormattedResponseMessage> convertor, IEnvelope nonMatchingEnvelope = null) Parameters Type Name IPublisher networkSendQueue HttpEntityManager entity System.Func < ICodec , TExpectedHttpFormattedResponseMessage, System.String > formatter System.Func < ICodec , TExpectedHttpFormattedResponseMessage, ResponseConfiguration > configurator System.Func <TExpectedResponseMessage, TExpectedHttpFormattedResponseMessage> convertor IEnvelope nonMatchingEnvelope Methods ReplyWith<T>(T) Declaration public void ReplyWith<T>(T message) where T : Message Parameters Type Name T message Type Parameters Name Description T Implements IEnvelope Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Http.SendToHttpEnvelope.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Http.SendToHttpEnvelope.html",
    "title": "Class SendToHttpEnvelope | Event Store",
    "keywords": "Class SendToHttpEnvelope Inheritance System.Object SendToHttpEnvelope Implements IEnvelope Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Transport.Http Assembly : EventStore.Core.dll Syntax public class SendToHttpEnvelope : IEnvelope Constructors SendToHttpEnvelope(IPublisher, HttpEntityManager, Func<HttpResponseFormatterArgs, Message, Object>, Func<HttpResponseConfiguratorArgs, Message, ResponseConfiguration>) Declaration public SendToHttpEnvelope(IPublisher networkSendQueue, HttpEntityManager entity, Func<HttpResponseFormatterArgs, Message, object> formatter, Func<HttpResponseConfiguratorArgs, Message, ResponseConfiguration> configurator) Parameters Type Name IPublisher networkSendQueue HttpEntityManager entity System.Func < HttpResponseFormatterArgs , Message , System.Object > formatter System.Func < HttpResponseConfiguratorArgs , Message , ResponseConfiguration > configurator Methods ReplyWith<T>(T) Declaration public void ReplyWith<T>(T message) where T : Message Parameters Type Name T message Type Parameters Name Description T Implements IEnvelope Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.StopCore.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.StopCore.html",
    "title": "Class ProjectionCoreServiceMessage.StopCore | Event Store",
    "keywords": "Class ProjectionCoreServiceMessage.StopCore Inheritance System.Object Message ProjectionCoreServiceMessage.StopCore Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class StopCore : Message Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.StartCore.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.StartCore.html",
    "title": "Class ProjectionCoreServiceMessage.StartCore | Event Store",
    "keywords": "Class ProjectionCoreServiceMessage.StartCore Inheritance System.Object Message ProjectionCoreServiceMessage.StartCore Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class StartCore : Message Constructors StartCore(Guid) Declaration public StartCore(Guid epochId) Parameters Type Name System.Guid epochId Fields EpochId Declaration public readonly Guid EpochId Field Value Type System.Guid Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResult.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResult.html",
    "title": "Class PartitionProcessingResult | Event Store",
    "keywords": "Class PartitionProcessingResult Inheritance System.Object Message PartitionProcessingResultBase PartitionProcessingResult Inherited Members PartitionProcessingResultBase.Partition PartitionProcessingResultBase.SubscriptionId PartitionProcessingResultBase.WorkerId PartitionProcessingResultBase.MasterProjectionId Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages Assembly : EventStore.Projections.Core.dll Syntax public sealed class PartitionProcessingResult : PartitionProcessingResultBase Constructors PartitionProcessingResult(Guid, Guid, Guid, String, Guid, CheckpointTag, String) Declaration public PartitionProcessingResult(Guid workerId, Guid masterProjectionId, Guid subscriptionId, string partition, Guid causedByGuid, CheckpointTag position, string result) Parameters Type Name System.Guid workerId System.Guid masterProjectionId System.Guid subscriptionId System.String partition System.Guid causedByGuid CheckpointTag position System.String result Properties CausedByGuid Declaration public Guid CausedByGuid { get; } Property Value Type System.Guid MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides PartitionProcessingResultBase.MsgTypeId Position Declaration public CheckpointTag Position { get; } Property Value Type CheckpointTag Result Declaration public string Result { get; } Property Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingProgressOutput.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingProgressOutput.html",
    "title": "Class PartitionProcessingProgressOutput | Event Store",
    "keywords": "Class PartitionProcessingProgressOutput Inheritance System.Object Message PartitionProcessingResultOutputBase PartitionProcessingProgressOutput Inherited Members PartitionProcessingResultOutputBase.Partition PartitionProcessingResultOutputBase.SubscriptionId PartitionProcessingResultOutputBase.WorkerId PartitionProcessingResultOutputBase.MasterProjectionId Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages Assembly : EventStore.Projections.Core.dll Syntax public sealed class PartitionProcessingProgressOutput : PartitionProcessingResultOutputBase Constructors PartitionProcessingProgressOutput(Guid, Guid, Guid, Single) Declaration public PartitionProcessingProgressOutput(Guid workerId, Guid masterProjectionId, Guid subscriptionId, float progress) Parameters Type Name System.Guid workerId System.Guid masterProjectionId System.Guid subscriptionId System.Single progress Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides PartitionProcessingResultOutputBase.MsgTypeId Progress Declaration public float Progress { get; } Property Value Type System.Single Methods AsInput() Declaration public override Message AsInput() Returns Type Description Message Overrides PartitionProcessingResultOutputBase.AsInput() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingProgress.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingProgress.html",
    "title": "Class PartitionProcessingProgress | Event Store",
    "keywords": "Class PartitionProcessingProgress Inheritance System.Object Message PartitionProcessingResultBase PartitionProcessingProgress Inherited Members PartitionProcessingResultBase.Partition PartitionProcessingResultBase.SubscriptionId PartitionProcessingResultBase.WorkerId PartitionProcessingResultBase.MasterProjectionId Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages Assembly : EventStore.Projections.Core.dll Syntax public sealed class PartitionProcessingProgress : PartitionProcessingResultBase Constructors PartitionProcessingProgress(Guid, Guid, Guid, Single) Declaration public PartitionProcessingProgress(Guid workerId, Guid masterProjectionId, Guid subscriptionId, float progress) Parameters Type Name System.Guid workerId System.Guid masterProjectionId System.Guid subscriptionId System.Single progress Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides PartitionProcessingResultBase.MsgTypeId Progress Declaration public float Progress { get; } Property Value Type System.Single Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionMeasuredOutput.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionMeasuredOutput.html",
    "title": "Class PartitionMeasuredOutput | Event Store",
    "keywords": "Class PartitionMeasuredOutput Inheritance System.Object Message PartitionProcessingResultOutputBase PartitionMeasuredOutput Inherited Members PartitionProcessingResultOutputBase.Partition PartitionProcessingResultOutputBase.SubscriptionId PartitionProcessingResultOutputBase.WorkerId PartitionProcessingResultOutputBase.MasterProjectionId Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages Assembly : EventStore.Projections.Core.dll Syntax public sealed class PartitionMeasuredOutput : PartitionProcessingResultOutputBase Constructors PartitionMeasuredOutput(Guid, Guid, Guid, String, Int64) Declaration public PartitionMeasuredOutput(Guid workerId, Guid masterProjectionId, Guid subscriptionId, string partition, long size) Parameters Type Name System.Guid workerId System.Guid masterProjectionId System.Guid subscriptionId System.String partition System.Int64 size Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides PartitionProcessingResultOutputBase.MsgTypeId Size Declaration public long Size { get; } Property Value Type System.Int64 Methods AsInput() Declaration public override Message AsInput() Returns Type Description Message Overrides PartitionProcessingResultOutputBase.AsInput() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionMeasured.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionMeasured.html",
    "title": "Class PartitionMeasured | Event Store",
    "keywords": "Class PartitionMeasured Inheritance System.Object Message PartitionProcessingResultBase PartitionMeasured Inherited Members PartitionProcessingResultBase.Partition PartitionProcessingResultBase.SubscriptionId PartitionProcessingResultBase.WorkerId PartitionProcessingResultBase.MasterProjectionId Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages Assembly : EventStore.Projections.Core.dll Syntax public sealed class PartitionMeasured : PartitionProcessingResultBase Constructors PartitionMeasured(Guid, Guid, Guid, String, Int64) Declaration public PartitionMeasured(Guid workerId, Guid masterProjectionId, Guid subscriptionId, string partition, long size) Parameters Type Name System.Guid workerId System.Guid masterProjectionId System.Guid subscriptionId System.String partition System.Int64 size Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides PartitionProcessingResultBase.MsgTypeId Size Declaration public long Size { get; } Property Value Type System.Int64 Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.IQuerySources.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.IQuerySources.html",
    "title": "Interface IQuerySources | Event Store",
    "keywords": "Interface IQuerySources Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public interface IQuerySources Properties AllEvents Declaration bool AllEvents { get; } Property Value Type System.Boolean AllStreams Declaration bool AllStreams { get; } Property Value Type System.Boolean ByCustomPartitions Declaration bool ByCustomPartitions { get; } Property Value Type System.Boolean ByStreams Declaration bool ByStreams { get; } Property Value Type System.Boolean CatalogStream Declaration string CatalogStream { get; } Property Value Type System.String Categories Declaration string[] Categories { get; } Property Value Type System.String [] DefinesCatalogTransform Declaration bool DefinesCatalogTransform { get; } Property Value Type System.Boolean DefinesFold Declaration bool DefinesFold { get; } Property Value Type System.Boolean DefinesStateTransform Declaration bool DefinesStateTransform { get; } Property Value Type System.Boolean DisableParallelismOption Declaration bool DisableParallelismOption { get; } Property Value Type System.Boolean Events Declaration string[] Events { get; } Property Value Type System.String [] HandlesDeletedNotifications Declaration bool HandlesDeletedNotifications { get; } Property Value Type System.Boolean IncludeLinksOption Declaration bool IncludeLinksOption { get; } Property Value Type System.Boolean IsBiState Declaration bool IsBiState { get; } Property Value Type System.Boolean LimitingCommitPosition Declaration long? LimitingCommitPosition { get; } Property Value Type System.Nullable < System.Int64 > PartitionResultStreamNamePatternOption Declaration string PartitionResultStreamNamePatternOption { get; } Property Value Type System.String ProcessingLagOption Declaration int? ProcessingLagOption { get; } Property Value Type System.Nullable < System.Int32 > ProducesResults Declaration bool ProducesResults { get; } Property Value Type System.Boolean ReorderEventsOption Declaration bool ReorderEventsOption { get; } Property Value Type System.Boolean ResultStreamNameOption Declaration string ResultStreamNameOption { get; } Property Value Type System.String Streams Declaration string[] Streams { get; } Property Value Type System.String [] Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) QuerySourcesExtensions.HasStreams(IQuerySources) QuerySourcesExtensions.HasCategories(IQuerySources) QuerySourcesExtensions.HasEvents(IQuerySources) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.IProjectionCheckpointManager.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.IProjectionCheckpointManager.html",
    "title": "Interface IProjectionCheckpointManager | Event Store",
    "keywords": "Interface IProjectionCheckpointManager Inherited Members IHandle<CoreProjectionProcessingMessage.ReadyForCheckpoint>.Handle(CoreProjectionProcessingMessage.ReadyForCheckpoint) IHandle<CoreProjectionProcessingMessage.RestartRequested>.Handle(CoreProjectionProcessingMessage.RestartRequested) IHandle<CoreProjectionProcessingMessage.Failed>.Handle(CoreProjectionProcessingMessage.Failed) Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public interface IProjectionCheckpointManager : IHandle<CoreProjectionProcessingMessage.ReadyForCheckpoint>, IHandle<CoreProjectionProcessingMessage.RestartRequested>, IHandle<CoreProjectionProcessingMessage.Failed> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.IEmittedStreamContainer.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.IEmittedStreamContainer.html",
    "title": "Interface IEmittedStreamContainer | Event Store",
    "keywords": "Interface IEmittedStreamContainer Inherited Members IHandle<CoreProjectionProcessingMessage.ReadyForCheckpoint>.Handle(CoreProjectionProcessingMessage.ReadyForCheckpoint) IHandle<CoreProjectionProcessingMessage.RestartRequested>.Handle(CoreProjectionProcessingMessage.RestartRequested) IHandle<CoreProjectionProcessingMessage.Failed>.Handle(CoreProjectionProcessingMessage.Failed) IHandle<CoreProjectionProcessingMessage.EmittedStreamAwaiting>.Handle(CoreProjectionProcessingMessage.EmittedStreamAwaiting) IHandle<CoreProjectionProcessingMessage.EmittedStreamWriteCompleted>.Handle(CoreProjectionProcessingMessage.EmittedStreamWriteCompleted) Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public interface IEmittedStreamContainer : IProjectionCheckpointManager, IHandle<CoreProjectionProcessingMessage.ReadyForCheckpoint>, IHandle<CoreProjectionProcessingMessage.RestartRequested>, IHandle<CoreProjectionProcessingMessage.Failed>, IHandle<CoreProjectionProcessingMessage.EmittedStreamAwaiting>, IHandle<CoreProjectionProcessingMessage.EmittedStreamWriteCompleted> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ICoreProjection.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ICoreProjection.html",
    "title": "Interface ICoreProjection | Event Store",
    "keywords": "Interface ICoreProjection Inherited Members IHandle<CoreProjectionProcessingMessage.CheckpointLoaded>.Handle(CoreProjectionProcessingMessage.CheckpointLoaded) IHandle<CoreProjectionProcessingMessage.PrerecordedEventsLoaded>.Handle(CoreProjectionProcessingMessage.PrerecordedEventsLoaded) IHandle<CoreProjectionProcessingMessage.CheckpointCompleted>.Handle(CoreProjectionProcessingMessage.CheckpointCompleted) IHandle<CoreProjectionProcessingMessage.RestartRequested>.Handle(CoreProjectionProcessingMessage.RestartRequested) IHandle<CoreProjectionProcessingMessage.Failed>.Handle(CoreProjectionProcessingMessage.Failed) Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public interface ICoreProjection : IHandle<CoreProjectionProcessingMessage.CheckpointLoaded>, IHandle<CoreProjectionProcessingMessage.PrerecordedEventsLoaded>, IHandle<CoreProjectionProcessingMessage.CheckpointCompleted>, IHandle<CoreProjectionProcessingMessage.RestartRequested>, IHandle<CoreProjectionProcessingMessage.Failed> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.EventReaders.Feeds.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.EventReaders.Feeds.html",
    "title": "Namespace EventStore.Projections.Core.Messages.EventReaders.Feeds | Event Store",
    "keywords": "Namespace EventStore.Projections.Core.Messages.EventReaders.Feeds Classes FeedReaderMessage FeedReaderMessage.FeedPage FeedReaderMessage.FeedReaderMessageBase FeedReaderMessage.ReadPage Enums FeedReaderMessage.FeedPage.ErrorStatus"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.EventReaders.Feeds.FeedReaderMessage.html",
    "title": "Class FeedReaderMessage | Event Store",
    "keywords": "Class FeedReaderMessage Inheritance System.Object FeedReaderMessage Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages.EventReaders.Feeds Assembly : EventStore.Projections.Core.dll Syntax public static class FeedReaderMessage"
  },
  "dotnet-api/code/EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.html",
    "title": "Class IndexBackend | Event Store",
    "keywords": "Class IndexBackend Inheritance System.Object IndexBackend Implements IIndexBackend Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Storage.ReaderIndex Assembly : EventStore.Core.dll Syntax public class IndexBackend : IIndexBackend Constructors IndexBackend(ObjectPool<ITransactionFileReader>, Int32, Int32) Declaration public IndexBackend(ObjectPool<ITransactionFileReader> readers, int lastEventNumberCacheCapacity, int metadataCacheCapacity) Parameters Type Name ObjectPool < ITransactionFileReader > readers System.Int32 lastEventNumberCacheCapacity System.Int32 metadataCacheCapacity Methods BorrowReader() Declaration public TFReaderLease BorrowReader() Returns Type Description TFReaderLease GetSystemSettings() Declaration public SystemSettings GetSystemSettings() Returns Type Description SystemSettings SetSystemSettings(SystemSettings) Declaration public void SetSystemSettings(SystemSettings systemSettings) Parameters Type Name SystemSettings systemSettings TryGetStreamLastEventNumber(String) Declaration public IndexBackend.EventNumberCached TryGetStreamLastEventNumber(string streamId) Parameters Type Name System.String streamId Returns Type Description IndexBackend.EventNumberCached TryGetStreamMetadata(String) Declaration public IndexBackend.MetadataCached TryGetStreamMetadata(string streamId) Parameters Type Name System.String streamId Returns Type Description IndexBackend.MetadataCached UpdateStreamLastEventNumber(Int32, String, Nullable<Int64>) Declaration public long? UpdateStreamLastEventNumber(int cacheVersion, string streamId, long? lastEventNumber) Parameters Type Name System.Int32 cacheVersion System.String streamId System.Nullable < System.Int64 > lastEventNumber Returns Type Description System.Nullable < System.Int64 > UpdateStreamMetadata(Int32, String, StreamMetadata) Declaration public StreamMetadata UpdateStreamMetadata(int cacheVersion, string streamId, StreamMetadata metadata) Parameters Type Name System.Int32 cacheVersion System.String streamId StreamMetadata metadata Returns Type Description StreamMetadata Explicit Interface Implementations IIndexBackend.SetStreamLastEventNumber(String, Int64) Declaration long? IIndexBackend.SetStreamLastEventNumber(string streamId, long lastEventNumber) Parameters Type Name System.String streamId System.Int64 lastEventNumber Returns Type Description System.Nullable < System.Int64 > IIndexBackend.SetStreamMetadata(String, StreamMetadata) Declaration StreamMetadata IIndexBackend.SetStreamMetadata(string streamId, StreamMetadata metadata) Parameters Type Name System.String streamId StreamMetadata metadata Returns Type Description StreamMetadata Implements IIndexBackend Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.MetadataCached.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.MetadataCached.html",
    "title": "Struct IndexBackend.MetadataCached | Event Store",
    "keywords": "Struct IndexBackend.MetadataCached Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Services.Storage.ReaderIndex Assembly : EventStore.Core.dll Syntax public struct MetadataCached Constructors MetadataCached(Int32, StreamMetadata) Declaration public MetadataCached(int version, StreamMetadata metadata) Parameters Type Name System.Int32 version StreamMetadata metadata Fields Metadata Declaration public readonly StreamMetadata Metadata Field Value Type StreamMetadata Version Declaration public readonly int Version Field Value Type System.Int32 Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) EnumExtensions.EnumValueName<T>(T) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.EventNumberCached.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Storage.ReaderIndex.IndexBackend.EventNumberCached.html",
    "title": "Struct IndexBackend.EventNumberCached | Event Store",
    "keywords": "Struct IndexBackend.EventNumberCached Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Services.Storage.ReaderIndex Assembly : EventStore.Core.dll Syntax public struct EventNumberCached Constructors EventNumberCached(Int32, Nullable<Int64>) Declaration public EventNumberCached(int version, long? lastEventNumber) Parameters Type Name System.Int32 version System.Nullable < System.Int64 > lastEventNumber Fields LastEventNumber Declaration public readonly long? LastEventNumber Field Value Type System.Nullable < System.Int64 > Version Declaration public readonly int Version Field Value Type System.Int32 Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) EnumExtensions.EnumValueName<T>(T) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.StorageMessage.WriteDelete.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.StorageMessage.WriteDelete.html",
    "title": "Class StorageMessage.WriteDelete | Event Store",
    "keywords": "Class StorageMessage.WriteDelete Inheritance System.Object Message StorageMessage.WriteDelete Implements StorageMessage.IPreconditionedWriteMessage StorageMessage.IFlushableMessage StorageMessage.IMasterWriteMessage Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class WriteDelete : Message, StorageMessage.IPreconditionedWriteMessage, StorageMessage.IFlushableMessage, StorageMessage.IMasterWriteMessage Constructors WriteDelete(Guid, IEnvelope, String, Int64, Boolean, DateTime) Declaration public WriteDelete(Guid correlationId, IEnvelope envelope, string eventStreamId, long expectedVersion, bool hardDelete, DateTime liveUntil) Parameters Type Name System.Guid correlationId IEnvelope envelope System.String eventStreamId System.Int64 expectedVersion System.Boolean hardDelete System.DateTime liveUntil Fields HardDelete Declaration public readonly bool HardDelete Field Value Type System.Boolean LiveUntil Declaration public readonly DateTime LiveUntil Field Value Type System.DateTime Properties CorrelationId Declaration public Guid CorrelationId { get; } Property Value Type System.Guid Envelope Declaration public IEnvelope Envelope { get; } Property Value Type IEnvelope EventStreamId Declaration public string EventStreamId { get; } Property Value Type System.String ExpectedVersion Declaration public long ExpectedVersion { get; } Property Value Type System.Int64 MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Implements StorageMessage.IPreconditionedWriteMessage StorageMessage.IFlushableMessage StorageMessage.IMasterWriteMessage Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.StorageMessage.WriteCommit.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.StorageMessage.WriteCommit.html",
    "title": "Class StorageMessage.WriteCommit | Event Store",
    "keywords": "Class StorageMessage.WriteCommit Inheritance System.Object Message StorageMessage.WriteCommit Implements StorageMessage.IFlushableMessage StorageMessage.IMasterWriteMessage Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class WriteCommit : Message, StorageMessage.IFlushableMessage, StorageMessage.IMasterWriteMessage Constructors WriteCommit(Guid, IEnvelope, Int64) Declaration public WriteCommit(Guid correlationId, IEnvelope envelope, long transactionPosition) Parameters Type Name System.Guid correlationId IEnvelope envelope System.Int64 transactionPosition Fields CorrelationId Declaration public readonly Guid CorrelationId Field Value Type System.Guid Envelope Declaration public readonly IEnvelope Envelope Field Value Type IEnvelope TransactionPosition Declaration public readonly long TransactionPosition Field Value Type System.Int64 Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Implements StorageMessage.IFlushableMessage StorageMessage.IMasterWriteMessage Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.StorageMessage.TfEofAtNonCommitRecord.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.StorageMessage.TfEofAtNonCommitRecord.html",
    "title": "Class StorageMessage.TfEofAtNonCommitRecord | Event Store",
    "keywords": "Class StorageMessage.TfEofAtNonCommitRecord Inheritance System.Object Message StorageMessage.TfEofAtNonCommitRecord Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class TfEofAtNonCommitRecord : Message Constructors TfEofAtNonCommitRecord() Declaration public TfEofAtNonCommitRecord() Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.StorageMessage.StreamDeleted.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.StorageMessage.StreamDeleted.html",
    "title": "Class StorageMessage.StreamDeleted | Event Store",
    "keywords": "Class StorageMessage.StreamDeleted Inheritance System.Object Message StorageMessage.StreamDeleted Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class StreamDeleted : Message Constructors StreamDeleted(Guid) Declaration public StreamDeleted(Guid correlationId) Parameters Type Name System.Guid correlationId Fields CorrelationId Declaration public readonly Guid CorrelationId Field Value Type System.Guid Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ReplicationMessageDto.DataChunkBulk.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ReplicationMessageDto.DataChunkBulk.html",
    "title": "Class ReplicationMessageDto.DataChunkBulk | Event Store",
    "keywords": "Class ReplicationMessageDto.DataChunkBulk Inheritance System.Object ReplicationMessageDto.DataChunkBulk Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax [ProtoContract] public class DataChunkBulk Constructors DataChunkBulk() Declaration public DataChunkBulk() DataChunkBulk(Byte[], Byte[], Int32, Int32, Int64, Byte[], Boolean) Declaration public DataChunkBulk(byte[] masterId, byte[] subscriptionId, int chunkStartNumber, int chunkEndNumber, long subscriptionPosition, byte[] dataBytes, bool completeChunk) Parameters Type Name System.Byte [] masterId System.Byte [] subscriptionId System.Int32 chunkStartNumber System.Int32 chunkEndNumber System.Int64 subscriptionPosition System.Byte [] dataBytes System.Boolean completeChunk Properties ChunkEndNumber Declaration [ProtoMember(4)] public int ChunkEndNumber { get; set; } Property Value Type System.Int32 ChunkStartNumber Declaration [ProtoMember(3)] public int ChunkStartNumber { get; set; } Property Value Type System.Int32 CompleteChunk Declaration [ProtoMember(7)] public bool CompleteChunk { get; set; } Property Value Type System.Boolean DataBytes Declaration [ProtoMember(6)] public byte[] DataBytes { get; set; } Property Value Type System.Byte [] MasterId Declaration [ProtoMember(1)] public byte[] MasterId { get; set; } Property Value Type System.Byte [] SubscriptionId Declaration [ProtoMember(2)] public byte[] SubscriptionId { get; set; } Property Value Type System.Byte [] SubscriptionPosition Declaration [ProtoMember(5)] public long SubscriptionPosition { get; set; } Property Value Type System.Int64 Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ReplicationMessageDto.CreateChunk.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ReplicationMessageDto.CreateChunk.html",
    "title": "Class ReplicationMessageDto.CreateChunk | Event Store",
    "keywords": "Class ReplicationMessageDto.CreateChunk Inheritance System.Object ReplicationMessageDto.CreateChunk Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax [ProtoContract] public class CreateChunk Constructors CreateChunk() Declaration public CreateChunk() CreateChunk(Byte[], Byte[], Byte[], Int32, Boolean) Declaration public CreateChunk(byte[] masterId, byte[] subscriptionId, byte[] chunkHeaderBytes, int fileSize, bool isCompletedChunk) Parameters Type Name System.Byte [] masterId System.Byte [] subscriptionId System.Byte [] chunkHeaderBytes System.Int32 fileSize System.Boolean isCompletedChunk Properties ChunkHeaderBytes Declaration [ProtoMember(3)] public byte[] ChunkHeaderBytes { get; set; } Property Value Type System.Byte [] FileSize Declaration [ProtoMember(4)] public int FileSize { get; set; } Property Value Type System.Int32 IsCompletedChunk Declaration [ProtoMember(5)] public bool IsCompletedChunk { get; set; } Property Value Type System.Boolean MasterId Declaration [ProtoMember(1)] public byte[] MasterId { get; set; } Property Value Type System.Byte [] SubscriptionId Declaration [ProtoMember(2)] public byte[] SubscriptionId { get; set; } Property Value Type System.Byte [] Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ReplicationMessageDto.CommitAck.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ReplicationMessageDto.CommitAck.html",
    "title": "Class ReplicationMessageDto.CommitAck | Event Store",
    "keywords": "Class ReplicationMessageDto.CommitAck Inheritance System.Object ReplicationMessageDto.CommitAck Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax [ProtoContract] public class CommitAck Constructors CommitAck() Declaration public CommitAck() CommitAck(Int64, Int64, Int64, Int64) Declaration public CommitAck(long logPosition, long transactionPosition, long firstEventNumber, long lastEventNumber) Parameters Type Name System.Int64 logPosition System.Int64 transactionPosition System.Int64 firstEventNumber System.Int64 lastEventNumber Properties FirstEventNumber Declaration [ProtoMember(3)] public long FirstEventNumber { get; set; } Property Value Type System.Int64 LastEventNumber Declaration [ProtoMember(4)] public long LastEventNumber { get; set; } Property Value Type System.Int64 LogPosition Declaration [ProtoMember(1)] public long LogPosition { get; set; } Property Value Type System.Int64 TransactionPosition Declaration [ProtoMember(2)] public long TransactionPosition { get; set; } Property Value Type System.Int64 Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Index.MergeResult.html": {
    "href": "dotnet-api/code/EventStore.Core.Index.MergeResult.html",
    "title": "Class MergeResult | Event Store",
    "keywords": "Class MergeResult Inheritance System.Object MergeResult Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Index Assembly : EventStore.Core.dll Syntax public class MergeResult Constructors MergeResult(IndexMap, List<PTable>) Declaration public MergeResult(IndexMap mergedMap, List<PTable> toDelete) Parameters Type Name IndexMap mergedMap System.Collections.Generic.List < PTable > toDelete Fields MergedMap Declaration public readonly IndexMap MergedMap Field Value Type IndexMap ToDelete Declaration public readonly List<PTable> ToDelete Field Value Type System.Collections.Generic.List < PTable > Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Index.IndexMap.html": {
    "href": "dotnet-api/code/EventStore.Core.Index.IndexMap.html",
    "title": "Class IndexMap | Event Store",
    "keywords": "Class IndexMap Inheritance System.Object IndexMap Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Index Assembly : EventStore.Core.dll Syntax public class IndexMap Fields CommitCheckpoint Declaration public readonly long CommitCheckpoint Field Value Type System.Int64 IndexMapVersion Declaration public const int IndexMapVersion = 2 Field Value Type System.Int32 PrepareCheckpoint Declaration public readonly long PrepareCheckpoint Field Value Type System.Int64 Version Declaration public readonly int Version Field Value Type System.Int32 Methods AddPTable(PTable, Int64, Int64, Func<String, UInt64, UInt64>, Func<IndexEntry, Boolean>, Func<IndexEntry, Tuple<String, Boolean>>, IIndexFilenameProvider, Byte, Int32, Int32, Boolean) Declaration public MergeResult AddPTable(PTable tableToAdd, long prepareCheckpoint, long commitCheckpoint, Func<string, ulong, ulong> upgradeHash, Func<IndexEntry, bool> existsAt, Func<IndexEntry, Tuple<string, bool>> recordExistsAt, IIndexFilenameProvider filenameProvider, byte version, int level, int indexCacheDepth = 16, bool skipIndexVerify = false) Parameters Type Name PTable tableToAdd System.Int64 prepareCheckpoint System.Int64 commitCheckpoint System.Func < System.String , System.UInt64 , System.UInt64 > upgradeHash System.Func < IndexEntry , System.Boolean > existsAt System.Func < IndexEntry , System.Tuple < System.String , System.Boolean >> recordExistsAt IIndexFilenameProvider filenameProvider System.Byte version System.Int32 level System.Int32 indexCacheDepth System.Boolean skipIndexVerify Returns Type Description MergeResult AddPTableForAutomaticMerge(PTable, Int64, Int64, Func<String, UInt64, UInt64>, Func<IndexEntry, Boolean>, Func<IndexEntry, Tuple<String, Boolean>>, IIndexFilenameProvider, Byte, Int32, Boolean) Declaration public MergeResult AddPTableForAutomaticMerge(PTable tableToAdd, long prepareCheckpoint, long commitCheckpoint, Func<string, ulong, ulong> upgradeHash, Func<IndexEntry, bool> existsAt, Func<IndexEntry, Tuple<string, bool>> recordExistsAt, IIndexFilenameProvider filenameProvider, byte version, int indexCacheDepth = 16, bool skipIndexVerify = false) Parameters Type Name PTable tableToAdd System.Int64 prepareCheckpoint System.Int64 commitCheckpoint System.Func < System.String , System.UInt64 , System.UInt64 > upgradeHash System.Func < IndexEntry , System.Boolean > existsAt System.Func < IndexEntry , System.Tuple < System.String , System.Boolean >> recordExistsAt IIndexFilenameProvider filenameProvider System.Byte version System.Int32 indexCacheDepth System.Boolean skipIndexVerify Returns Type Description MergeResult AddPTableForManualMerge(Int64, Int64, Func<String, UInt64, UInt64>, Func<IndexEntry, Boolean>, Func<IndexEntry, Tuple<String, Boolean>>, IIndexFilenameProvider, Byte, Int32, Boolean) Declaration public MergeResult AddPTableForManualMerge(long prepareCheckpoint, long commitCheckpoint, Func<string, ulong, ulong> upgradeHash, Func<IndexEntry, bool> existsAt, Func<IndexEntry, Tuple<string, bool>> recordExistsAt, IIndexFilenameProvider filenameProvider, byte version, int indexCacheDepth = 16, bool skipIndexVerify = false) Parameters Type Name System.Int64 prepareCheckpoint System.Int64 commitCheckpoint System.Func < System.String , System.UInt64 , System.UInt64 > upgradeHash System.Func < IndexEntry , System.Boolean > existsAt System.Func < IndexEntry , System.Tuple < System.String , System.Boolean >> recordExistsAt IIndexFilenameProvider filenameProvider System.Byte version System.Int32 indexCacheDepth System.Boolean skipIndexVerify Returns Type Description MergeResult CreateEmpty(Int32, Int32) Declaration public static IndexMap CreateEmpty(int maxTablesPerLevel, int maxTableLevelsForAutomaticMerge) Parameters Type Name System.Int32 maxTablesPerLevel System.Int32 maxTableLevelsForAutomaticMerge Returns Type Description IndexMap Dispose(TimeSpan) Declaration public void Dispose(TimeSpan timeout) Parameters Type Name System.TimeSpan timeout FromFile(String, Int32, Boolean, Int32, Boolean, Int32, Int32) Declaration public static IndexMap FromFile(string filename, int maxTablesPerLevel, bool loadPTables, int cacheDepth, bool skipIndexVerify, int threads, int maxAutoMergeLevel) Parameters Type Name System.String filename System.Int32 maxTablesPerLevel System.Boolean loadPTables System.Int32 cacheDepth System.Boolean skipIndexVerify System.Int32 threads System.Int32 maxAutoMergeLevel Returns Type Description IndexMap GetAllFilenames() Declaration public IEnumerable<string> GetAllFilenames() Returns Type Description System.Collections.Generic.IEnumerable < System.String > GetTableForManualMerge() Declaration public Tuple<int, PTable> GetTableForManualMerge() Returns Type Description System.Tuple < System.Int32 , PTable > InOrder() Declaration public IEnumerable<PTable> InOrder() Returns Type Description System.Collections.Generic.IEnumerable < PTable > InReverseOrder() Declaration public IEnumerable<PTable> InReverseOrder() Returns Type Description System.Collections.Generic.IEnumerable < PTable > SaveToFile(String) Declaration public void SaveToFile(string filename) Parameters Type Name System.String filename Scavenge(Guid, CancellationToken, Func<String, UInt64, UInt64>, Func<IndexEntry, Boolean>, Func<IndexEntry, Tuple<String, Boolean>>, IIndexFilenameProvider, Byte, Int32, Boolean) Declaration public ScavengeResult Scavenge(Guid toScavenge, CancellationToken ct, Func<string, ulong, ulong> upgradeHash, Func<IndexEntry, bool> existsAt, Func<IndexEntry, Tuple<string, bool>> recordExistsAt, IIndexFilenameProvider filenameProvider, byte version, int indexCacheDepth = 16, bool skipIndexVerify = false) Parameters Type Name System.Guid toScavenge System.Threading.CancellationToken ct System.Func < System.String , System.UInt64 , System.UInt64 > upgradeHash System.Func < IndexEntry , System.Boolean > existsAt System.Func < IndexEntry , System.Tuple < System.String , System.Boolean >> recordExistsAt IIndexFilenameProvider filenameProvider System.Byte version System.Int32 indexCacheDepth System.Boolean skipIndexVerify Returns Type Description ScavengeResult Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Index.IndexKey.html": {
    "href": "dotnet-api/code/EventStore.Core.Index.IndexKey.html",
    "title": "Struct IndexKey | Event Store",
    "keywords": "Struct IndexKey Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Index Assembly : EventStore.Core.dll Syntax public struct IndexKey Constructors IndexKey(String, Int64, Int64) Declaration public IndexKey(string streamId, long version, long position) Parameters Type Name System.String streamId System.Int64 version System.Int64 position IndexKey(String, Int64, Int64, UInt64) Declaration public IndexKey(string streamId, long version, long position, ulong hash) Parameters Type Name System.String streamId System.Int64 version System.Int64 position System.UInt64 hash Fields Hash Declaration public ulong Hash Field Value Type System.UInt64 Position Declaration public long Position Field Value Type System.Int64 StreamId Declaration public string StreamId Field Value Type System.String Version Declaration public long Version Field Value Type System.Int64 Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) EnumExtensions.EnumValueName<T>(T) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Index.HashListMemTable.html": {
    "href": "dotnet-api/code/EventStore.Core.Index.HashListMemTable.html",
    "title": "Class HashListMemTable | Event Store",
    "keywords": "Class HashListMemTable Inheritance System.Object HashListMemTable Implements IMemTable ISearchTable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Index Assembly : EventStore.Core.dll Syntax public class HashListMemTable : IMemTable, ISearchTable Constructors HashListMemTable(Byte, Int32) Declaration public HashListMemTable(byte version, int maxSize) Parameters Type Name System.Byte version System.Int32 maxSize Properties Count Declaration public long Count { get; } Property Value Type System.Int64 Id Declaration public Guid Id { get; } Property Value Type System.Guid Version Declaration public byte Version { get; } Property Value Type System.Byte Methods Add(UInt64, Int64, Int64) Declaration public void Add(ulong stream, long version, long position) Parameters Type Name System.UInt64 stream System.Int64 version System.Int64 position AddEntries(IList<IndexEntry>) Declaration public void AddEntries(IList<IndexEntry> entries) Parameters Type Name System.Collections.Generic.IList < IndexEntry > entries Clear() Declaration public void Clear() GetRange(UInt64, Int64, Int64, Nullable<Int32>) Declaration public IEnumerable<IndexEntry> GetRange(ulong stream, long startNumber, long endNumber, int? limit = default(int? )) Parameters Type Name System.UInt64 stream System.Int64 startNumber System.Int64 endNumber System.Nullable < System.Int32 > limit Returns Type Description System.Collections.Generic.IEnumerable < IndexEntry > IterateAllInOrder() Declaration public IEnumerable<IndexEntry> IterateAllInOrder() Returns Type Description System.Collections.Generic.IEnumerable < IndexEntry > MarkForConversion() Declaration public bool MarkForConversion() Returns Type Description System.Boolean TryGetLatestEntry(UInt64, out IndexEntry) Declaration public bool TryGetLatestEntry(ulong stream, out IndexEntry entry) Parameters Type Name System.UInt64 stream IndexEntry entry Returns Type Description System.Boolean TryGetOldestEntry(UInt64, out IndexEntry) Declaration public bool TryGetOldestEntry(ulong stream, out IndexEntry entry) Parameters Type Name System.UInt64 stream IndexEntry entry Returns Type Description System.Boolean TryGetOneValue(UInt64, Int64, out Int64) Declaration public bool TryGetOneValue(ulong stream, long number, out long position) Parameters Type Name System.UInt64 stream System.Int64 number System.Int64 position Returns Type Description System.Boolean Implements IMemTable ISearchTable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Index.GuidFilenameProvider.html": {
    "href": "dotnet-api/code/EventStore.Core.Index.GuidFilenameProvider.html",
    "title": "Class GuidFilenameProvider | Event Store",
    "keywords": "Class GuidFilenameProvider Inheritance System.Object GuidFilenameProvider Implements IIndexFilenameProvider Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Index Assembly : EventStore.Core.dll Syntax public class GuidFilenameProvider : IIndexFilenameProvider Constructors GuidFilenameProvider(String) Declaration public GuidFilenameProvider(string directory) Parameters Type Name System.String directory Methods GetFilenameNewTable() Declaration public string GetFilenameNewTable() Returns Type Description System.String Implements IIndexFilenameProvider Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Transport.Http.Client.html": {
    "href": "dotnet-api/code/EventStore.Transport.Http.Client.html",
    "title": "Namespace EventStore.Transport.Http.Client | Event Store",
    "keywords": "Namespace EventStore.Transport.Http.Client Classes ClientOperationState HttpAsyncClient Interfaces IHttpClient"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.html",
    "title": "Class ReaderSubscriptionMessage | Event Store",
    "keywords": "Class ReaderSubscriptionMessage Inheritance System.Object ReaderSubscriptionMessage Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public static class ReaderSubscriptionMessage"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.SubscriptionMessage.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.SubscriptionMessage.html",
    "title": "Class ReaderSubscriptionMessage.SubscriptionMessage | Event Store",
    "keywords": "Class ReaderSubscriptionMessage.SubscriptionMessage Inheritance System.Object Message ReaderSubscriptionMessage.SubscriptionMessage ReaderSubscriptionMessage.CommittedEventDistributed ReaderSubscriptionMessage.EventReaderEof ReaderSubscriptionMessage.EventReaderIdle ReaderSubscriptionMessage.EventReaderNotAuthorized ReaderSubscriptionMessage.EventReaderPartitionDeleted ReaderSubscriptionMessage.EventReaderPartitionEof ReaderSubscriptionMessage.EventReaderPartitionMeasured ReaderSubscriptionMessage.EventReaderStarting ReaderSubscriptionMessage.Faulted Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class SubscriptionMessage : Message Constructors SubscriptionMessage(Guid, CheckpointTag, Object) Declaration public SubscriptionMessage(Guid correlationId, CheckpointTag preTagged, object source) Parameters Type Name System.Guid correlationId CheckpointTag preTagged System.Object source Properties CorrelationId Declaration public Guid CorrelationId { get; } Property Value Type System.Guid MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId PreTagged Declaration public CheckpointTag PreTagged { get; } Property Value Type CheckpointTag Source Declaration public object Source { get; } Property Value Type System.Object Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.Faulted.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.Faulted.html",
    "title": "Class ReaderSubscriptionMessage.Faulted | Event Store",
    "keywords": "Class ReaderSubscriptionMessage.Faulted Inheritance System.Object Message ReaderSubscriptionMessage.SubscriptionMessage ReaderSubscriptionMessage.Faulted Inherited Members ReaderSubscriptionMessage.SubscriptionMessage.CorrelationId ReaderSubscriptionMessage.SubscriptionMessage.PreTagged ReaderSubscriptionMessage.SubscriptionMessage.Source Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class Faulted : ReaderSubscriptionMessage.SubscriptionMessage Constructors Faulted(Guid, String, Object) Declaration public Faulted(Guid correlationId, string reason, object source = null) Parameters Type Name System.Guid correlationId System.String reason System.Object source Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides ReaderSubscriptionMessage.SubscriptionMessage.MsgTypeId Reason Declaration public string Reason { get; } Property Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderStarting.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderStarting.html",
    "title": "Class ReaderSubscriptionMessage.EventReaderStarting | Event Store",
    "keywords": "Class ReaderSubscriptionMessage.EventReaderStarting Inheritance System.Object Message ReaderSubscriptionMessage.SubscriptionMessage ReaderSubscriptionMessage.EventReaderStarting Inherited Members ReaderSubscriptionMessage.SubscriptionMessage.CorrelationId ReaderSubscriptionMessage.SubscriptionMessage.PreTagged ReaderSubscriptionMessage.SubscriptionMessage.Source Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public sealed class EventReaderStarting : ReaderSubscriptionMessage.SubscriptionMessage Constructors EventReaderStarting(Guid, Int64, Object) Declaration public EventReaderStarting(Guid correlationId, long lastCommitPosition, object source = null) Parameters Type Name System.Guid correlationId System.Int64 lastCommitPosition System.Object source Properties LastCommitPosition Declaration public long LastCommitPosition { get; } Property Value Type System.Int64 MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides ReaderSubscriptionMessage.SubscriptionMessage.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionMeasured.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionMeasured.html",
    "title": "Class ReaderSubscriptionMessage.EventReaderPartitionMeasured | Event Store",
    "keywords": "Class ReaderSubscriptionMessage.EventReaderPartitionMeasured Inheritance System.Object Message ReaderSubscriptionMessage.SubscriptionMessage ReaderSubscriptionMessage.EventReaderPartitionMeasured Inherited Members ReaderSubscriptionMessage.SubscriptionMessage.CorrelationId ReaderSubscriptionMessage.SubscriptionMessage.PreTagged ReaderSubscriptionMessage.SubscriptionMessage.Source Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class EventReaderPartitionMeasured : ReaderSubscriptionMessage.SubscriptionMessage Constructors EventReaderPartitionMeasured(Guid, String, Int64, Object) Declaration public EventReaderPartitionMeasured(Guid correlationId, string partition, long size, object source = null) Parameters Type Name System.Guid correlationId System.String partition System.Int64 size System.Object source Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides ReaderSubscriptionMessage.SubscriptionMessage.MsgTypeId Partition Declaration public string Partition { get; } Property Value Type System.String Size Declaration public long Size { get; } Property Value Type System.Int64 Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionEof.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionEof.html",
    "title": "Class ReaderSubscriptionMessage.EventReaderPartitionEof | Event Store",
    "keywords": "Class ReaderSubscriptionMessage.EventReaderPartitionEof Inheritance System.Object Message ReaderSubscriptionMessage.SubscriptionMessage ReaderSubscriptionMessage.EventReaderPartitionEof Inherited Members ReaderSubscriptionMessage.SubscriptionMessage.CorrelationId ReaderSubscriptionMessage.SubscriptionMessage.PreTagged ReaderSubscriptionMessage.SubscriptionMessage.Source Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class EventReaderPartitionEof : ReaderSubscriptionMessage.SubscriptionMessage Constructors EventReaderPartitionEof(Guid, String, CheckpointTag, Object) Declaration public EventReaderPartitionEof(Guid correlationId, string partition, CheckpointTag preTagged, object source = null) Parameters Type Name System.Guid correlationId System.String partition CheckpointTag preTagged System.Object source Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides ReaderSubscriptionMessage.SubscriptionMessage.MsgTypeId Partition Declaration public string Partition { get; } Property Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionDeleted.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderPartitionDeleted.html",
    "title": "Class ReaderSubscriptionMessage.EventReaderPartitionDeleted | Event Store",
    "keywords": "Class ReaderSubscriptionMessage.EventReaderPartitionDeleted Inheritance System.Object Message ReaderSubscriptionMessage.SubscriptionMessage ReaderSubscriptionMessage.EventReaderPartitionDeleted Inherited Members ReaderSubscriptionMessage.SubscriptionMessage.CorrelationId ReaderSubscriptionMessage.SubscriptionMessage.PreTagged ReaderSubscriptionMessage.SubscriptionMessage.Source Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class EventReaderPartitionDeleted : ReaderSubscriptionMessage.SubscriptionMessage Constructors EventReaderPartitionDeleted(Guid, String, Nullable<Int64>, Nullable<TFPos>, Nullable<TFPos>, String, Nullable<Int64>, CheckpointTag, Object) Declaration public EventReaderPartitionDeleted(Guid correlationId, string partition, long? lastEventNumber, TFPos? deleteLinkOrEventPosition, TFPos? deleteEventOrLinkTargetPosition, string positionStreamId, long? positionEventNumber, CheckpointTag preTagged = null, object source = null) Parameters Type Name System.Guid correlationId System.String partition System.Nullable < System.Int64 > lastEventNumber System.Nullable < TFPos > deleteLinkOrEventPosition System.Nullable < TFPos > deleteEventOrLinkTargetPosition System.String positionStreamId System.Nullable < System.Int64 > positionEventNumber CheckpointTag preTagged System.Object source Properties DeleteEventOrLinkTargetPosition Declaration public TFPos? DeleteEventOrLinkTargetPosition { get; } Property Value Type System.Nullable < TFPos > DeleteLinkOrEventPosition Declaration public TFPos? DeleteLinkOrEventPosition { get; } Property Value Type System.Nullable < TFPos > LastEventNumber Declaration public long? LastEventNumber { get; } Property Value Type System.Nullable < System.Int64 > MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides ReaderSubscriptionMessage.SubscriptionMessage.MsgTypeId Partition Declaration public string Partition { get; } Property Value Type System.String PositionEventNumber Declaration public long? PositionEventNumber { get; } Property Value Type System.Nullable < System.Int64 > PositionStreamId Declaration public string PositionStreamId { get; } Property Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderNotAuthorized.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderNotAuthorized.html",
    "title": "Class ReaderSubscriptionMessage.EventReaderNotAuthorized | Event Store",
    "keywords": "Class ReaderSubscriptionMessage.EventReaderNotAuthorized Inheritance System.Object Message ReaderSubscriptionMessage.SubscriptionMessage ReaderSubscriptionMessage.EventReaderNotAuthorized Inherited Members ReaderSubscriptionMessage.SubscriptionMessage.CorrelationId ReaderSubscriptionMessage.SubscriptionMessage.PreTagged ReaderSubscriptionMessage.SubscriptionMessage.Source Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public sealed class EventReaderNotAuthorized : ReaderSubscriptionMessage.SubscriptionMessage Constructors EventReaderNotAuthorized(Guid, Object) Declaration public EventReaderNotAuthorized(Guid correlationId, object source = null) Parameters Type Name System.Guid correlationId System.Object source Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides ReaderSubscriptionMessage.SubscriptionMessage.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderIdle.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderIdle.html",
    "title": "Class ReaderSubscriptionMessage.EventReaderIdle | Event Store",
    "keywords": "Class ReaderSubscriptionMessage.EventReaderIdle Inheritance System.Object Message ReaderSubscriptionMessage.SubscriptionMessage ReaderSubscriptionMessage.EventReaderIdle Inherited Members ReaderSubscriptionMessage.SubscriptionMessage.CorrelationId ReaderSubscriptionMessage.SubscriptionMessage.PreTagged ReaderSubscriptionMessage.SubscriptionMessage.Source Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class EventReaderIdle : ReaderSubscriptionMessage.SubscriptionMessage Constructors EventReaderIdle(Guid, DateTime, Object) Declaration public EventReaderIdle(Guid correlationId, DateTime idleTimestampUtc, object source = null) Parameters Type Name System.Guid correlationId System.DateTime idleTimestampUtc System.Object source Properties IdleTimestampUtc Declaration public DateTime IdleTimestampUtc { get; } Property Value Type System.DateTime MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides ReaderSubscriptionMessage.SubscriptionMessage.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderEof.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.EventReaderEof.html",
    "title": "Class ReaderSubscriptionMessage.EventReaderEof | Event Store",
    "keywords": "Class ReaderSubscriptionMessage.EventReaderEof Inheritance System.Object Message ReaderSubscriptionMessage.SubscriptionMessage ReaderSubscriptionMessage.EventReaderEof Inherited Members ReaderSubscriptionMessage.SubscriptionMessage.CorrelationId ReaderSubscriptionMessage.SubscriptionMessage.PreTagged ReaderSubscriptionMessage.SubscriptionMessage.Source Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class EventReaderEof : ReaderSubscriptionMessage.SubscriptionMessage Constructors EventReaderEof(Guid, Boolean, Object) Declaration public EventReaderEof(Guid correlationId, bool maxEventsReached = false, object source = null) Parameters Type Name System.Guid correlationId System.Boolean maxEventsReached System.Object source Properties MaxEventsReached Declaration public bool MaxEventsReached { get; } Property Value Type System.Boolean MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides ReaderSubscriptionMessage.SubscriptionMessage.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.CommittedEventDistributed.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ReaderSubscriptionMessage.CommittedEventDistributed.html",
    "title": "Class ReaderSubscriptionMessage.CommittedEventDistributed | Event Store",
    "keywords": "Class ReaderSubscriptionMessage.CommittedEventDistributed Inheritance System.Object Message ReaderSubscriptionMessage.SubscriptionMessage ReaderSubscriptionMessage.CommittedEventDistributed Inherited Members ReaderSubscriptionMessage.SubscriptionMessage.CorrelationId ReaderSubscriptionMessage.SubscriptionMessage.PreTagged ReaderSubscriptionMessage.SubscriptionMessage.Source Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class CommittedEventDistributed : ReaderSubscriptionMessage.SubscriptionMessage Constructors CommittedEventDistributed(Guid, ResolvedEvent, CheckpointTag) Declaration public CommittedEventDistributed(Guid correlationId, ResolvedEvent data, CheckpointTag preTagged = null) Parameters Type Name System.Guid correlationId ResolvedEvent data CheckpointTag preTagged CommittedEventDistributed(Guid, ResolvedEvent, Nullable<Int64>, Single, Object, CheckpointTag) Declaration public CommittedEventDistributed(Guid correlationId, ResolvedEvent data, long? safeTransactionFileReaderJoinPosition, float progress, object source = null, CheckpointTag preTagged = null) Parameters Type Name System.Guid correlationId ResolvedEvent data System.Nullable < System.Int64 > safeTransactionFileReaderJoinPosition System.Single progress System.Object source CheckpointTag preTagged Properties Data Declaration public ResolvedEvent Data { get; } Property Value Type ResolvedEvent MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides ReaderSubscriptionMessage.SubscriptionMessage.MsgTypeId Progress Declaration public float Progress { get; } Property Value Type System.Single SafeTransactionFileReaderJoinPosition Declaration public long? SafeTransactionFileReaderJoinPosition { get; } Property Value Type System.Nullable < System.Int64 > Methods Sample(Guid, TFPos, TFPos, String, Int64, String, Int64, Boolean, Guid, String, Boolean, Byte[], Byte[], Nullable<Int64>, Single) Declaration public static ReaderSubscriptionMessage.CommittedEventDistributed Sample(Guid correlationId, TFPos position, TFPos originalPosition, string positionStreamId, long positionSequenceNumber, string eventStreamId, long eventSequenceNumber, bool resolvedLinkTo, Guid eventId, string eventType, bool isJson, byte[] data, byte[] metadata, long? safeTransactionFileReaderJoinPosition, float progress) Parameters Type Name System.Guid correlationId TFPos position TFPos originalPosition System.String positionStreamId System.Int64 positionSequenceNumber System.String eventStreamId System.Int64 eventSequenceNumber System.Boolean resolvedLinkTo System.Guid eventId System.String eventType System.Boolean isJson System.Byte [] data System.Byte [] metadata System.Nullable < System.Int64 > safeTransactionFileReaderJoinPosition System.Single progress Returns Type Description ReaderSubscriptionMessage.CommittedEventDistributed Sample(Guid, TFPos, String, Int64, Boolean, Guid, String, Boolean, Byte[], Byte[], Nullable<DateTime>) Declaration public static ReaderSubscriptionMessage.CommittedEventDistributed Sample(Guid correlationId, TFPos position, string eventStreamId, long eventSequenceNumber, bool resolvedLinkTo, Guid eventId, string eventType, bool isJson, byte[] data, byte[] metadata, DateTime? timestamp = default(DateTime? )) Parameters Type Name System.Guid correlationId TFPos position System.String eventStreamId System.Int64 eventSequenceNumber System.Boolean resolvedLinkTo System.Guid eventId System.String eventType System.Boolean isJson System.Byte [] data System.Byte [] metadata System.Nullable < System.DateTime > timestamp Returns Type Description ReaderSubscriptionMessage.CommittedEventDistributed Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.html",
    "title": "Class ReaderSubscriptionManagement | Event Store",
    "keywords": "Class ReaderSubscriptionManagement Inheritance System.Object ReaderSubscriptionManagement Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public static class ReaderSubscriptionManagement"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Unsubscribe.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Unsubscribe.html",
    "title": "Class ReaderSubscriptionManagement.Unsubscribe | Event Store",
    "keywords": "Class ReaderSubscriptionManagement.Unsubscribe Inheritance System.Object Message ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage ReaderSubscriptionManagement.Unsubscribe Inherited Members ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage.SubscriptionId Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class Unsubscribe : ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage Constructors Unsubscribe(Guid) Declaration public Unsubscribe(Guid subscriptionId) Parameters Type Name System.Guid subscriptionId Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.Subscribe.html",
    "title": "Class ReaderSubscriptionManagement.Subscribe | Event Store",
    "keywords": "Class ReaderSubscriptionManagement.Subscribe Inheritance System.Object Message ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage ReaderSubscriptionManagement.Subscribe Inherited Members ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage.SubscriptionId Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class Subscribe : ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage Constructors Subscribe(Guid, CheckpointTag, IReaderStrategy, ReaderSubscriptionOptions) Declaration public Subscribe(Guid subscriptionId, CheckpointTag from, IReaderStrategy readerStrategy, ReaderSubscriptionOptions readerSubscriptionOptions) Parameters Type Name System.Guid subscriptionId CheckpointTag from IReaderStrategy readerStrategy ReaderSubscriptionOptions readerSubscriptionOptions Properties FromPosition Declaration public CheckpointTag FromPosition { get; } Property Value Type CheckpointTag MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage.MsgTypeId Options Declaration public ReaderSubscriptionOptions Options { get; } Property Value Type ReaderSubscriptionOptions ReaderStrategy Declaration public IReaderStrategy ReaderStrategy { get; } Property Value Type IReaderStrategy Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReadingCore.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReadingCore.html",
    "title": "Class ReaderSubscriptionManagement.SpoolStreamReadingCore | Event Store",
    "keywords": "Class ReaderSubscriptionManagement.SpoolStreamReadingCore Inheritance System.Object Message ReaderSubscriptionManagement.SpoolStreamReadingCore Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public sealed class SpoolStreamReadingCore : Message Constructors SpoolStreamReadingCore(Guid, String, Int64, Int64) Declaration public SpoolStreamReadingCore(Guid subscriptionId, string streamId, long catalogSequenceNumber, long limitingCommitPosition) Parameters Type Name System.Guid subscriptionId System.String streamId System.Int64 catalogSequenceNumber System.Int64 limitingCommitPosition Fields CatalogSequenceNumber Declaration public readonly long CatalogSequenceNumber Field Value Type System.Int64 StreamId Declaration public readonly string StreamId Field Value Type System.String SubscriptionId Declaration public readonly Guid SubscriptionId Field Value Type System.Guid Properties LimitingCommitPosition Declaration public long LimitingCommitPosition { get; } Property Value Type System.Int64 MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ReaderSubscriptionManagement.SpoolStreamReading.html",
    "title": "Class ReaderSubscriptionManagement.SpoolStreamReading | Event Store",
    "keywords": "Class ReaderSubscriptionManagement.SpoolStreamReading Inheritance System.Object Message ReaderSubscriptionManagement.SpoolStreamReading Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public sealed class SpoolStreamReading : Message Constructors SpoolStreamReading(Guid, Guid, String, Int64, Int64) Declaration public SpoolStreamReading(Guid workerId, Guid subscriptionId, string streamId, long catalogSequenceNumber, long limitingCommitPosition) Parameters Type Name System.Guid workerId System.Guid subscriptionId System.String streamId System.Int64 catalogSequenceNumber System.Int64 limitingCommitPosition Fields CatalogSequenceNumber Declaration public readonly long CatalogSequenceNumber Field Value Type System.Int64 StreamId Declaration public readonly string StreamId Field Value Type System.String SubscriptionId Declaration public readonly Guid SubscriptionId Field Value Type System.Guid Properties LimitingCommitPosition Declaration public long LimitingCommitPosition { get; } Property Value Type System.Int64 MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId WorkerId Declaration public Guid WorkerId { get; } Property Value Type System.Guid Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Monitoring.Stats.DiskIo.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Monitoring.Stats.DiskIo.html",
    "title": "Class DiskIo | Event Store",
    "keywords": "Class DiskIo Inheritance System.Object DiskIo Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Monitoring.Stats Assembly : EventStore.Core.dll Syntax public class DiskIo Constructors DiskIo(UInt64, UInt64, UInt64, UInt64) Declaration public DiskIo(ulong bytesRead, ulong bytesWritten, ulong readOps, ulong writeOps) Parameters Type Name System.UInt64 bytesRead System.UInt64 bytesWritten System.UInt64 readOps System.UInt64 writeOps Fields ReadBytes The number of bytes read by EventStore since start. Declaration public readonly ulong ReadBytes Field Value Type System.UInt64 ReadOps The number of read operations by EventStore since start. Declaration public readonly ulong ReadOps Field Value Type System.UInt64 WriteOps The number of write operations by EventStore since start. Declaration public readonly ulong WriteOps Field Value Type System.UInt64 WrittenBytes The number of bytes written by EventStore since start. Declaration public readonly ulong WrittenBytes Field Value Type System.UInt64 Methods GetDiskIo(Int32, ILogger) Declaration public static DiskIo GetDiskIo(int procId, ILogger logger) Parameters Type Name System.Int32 procId ILogger logger Returns Type Description DiskIo Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Monitoring.MonitoringService.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Monitoring.MonitoringService.html",
    "title": "Class MonitoringService | Event Store",
    "keywords": "Class MonitoringService Inheritance System.Object MonitoringService Implements IHandle < SystemMessage.SystemInit > IHandle < SystemMessage.StateChangeMessage > IHandle < SystemMessage.BecomeShuttingDown > IHandle < SystemMessage.BecomeShutdown > IHandle < ClientMessage.WriteEventsCompleted > IHandle < MonitoringMessage.GetFreshStats > IHandle < MonitoringMessage.GetFreshTcpConnectionStats > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Monitoring Assembly : EventStore.Core.dll Syntax public class MonitoringService : IHandle<SystemMessage.SystemInit>, IHandle<SystemMessage.StateChangeMessage>, IHandle<SystemMessage.BecomeShuttingDown>, IHandle<SystemMessage.BecomeShutdown>, IHandle<ClientMessage.WriteEventsCompleted>, IHandle<MonitoringMessage.GetFreshStats>, IHandle<MonitoringMessage.GetFreshTcpConnectionStats> Constructors MonitoringService(IQueuedHandler, IPublisher, IPublisher, ICheckpoint, String, TimeSpan, IPEndPoint, StatsStorage, IPEndPoint, IPEndPoint) Declaration public MonitoringService(IQueuedHandler monitoringQueue, IPublisher statsCollectionBus, IPublisher mainBus, ICheckpoint writerCheckpoint, string dbPath, TimeSpan statsCollectionPeriod, IPEndPoint nodeEndpoint, StatsStorage statsStorage, IPEndPoint tcpEndpoint, IPEndPoint tcpSecureEndpoint) Parameters Type Name IQueuedHandler monitoringQueue IPublisher statsCollectionBus IPublisher mainBus ICheckpoint writerCheckpoint System.String dbPath System.TimeSpan statsCollectionPeriod System.Net.IPEndPoint nodeEndpoint StatsStorage statsStorage System.Net.IPEndPoint tcpEndpoint System.Net.IPEndPoint tcpSecureEndpoint Fields MemoizePeriod Declaration public static readonly TimeSpan MemoizePeriod Field Value Type System.TimeSpan Methods Handle(ClientMessage.WriteEventsCompleted) Declaration public void Handle(ClientMessage.WriteEventsCompleted message) Parameters Type Name ClientMessage.WriteEventsCompleted message Handle(MonitoringMessage.GetFreshStats) Declaration public void Handle(MonitoringMessage.GetFreshStats message) Parameters Type Name MonitoringMessage.GetFreshStats message Handle(MonitoringMessage.GetFreshTcpConnectionStats) Declaration public void Handle(MonitoringMessage.GetFreshTcpConnectionStats message) Parameters Type Name MonitoringMessage.GetFreshTcpConnectionStats message Handle(SystemMessage.BecomeShutdown) Declaration public void Handle(SystemMessage.BecomeShutdown message) Parameters Type Name SystemMessage.BecomeShutdown message Handle(SystemMessage.BecomeShuttingDown) Declaration public void Handle(SystemMessage.BecomeShuttingDown message) Parameters Type Name SystemMessage.BecomeShuttingDown message Handle(SystemMessage.StateChangeMessage) Declaration public void Handle(SystemMessage.StateChangeMessage message) Parameters Type Name SystemMessage.StateChangeMessage message Handle(SystemMessage.SystemInit) Declaration public void Handle(SystemMessage.SystemInit message) Parameters Type Name SystemMessage.SystemInit message OnTimerTick(Object) Declaration public void OnTimerTick(object state) Parameters Type Name System.Object state Implements IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.HttpSendService.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.HttpSendService.html",
    "title": "Class HttpSendService | Event Store",
    "keywords": "Class HttpSendService Inheritance System.Object HttpSendService Implements IHttpForwarder IHandle < SystemMessage.StateChangeMessage > IHandle < HttpMessage.SendOverHttp > IHandle < HttpMessage.HttpSend > IHandle < HttpMessage.HttpBeginSend > IHandle < HttpMessage.HttpSendPart > IHandle < HttpMessage.HttpEndSend > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services Assembly : EventStore.Core.dll Syntax public class HttpSendService : IHttpForwarder, IHandle<SystemMessage.StateChangeMessage>, IHandle<HttpMessage.SendOverHttp>, IHandle<HttpMessage.HttpSend>, IHandle<HttpMessage.HttpBeginSend>, IHandle<HttpMessage.HttpSendPart>, IHandle<HttpMessage.HttpEndSend> Constructors HttpSendService(HttpMessagePipe, Boolean) Declaration public HttpSendService(HttpMessagePipe httpPipe, bool forwardRequests) Parameters Type Name HttpMessagePipe httpPipe System.Boolean forwardRequests Methods Handle(HttpMessage.HttpBeginSend) Declaration public void Handle(HttpMessage.HttpBeginSend message) Parameters Type Name HttpMessage.HttpBeginSend message Handle(HttpMessage.HttpEndSend) Declaration public void Handle(HttpMessage.HttpEndSend message) Parameters Type Name HttpMessage.HttpEndSend message Handle(HttpMessage.HttpSend) Declaration public void Handle(HttpMessage.HttpSend message) Parameters Type Name HttpMessage.HttpSend message Handle(HttpMessage.HttpSendPart) Declaration public void Handle(HttpMessage.HttpSendPart message) Parameters Type Name HttpMessage.HttpSendPart message Handle(HttpMessage.SendOverHttp) Declaration public void Handle(HttpMessage.SendOverHttp message) Parameters Type Name HttpMessage.SendOverHttp message Handle(SystemMessage.StateChangeMessage) Declaration public void Handle(SystemMessage.StateChangeMessage message) Parameters Type Name SystemMessage.StateChangeMessage message Explicit Interface Implementations IHttpForwarder.ForwardRequest(HttpEntityManager) Declaration bool IHttpForwarder.ForwardRequest(HttpEntityManager manager) Parameters Type Name HttpEntityManager manager Returns Type Description System.Boolean Implements IHttpForwarder IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Histograms.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Histograms.html",
    "title": "Namespace EventStore.Core.Services.Histograms | Event Store",
    "keywords": "Namespace EventStore.Core.Services.Histograms Classes HistogramService Structs Measurement"
  },
  "dotnet-api/code/EventStore.Core.Services.Histograms.Measurement.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Histograms.Measurement.html",
    "title": "Struct Measurement | Event Store",
    "keywords": "Struct Measurement Implements System.IDisposable Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Services.Histograms Assembly : EventStore.Core.dll Syntax public struct Measurement : IDisposable Fields Histogram Declaration public HistogramBase Histogram Field Value Type HdrHistogram.HistogramBase Start Declaration public long Start Field Value Type System.Int64 watch Declaration public Stopwatch watch Field Value Type System.Diagnostics.Stopwatch Methods Dispose() Declaration public void Dispose() Implements System.IDisposable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) EnumExtensions.EnumValueName<T>(T) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Histograms.HistogramService.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Histograms.HistogramService.html",
    "title": "Class HistogramService | Event Store",
    "keywords": "Class HistogramService Inheritance System.Object HistogramService Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Histograms Assembly : EventStore.Core.dll Syntax public static class HistogramService Methods CreateHistogram(String) Declaration public static void CreateHistogram(string name) Parameters Type Name System.String name CreateHistograms() Declaration public static void CreateHistograms() GetHistogram(String) Declaration public static HistogramBase GetHistogram(string name) Parameters Type Name System.String name Returns Type Description HdrHistogram.HistogramBase Measure(String) Declaration public static Measurement Measure(string name) Parameters Type Name System.String name Returns Type Description Measurement SetValue(String, Int64) Declaration public static void SetValue(string name, long value) Parameters Type Name System.String name System.Int64 value StartJitterMonitor() Declaration public static void StartJitterMonitor()"
  },
  "dotnet-api/code/EventStore.Core.Services.Gossip.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Gossip.html",
    "title": "Namespace EventStore.Core.Services.Gossip | Event Store",
    "keywords": "Namespace EventStore.Core.Services.Gossip Classes DnsGossipSeedSource GossipServiceBase KnownEndpointGossipSeedSource NodeGossipService Interfaces IGossipSeedSource Enums GossipState"
  },
  "dotnet-api/code/EventStore.Core.Services.Gossip.NodeGossipService.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Gossip.NodeGossipService.html",
    "title": "Class NodeGossipService | Event Store",
    "keywords": "Class NodeGossipService Inheritance System.Object GossipServiceBase NodeGossipService Implements IHandle < SystemMessage.SystemInit > IHandle < GossipMessage.RetrieveGossipSeedSources > IHandle < GossipMessage.GotGossipSeedSources > IHandle < GossipMessage.Gossip > IHandle < GossipMessage.GossipReceived > IHandle < SystemMessage.StateChangeMessage > IHandle < GossipMessage.GossipSendFailed > IHandle < SystemMessage.VNodeConnectionLost > IHandle < SystemMessage.VNodeConnectionEstablished > Inherited Members GossipServiceBase.NodeInfo GossipServiceBase.CurrentRole GossipServiceBase.CurrentMaster GossipServiceBase.Handle(SystemMessage.SystemInit) GossipServiceBase.Handle(GossipMessage.RetrieveGossipSeedSources) GossipServiceBase.Handle(GossipMessage.GotGossipSeedSources) GossipServiceBase.Handle(GossipMessage.Gossip) GossipServiceBase.Handle(GossipMessage.GossipReceived) GossipServiceBase.Handle(SystemMessage.StateChangeMessage) GossipServiceBase.Handle(GossipMessage.GossipSendFailed) GossipServiceBase.Handle(SystemMessage.VNodeConnectionLost) GossipServiceBase.Handle(SystemMessage.VNodeConnectionEstablished) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Gossip Assembly : EventStore.Core.dll Syntax public class NodeGossipService : GossipServiceBase, IHandle<SystemMessage.SystemInit>, IHandle<GossipMessage.RetrieveGossipSeedSources>, IHandle<GossipMessage.GotGossipSeedSources>, IHandle<GossipMessage.Gossip>, IHandle<GossipMessage.GossipReceived>, IHandle<SystemMessage.StateChangeMessage>, IHandle<GossipMessage.GossipSendFailed>, IHandle<SystemMessage.VNodeConnectionLost>, IHandle<SystemMessage.VNodeConnectionEstablished> Constructors NodeGossipService(IPublisher, IGossipSeedSource, VNodeInfo, ICheckpoint, ICheckpoint, IEpochManager, Func<Int64>, Int32, TimeSpan, TimeSpan) Declaration public NodeGossipService(IPublisher bus, IGossipSeedSource gossipSeedSource, VNodeInfo nodeInfo, ICheckpoint writerCheckpoint, ICheckpoint chaserCheckpoint, IEpochManager epochManager, Func<long> getLastCommitPosition, int nodePriority, TimeSpan interval, TimeSpan allowedTimeDifference) Parameters Type Name IPublisher bus IGossipSeedSource gossipSeedSource VNodeInfo nodeInfo ICheckpoint writerCheckpoint ICheckpoint chaserCheckpoint IEpochManager epochManager System.Func < System.Int64 > getLastCommitPosition System.Int32 nodePriority System.TimeSpan interval System.TimeSpan allowedTimeDifference Methods GetInitialMe() Declaration protected override MemberInfo GetInitialMe() Returns Type Description MemberInfo Overrides GossipServiceBase.GetInitialMe() GetUpdatedMe(MemberInfo) Declaration protected override MemberInfo GetUpdatedMe(MemberInfo me) Parameters Type Name MemberInfo me Returns Type Description MemberInfo Overrides GossipServiceBase.GetUpdatedMe(MemberInfo) Implements IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Gossip.KnownEndpointGossipSeedSource.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Gossip.KnownEndpointGossipSeedSource.html",
    "title": "Class KnownEndpointGossipSeedSource | Event Store",
    "keywords": "Class KnownEndpointGossipSeedSource Inheritance System.Object KnownEndpointGossipSeedSource Implements IGossipSeedSource Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Gossip Assembly : EventStore.Core.dll Syntax public class KnownEndpointGossipSeedSource : IGossipSeedSource Constructors KnownEndpointGossipSeedSource(IPEndPoint[]) Declaration public KnownEndpointGossipSeedSource(IPEndPoint[] ipEndPoints) Parameters Type Name System.Net.IPEndPoint [] ipEndPoints Methods BeginGetHostEndpoints(AsyncCallback, Object) Declaration public IAsyncResult BeginGetHostEndpoints(AsyncCallback requestCallback, object state) Parameters Type Name System.AsyncCallback requestCallback System.Object state Returns Type Description System.IAsyncResult EndGetHostEndpoints(IAsyncResult) Declaration public IPEndPoint[] EndGetHostEndpoints(IAsyncResult asyncResult) Parameters Type Name System.IAsyncResult asyncResult Returns Type Description System.Net.IPEndPoint [] Implements IGossipSeedSource Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Gossip.IGossipSeedSource.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Gossip.IGossipSeedSource.html",
    "title": "Interface IGossipSeedSource | Event Store",
    "keywords": "Interface IGossipSeedSource Namespace : EventStore.Core.Services.Gossip Assembly : EventStore.Core.dll Syntax public interface IGossipSeedSource Methods BeginGetHostEndpoints(AsyncCallback, Object) Declaration IAsyncResult BeginGetHostEndpoints(AsyncCallback requestCallback, object state) Parameters Type Name System.AsyncCallback requestCallback System.Object state Returns Type Description System.IAsyncResult EndGetHostEndpoints(IAsyncResult) Declaration IPEndPoint[] EndGetHostEndpoints(IAsyncResult asyncResult) Parameters Type Name System.IAsyncResult asyncResult Returns Type Description System.Net.IPEndPoint [] Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Gossip.GossipState.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Gossip.GossipState.html",
    "title": "Enum GossipState | Event Store",
    "keywords": "Enum GossipState Namespace : EventStore.Core.Services.Gossip Assembly : EventStore.Core.dll Syntax public enum GossipState Fields Name Description RetrievingGossipSeeds Startup Working Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<GossipState>() ProtobufExtensions.Serialize<GossipState>() ProtobufExtensions.SerializeToArray<GossipState>()"
  },
  "dotnet-api/code/EventStore.Core.Services.Gossip.GossipServiceBase.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Gossip.GossipServiceBase.html",
    "title": "Class GossipServiceBase | Event Store",
    "keywords": "Class GossipServiceBase Inheritance System.Object GossipServiceBase NodeGossipService Implements IHandle < SystemMessage.SystemInit > IHandle < GossipMessage.RetrieveGossipSeedSources > IHandle < GossipMessage.GotGossipSeedSources > IHandle < GossipMessage.Gossip > IHandle < GossipMessage.GossipReceived > IHandle < SystemMessage.StateChangeMessage > IHandle < GossipMessage.GossipSendFailed > IHandle < SystemMessage.VNodeConnectionLost > IHandle < SystemMessage.VNodeConnectionEstablished > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Gossip Assembly : EventStore.Core.dll Syntax public abstract class GossipServiceBase : IHandle<SystemMessage.SystemInit>, IHandle<GossipMessage.RetrieveGossipSeedSources>, IHandle<GossipMessage.GotGossipSeedSources>, IHandle<GossipMessage.Gossip>, IHandle<GossipMessage.GossipReceived>, IHandle<SystemMessage.StateChangeMessage>, IHandle<GossipMessage.GossipSendFailed>, IHandle<SystemMessage.VNodeConnectionLost>, IHandle<SystemMessage.VNodeConnectionEstablished> Constructors GossipServiceBase(IPublisher, IGossipSeedSource, VNodeInfo, TimeSpan, TimeSpan) Declaration protected GossipServiceBase(IPublisher bus, IGossipSeedSource gossipSeedSource, VNodeInfo nodeInfo, TimeSpan gossipInterval, TimeSpan allowedTimeDifference) Parameters Type Name IPublisher bus IGossipSeedSource gossipSeedSource VNodeInfo nodeInfo System.TimeSpan gossipInterval System.TimeSpan allowedTimeDifference Fields CurrentMaster Declaration protected VNodeInfo CurrentMaster Field Value Type VNodeInfo CurrentRole Declaration protected VNodeState CurrentRole Field Value Type VNodeState NodeInfo Declaration protected readonly VNodeInfo NodeInfo Field Value Type VNodeInfo Methods GetInitialMe() Declaration protected abstract MemberInfo GetInitialMe() Returns Type Description MemberInfo GetUpdatedMe(MemberInfo) Declaration protected abstract MemberInfo GetUpdatedMe(MemberInfo me) Parameters Type Name MemberInfo me Returns Type Description MemberInfo Handle(GossipMessage.Gossip) Declaration public void Handle(GossipMessage.Gossip message) Parameters Type Name GossipMessage.Gossip message Handle(GossipMessage.GossipReceived) Declaration public void Handle(GossipMessage.GossipReceived message) Parameters Type Name GossipMessage.GossipReceived message Handle(GossipMessage.GossipSendFailed) Declaration public void Handle(GossipMessage.GossipSendFailed message) Parameters Type Name GossipMessage.GossipSendFailed message Handle(GossipMessage.GotGossipSeedSources) Declaration public void Handle(GossipMessage.GotGossipSeedSources message) Parameters Type Name GossipMessage.GotGossipSeedSources message Handle(GossipMessage.RetrieveGossipSeedSources) Declaration public void Handle(GossipMessage.RetrieveGossipSeedSources message) Parameters Type Name GossipMessage.RetrieveGossipSeedSources message Handle(SystemMessage.StateChangeMessage) Declaration public void Handle(SystemMessage.StateChangeMessage message) Parameters Type Name SystemMessage.StateChangeMessage message Handle(SystemMessage.SystemInit) Declaration public void Handle(SystemMessage.SystemInit message) Parameters Type Name SystemMessage.SystemInit message Handle(SystemMessage.VNodeConnectionEstablished) Declaration public void Handle(SystemMessage.VNodeConnectionEstablished message) Parameters Type Name SystemMessage.VNodeConnectionEstablished message Handle(SystemMessage.VNodeConnectionLost) Declaration public void Handle(SystemMessage.VNodeConnectionLost message) Parameters Type Name SystemMessage.VNodeConnectionLost message Implements IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Gossip.DnsGossipSeedSource.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Gossip.DnsGossipSeedSource.html",
    "title": "Class DnsGossipSeedSource | Event Store",
    "keywords": "Class DnsGossipSeedSource Inheritance System.Object DnsGossipSeedSource Implements IGossipSeedSource Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Gossip Assembly : EventStore.Core.dll Syntax public class DnsGossipSeedSource : IGossipSeedSource Constructors DnsGossipSeedSource(String, Int32) Declaration public DnsGossipSeedSource(string hostname, int managerHttpPort) Parameters Type Name System.String hostname System.Int32 managerHttpPort Methods BeginGetHostEndpoints(AsyncCallback, Object) Declaration public IAsyncResult BeginGetHostEndpoints(AsyncCallback requestCallback, object state) Parameters Type Name System.AsyncCallback requestCallback System.Object state Returns Type Description System.IAsyncResult EndGetHostEndpoints(IAsyncResult) Declaration public IPEndPoint[] EndGetHostEndpoints(IAsyncResult asyncResult) Parameters Type Name System.IAsyncResult asyncResult Returns Type Description System.Net.IPEndPoint [] Implements IGossipSeedSource Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.UserManagementMessage.Update.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.UserManagementMessage.Update.html",
    "title": "Class UserManagementMessage.Update | Event Store",
    "keywords": "Class UserManagementMessage.Update Inheritance System.Object Message UserManagementMessage.RequestMessage UserManagementMessage.UserManagementRequestMessage UserManagementMessage.Update Inherited Members UserManagementMessage.UserManagementRequestMessage.LoginName UserManagementMessage.RequestMessage.Envelope UserManagementMessage.RequestMessage.Principal Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public sealed class Update : UserManagementMessage.UserManagementRequestMessage Constructors Update(IEnvelope, IPrincipal, String, String, String[]) Declaration public Update(IEnvelope envelope, IPrincipal principal, string loginName, string fullName, string[] groups) Parameters Type Name IEnvelope envelope System.Security.Principal.IPrincipal principal System.String loginName System.String fullName System.String [] groups Fields FullName Declaration public readonly string FullName Field Value Type System.String Groups Declaration public readonly string[] Groups Field Value Type System.String [] Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides UserManagementMessage.UserManagementRequestMessage.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.UserManagementMessage.ResponseMessage.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.UserManagementMessage.ResponseMessage.html",
    "title": "Class UserManagementMessage.ResponseMessage | Event Store",
    "keywords": "Class UserManagementMessage.ResponseMessage Inheritance System.Object Message UserManagementMessage.ResponseMessage UserManagementMessage.AllUserDetailsResult UserManagementMessage.AllUserDetailsResultHttpFormatted UserManagementMessage.UpdateResult UserManagementMessage.UserDetailsResult UserManagementMessage.UserDetailsResultHttpFormatted Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class ResponseMessage : Message Constructors ResponseMessage(Boolean, UserManagementMessage.Error) Declaration public ResponseMessage(bool success, UserManagementMessage.Error error) Parameters Type Name System.Boolean success UserManagementMessage.Error error Fields Error Declaration public readonly UserManagementMessage.Error Error Field Value Type UserManagementMessage.Error Success Declaration public readonly bool Success Field Value Type System.Boolean Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.UserManagementMessage.ResetPassword.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.UserManagementMessage.ResetPassword.html",
    "title": "Class UserManagementMessage.ResetPassword | Event Store",
    "keywords": "Class UserManagementMessage.ResetPassword Inheritance System.Object Message UserManagementMessage.RequestMessage UserManagementMessage.UserManagementRequestMessage UserManagementMessage.ResetPassword Inherited Members UserManagementMessage.UserManagementRequestMessage.LoginName UserManagementMessage.RequestMessage.Envelope UserManagementMessage.RequestMessage.Principal Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public sealed class ResetPassword : UserManagementMessage.UserManagementRequestMessage Constructors ResetPassword(IEnvelope, IPrincipal, String, String) Declaration public ResetPassword(IEnvelope envelope, IPrincipal principal, string loginName, string newPassword) Parameters Type Name IEnvelope envelope System.Security.Principal.IPrincipal principal System.String loginName System.String newPassword Fields NewPassword Declaration public readonly string NewPassword Field Value Type System.String Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides UserManagementMessage.UserManagementRequestMessage.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetState.html",
    "title": "Class CoreProjectionManagementMessage.GetState | Event Store",
    "keywords": "Class CoreProjectionManagementMessage.GetState Inheritance System.Object Message CoreProjectionManagementMessageBase CoreProjectionManagementControlMessage CoreProjectionManagementMessage.GetState Inherited Members CoreProjectionManagementControlMessage.WorkerId CoreProjectionManagementMessageBase.ProjectionId Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class GetState : CoreProjectionManagementControlMessage Constructors GetState(Guid, Guid, String, Guid) Declaration public GetState(Guid correlationId, Guid projectionId, string partition, Guid workerId) Parameters Type Name System.Guid correlationId System.Guid projectionId System.String partition System.Guid workerId Properties CorrelationId Declaration public Guid CorrelationId { get; } Property Value Type System.Guid MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides CoreProjectionManagementControlMessage.MsgTypeId Partition Declaration public string Partition { get; } Property Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.GetResult.html",
    "title": "Class CoreProjectionManagementMessage.GetResult | Event Store",
    "keywords": "Class CoreProjectionManagementMessage.GetResult Inheritance System.Object Message CoreProjectionManagementMessageBase CoreProjectionManagementControlMessage CoreProjectionManagementMessage.GetResult Inherited Members CoreProjectionManagementControlMessage.WorkerId CoreProjectionManagementMessageBase.ProjectionId Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class GetResult : CoreProjectionManagementControlMessage Constructors GetResult(Guid, Guid, String, Guid) Declaration public GetResult(Guid correlationId, Guid projectionId, string partition, Guid workerId) Parameters Type Name System.Guid correlationId System.Guid projectionId System.String partition System.Guid workerId Properties CorrelationId Declaration public Guid CorrelationId { get; } Property Value Type System.Guid MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides CoreProjectionManagementControlMessage.MsgTypeId Partition Declaration public string Partition { get; } Property Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.TransactionLog.Chunks.TFChunkChaser.html": {
    "href": "dotnet-api/code/EventStore.Core.TransactionLog.Chunks.TFChunkChaser.html",
    "title": "Class TFChunkChaser | Event Store",
    "keywords": "Class TFChunkChaser Inheritance System.Object TFChunkChaser Implements ITransactionFileChaser System.IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.TransactionLog.Chunks Assembly : EventStore.Core.dll Syntax public class TFChunkChaser : ITransactionFileChaser, IDisposable Constructors TFChunkChaser(TFChunkDb, ICheckpoint, ICheckpoint, Boolean) Declaration public TFChunkChaser(TFChunkDb db, ICheckpoint writerCheckpoint, ICheckpoint chaserCheckpoint, bool optimizeReadSideCache) Parameters Type Name TFChunkDb db ICheckpoint writerCheckpoint ICheckpoint chaserCheckpoint System.Boolean optimizeReadSideCache Properties Checkpoint Declaration public ICheckpoint Checkpoint { get; } Property Value Type ICheckpoint Methods Close() Declaration public void Close() Dispose() Declaration public void Dispose() Flush() Declaration public void Flush() Open() Declaration public void Open() TryReadNext() Declaration public SeqReadResult TryReadNext() Returns Type Description SeqReadResult TryReadNext(out LogRecord) Declaration public bool TryReadNext(out LogRecord record) Parameters Type Name LogRecord record Returns Type Description System.Boolean Implements ITransactionFileChaser System.IDisposable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.html": {
    "href": "dotnet-api/code/EventStore.Core.TransactionLog.Chunks.TFChunkBulkReader.html",
    "title": "Class TFChunkBulkReader | Event Store",
    "keywords": "Class TFChunkBulkReader Inheritance System.Object TFChunkBulkReader Implements System.IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.TransactionLog.Chunks Assembly : EventStore.Core.dll Syntax public class TFChunkBulkReader : IDisposable Properties Chunk Declaration public TFChunk Chunk { get; } Property Value Type TFChunk Methods Dispose() Declaration public void Dispose() Finalize() Declaration protected void Finalize() ReadNextDataBytes(Int32, Byte[]) Declaration public BulkReadResult ReadNextDataBytes(int count, byte[] buffer) Parameters Type Name System.Int32 count System.Byte [] buffer Returns Type Description BulkReadResult ReadNextRawBytes(Int32, Byte[]) Declaration public BulkReadResult ReadNextRawBytes(int count, byte[] buffer) Parameters Type Name System.Int32 count System.Byte [] buffer Returns Type Description BulkReadResult Release() Declaration public void Release() SetDataPosition(Int64) Declaration public void SetDataPosition(long dataPosition) Parameters Type Name System.Int64 dataPosition SetRawPosition(Int32) Declaration public void SetRawPosition(int rawPosition) Parameters Type Name System.Int32 rawPosition Implements System.IDisposable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Common.Log.LazyLogger.html": {
    "href": "dotnet-api/code/EventStore.Common.Log.LazyLogger.html",
    "title": "Class LazyLogger | Event Store",
    "keywords": "Class LazyLogger Inheritance System.Object LazyLogger Implements ILogger Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Common.Log Assembly : EventStore.Common.dll Syntax public class LazyLogger : ILogger Constructors LazyLogger(Func<ILogger>) Declaration public LazyLogger(Func<ILogger> factory) Parameters Type Name System.Func < ILogger > factory Methods Debug(String, Object[]) Declaration public void Debug(string format, params object[] args) Parameters Type Name System.String format System.Object [] args DebugException(Exception, String, Object[]) Declaration public void DebugException(Exception exc, string format, params object[] args) Parameters Type Name System.Exception exc System.String format System.Object [] args Error(String, Object[]) Declaration public void Error(string format, params object[] args) Parameters Type Name System.String format System.Object [] args ErrorException(Exception, String, Object[]) Declaration public void ErrorException(Exception exc, string format, params object[] args) Parameters Type Name System.Exception exc System.String format System.Object [] args Fatal(String, Object[]) Declaration public void Fatal(string format, params object[] args) Parameters Type Name System.String format System.Object [] args FatalException(Exception, String, Object[]) Declaration public void FatalException(Exception exc, string format, params object[] args) Parameters Type Name System.Exception exc System.String format System.Object [] args Flush(Nullable<TimeSpan>) Declaration public void Flush(TimeSpan? maxTimeToWait = default(TimeSpan? )) Parameters Type Name System.Nullable < System.TimeSpan > maxTimeToWait Info(String, Object[]) Declaration public void Info(string format, params object[] args) Parameters Type Name System.String format System.Object [] args InfoException(Exception, String, Object[]) Declaration public void InfoException(Exception exc, string format, params object[] args) Parameters Type Name System.Exception exc System.String format System.Object [] args Trace(String, Object[]) Declaration public void Trace(string format, params object[] args) Parameters Type Name System.String format System.Object [] args TraceException(Exception, String, Object[]) Declaration public void TraceException(Exception exc, string format, params object[] args) Parameters Type Name System.Exception exc System.String format System.Object [] args Warn(String, Object[]) Declaration public void Warn(string format, params object[] args) Parameters Type Name System.String format System.Object [] args WarnException(Exception, String, Object[]) Declaration public void WarnException(Exception exc, string format, params object[] args) Parameters Type Name System.Exception exc System.String format System.Object [] args Implements ILogger Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.ClusterNode.html": {
    "href": "dotnet-api/code/EventStore.ClusterNode.html",
    "title": "Namespace EventStore.ClusterNode | Event Store",
    "keywords": "Namespace EventStore.ClusterNode Classes ClusterNodeOptions ClusterVNodeBuilder Allows a client to build a ClusterVNode for use in EventStore.ClusterNode by specifying high level options rather than using the constructor of ClusterVNode directly. Program"
  },
  "dotnet-api/code/EventStore.ClusterNode.ClusterNodeOptions.html": {
    "href": "dotnet-api/code/EventStore.ClusterNode.ClusterNodeOptions.html",
    "title": "Class ClusterNodeOptions | Event Store",
    "keywords": "Class ClusterNodeOptions Inheritance System.Object ClusterNodeOptions Implements IOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.ClusterNode Assembly : EventStore.ClusterNode.dll Syntax public class ClusterNodeOptions : IOptions Constructors ClusterNodeOptions() Declaration public ClusterNodeOptions() Properties AddInterfacePrefixes Declaration [ArgDescription(\"Add interface prefixes\", \"Interface Options\")] public bool AddInterfacePrefixes { get; set; } Property Value Type System.Boolean AdminOnExt Declaration [ArgDescription(\"Whether or not to run the admin ui on the external HTTP endpoint\", \"Interface Options\")] public bool AdminOnExt { get; set; } Property Value Type System.Boolean AlwaysKeepScavenged Declaration [ArgDescription(\"Always keeps the newer chunks from a scavenge operation.\", \"Database Options\")] public bool AlwaysKeepScavenged { get; set; } Property Value Type System.Boolean AuthenticationConfig Declaration [ArgDescription(\"Path to the configuration file for authentication configuration (if applicable).\", \"Authentication Options\")] public string AuthenticationConfig { get; set; } Property Value Type System.String AuthenticationType Declaration [ArgDescription(\"The type of authentication to use.\", \"Authentication Options\")] public string AuthenticationType { get; set; } Property Value Type System.String BetterOrdering Declaration [ArgDescription(\"Enable Queue affinity on reads during write process to try to get better ordering.\", \"Database Options\")] public bool BetterOrdering { get; set; } Property Value Type System.Boolean CachedChunks Declaration [ArgDescription(\"The number of chunks to cache in unmanaged memory.\", \"Database Options\")] public int CachedChunks { get; set; } Property Value Type System.Int32 CertificateFile Declaration [ArgDescription(\"The path to certificate file.\", \"Certificate Options\")] public string CertificateFile { get; set; } Property Value Type System.String CertificatePassword Declaration [ArgDescription(\"The password to certificate in file.\", \"Certificate Options\")] public string CertificatePassword { get; set; } Property Value Type System.String CertificateStoreLocation Declaration [ArgDescription(\"The certificate store location name.\", \"Certificate Options\")] public string CertificateStoreLocation { get; set; } Property Value Type System.String CertificateStoreName Declaration [ArgDescription(\"The certificate store name.\", \"Certificate Options\")] public string CertificateStoreName { get; set; } Property Value Type System.String CertificateSubjectName Declaration [ArgDescription(\"The certificate subject name.\", \"Certificate Options\")] public string CertificateSubjectName { get; set; } Property Value Type System.String CertificateThumbprint Declaration [ArgDescription(\"The certificate fingerprint/thumbprint.\", \"Certificate Options\")] public string CertificateThumbprint { get; set; } Property Value Type System.String ChunkInitialReaderCount Declaration [ArgDescription(\"The initial number of readers to start when opening a TFChunk\", \"Database Options\")] public int ChunkInitialReaderCount { get; set; } Property Value Type System.Int32 ChunksCacheSize Declaration [ArgDescription(\"The amount of unmanaged memory to use for caching chunks in bytes.\", \"Database Options\")] public long ChunksCacheSize { get; set; } Property Value Type System.Int64 ClusterDns Declaration [ArgDescription(\"DNS name from which other nodes can be discovered.\", \"Cluster Options\")] public string ClusterDns { get; set; } Property Value Type System.String ClusterGossipPort Declaration [ArgDescription(\"The port on which cluster nodes' managers are running.\", \"Cluster Options\")] public int ClusterGossipPort { get; set; } Property Value Type System.Int32 ClusterSize Declaration [ArgDescription(\"The number of nodes in the cluster.\", \"Cluster Options\")] public int ClusterSize { get; set; } Property Value Type System.Int32 CommitCount Declaration [ArgDescription(\"The number of nodes which must acknowledge commits before acknowledging to a client.\", \"Cluster Options\")] public int CommitCount { get; set; } Property Value Type System.Int32 CommitTimeoutMs Declaration [ArgDescription(\"Commit timeout (in milliseconds).\", \"Database Options\")] public int CommitTimeoutMs { get; set; } Property Value Type System.Int32 Config Declaration [ArgDescription(\"Configuration files.\", \"Application Options\")] public string Config { get; set; } Property Value Type System.String ConnectionPendingSendBytesThreshold Declaration [ArgDescription(\"The maximum number of pending send bytes allowed before a connection is closed.\", \"Interface Options\")] public int ConnectionPendingSendBytesThreshold { get; set; } Property Value Type System.Int32 Db Declaration [ArgDescription(\"The path the db should be loaded/saved to.\", \"Database Options\")] public string Db { get; set; } Property Value Type System.String Defines Declaration [ArgDescription(\"Run-time conditionals.\", \"Application Options\")] public string[] Defines { get; set; } Property Value Type System.String [] DisableHTTPCaching Declaration [ArgDescription(\"Disable HTTP caching.\", \"Application Options\")] public bool DisableHTTPCaching { get; set; } Property Value Type System.Boolean DisableInsecureTCP Declaration [ArgDescription(\"Whether to disable insecure TCP communication\", \"Interface Options\")] public bool DisableInsecureTCP { get; set; } Property Value Type System.Boolean DisableScavengeMerging Declaration [ArgDescription(\"Disables the merging of chunks when scavenge is running\", \"Database Options\")] public bool DisableScavengeMerging { get; set; } Property Value Type System.Boolean DiscoverViaDns Declaration [ArgDescription(\"Whether to use DNS lookup to discover other cluster nodes.\", \"Cluster Options\")] public bool DiscoverViaDns { get; set; } Property Value Type System.Boolean EnableHistograms Declaration [ArgDescription(\"Enables the tracking of various histograms in the backend, typically only used for debugging etc\", \"Application Options\")] public bool EnableHistograms { get; set; } Property Value Type System.Boolean EnableTrustedAuth Declaration [ArgDescription(\"Enables trusted authentication by an intermediary in the HTTP\", \"Interface Options\")] public bool EnableTrustedAuth { get; set; } Property Value Type System.Boolean ExtHttpPort Declaration [ArgDescription(\"External HTTP Port.\", \"Interface Options\")] public int ExtHttpPort { get; set; } Property Value Type System.Int32 ExtHttpPortAdvertiseAs Declaration [ArgDescription(\"Advertise External Http Port As.\", \"Interface Options\")] public int ExtHttpPortAdvertiseAs { get; set; } Property Value Type System.Int32 ExtHttpPrefixes Declaration [ArgDescription(\"The prefixes that the external HTTP server should respond to.\", \"Interface Options\")] public string[] ExtHttpPrefixes { get; set; } Property Value Type System.String [] ExtIp Declaration [ArgDescription(\"External IP Address.\", \"Interface Options\")] public IPAddress ExtIp { get; set; } Property Value Type System.Net.IPAddress ExtIpAdvertiseAs Declaration [ArgDescription(\"Advertise External Tcp Address As.\", \"Interface Options\")] public IPAddress ExtIpAdvertiseAs { get; set; } Property Value Type System.Net.IPAddress ExtSecureTcpPort Declaration [ArgDescription(\"External Secure TCP Port.\", \"Interface Options\")] public int ExtSecureTcpPort { get; set; } Property Value Type System.Int32 ExtSecureTcpPortAdvertiseAs Declaration [ArgDescription(\"Advertise Secure External Tcp Port As.\", \"Interface Options\")] public int ExtSecureTcpPortAdvertiseAs { get; set; } Property Value Type System.Int32 ExtTcpHeartbeatInterval Declaration [ArgDescription(\"Heartbeat interval for external TCP sockets\", \"Interface Options\")] public int ExtTcpHeartbeatInterval { get; set; } Property Value Type System.Int32 ExtTcpHeartbeatTimeout Declaration [ArgDescription(\"Heartbeat timeout for external TCP sockets\", \"Interface Options\")] public int ExtTcpHeartbeatTimeout { get; set; } Property Value Type System.Int32 ExtTcpPort Declaration [ArgDescription(\"External TCP Port.\", \"Interface Options\")] public int ExtTcpPort { get; set; } Property Value Type System.Int32 ExtTcpPortAdvertiseAs Declaration [ArgDescription(\"Advertise External Tcp Port As.\", \"Interface Options\")] public int ExtTcpPortAdvertiseAs { get; set; } Property Value Type System.Int32 FaultOutOfOrderProjections Declaration [ArgDescription(\"Fault the projection if the Event number that was expected in the stream differs from what is received. This may happen if events have been deleted or expired\", \"Projections Options\")] public bool FaultOutOfOrderProjections { get; set; } Property Value Type System.Boolean Force Declaration [ArgDescription(\"Force the Event Store to run in possibly harmful environments such as with Boehm GC.\", \"Application Options\")] public bool Force { get; set; } Property Value Type System.Boolean GossipAllowedDifferenceMs Declaration [ArgDescription(\"The amount of drift, in ms, between clocks on nodes allowed before gossip is rejected.\", \"Cluster Options\")] public int GossipAllowedDifferenceMs { get; set; } Property Value Type System.Int32 GossipIntervalMs Declaration [ArgDescription(\"The interval, in ms, nodes should try to gossip with each other.\", \"Cluster Options\")] public int GossipIntervalMs { get; set; } Property Value Type System.Int32 GossipOnExt Declaration [ArgDescription(\"Whether or not to accept gossip requests on the external HTTP endpoint\", \"Interface Options\")] public bool GossipOnExt { get; set; } Property Value Type System.Boolean GossipOnSingleNode Declaration [ArgDescription(\"When enabled tells a single node to run gossip as if it is a cluster\", \"Interface Options\")] public bool GossipOnSingleNode { get; set; } Property Value Type System.Boolean GossipSeed Declaration [ArgDescription(\"Endpoints for other cluster nodes from which to seed gossip\", \"Cluster Options\")] public IPEndPoint[] GossipSeed { get; set; } Property Value Type System.Net.IPEndPoint [] GossipTimeoutMs Declaration [ArgDescription(\"The timeout, in ms, on gossip to another node.\", \"Cluster Options\")] public int GossipTimeoutMs { get; set; } Property Value Type System.Int32 HashCollisionReadLimit Declaration [ArgDescription(\"The number of events to read per candidate in the case of a hash collision\", \"Database Options\")] public int HashCollisionReadLimit { get; set; } Property Value Type System.Int32 Help Declaration [ArgDescription(\"Show help.\", \"Application Options\")] public bool Help { get; set; } Property Value Type System.Boolean Index Declaration [ArgDescription(\"The path the index should be loaded/saved to.\", \"Database Options\")] public string Index { get; set; } Property Value Type System.String IndexCacheDepth Declaration [ArgDescription(\"Sets the depth to cache for the mid point cache in index.\", \"Database Options\")] public int IndexCacheDepth { get; set; } Property Value Type System.Int32 InitializationThreads Declaration [ArgDescription(\"Number of threads to be used to initialize the database. Will be capped at host processor count.\", \"Database Options\")] public int InitializationThreads { get; set; } Property Value Type System.Int32 IntHttpPort Declaration [ArgDescription(\"Internal HTTP Port.\", \"Interface Options\")] public int IntHttpPort { get; set; } Property Value Type System.Int32 IntHttpPortAdvertiseAs Declaration [ArgDescription(\"Advertise Internal Http Port As.\", \"Interface Options\")] public int IntHttpPortAdvertiseAs { get; set; } Property Value Type System.Int32 IntHttpPrefixes Declaration [ArgDescription(\"The prefixes that the internal HTTP server should respond to.\", \"Interface Options\")] public string[] IntHttpPrefixes { get; set; } Property Value Type System.String [] IntIp Declaration [ArgDescription(\"Internal IP Address.\", \"Interface Options\")] public IPAddress IntIp { get; set; } Property Value Type System.Net.IPAddress IntIpAdvertiseAs Declaration [ArgDescription(\"Advertise Internal Tcp Address As.\", \"Interface Options\")] public IPAddress IntIpAdvertiseAs { get; set; } Property Value Type System.Net.IPAddress IntSecureTcpPort Declaration [ArgDescription(\"Internal Secure TCP Port.\", \"Interface Options\")] public int IntSecureTcpPort { get; set; } Property Value Type System.Int32 IntSecureTcpPortAdvertiseAs Declaration [ArgDescription(\"Advertise Secure Internal Tcp Port As.\", \"Interface Options\")] public int IntSecureTcpPortAdvertiseAs { get; set; } Property Value Type System.Int32 IntTcpHeartbeatInterval Declaration [ArgDescription(\"Heartbeat interval for internal TCP sockets\", \"Interface Options\")] public int IntTcpHeartbeatInterval { get; set; } Property Value Type System.Int32 IntTcpHeartbeatTimeout Declaration [ArgDescription(\"Heartbeat timeout for internal TCP sockets\", \"Interface Options\")] public int IntTcpHeartbeatTimeout { get; set; } Property Value Type System.Int32 IntTcpPort Declaration [ArgDescription(\"Internal TCP Port.\", \"Interface Options\")] public int IntTcpPort { get; set; } Property Value Type System.Int32 IntTcpPortAdvertiseAs Declaration [ArgDescription(\"Advertise Internal Tcp Port As.\", \"Interface Options\")] public int IntTcpPortAdvertiseAs { get; set; } Property Value Type System.Int32 Log Declaration [ArgDescription(\"Path where to keep log files.\", \"Application Options\")] public string Log { get; set; } Property Value Type System.String LogHttpRequests Declaration [ArgDescription(\"Log Http Requests and Responses before processing them.\", \"Application Options\")] public bool LogHttpRequests { get; set; } Property Value Type System.Boolean MaxAutoMergeIndexLevel Declaration [ArgDescription(\"During large Index Merge operations, writes may be slowed down. Set this to the maximum index file level for which automatic merges should happen. Merging indexes above this level should be done manually.\", \"Database Options\")] public int MaxAutoMergeIndexLevel { get; set; } Property Value Type System.Int32 MaxMemTableSize Declaration [ArgDescription(\"Adjusts the maximum size of a mem table.\", \"Database Options\")] public int MaxMemTableSize { get; set; } Property Value Type System.Int32 MemDb Declaration [ArgDescription(\"Keep everything in memory, no directories or files are created.\", \"Database Options\")] public bool MemDb { get; set; } Property Value Type System.Boolean MinFlushDelayMs Declaration [ArgDescription(\"The minimum flush delay in milliseconds.\", \"Database Options\")] public double MinFlushDelayMs { get; set; } Property Value Type System.Double MonoMinThreadpoolSize Declaration [ArgDescription(\"Minimum number of worker threads when running under mono. Set to 0 to leave machine defaults.\", \"Application Options\")] public int MonoMinThreadpoolSize { get; set; } Property Value Type System.Int32 NodePriority Declaration [ArgDescription(\"The node priority used during master election\", \"Cluster Options\")] public int NodePriority { get; set; } Property Value Type System.Int32 OptimizeIndexMerge Declaration [ArgDescription(\"Makes index merges faster and reduces disk pressure during merges.\", \"Database Options\")] public bool OptimizeIndexMerge { get; set; } Property Value Type System.Boolean PrepareCount Declaration [ArgDescription(\"The number of nodes which must acknowledge prepares.\", \"Cluster Options\")] public int PrepareCount { get; set; } Property Value Type System.Int32 PrepareTimeoutMs Declaration [ArgDescription(\"Prepare timeout (in milliseconds).\", \"Database Options\")] public int PrepareTimeoutMs { get; set; } Property Value Type System.Int32 ProjectionsQueryExpiry Declaration [ArgDescription(\"The number of minutes a query can be idle before it expires\", \"Projections Options\")] public int ProjectionsQueryExpiry { get; set; } Property Value Type System.Int32 ProjectionThreads Declaration [ArgDescription(\"The number of threads to use for projections.\", \"Projections Options\")] public int ProjectionThreads { get; set; } Property Value Type System.Int32 ReaderThreadsCount Declaration [ArgDescription(\"The number of reader threads to use for processing reads.\", \"Database Options\")] public int ReaderThreadsCount { get; set; } Property Value Type System.Int32 ReduceFileCachePressure Declaration [ArgDescription(\"Change the way the DB files are opened to reduce their stickiness in the system file cache.\", \"Database Options\")] public bool ReduceFileCachePressure { get; set; } Property Value Type System.Boolean RunProjections Declaration [ArgDescription(\"Enables the running of projections. System runs built-in projections, All runs user projections.\", \"Projections Options\")] public ProjectionType RunProjections { get; set; } Property Value Type ProjectionType ScavengeHistoryMaxAge Declaration [ArgDescription(\"The number of days to keep scavenge history\", \"Database Options\")] public int ScavengeHistoryMaxAge { get; set; } Property Value Type System.Int32 SkipDbVerify Declaration [ArgDescription(\"Bypasses the checking of file hashes of database during startup (allows for faster startup).\", \"Database Options\")] public bool SkipDbVerify { get; set; } Property Value Type System.Boolean SkipIndexScanOnReads Declaration [ArgDescription(\"Skip Index Scan on Reads. This skips the index scan which was used to stop reading duplicates.\", \"Application Options\")] public bool SkipIndexScanOnReads { get; set; } Property Value Type System.Boolean SkipIndexVerify Declaration [ArgDescription(\"Bypasses the checking of file hashes of indexes during startup and after index merges (allows for faster startup and less disk pressure after merges).\", \"Database Options\")] public bool SkipIndexVerify { get; set; } Property Value Type System.Boolean SslTargetHost Declaration [ArgDescription(\"Target host of server's SSL certificate.\", \"Interface Options\")] public string SslTargetHost { get; set; } Property Value Type System.String SslValidateServer Declaration [ArgDescription(\"Whether to validate that server's certificate is trusted.\", \"Interface Options\")] public bool SslValidateServer { get; set; } Property Value Type System.Boolean StartStandardProjections Declaration [ArgDescription(\"Start the built in system projections.\", \"Application Options\")] public bool StartStandardProjections { get; set; } Property Value Type System.Boolean StatsOnExt Declaration [ArgDescription(\"Whether or not to accept statistics requests on the external HTTP endpoint, needed if you use admin ui\", \"Interface Options\")] public bool StatsOnExt { get; set; } Property Value Type System.Boolean StatsPeriodSec Declaration [ArgDescription(\"The number of seconds between statistics gathers.\", \"Application Options\")] public int StatsPeriodSec { get; set; } Property Value Type System.Int32 StructuredLog Declaration [ArgDescription(\"Enable structured logging.\", \"Database Options\")] public bool StructuredLog { get; set; } Property Value Type System.Boolean Unbuffered Declaration [ArgDescription(\"Enables Unbuffered/DirectIO when writing to the file system, this bypasses filesystem caches.\", \"Database Options\")] public bool Unbuffered { get; set; } Property Value Type System.Boolean UnsafeDisableFlushToDisk Declaration [ArgDescription(\"Disable flushing to disk. (UNSAFE: on power off)\", \"Database Options\")] public bool UnsafeDisableFlushToDisk { get; set; } Property Value Type System.Boolean UnsafeIgnoreHardDelete Declaration [ArgDescription(\"Disables Hard Deletes (UNSAFE: use to remove hard deletes)\", \"Database Options\")] public bool UnsafeIgnoreHardDelete { get; set; } Property Value Type System.Boolean UseInternalSsl Declaration [ArgDescription(\"Whether to use secure internal communication.\", \"Interface Options\")] public bool UseInternalSsl { get; set; } Property Value Type System.Boolean Version Declaration [ArgDescription(\"Show version.\", \"Application Options\")] public bool Version { get; set; } Property Value Type System.Boolean WhatIf Declaration [ArgDescription(\"Print effective configuration to console and then exit.\", \"Application Options\")] public bool WhatIf { get; set; } Property Value Type System.Boolean WorkerThreads Declaration [ArgDescription(\"The number of threads to use for pool of worker services.\", \"Application Options\")] public int WorkerThreads { get; set; } Property Value Type System.Int32 WriteThrough Declaration [ArgDescription(\"Enables Write Through when writing to the file system, this bypasses filesystem caches.\", \"Database Options\")] public bool WriteThrough { get; set; } Property Value Type System.Boolean Implements IOptions Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.ClientAPI.Embedded.EmbeddedEventStoreConnection.html": {
    "href": "dotnet-api/code/EventStore.ClientAPI.Embedded.EmbeddedEventStoreConnection.html",
    "title": "Class EmbeddedEventStoreConnection | Event Store",
    "keywords": "Class EmbeddedEventStoreConnection Contains factory methods to build a connection to an in-process EventStore Inheritance System.Object EmbeddedEventStoreConnection Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.ClientAPI.Embedded Assembly : EventStore.ClientAPI.Embedded.dll Syntax public static class EmbeddedEventStoreConnection Methods Create(ClusterVNode, ConnectionSettings, String) Creates a new embedded to single node using specific Declaration public static IEventStoreConnection Create(ClusterVNode eventStore, ConnectionSettings connectionSettings, string connectionName = null) Parameters Type Name ClusterVNode eventStore ConnectionSettings connectionSettings System.String connectionName Returns Type Description IEventStoreConnection Create(ClusterVNode, String) Creates a new embedded to single node with default connection settings Declaration public static IEventStoreConnection Create(ClusterVNode eventStore, string connectionName = null) Parameters Type Name ClusterVNode eventStore System.String connectionName Returns Type Description IEventStoreConnection"
  },
  "dotnet-api/code/EventStore.BufferManagement.UnableToAllocateBufferException.html": {
    "href": "dotnet-api/code/EventStore.BufferManagement.UnableToAllocateBufferException.html",
    "title": "Class UnableToAllocateBufferException | Event Store",
    "keywords": "Class UnableToAllocateBufferException Inheritance System.Object System.Exception UnableToAllocateBufferException Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.BufferManagement Assembly : EventStore.BufferManagement.dll Syntax public class UnableToAllocateBufferException : Exception, _Exception, ISerializable Constructors UnableToAllocateBufferException() Declaration public UnableToAllocateBufferException() Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Transport.Tcp.TcpConnectionLockless.html": {
    "href": "dotnet-api/code/EventStore.Transport.Tcp.TcpConnectionLockless.html",
    "title": "Class TcpConnectionLockless | Event Store",
    "keywords": "Class TcpConnectionLockless Inheritance System.Object TcpConnectionBase TcpConnectionLockless Implements IMonitoredTcpConnection ITcpConnection Inherited Members TcpConnectionBase.RemoteEndPoint TcpConnectionBase.LocalEndPoint TcpConnectionBase.IsInitialized TcpConnectionBase.IsClosed TcpConnectionBase.InSend TcpConnectionBase.InReceive TcpConnectionBase.PendingSendBytes TcpConnectionBase.InSendBytes TcpConnectionBase.PendingReceivedBytes TcpConnectionBase.TotalBytesSent TcpConnectionBase.TotalBytesReceived TcpConnectionBase.SendCalls TcpConnectionBase.SendCallbacks TcpConnectionBase.ReceiveCalls TcpConnectionBase.ReceiveCallbacks TcpConnectionBase.IsReadyForSend TcpConnectionBase.IsReadyForReceive TcpConnectionBase.IsFaulted TcpConnectionBase.LastSendStarted TcpConnectionBase.LastReceiveStarted TcpConnectionBase.InitConnectionBase(Socket) TcpConnectionBase.NotifySendScheduled(Int32) TcpConnectionBase.NotifySendStarting(Int32) TcpConnectionBase.NotifySendCompleted(Int32) TcpConnectionBase.NotifyReceiveStarting() TcpConnectionBase.NotifyReceiveCompleted(Int32) TcpConnectionBase.NotifyReceiveDispatched(Int32) TcpConnectionBase.NotifyClosed() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Transport.Tcp Assembly : EventStore.Transport.Tcp.dll Syntax public class TcpConnectionLockless : TcpConnectionBase, IMonitoredTcpConnection, ITcpConnection Properties ClientConnectionName Declaration public string ClientConnectionName { get; } Property Value Type System.String ConnectionId Declaration public Guid ConnectionId { get; } Property Value Type System.Guid SendQueueSize Declaration public int SendQueueSize { get; } Property Value Type System.Int32 Methods Close(String) Declaration public void Close(string reason) Parameters Type Name System.String reason CreateAcceptedTcpConnection(Guid, IPEndPoint, Socket, Boolean) Declaration public static ITcpConnection CreateAcceptedTcpConnection(Guid connectionId, IPEndPoint remoteEndPoint, Socket socket, bool verbose) Parameters Type Name System.Guid connectionId System.Net.IPEndPoint remoteEndPoint System.Net.Sockets.Socket socket System.Boolean verbose Returns Type Description ITcpConnection CreateConnectingTcpConnection(Guid, IPEndPoint, TcpClientConnector, TimeSpan, Action<ITcpConnection>, Action<ITcpConnection, SocketError>, Boolean) Declaration public static ITcpConnection CreateConnectingTcpConnection(Guid connectionId, IPEndPoint remoteEndPoint, TcpClientConnector connector, TimeSpan connectionTimeout, Action<ITcpConnection> onConnectionEstablished, Action<ITcpConnection, SocketError> onConnectionFailed, bool verbose) Parameters Type Name System.Guid connectionId System.Net.IPEndPoint remoteEndPoint TcpClientConnector connector System.TimeSpan connectionTimeout System.Action < ITcpConnection > onConnectionEstablished System.Action < ITcpConnection , System.Net.Sockets.SocketError > onConnectionFailed System.Boolean verbose Returns Type Description ITcpConnection EnqueueSend(IEnumerable<ArraySegment<Byte>>) Declaration public void EnqueueSend(IEnumerable<ArraySegment<byte>> data) Parameters Type Name System.Collections.Generic.IEnumerable < System.ArraySegment < System.Byte >> data ReceiveAsync(Action<ITcpConnection, IEnumerable<ArraySegment<Byte>>>) Declaration public void ReceiveAsync(Action<ITcpConnection, IEnumerable<ArraySegment<byte>>> callback) Parameters Type Name System.Action < ITcpConnection , System.Collections.Generic.IEnumerable < System.ArraySegment < System.Byte >>> callback SetClientConnectionName(String) Declaration public void SetClientConnectionName(string clientConnectionName) Parameters Type Name System.String clientConnectionName ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Events ConnectionClosed Declaration public event Action<ITcpConnection, SocketError> ConnectionClosed Event Type Type System.Action < ITcpConnection , System.Net.Sockets.SocketError > Implements IMonitoredTcpConnection ITcpConnection Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Transport.Tcp.TcpConnectionBase.html": {
    "href": "dotnet-api/code/EventStore.Transport.Tcp.TcpConnectionBase.html",
    "title": "Class TcpConnectionBase | Event Store",
    "keywords": "Class TcpConnectionBase Inheritance System.Object TcpConnectionBase TcpConnection TcpConnectionLockless TcpConnectionSsl Implements IMonitoredTcpConnection Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Transport.Tcp Assembly : EventStore.Transport.Tcp.dll Syntax public class TcpConnectionBase : IMonitoredTcpConnection Constructors TcpConnectionBase(IPEndPoint) Declaration public TcpConnectionBase(IPEndPoint remoteEndPoint) Parameters Type Name System.Net.IPEndPoint remoteEndPoint Properties InReceive Declaration public bool InReceive { get; } Property Value Type System.Boolean InSend Declaration public bool InSend { get; } Property Value Type System.Boolean InSendBytes Declaration public int InSendBytes { get; } Property Value Type System.Int32 IsClosed Declaration public bool IsClosed { get; } Property Value Type System.Boolean IsFaulted Declaration public bool IsFaulted { get; } Property Value Type System.Boolean IsInitialized Declaration public bool IsInitialized { get; } Property Value Type System.Boolean IsReadyForReceive Declaration public bool IsReadyForReceive { get; } Property Value Type System.Boolean IsReadyForSend Declaration public bool IsReadyForSend { get; } Property Value Type System.Boolean LastReceiveStarted Declaration public DateTime? LastReceiveStarted { get; } Property Value Type System.Nullable < System.DateTime > LastSendStarted Declaration public DateTime? LastSendStarted { get; } Property Value Type System.Nullable < System.DateTime > LocalEndPoint Declaration public IPEndPoint LocalEndPoint { get; } Property Value Type System.Net.IPEndPoint PendingReceivedBytes Declaration public int PendingReceivedBytes { get; } Property Value Type System.Int32 PendingSendBytes Declaration public int PendingSendBytes { get; } Property Value Type System.Int32 ReceiveCallbacks Declaration public int ReceiveCallbacks { get; } Property Value Type System.Int32 ReceiveCalls Declaration public int ReceiveCalls { get; } Property Value Type System.Int32 RemoteEndPoint Declaration public IPEndPoint RemoteEndPoint { get; } Property Value Type System.Net.IPEndPoint SendCallbacks Declaration public int SendCallbacks { get; } Property Value Type System.Int32 SendCalls Declaration public int SendCalls { get; } Property Value Type System.Int32 TotalBytesReceived Declaration public long TotalBytesReceived { get; } Property Value Type System.Int64 TotalBytesSent Declaration public long TotalBytesSent { get; } Property Value Type System.Int64 Methods InitConnectionBase(Socket) Declaration protected void InitConnectionBase(Socket socket) Parameters Type Name System.Net.Sockets.Socket socket NotifyClosed() Declaration protected void NotifyClosed() NotifyReceiveCompleted(Int32) Declaration protected void NotifyReceiveCompleted(int bytes) Parameters Type Name System.Int32 bytes NotifyReceiveDispatched(Int32) Declaration protected void NotifyReceiveDispatched(int bytes) Parameters Type Name System.Int32 bytes NotifyReceiveStarting() Declaration protected void NotifyReceiveStarting() NotifySendCompleted(Int32) Declaration protected void NotifySendCompleted(int bytes) Parameters Type Name System.Int32 bytes NotifySendScheduled(Int32) Declaration protected void NotifySendScheduled(int bytes) Parameters Type Name System.Int32 bytes NotifySendStarting(Int32) Declaration protected void NotifySendStarting(int bytes) Parameters Type Name System.Int32 bytes Implements IMonitoredTcpConnection Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Transport.Tcp.TcpConnection.html": {
    "href": "dotnet-api/code/EventStore.Transport.Tcp.TcpConnection.html",
    "title": "Class TcpConnection | Event Store",
    "keywords": "Class TcpConnection Inheritance System.Object TcpConnectionBase TcpConnection Implements IMonitoredTcpConnection ITcpConnection Inherited Members TcpConnectionBase.RemoteEndPoint TcpConnectionBase.LocalEndPoint TcpConnectionBase.IsInitialized TcpConnectionBase.IsClosed TcpConnectionBase.InSend TcpConnectionBase.InReceive TcpConnectionBase.PendingSendBytes TcpConnectionBase.InSendBytes TcpConnectionBase.PendingReceivedBytes TcpConnectionBase.TotalBytesSent TcpConnectionBase.TotalBytesReceived TcpConnectionBase.SendCalls TcpConnectionBase.SendCallbacks TcpConnectionBase.ReceiveCalls TcpConnectionBase.ReceiveCallbacks TcpConnectionBase.IsReadyForSend TcpConnectionBase.IsReadyForReceive TcpConnectionBase.IsFaulted TcpConnectionBase.LastSendStarted TcpConnectionBase.LastReceiveStarted TcpConnectionBase.InitConnectionBase(Socket) TcpConnectionBase.NotifySendScheduled(Int32) TcpConnectionBase.NotifySendStarting(Int32) TcpConnectionBase.NotifySendCompleted(Int32) TcpConnectionBase.NotifyReceiveStarting() TcpConnectionBase.NotifyReceiveCompleted(Int32) TcpConnectionBase.NotifyReceiveDispatched(Int32) TcpConnectionBase.NotifyClosed() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Transport.Tcp Assembly : EventStore.Transport.Tcp.dll Syntax public class TcpConnection : TcpConnectionBase, IMonitoredTcpConnection, ITcpConnection Properties ClientConnectionName Declaration public string ClientConnectionName { get; } Property Value Type System.String ConnectionId Declaration public Guid ConnectionId { get; } Property Value Type System.Guid SendQueueSize Declaration public int SendQueueSize { get; } Property Value Type System.Int32 Methods Close(String) Declaration public void Close(string reason) Parameters Type Name System.String reason CreateAcceptedTcpConnection(Guid, IPEndPoint, Socket, Boolean) Declaration public static ITcpConnection CreateAcceptedTcpConnection(Guid connectionId, IPEndPoint remoteEndPoint, Socket socket, bool verbose) Parameters Type Name System.Guid connectionId System.Net.IPEndPoint remoteEndPoint System.Net.Sockets.Socket socket System.Boolean verbose Returns Type Description ITcpConnection CreateConnectingTcpConnection(Guid, IPEndPoint, TcpClientConnector, TimeSpan, Action<ITcpConnection>, Action<ITcpConnection, SocketError>, Boolean) Declaration public static ITcpConnection CreateConnectingTcpConnection(Guid connectionId, IPEndPoint remoteEndPoint, TcpClientConnector connector, TimeSpan connectionTimeout, Action<ITcpConnection> onConnectionEstablished, Action<ITcpConnection, SocketError> onConnectionFailed, bool verbose) Parameters Type Name System.Guid connectionId System.Net.IPEndPoint remoteEndPoint TcpClientConnector connector System.TimeSpan connectionTimeout System.Action < ITcpConnection > onConnectionEstablished System.Action < ITcpConnection , System.Net.Sockets.SocketError > onConnectionFailed System.Boolean verbose Returns Type Description ITcpConnection EnqueueSend(IEnumerable<ArraySegment<Byte>>) Declaration public void EnqueueSend(IEnumerable<ArraySegment<byte>> data) Parameters Type Name System.Collections.Generic.IEnumerable < System.ArraySegment < System.Byte >> data ReceiveAsync(Action<ITcpConnection, IEnumerable<ArraySegment<Byte>>>) Declaration public void ReceiveAsync(Action<ITcpConnection, IEnumerable<ArraySegment<byte>>> callback) Parameters Type Name System.Action < ITcpConnection , System.Collections.Generic.IEnumerable < System.ArraySegment < System.Byte >>> callback SetClientConnectionName(String) Declaration public void SetClientConnectionName(string clientConnectionName) Parameters Type Name System.String clientConnectionName ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Events ConnectionClosed Declaration public event Action<ITcpConnection, SocketError> ConnectionClosed Event Type Type System.Action < ITcpConnection , System.Net.Sockets.SocketError > Implements IMonitoredTcpConnection ITcpConnection Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Transport.Tcp.TcpConfiguration.html": {
    "href": "dotnet-api/code/EventStore.Transport.Tcp.TcpConfiguration.html",
    "title": "Class TcpConfiguration | Event Store",
    "keywords": "Class TcpConfiguration Inheritance System.Object TcpConfiguration Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Transport.Tcp Assembly : EventStore.Transport.Tcp.dll Syntax public static class TcpConfiguration Fields AcceptBacklogCount Declaration public const int AcceptBacklogCount = 1000 Field Value Type System.Int32 AcceptPoolSize Declaration public const int AcceptPoolSize = 2 Field Value Type System.Int32 BufferChunksCount Declaration public const int BufferChunksCount = 512 Field Value Type System.Int32 ConcurrentAccepts Declaration public const int ConcurrentAccepts = 1 Field Value Type System.Int32 ConnectPoolSize Declaration public const int ConnectPoolSize = 32 Field Value Type System.Int32 SendReceivePoolSize Declaration public const int SendReceivePoolSize = 512 Field Value Type System.Int32 SocketBufferSize Declaration public const int SocketBufferSize = 8192 Field Value Type System.Int32 SocketCloseTimeoutMs Declaration public const int SocketCloseTimeoutMs = 500 Field Value Type System.Int32"
  },
  "dotnet-api/code/EventStore.Transport.Tcp.TcpClientConnector.html": {
    "href": "dotnet-api/code/EventStore.Transport.Tcp.TcpClientConnector.html",
    "title": "Class TcpClientConnector | Event Store",
    "keywords": "Class TcpClientConnector Inheritance System.Object TcpClientConnector Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Transport.Tcp Assembly : EventStore.Transport.Tcp.dll Syntax public class TcpClientConnector Constructors TcpClientConnector() Declaration public TcpClientConnector() Methods ConnectSslTo(Guid, IPEndPoint, TimeSpan, String, Boolean, Action<ITcpConnection>, Action<ITcpConnection, SocketError>, Boolean) Declaration public ITcpConnection ConnectSslTo(Guid connectionId, IPEndPoint remoteEndPoint, TimeSpan connectionTimeout, string targetHost, bool validateServer, Action<ITcpConnection> onConnectionEstablished = null, Action<ITcpConnection, SocketError> onConnectionFailed = null, bool verbose = true) Parameters Type Name System.Guid connectionId System.Net.IPEndPoint remoteEndPoint System.TimeSpan connectionTimeout System.String targetHost System.Boolean validateServer System.Action < ITcpConnection > onConnectionEstablished System.Action < ITcpConnection , System.Net.Sockets.SocketError > onConnectionFailed System.Boolean verbose Returns Type Description ITcpConnection ConnectTo(Guid, IPEndPoint, TimeSpan, Action<ITcpConnection>, Action<ITcpConnection, SocketError>, Boolean) Declaration public ITcpConnection ConnectTo(Guid connectionId, IPEndPoint remoteEndPoint, TimeSpan connectionTimeout, Action<ITcpConnection> onConnectionEstablished = null, Action<ITcpConnection, SocketError> onConnectionFailed = null, bool verbose = true) Parameters Type Name System.Guid connectionId System.Net.IPEndPoint remoteEndPoint System.TimeSpan connectionTimeout System.Action < ITcpConnection > onConnectionEstablished System.Action < ITcpConnection , System.Net.Sockets.SocketError > onConnectionFailed System.Boolean verbose Returns Type Description ITcpConnection Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Transport.Tcp.ITcpConnection.html": {
    "href": "dotnet-api/code/EventStore.Transport.Tcp.ITcpConnection.html",
    "title": "Interface ITcpConnection | Event Store",
    "keywords": "Interface ITcpConnection Namespace : EventStore.Transport.Tcp Assembly : EventStore.Transport.Tcp.dll Syntax public interface ITcpConnection Properties ClientConnectionName Declaration string ClientConnectionName { get; } Property Value Type System.String ConnectionId Declaration Guid ConnectionId { get; } Property Value Type System.Guid IsClosed Declaration bool IsClosed { get; } Property Value Type System.Boolean LocalEndPoint Declaration IPEndPoint LocalEndPoint { get; } Property Value Type System.Net.IPEndPoint PendingSendBytes Declaration int PendingSendBytes { get; } Property Value Type System.Int32 RemoteEndPoint Declaration IPEndPoint RemoteEndPoint { get; } Property Value Type System.Net.IPEndPoint SendQueueSize Declaration int SendQueueSize { get; } Property Value Type System.Int32 Methods Close(String) Declaration void Close(string reason) Parameters Type Name System.String reason EnqueueSend(IEnumerable<ArraySegment<Byte>>) Declaration void EnqueueSend(IEnumerable<ArraySegment<byte>> data) Parameters Type Name System.Collections.Generic.IEnumerable < System.ArraySegment < System.Byte >> data ReceiveAsync(Action<ITcpConnection, IEnumerable<ArraySegment<Byte>>>) Declaration void ReceiveAsync(Action<ITcpConnection, IEnumerable<ArraySegment<byte>>> callback) Parameters Type Name System.Action < ITcpConnection , System.Collections.Generic.IEnumerable < System.ArraySegment < System.Byte >>> callback SetClientConnectionName(String) Declaration void SetClientConnectionName(string clientConnectionName) Parameters Type Name System.String clientConnectionName Events ConnectionClosed Declaration event Action<ITcpConnection, SocketError> ConnectionClosed Event Type Type System.Action < ITcpConnection , System.Net.Sockets.SocketError > Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Transport.Tcp.IMonitoredTcpConnection.html": {
    "href": "dotnet-api/code/EventStore.Transport.Tcp.IMonitoredTcpConnection.html",
    "title": "Interface IMonitoredTcpConnection | Event Store",
    "keywords": "Interface IMonitoredTcpConnection Namespace : EventStore.Transport.Tcp Assembly : EventStore.Transport.Tcp.dll Syntax public interface IMonitoredTcpConnection Properties InReceive Declaration bool InReceive { get; } Property Value Type System.Boolean InSend Declaration bool InSend { get; } Property Value Type System.Boolean InSendBytes Declaration int InSendBytes { get; } Property Value Type System.Int32 IsClosed Declaration bool IsClosed { get; } Property Value Type System.Boolean IsFaulted Declaration bool IsFaulted { get; } Property Value Type System.Boolean IsInitialized Declaration bool IsInitialized { get; } Property Value Type System.Boolean IsReadyForReceive Declaration bool IsReadyForReceive { get; } Property Value Type System.Boolean IsReadyForSend Declaration bool IsReadyForSend { get; } Property Value Type System.Boolean LastReceiveStarted Declaration DateTime? LastReceiveStarted { get; } Property Value Type System.Nullable < System.DateTime > LastSendStarted Declaration DateTime? LastSendStarted { get; } Property Value Type System.Nullable < System.DateTime > PendingReceivedBytes Declaration int PendingReceivedBytes { get; } Property Value Type System.Int32 PendingSendBytes Declaration int PendingSendBytes { get; } Property Value Type System.Int32 TotalBytesReceived Declaration long TotalBytesReceived { get; } Property Value Type System.Int64 TotalBytesSent Declaration long TotalBytesSent { get; } Property Value Type System.Int64 Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Rags.IEnumerableExtensions.html": {
    "href": "dotnet-api/code/EventStore.Rags.IEnumerableExtensions.html",
    "title": "Class IEnumerableExtensions | Event Store",
    "keywords": "Class IEnumerableExtensions Inheritance System.Object IEnumerableExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Rags Assembly : EventStore.Rags.dll Syntax public static class IEnumerableExtensions Methods ApplyTo<T>(IEnumerable<OptionSource>) Declaration public static T ApplyTo<T>(this IEnumerable<OptionSource> source) where T : class, new() Parameters Type Name System.Collections.Generic.IEnumerable < OptionSource > source Returns Type Description T Type Parameters Name Description T Flatten<T>(IEnumerable<IEnumerable<T>>) Declaration public static IEnumerable<T> Flatten<T>(this IEnumerable<IEnumerable<T>> source) Parameters Type Name System.Collections.Generic.IEnumerable < System.Collections.Generic.IEnumerable <T>> source Returns Type Description System.Collections.Generic.IEnumerable <T> Type Parameters Name Description T Normalize(IEnumerable<OptionSource>) Declaration public static IEnumerable<OptionSource> Normalize(this IEnumerable<OptionSource> source) Parameters Type Name System.Collections.Generic.IEnumerable < OptionSource > source Returns Type Description System.Collections.Generic.IEnumerable < OptionSource > UseAliases<TOptions>(IEnumerable<OptionSource>) Declaration public static IEnumerable<OptionSource> UseAliases<TOptions>(this IEnumerable<OptionSource> optionSources) where TOptions : class Parameters Type Name System.Collections.Generic.IEnumerable < OptionSource > optionSources Returns Type Description System.Collections.Generic.IEnumerable < OptionSource > Type Parameters Name Description TOptions"
  },
  "dotnet-api/code/EventStore.Rags.EnvironmentVariables.html": {
    "href": "dotnet-api/code/EventStore.Rags.EnvironmentVariables.html",
    "title": "Class EnvironmentVariables | Event Store",
    "keywords": "Class EnvironmentVariables Inheritance System.Object EnvironmentVariables Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Rags Assembly : EventStore.Rags.dll Syntax public static class EnvironmentVariables Methods Parse<TOptions>(Func<String, String>) Declaration public static IEnumerable<OptionSource> Parse<TOptions>(Func<string, string> nameTranslator) where TOptions : class Parameters Type Name System.Func < System.String , System.String > nameTranslator Returns Type Description System.Collections.Generic.IEnumerable < OptionSource > Type Parameters Name Description TOptions ParseReferenceEnvironmentVariable(OptionSource) Declaration public static OptionSource ParseReferenceEnvironmentVariable(OptionSource source) Parameters Type Name OptionSource source Returns Type Description OptionSource"
  },
  "dotnet-api/code/EventStore.Rags.DuplicateArgException.html": {
    "href": "dotnet-api/code/EventStore.Rags.DuplicateArgException.html",
    "title": "Class DuplicateArgException | Event Store",
    "keywords": "Class DuplicateArgException An exception that should be thrown when the same argument is repeated. Inheritance System.Object System.Exception ArgException DuplicateArgException Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Rags Assembly : EventStore.Rags.dll Syntax public class DuplicateArgException : ArgException, _Exception, ISerializable Constructors DuplicateArgException(String) Creates a new DuplicateArgException given a user friendly message Declaration public DuplicateArgException(string msg) Parameters Type Name System.String msg DuplicateArgException(String, Exception) Creates a new DuplicateArgException given a user friendly message Declaration public DuplicateArgException(string msg, Exception inner) Parameters Type Name System.String msg System.Exception inner Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Rags.ConsoleString.html": {
    "href": "dotnet-api/code/EventStore.Rags.ConsoleString.html",
    "title": "Class ConsoleString | Event Store",
    "keywords": "Class ConsoleString A wrapper for string that encapsulates foreground and background colors. Inheritance System.Object System.Collections.Generic.List < ConsoleCharacter > ConsoleString Implements System.Collections.Generic.IList < ConsoleCharacter > System.Collections.Generic.ICollection < ConsoleCharacter > System.Collections.Generic.IReadOnlyList < ConsoleCharacter > System.Collections.Generic.IReadOnlyCollection < ConsoleCharacter > System.Collections.Generic.IEnumerable < ConsoleCharacter > System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable System.IComparable < System.String > Inherited Members System.Collections.Generic.List<EventStore.Rags.ConsoleCharacter>.System.Collections.IList.get_Item(System.Int32) System.Collections.Generic.List<EventStore.Rags.ConsoleCharacter>.System.Collections.IList.set_Item(System.Int32, System.Object) System.Collections.Generic.List<EventStore.Rags.ConsoleCharacter>.Add(EventStore.Rags.ConsoleCharacter) System.Collections.Generic.List<EventStore.Rags.ConsoleCharacter>.AddRange(System.Collections.Generic.IEnumerable<EventStore.Rags.ConsoleCharacter>) System.Collections.Generic.List<EventStore.Rags.ConsoleCharacter>.AsReadOnly() System.Collections.Generic.List<EventStore.Rags.ConsoleCharacter>.BinarySearch(System.Int32, System.Int32, EventStore.Rags.ConsoleCharacter, System.Collections.Generic.IComparer<EventStore.Rags.ConsoleCharacter>) System.Collections.Generic.List<EventStore.Rags.ConsoleCharacter>.BinarySearch(EventStore.Rags.ConsoleCharacter) System.Collections.Generic.List<EventStore.Rags.ConsoleCharacter>.BinarySearch(EventStore.Rags.ConsoleCharacter, System.Collections.Generic.IComparer<EventStore.Rags.ConsoleCharacter>) System.Collections.Generic.List<EventStore.Rags.ConsoleCharacter>.Clear() System.Collections.Generic.List<EventStore.Rags.ConsoleCharacter>.Contains(EventStore.Rags.ConsoleCharacter) System.Collections.Generic.List<EventStore.Rags.ConsoleCharacter>.ConvertAll<TOutput>(System.Converter<EventStore.Rags.ConsoleCharacter, TOutput>) System.Collections.Generic.List<EventStore.Rags.ConsoleCharacter>.CopyTo(System.Int32, EventStore.Rags.ConsoleCharacter[], System.Int32, System.Int32) System.Collections.Generic.List<EventStore.Rags.ConsoleCharacter>.CopyTo(EventStore.Rags.ConsoleCharacter[]) System.Collections.Generic.List<EventStore.Rags.ConsoleCharacter>.CopyTo(EventStore.Rags.ConsoleCharacter[], System.Int32) System.Collections.Generic.List<EventStore.Rags.ConsoleCharacter>.Exists(System.Predicate<EventStore.Rags.ConsoleCharacter>) System.Collections.Generic.List<EventStore.Rags.ConsoleCharacter>.Find(System.Predicate<EventStore.Rags.ConsoleCharacter>) System.Collections.Generic.List<EventStore.Rags.ConsoleCharacter>.FindAll(System.Predicate<EventStore.Rags.ConsoleCharacter>) System.Collections.Generic.List<EventStore.Rags.ConsoleCharacter>.FindIndex(System.Int32, System.Int32, System.Predicate<EventStore.Rags.ConsoleCharacter>) System.Collections.Generic.List<EventStore.Rags.ConsoleCharacter>.FindIndex(System.Int32, System.Predicate<EventStore.Rags.ConsoleCharacter>) System.Collections.Generic.List<EventStore.Rags.ConsoleCharacter>.FindIndex(System.Predicate<EventStore.Rags.ConsoleCharacter>) System.Collections.Generic.List<EventStore.Rags.ConsoleCharacter>.FindLast(System.Predicate<EventStore.Rags.ConsoleCharacter>) System.Collections.Generic.List<EventStore.Rags.ConsoleCharacter>.FindLastIndex(System.Int32, System.Int32, System.Predicate<EventStore.Rags.ConsoleCharacter>) System.Collections.Generic.List<EventStore.Rags.ConsoleCharacter>.FindLastIndex(System.Int32, System.Predicate<EventStore.Rags.ConsoleCharacter>) System.Collections.Generic.List<EventStore.Rags.ConsoleCharacter>.FindLastIndex(System.Predicate<EventStore.Rags.ConsoleCharacter>) System.Collections.Generic.List<EventStore.Rags.ConsoleCharacter>.ForEach(System.Action<EventStore.Rags.ConsoleCharacter>) System.Collections.Generic.List<EventStore.Rags.ConsoleCharacter>.GetEnumerator() System.Collections.Generic.List<EventStore.Rags.ConsoleCharacter>.GetRange(System.Int32, System.Int32) System.Collections.Generic.List<EventStore.Rags.ConsoleCharacter>.IndexOf(EventStore.Rags.ConsoleCharacter) System.Collections.Generic.List<EventStore.Rags.ConsoleCharacter>.IndexOf(EventStore.Rags.ConsoleCharacter, System.Int32) System.Collections.Generic.List<EventStore.Rags.ConsoleCharacter>.IndexOf(EventStore.Rags.ConsoleCharacter, System.Int32, System.Int32) System.Collections.Generic.List<EventStore.Rags.ConsoleCharacter>.Insert(System.Int32, EventStore.Rags.ConsoleCharacter) System.Collections.Generic.List<EventStore.Rags.ConsoleCharacter>.InsertRange(System.Int32, System.Collections.Generic.IEnumerable<EventStore.Rags.ConsoleCharacter>) System.Collections.Generic.List<EventStore.Rags.ConsoleCharacter>.LastIndexOf(EventStore.Rags.ConsoleCharacter) System.Collections.Generic.List<EventStore.Rags.ConsoleCharacter>.LastIndexOf(EventStore.Rags.ConsoleCharacter, System.Int32) System.Collections.Generic.List<EventStore.Rags.ConsoleCharacter>.LastIndexOf(EventStore.Rags.ConsoleCharacter, System.Int32, System.Int32) System.Collections.Generic.List<EventStore.Rags.ConsoleCharacter>.Remove(EventStore.Rags.ConsoleCharacter) System.Collections.Generic.List<EventStore.Rags.ConsoleCharacter>.RemoveAll(System.Predicate<EventStore.Rags.ConsoleCharacter>) System.Collections.Generic.List<EventStore.Rags.ConsoleCharacter>.RemoveAt(System.Int32) System.Collections.Generic.List<EventStore.Rags.ConsoleCharacter>.RemoveRange(System.Int32, System.Int32) System.Collections.Generic.List<EventStore.Rags.ConsoleCharacter>.Reverse() System.Collections.Generic.List<EventStore.Rags.ConsoleCharacter>.Reverse(System.Int32, System.Int32) System.Collections.Generic.List<EventStore.Rags.ConsoleCharacter>.Sort() System.Collections.Generic.List<EventStore.Rags.ConsoleCharacter>.Sort(System.Collections.Generic.IComparer<EventStore.Rags.ConsoleCharacter>) System.Collections.Generic.List<EventStore.Rags.ConsoleCharacter>.Sort(System.Comparison<EventStore.Rags.ConsoleCharacter>) System.Collections.Generic.List<EventStore.Rags.ConsoleCharacter>.Sort(System.Int32, System.Int32, System.Collections.Generic.IComparer<EventStore.Rags.ConsoleCharacter>) System.Collections.Generic.List<EventStore.Rags.ConsoleCharacter>.System.Collections.Generic.IEnumerable<EventStore.Rags.ConsoleCharacter>.GetEnumerator() System.Collections.Generic.List<EventStore.Rags.ConsoleCharacter>.System.Collections.ICollection.CopyTo(System.Array, System.Int32) System.Collections.Generic.List<EventStore.Rags.ConsoleCharacter>.System.Collections.IEnumerable.GetEnumerator() System.Collections.Generic.List<EventStore.Rags.ConsoleCharacter>.System.Collections.IList.Add(System.Object) System.Collections.Generic.List<EventStore.Rags.ConsoleCharacter>.System.Collections.IList.Contains(System.Object) System.Collections.Generic.List<EventStore.Rags.ConsoleCharacter>.System.Collections.IList.IndexOf(System.Object) System.Collections.Generic.List<EventStore.Rags.ConsoleCharacter>.System.Collections.IList.Insert(System.Int32, System.Object) System.Collections.Generic.List<EventStore.Rags.ConsoleCharacter>.System.Collections.IList.Remove(System.Object) System.Collections.Generic.List<EventStore.Rags.ConsoleCharacter>.ToArray() System.Collections.Generic.List<EventStore.Rags.ConsoleCharacter>.TrimExcess() System.Collections.Generic.List<EventStore.Rags.ConsoleCharacter>.TrueForAll(System.Predicate<EventStore.Rags.ConsoleCharacter>) System.Collections.Generic.List<EventStore.Rags.ConsoleCharacter>.Capacity System.Collections.Generic.List<EventStore.Rags.ConsoleCharacter>.Count System.Collections.Generic.List<EventStore.Rags.ConsoleCharacter>.Item[System.Int32] System.Collections.Generic.List<EventStore.Rags.ConsoleCharacter>.System.Collections.Generic.ICollection<EventStore.Rags.ConsoleCharacter>.IsReadOnly System.Collections.Generic.List<EventStore.Rags.ConsoleCharacter>.System.Collections.ICollection.IsSynchronized System.Collections.Generic.List<EventStore.Rags.ConsoleCharacter>.System.Collections.ICollection.SyncRoot System.Collections.Generic.List<EventStore.Rags.ConsoleCharacter>.System.Collections.IList.IsFixedSize System.Collections.Generic.List<EventStore.Rags.ConsoleCharacter>.System.Collections.IList.IsReadOnly System.Collections.Generic.List<EventStore.Rags.ConsoleCharacter>.System.Collections.IList.Item[System.Int32] System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Rags Assembly : EventStore.Rags.dll Syntax public class ConsoleString : List<ConsoleCharacter>, IList<ConsoleCharacter>, ICollection<ConsoleCharacter>, IReadOnlyList<ConsoleCharacter>, IReadOnlyCollection<ConsoleCharacter>, IEnumerable<ConsoleCharacter>, IList, ICollection, IEnumerable, IComparable<string> Constructors ConsoleString() Create a new empty ConsoleString. Declaration public ConsoleString() ConsoleString(String, Nullable<ConsoleColor>, Nullable<ConsoleColor>) Create a ConsoleString given an initial text value and optional color info. Declaration public ConsoleString(string value = \"\", ConsoleColor? foregroundColor = default(ConsoleColor? ), ConsoleColor? backgroundColor = default(ConsoleColor? )) Parameters Type Name System.String value System.Nullable < System.ConsoleColor > foregroundColor System.Nullable < System.ConsoleColor > backgroundColor Properties Empty Represents an empty string. You will get a new instance each time you access this property. Declaration public static ConsoleString Empty { get; } Property Value Type ConsoleString Length The length of the string. Declaration public int Length { get; } Property Value Type System.Int32 Methods Append(ConsoleString) Concatenates two ConsoleStrings together. Declaration public void Append(ConsoleString other) Parameters Type Name ConsoleString other Append(String, Nullable<ConsoleColor>, Nullable<ConsoleColor>) Appends the given value to this ConsoleString using the given formatting. Declaration public void Append(string value, ConsoleColor? foregroundColor = default(ConsoleColor? ), ConsoleColor? backgroundColor = default(ConsoleColor? )) Parameters Type Name System.String value System.Nullable < System.ConsoleColor > foregroundColor System.Nullable < System.ConsoleColor > backgroundColor AppendUsingCurrentFormat(String) Appends the given value using the formatting of the last character or the default formatting if this ConsoleString is empty. Declaration public void AppendUsingCurrentFormat(string value) Parameters Type Name System.String value CompareTo(String) Compare this ConsoleString to another ConsoleString. Declaration public int CompareTo(string other) Parameters Type Name System.String other Returns Type Description System.Int32 True if equal, false otherwise. Contains(String) Determines if this ConsoleString contains the given substring. Declaration public bool Contains(string substr) Parameters Type Name System.String substr Returns Type Description System.Boolean True if found, false otherwise. Equals(Object) Compare this ConsoleString to another ConsoleString or a plain string. Declaration public override bool Equals(object obj) Parameters Type Name System.Object obj Returns Type Description System.Boolean True if equal, false otherwise. Overrides System.Object.Equals(System.Object) GetHashCode() Gets the hashcode of the underlying string. Declaration public override int GetHashCode() Returns Type Description System.Int32 the hashcode of the underlying string. Overrides System.Object.GetHashCode() IndexOf(String) Finds the index of a given substring in this ConsoleString. Declaration public int IndexOf(string toFind) Parameters Type Name System.String toFind Returns Type Description System.Int32 The first index of the given substring or -1 if the substring was not found. Replace(String, String, Nullable<ConsoleColor>, Nullable<ConsoleColor>) Replaces all occurrances of the given string with the replacement value using the specified formatting. Declaration public ConsoleString Replace(string toFind, string toReplace, ConsoleColor? foregroundColor = default(ConsoleColor? ), ConsoleColor? backgroundColor = default(ConsoleColor? )) Parameters Type Name System.String toFind System.String toReplace System.Nullable < System.ConsoleColor > foregroundColor System.Nullable < System.ConsoleColor > backgroundColor Returns Type Description ConsoleString A new ConsoleString with the replacements. ReplaceRegex(String, String, Nullable<ConsoleColor>, Nullable<ConsoleColor>) Replaces all matches of the given regular expression with the replacement value using the specified formatting. Declaration public ConsoleString ReplaceRegex(string regex, string toReplace, ConsoleColor? foregroundColor = default(ConsoleColor? ), ConsoleColor? backgroundColor = default(ConsoleColor? )) Parameters Type Name System.String regex System.String toReplace System.Nullable < System.ConsoleColor > foregroundColor System.Nullable < System.ConsoleColor > backgroundColor Returns Type Description ConsoleString Substring(Int32) Get a substring of this ConsoleString starting at the given index. Declaration public ConsoleString Substring(int start) Parameters Type Name System.Int32 start Returns Type Description ConsoleString A new ConsoleString representing the substring requested. Substring(Int32, Int32) Get a substring of this ConsoleString starting at the given index and with the given length. Declaration public ConsoleString Substring(int start, int length) Parameters Type Name System.Int32 start System.Int32 length Returns Type Description ConsoleString A new ConsoleString representing the substring requested. ToString() Get the string representation of this ConsoleString. Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Write() Write this ConsoleString to the console using the desired style. Declaration public void Write() Operators Addition(ConsoleString, ConsoleString) Operator overload that concatenates 2 ConsoleString instances and returns a new one. Declaration public static ConsoleString operator +(ConsoleString a, ConsoleString b) Parameters Type Name ConsoleString a ConsoleString b Returns Type Description ConsoleString A new, concatenated ConsoleString Addition(ConsoleString, String) Operator overload that concatenates a ConsoleString with a string and returns a new one. Declaration public static ConsoleString operator +(ConsoleString a, string b) Parameters Type Name ConsoleString a System.String b Returns Type Description ConsoleString A new, concatenated ConsoleString Equality(ConsoleString, ConsoleString) Compares 2 ConsoleStrings for equality. Declaration public static bool operator ==(ConsoleString a, ConsoleString b) Parameters Type Name ConsoleString a ConsoleString b Returns Type Description System.Boolean True if they are the same, false otherwise Inequality(ConsoleString, ConsoleString) Compares 2 ConsoleStrings for inequality. Declaration public static bool operator !=(ConsoleString a, ConsoleString b) Parameters Type Name ConsoleString a ConsoleString b Returns Type Description System.Boolean False if they are the same, true otherwise Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable System.IComparable<T> Extension Methods EnumerableExtensions.Safe<T>(IEnumerable<T>) EnumerableExtensions.Contains<T>(IEnumerable<T>, Predicate<T>) EnumerableExtensions.IsEmpty<T>(IEnumerable<T>) EnumerableExtensions.IsNotEmpty<T>(IEnumerable<T>) Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.CategoryEventFilter.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.CategoryEventFilter.html",
    "title": "Class CategoryEventFilter | Event Store",
    "keywords": "Class CategoryEventFilter Inheritance System.Object EventFilter CategoryEventFilter Inherited Members EventFilter.Passes(Boolean, String, String, Boolean) EventFilter.PassesDeleteNotification(String) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class CategoryEventFilter : EventFilter Constructors CategoryEventFilter(String, Boolean, HashSet<String>) Declaration public CategoryEventFilter(string category, bool allEvents, HashSet<string> events) Parameters Type Name System.String category System.Boolean allEvents System.Collections.Generic.HashSet < System.String > events Methods DeletedNotificationPasses(String) Declaration protected override bool DeletedNotificationPasses(string positionStreamId) Parameters Type Name System.String positionStreamId Returns Type Description System.Boolean Overrides EventFilter.DeletedNotificationPasses(String) GetCategory(String) Declaration public override string GetCategory(string positionStreamId) Parameters Type Name System.String positionStreamId Returns Type Description System.String Overrides EventFilter.GetCategory(String) PassesSource(Boolean, String, String) Declaration public override bool PassesSource(bool resolvedFromLinkTo, string positionStreamId, string eventType) Parameters Type Name System.Boolean resolvedFromLinkTo System.String positionStreamId System.String eventType Returns Type Description System.Boolean Overrides EventFilter.PassesSource(Boolean, String, String) ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.CatalogStreamPositionTagger.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.CatalogStreamPositionTagger.html",
    "title": "Class CatalogStreamPositionTagger | Event Store",
    "keywords": "Class CatalogStreamPositionTagger Inheritance System.Object PositionTagger CatalogStreamPositionTagger Inherited Members PositionTagger.Phase System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class CatalogStreamPositionTagger : PositionTagger Constructors CatalogStreamPositionTagger(Int32, String) Declaration public CatalogStreamPositionTagger(int phase, string catalogStream) Parameters Type Name System.Int32 phase System.String catalogStream Methods AdjustTag(CheckpointTag) Declaration public override CheckpointTag AdjustTag(CheckpointTag tag) Parameters Type Name CheckpointTag tag Returns Type Description CheckpointTag Overrides PositionTagger.AdjustTag(CheckpointTag) IsCompatible(CheckpointTag) Declaration public override bool IsCompatible(CheckpointTag checkpointTag) Parameters Type Name CheckpointTag checkpointTag Returns Type Description System.Boolean Overrides PositionTagger.IsCompatible(CheckpointTag) IsMessageAfterCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.CommittedEventDistributed) Declaration public override bool IsMessageAfterCheckpointTag(CheckpointTag previous, ReaderSubscriptionMessage.CommittedEventDistributed committedEvent) Parameters Type Name CheckpointTag previous ReaderSubscriptionMessage.CommittedEventDistributed committedEvent Returns Type Description System.Boolean Overrides PositionTagger.IsMessageAfterCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.CommittedEventDistributed) MakeCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.CommittedEventDistributed) Declaration public override CheckpointTag MakeCheckpointTag(CheckpointTag previous, ReaderSubscriptionMessage.CommittedEventDistributed committedEvent) Parameters Type Name CheckpointTag previous ReaderSubscriptionMessage.CommittedEventDistributed committedEvent Returns Type Description CheckpointTag Overrides PositionTagger.MakeCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.CommittedEventDistributed) MakeCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.EventReaderPartitionDeleted) Declaration public override CheckpointTag MakeCheckpointTag(CheckpointTag previous, ReaderSubscriptionMessage.EventReaderPartitionDeleted partitionDeleted) Parameters Type Name CheckpointTag previous ReaderSubscriptionMessage.EventReaderPartitionDeleted partitionDeleted Returns Type Description CheckpointTag Overrides PositionTagger.MakeCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.EventReaderPartitionDeleted) MakeCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.EventReaderPartitionEof) Declaration public override CheckpointTag MakeCheckpointTag(CheckpointTag previous, ReaderSubscriptionMessage.EventReaderPartitionEof partitionEof) Parameters Type Name CheckpointTag previous ReaderSubscriptionMessage.EventReaderPartitionEof partitionEof Returns Type Description CheckpointTag Overrides PositionTagger.MakeCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.EventReaderPartitionEof) MakeZeroCheckpointTag() Declaration public override CheckpointTag MakeZeroCheckpointTag() Returns Type Description CheckpointTag Overrides PositionTagger.MakeZeroCheckpointTag() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.BypassingEventFilter.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.BypassingEventFilter.html",
    "title": "Class BypassingEventFilter | Event Store",
    "keywords": "Class BypassingEventFilter Inheritance System.Object EventFilter BypassingEventFilter Inherited Members EventFilter.Passes(Boolean, String, String, Boolean) EventFilter.PassesDeleteNotification(String) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class BypassingEventFilter : EventFilter Constructors BypassingEventFilter() Declaration public BypassingEventFilter() Methods DeletedNotificationPasses(String) Declaration protected override bool DeletedNotificationPasses(string positionStreamId) Parameters Type Name System.String positionStreamId Returns Type Description System.Boolean Overrides EventFilter.DeletedNotificationPasses(String) GetCategory(String) Declaration public override string GetCategory(string positionStreamId) Parameters Type Name System.String positionStreamId Returns Type Description System.String Overrides EventFilter.GetCategory(String) PassesSource(Boolean, String, String) Declaration public override bool PassesSource(bool resolvedFromLinkTo, string positionStreamId, string eventType) Parameters Type Name System.Boolean resolvedFromLinkTo System.String positionStreamId System.String eventType Returns Type Description System.Boolean Overrides EventFilter.PassesSource(Boolean, String, String) Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ByStreamStatePartitionSelector.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ByStreamStatePartitionSelector.html",
    "title": "Class ByStreamStatePartitionSelector | Event Store",
    "keywords": "Class ByStreamStatePartitionSelector Inheritance System.Object StatePartitionSelector ByStreamStatePartitionSelector Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class ByStreamStatePartitionSelector : StatePartitionSelector Methods EventReaderBasePartitionDeletedIsSupported() Declaration public override bool EventReaderBasePartitionDeletedIsSupported() Returns Type Description System.Boolean Overrides StatePartitionSelector.EventReaderBasePartitionDeletedIsSupported() GetStatePartition(EventReaderSubscriptionMessage.CommittedEventReceived) Declaration public override string GetStatePartition(EventReaderSubscriptionMessage.CommittedEventReceived event) Parameters Type Name EventReaderSubscriptionMessage.CommittedEventReceived event Returns Type Description System.String Overrides StatePartitionSelector.GetStatePartition(EventReaderSubscriptionMessage.CommittedEventReceived) Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ByStreamCatalogEventReader.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ByStreamCatalogEventReader.html",
    "title": "Class ByStreamCatalogEventReader | Event Store",
    "keywords": "Class ByStreamCatalogEventReader Inheritance System.Object EventReader ByStreamCatalogEventReader Implements IEventReader System.IDisposable Inherited Members EventReader.EventReaderCorrelationId EventReader._publisher EventReader._stopOnEof EventReader._disposed EventReader.PauseRequested EventReader.Paused EventReader.ReadAs EventReader.Resume() EventReader.Pause() EventReader.Dispose() EventReader.SendEof() EventReader.SendPartitionEof(String, CheckpointTag) EventReader.SendPartitionDeleted_WhenReadingDataStream(String, Nullable<Int64>, Nullable<TFPos>, Nullable<TFPos>, String, Nullable<Int32>, CheckpointTag) EventReader.SendNotAuthorized() EventReader.GetLastCommitPositionFrom(ClientMessage.ReadStreamEventsForwardCompleted) EventReader.PauseOrContinueProcessing() EventReader.NotifyIfStarting(Int64) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class ByStreamCatalogEventReader : EventReader, IEventReader, IDisposable Constructors ByStreamCatalogEventReader(IPublisher, Guid, IPrincipal, IODispatcher, String, Int64, String, Int64, Nullable<Int64>, Boolean) Declaration public ByStreamCatalogEventReader(IPublisher publisher, Guid eventReaderCorrelationId, IPrincipal readAs, IODispatcher ioDispatcher, string catalogCatalogStreamName, long catalogNextSequenceNumber, string dataStreamName, long dataNextSequenceNumber, long? limitingCommitPosition, bool resolveLinkTos) Parameters Type Name IPublisher publisher System.Guid eventReaderCorrelationId System.Security.Principal.IPrincipal readAs IODispatcher ioDispatcher System.String catalogCatalogStreamName System.Int64 catalogNextSequenceNumber System.String dataStreamName System.Int64 dataNextSequenceNumber System.Nullable < System.Int64 > limitingCommitPosition System.Boolean resolveLinkTos Methods AreEventsRequested() Declaration protected override bool AreEventsRequested() Returns Type Description System.Boolean Overrides EventReader.AreEventsRequested() RequestEvents() Declaration protected override void RequestEvents() Overrides EventReader.RequestEvents() Implements IEventReader System.IDisposable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ByPositionStreamStatePartitionSelector.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ByPositionStreamStatePartitionSelector.html",
    "title": "Class ByPositionStreamStatePartitionSelector | Event Store",
    "keywords": "Class ByPositionStreamStatePartitionSelector Inheritance System.Object StatePartitionSelector ByPositionStreamStatePartitionSelector Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class ByPositionStreamStatePartitionSelector : StatePartitionSelector Methods EventReaderBasePartitionDeletedIsSupported() Declaration public override bool EventReaderBasePartitionDeletedIsSupported() Returns Type Description System.Boolean Overrides StatePartitionSelector.EventReaderBasePartitionDeletedIsSupported() GetStatePartition(EventReaderSubscriptionMessage.CommittedEventReceived) Declaration public override string GetStatePartition(EventReaderSubscriptionMessage.CommittedEventReceived event) Parameters Type Name EventReaderSubscriptionMessage.CommittedEventReceived event Returns Type Description System.String Overrides StatePartitionSelector.GetStatePartition(EventReaderSubscriptionMessage.CommittedEventReceived) Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ByHandleStatePartitionSelector.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ByHandleStatePartitionSelector.html",
    "title": "Class ByHandleStatePartitionSelector | Event Store",
    "keywords": "Class ByHandleStatePartitionSelector Inheritance System.Object StatePartitionSelector ByHandleStatePartitionSelector Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class ByHandleStatePartitionSelector : StatePartitionSelector Constructors ByHandleStatePartitionSelector(IProjectionStateHandler) Declaration public ByHandleStatePartitionSelector(IProjectionStateHandler handler) Parameters Type Name IProjectionStateHandler handler Methods EventReaderBasePartitionDeletedIsSupported() Declaration public override bool EventReaderBasePartitionDeletedIsSupported() Returns Type Description System.Boolean Overrides StatePartitionSelector.EventReaderBasePartitionDeletedIsSupported() GetStatePartition(EventReaderSubscriptionMessage.CommittedEventReceived) Declaration public override string GetStatePartition(EventReaderSubscriptionMessage.CommittedEventReceived event) Parameters Type Name EventReaderSubscriptionMessage.CommittedEventReceived event Returns Type Description System.String Overrides StatePartitionSelector.GetStatePartition(EventReaderSubscriptionMessage.CommittedEventReceived) Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.AllStreamsCatalogEventReader.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.AllStreamsCatalogEventReader.html",
    "title": "Class AllStreamsCatalogEventReader | Event Store",
    "keywords": "Class AllStreamsCatalogEventReader Inheritance System.Object EventReader AllStreamsCatalogEventReader Implements IEventReader System.IDisposable IHandle < ClientMessage.ReadStreamEventsForwardCompleted > Inherited Members EventReader.EventReaderCorrelationId EventReader._publisher EventReader._stopOnEof EventReader._disposed EventReader.PauseRequested EventReader.Paused EventReader.ReadAs EventReader.Resume() EventReader.Pause() EventReader.Dispose() EventReader.SendEof() EventReader.SendPartitionEof(String, CheckpointTag) EventReader.SendPartitionDeleted_WhenReadingDataStream(String, Nullable<Int64>, Nullable<TFPos>, Nullable<TFPos>, String, Nullable<Int32>, CheckpointTag) EventReader.SendNotAuthorized() EventReader.GetLastCommitPositionFrom(ClientMessage.ReadStreamEventsForwardCompleted) EventReader.PauseOrContinueProcessing() EventReader.NotifyIfStarting(Int64) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class AllStreamsCatalogEventReader : EventReader, IEventReader, IDisposable, IHandle<ClientMessage.ReadStreamEventsForwardCompleted> Constructors AllStreamsCatalogEventReader(IODispatcher, IPublisher, Guid, IPrincipal, Int64, ITimeProvider, Boolean) Declaration public AllStreamsCatalogEventReader(IODispatcher ioDispatcher, IPublisher publisher, Guid eventReaderCorrelationId, IPrincipal readAs, long fromSequenceNumber, ITimeProvider timeProvider, bool stopOnEof = false) Parameters Type Name IODispatcher ioDispatcher IPublisher publisher System.Guid eventReaderCorrelationId System.Security.Principal.IPrincipal readAs System.Int64 fromSequenceNumber ITimeProvider timeProvider System.Boolean stopOnEof Methods AreEventsRequested() Declaration protected override bool AreEventsRequested() Returns Type Description System.Boolean Overrides EventReader.AreEventsRequested() Handle(ClientMessage.ReadStreamEventsForwardCompleted) Declaration public void Handle(ClientMessage.ReadStreamEventsForwardCompleted message) Parameters Type Name ClientMessage.ReadStreamEventsForwardCompleted message RequestEvents() Declaration protected override void RequestEvents() Overrides EventReader.RequestEvents() Implements IEventReader System.IDisposable IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Management.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Management.html",
    "title": "Namespace EventStore.Projections.Core.Services.Management | Event Store",
    "keywords": "Namespace EventStore.Projections.Core.Services.Management Classes ManagedProjection managed projection controls start/stop/create/update/delete lifecycle of the projection. ManagedProjection.PersistedState MasterCoreProjectionResponseReader MultiStreamMessageWriter ProjectionCoreCoordinator ProjectionCoreResponseWriter ProjectionManager ProjectionManager.NewProjectionInitializer ProjectionManagerCommandWriter ProjectionManagerMessageDispatcher ProjectionManagerResponseReader ProjectionStateHandlerFactory ResponseWriter SerializedRunAs SlaveProjectionResponseWriter TimeoutScheduler Interfaces IMultiStreamMessageWriter IResponseWriter Enums ManagedProjectionState"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Management.TimeoutScheduler.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Management.TimeoutScheduler.html",
    "title": "Class TimeoutScheduler | Event Store",
    "keywords": "Class TimeoutScheduler Inheritance System.Object TimeoutScheduler Implements ISingletonTimeoutScheduler Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Management Assembly : EventStore.Projections.Core.dll Syntax public class TimeoutScheduler : ISingletonTimeoutScheduler Methods Schedule(Int32, Action) Declaration public void Schedule(int timeout, Action action) Parameters Type Name System.Int32 timeout System.Action action Tick() Declaration public void Tick() Implements ISingletonTimeoutScheduler Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Management.SlaveProjectionResponseWriter.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Management.SlaveProjectionResponseWriter.html",
    "title": "Class SlaveProjectionResponseWriter | Event Store",
    "keywords": "Class SlaveProjectionResponseWriter Inheritance System.Object SlaveProjectionResponseWriter Implements IHandle < PartitionMeasuredOutput > IHandle < PartitionProcessingProgressOutput > IHandle < PartitionProcessingResultOutput > IHandle < ReaderSubscriptionManagement.SpoolStreamReading > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Management Assembly : EventStore.Projections.Core.dll Syntax public sealed class SlaveProjectionResponseWriter : IHandle<PartitionMeasuredOutput>, IHandle<PartitionProcessingProgressOutput>, IHandle<PartitionProcessingResultOutput>, IHandle<ReaderSubscriptionManagement.SpoolStreamReading> Constructors SlaveProjectionResponseWriter(IMultiStreamMessageWriter) Declaration public SlaveProjectionResponseWriter(IMultiStreamMessageWriter writer) Parameters Type Name IMultiStreamMessageWriter writer Methods Handle(PartitionMeasuredOutput) Declaration public void Handle(PartitionMeasuredOutput message) Parameters Type Name PartitionMeasuredOutput message Handle(PartitionProcessingProgressOutput) Declaration public void Handle(PartitionProcessingProgressOutput message) Parameters Type Name PartitionProcessingProgressOutput message Handle(PartitionProcessingResultOutput) Declaration public void Handle(PartitionProcessingResultOutput message) Parameters Type Name PartitionProcessingResultOutput message Handle(ReaderSubscriptionManagement.SpoolStreamReading) Declaration public void Handle(ReaderSubscriptionManagement.SpoolStreamReading message) Parameters Type Name ReaderSubscriptionManagement.SpoolStreamReading message Implements IHandle<T> IHandle<T> IHandle<T> IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Management.SerializedRunAs.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Management.SerializedRunAs.html",
    "title": "Class SerializedRunAs | Event Store",
    "keywords": "Class SerializedRunAs Inheritance System.Object SerializedRunAs Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Management Assembly : EventStore.Projections.Core.dll Syntax public class SerializedRunAs Properties Name Declaration public string Name { get; set; } Property Value Type System.String Roles Declaration public string[] Roles { get; set; } Property Value Type System.String [] Methods DeserializePrincipal(SerializedRunAs) Declaration public static IPrincipal DeserializePrincipal(SerializedRunAs runAs) Parameters Type Name SerializedRunAs runAs Returns Type Description System.Security.Principal.IPrincipal SerializePrincipal(ProjectionManagementMessage.RunAs) Declaration public static SerializedRunAs SerializePrincipal(ProjectionManagementMessage.RunAs runAs) Parameters Type Name ProjectionManagementMessage.RunAs runAs Returns Type Description SerializedRunAs Operators Implicit(ProjectionManagementMessage.RunAs to SerializedRunAs) Declaration public static implicit operator SerializedRunAs(ProjectionManagementMessage.RunAs runAs) Parameters Type Name ProjectionManagementMessage.RunAs runAs Returns Type Description SerializedRunAs Implicit(SerializedRunAs to ProjectionManagementMessage.RunAs) Declaration public static implicit operator ProjectionManagementMessage.RunAs(SerializedRunAs runAs) Parameters Type Name SerializedRunAs runAs Returns Type Description ProjectionManagementMessage.RunAs Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.StorageMessage.CheckStreamAccess.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.StorageMessage.CheckStreamAccess.html",
    "title": "Class StorageMessage.CheckStreamAccess | Event Store",
    "keywords": "Class StorageMessage.CheckStreamAccess Inheritance System.Object Message ClientMessage.ReadRequestMessage StorageMessage.CheckStreamAccess Implements IQueueAffineMessage Inherited Members ClientMessage.ReadRequestMessage.InternalCorrId ClientMessage.ReadRequestMessage.CorrelationId ClientMessage.ReadRequestMessage.Envelope ClientMessage.ReadRequestMessage.User ClientMessage.ReadRequestMessage.Expires Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class CheckStreamAccess : ClientMessage.ReadRequestMessage, IQueueAffineMessage Constructors CheckStreamAccess(IEnvelope, Guid, String, Nullable<Int64>, StreamAccessType, IPrincipal, Boolean) Declaration public CheckStreamAccess(IEnvelope envelope, Guid correlationId, string eventStreamId, long? transactionId, StreamAccessType accessType, IPrincipal user, bool singleAffinity = false) Parameters Type Name IEnvelope envelope System.Guid correlationId System.String eventStreamId System.Nullable < System.Int64 > transactionId StreamAccessType accessType System.Security.Principal.IPrincipal user System.Boolean singleAffinity Fields AccessType Declaration public readonly StreamAccessType AccessType Field Value Type StreamAccessType EventStreamId Declaration public readonly string EventStreamId Field Value Type System.String TransactionId Declaration public readonly long? TransactionId Field Value Type System.Nullable < System.Int64 > Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides ClientMessage.ReadRequestMessage.MsgTypeId QueueId Declaration public int QueueId { get; } Property Value Type System.Int32 Implements IQueueAffineMessage Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.StorageMessage.BatchLogExpiredMessages.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.StorageMessage.BatchLogExpiredMessages.html",
    "title": "Class StorageMessage.BatchLogExpiredMessages | Event Store",
    "keywords": "Class StorageMessage.BatchLogExpiredMessages Inheritance System.Object Message StorageMessage.BatchLogExpiredMessages Implements IQueueAffineMessage Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class BatchLogExpiredMessages : Message, IQueueAffineMessage Constructors BatchLogExpiredMessages(Guid, Int32) Declaration public BatchLogExpiredMessages(Guid correlationId, int queueId) Parameters Type Name System.Guid correlationId System.Int32 queueId Fields CorrelationId Declaration public readonly Guid CorrelationId Field Value Type System.Guid Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId QueueId Declaration public int QueueId { get; } Property Value Type System.Int32 Implements IQueueAffineMessage Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.StorageMessage.AlreadyCommitted.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.StorageMessage.AlreadyCommitted.html",
    "title": "Class StorageMessage.AlreadyCommitted | Event Store",
    "keywords": "Class StorageMessage.AlreadyCommitted Inheritance System.Object Message StorageMessage.AlreadyCommitted Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class AlreadyCommitted : Message Constructors AlreadyCommitted(Guid, String, Int64, Int64) Declaration public AlreadyCommitted(Guid correlationId, string eventStreamId, long firstEventNumber, long lastEventNumber) Parameters Type Name System.Guid correlationId System.String eventStreamId System.Int64 firstEventNumber System.Int64 lastEventNumber Fields CorrelationId Declaration public readonly Guid CorrelationId Field Value Type System.Guid EventStreamId Declaration public readonly string EventStreamId Field Value Type System.String FirstEventNumber Declaration public readonly long FirstEventNumber Field Value Type System.Int64 LastEventNumber Declaration public readonly long LastEventNumber Field Value Type System.Int64 Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Methods ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ScavengeResultDto.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ScavengeResultDto.html",
    "title": "Class ScavengeResultDto | Event Store",
    "keywords": "Class ScavengeResultDto Inheritance System.Object ScavengeResultDto Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class ScavengeResultDto Constructors ScavengeResultDto() Declaration public ScavengeResultDto() ScavengeResultDto(String) Declaration public ScavengeResultDto(string scavengeId) Parameters Type Name System.String scavengeId Properties ScavengeId Declaration public string ScavengeId { get; set; } Property Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.HttpClientMessageDto.WriteEventsDynamic.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.HttpClientMessageDto.WriteEventsDynamic.html",
    "title": "Class HttpClientMessageDto.WriteEventsDynamic | Event Store",
    "keywords": "Class HttpClientMessageDto.WriteEventsDynamic Inheritance System.Object HttpClientMessageDto.WriteEventsDynamic Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class WriteEventsDynamic Constructors WriteEventsDynamic() Declaration public WriteEventsDynamic() WriteEventsDynamic(HttpClientMessageDto.ClientEventDynamic[]) Declaration public WriteEventsDynamic(HttpClientMessageDto.ClientEventDynamic[] events) Parameters Type Name HttpClientMessageDto.ClientEventDynamic [] events Properties events Declaration public HttpClientMessageDto.ClientEventDynamic[] events { get; set; } Property Value Type HttpClientMessageDto.ClientEventDynamic [] Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ElectionMessage.PrepareOk.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ElectionMessage.PrepareOk.html",
    "title": "Class ElectionMessage.PrepareOk | Event Store",
    "keywords": "Class ElectionMessage.PrepareOk Inheritance System.Object Message ElectionMessage.PrepareOk Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class PrepareOk : Message Constructors PrepareOk(ElectionMessageDto.PrepareOkDto) Declaration public PrepareOk(ElectionMessageDto.PrepareOkDto dto) Parameters Type Name ElectionMessageDto.PrepareOkDto dto PrepareOk(Int32, Guid, IPEndPoint, Int32, Int64, Guid, Int64, Int64, Int64, Int32) Declaration public PrepareOk(int view, Guid serverId, IPEndPoint serverInternalHttp, int epochNumber, long epochPosition, Guid epochId, long lastCommitPosition, long writerCheckpoint, long chaserCheckpoint, int nodePriority) Parameters Type Name System.Int32 view System.Guid serverId System.Net.IPEndPoint serverInternalHttp System.Int32 epochNumber System.Int64 epochPosition System.Guid epochId System.Int64 lastCommitPosition System.Int64 writerCheckpoint System.Int64 chaserCheckpoint System.Int32 nodePriority Fields ChaserCheckpoint Declaration public readonly long ChaserCheckpoint Field Value Type System.Int64 EpochId Declaration public readonly Guid EpochId Field Value Type System.Guid EpochNumber Declaration public readonly int EpochNumber Field Value Type System.Int32 EpochPosition Declaration public readonly long EpochPosition Field Value Type System.Int64 LastCommitPosition Declaration public readonly long LastCommitPosition Field Value Type System.Int64 NodePriority Declaration public readonly int NodePriority Field Value Type System.Int32 ServerId Declaration public readonly Guid ServerId Field Value Type System.Guid ServerInternalHttp Declaration public readonly IPEndPoint ServerInternalHttp Field Value Type System.Net.IPEndPoint View Declaration public readonly int View Field Value Type System.Int32 WriterCheckpoint Declaration public readonly long WriterCheckpoint Field Value Type System.Int64 Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Methods ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ElectionMessage.Prepare.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ElectionMessage.Prepare.html",
    "title": "Class ElectionMessage.Prepare | Event Store",
    "keywords": "Class ElectionMessage.Prepare Inheritance System.Object Message ElectionMessage.Prepare Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class Prepare : Message Constructors Prepare(ElectionMessageDto.PrepareDto) Declaration public Prepare(ElectionMessageDto.PrepareDto dto) Parameters Type Name ElectionMessageDto.PrepareDto dto Prepare(Guid, IPEndPoint, Int32) Declaration public Prepare(Guid serverId, IPEndPoint serverInternalHttp, int view) Parameters Type Name System.Guid serverId System.Net.IPEndPoint serverInternalHttp System.Int32 view Fields ServerId Declaration public readonly Guid ServerId Field Value Type System.Guid ServerInternalHttp Declaration public readonly IPEndPoint ServerInternalHttp Field Value Type System.Net.IPEndPoint View Declaration public readonly int View Field Value Type System.Int32 Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Methods ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ElectionMessage.ElectionsTimedOut.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ElectionMessage.ElectionsTimedOut.html",
    "title": "Class ElectionMessage.ElectionsTimedOut | Event Store",
    "keywords": "Class ElectionMessage.ElectionsTimedOut Inheritance System.Object Message ElectionMessage.ElectionsTimedOut Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class ElectionsTimedOut : Message Constructors ElectionsTimedOut(Int32) Declaration public ElectionsTimedOut(int view) Parameters Type Name System.Int32 view Fields View Declaration public readonly int View Field Value Type System.Int32 Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Methods ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.DenialReason.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.DenialReason.html",
    "title": "Enum DenialReason | Event Store",
    "keywords": "Enum DenialReason Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public enum DenialReason Fields Name Description ServerTooBusy Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<DenialReason>() ProtobufExtensions.Serialize<DenialReason>() ProtobufExtensions.SerializeToArray<DenialReason>()"
  },
  "dotnet-api/code/EventStore.Core.Messages.ClusterInfoDto.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ClusterInfoDto.html",
    "title": "Class ClusterInfoDto | Event Store",
    "keywords": "Class ClusterInfoDto Inheritance System.Object ClusterInfoDto Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class ClusterInfoDto Constructors ClusterInfoDto() Declaration public ClusterInfoDto() ClusterInfoDto(ClusterInfo, IPEndPoint) Declaration public ClusterInfoDto(ClusterInfo clusterInfo, IPEndPoint serverEndPoint) Parameters Type Name ClusterInfo clusterInfo System.Net.IPEndPoint serverEndPoint Properties Members Declaration public MemberInfoDto[] Members { get; set; } Property Value Type MemberInfoDto [] ServerIp Declaration public string ServerIp { get; set; } Property Value Type System.String ServerPort Declaration public int ServerPort { get; set; } Property Value Type System.Int32 Methods ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ClientMessage.ReadAllEventsBackward.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ClientMessage.ReadAllEventsBackward.html",
    "title": "Class ClientMessage.ReadAllEventsBackward | Event Store",
    "keywords": "Class ClientMessage.ReadAllEventsBackward Inheritance System.Object Message ClientMessage.ReadRequestMessage ClientMessage.ReadAllEventsBackward Inherited Members ClientMessage.ReadRequestMessage.InternalCorrId ClientMessage.ReadRequestMessage.CorrelationId ClientMessage.ReadRequestMessage.Envelope ClientMessage.ReadRequestMessage.User ClientMessage.ReadRequestMessage.Expires Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class ReadAllEventsBackward : ClientMessage.ReadRequestMessage Constructors ReadAllEventsBackward(Guid, Guid, IEnvelope, Int64, Int64, Int32, Boolean, Boolean, Nullable<Int64>, IPrincipal) Declaration public ReadAllEventsBackward(Guid internalCorrId, Guid correlationId, IEnvelope envelope, long commitPosition, long preparePosition, int maxCount, bool resolveLinkTos, bool requireMaster, long? validationTfLastCommitPosition, IPrincipal user) Parameters Type Name System.Guid internalCorrId System.Guid correlationId IEnvelope envelope System.Int64 commitPosition System.Int64 preparePosition System.Int32 maxCount System.Boolean resolveLinkTos System.Boolean requireMaster System.Nullable < System.Int64 > validationTfLastCommitPosition System.Security.Principal.IPrincipal user Fields CommitPosition Declaration public readonly long CommitPosition Field Value Type System.Int64 MaxCount Declaration public readonly int MaxCount Field Value Type System.Int32 PreparePosition Declaration public readonly long PreparePosition Field Value Type System.Int64 RequireMaster Declaration public readonly bool RequireMaster Field Value Type System.Boolean ResolveLinkTos Declaration public readonly bool ResolveLinkTos Field Value Type System.Boolean ValidationTfLastCommitPosition Declaration public readonly long? ValidationTfLastCommitPosition Field Value Type System.Nullable < System.Int64 > Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides ClientMessage.ReadRequestMessage.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ClientMessage.PersistentSubscriptionStreamEventAppeared.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ClientMessage.PersistentSubscriptionStreamEventAppeared.html",
    "title": "Class ClientMessage.PersistentSubscriptionStreamEventAppeared | Event Store",
    "keywords": "Class ClientMessage.PersistentSubscriptionStreamEventAppeared Inheritance System.Object Message ClientMessage.PersistentSubscriptionStreamEventAppeared Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class PersistentSubscriptionStreamEventAppeared : Message Constructors PersistentSubscriptionStreamEventAppeared(Guid, ResolvedEvent, Int32) Declaration public PersistentSubscriptionStreamEventAppeared(Guid correlationId, ResolvedEvent event, int retryCount) Parameters Type Name System.Guid correlationId ResolvedEvent event System.Int32 retryCount Fields CorrelationId Declaration public readonly Guid CorrelationId Field Value Type System.Guid Event Declaration public readonly ResolvedEvent Event Field Value Type ResolvedEvent RetryCount Declaration public readonly int RetryCount Field Value Type System.Int32 Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Index.PTableVersions.html": {
    "href": "dotnet-api/code/EventStore.Core.Index.PTableVersions.html",
    "title": "Class PTableVersions | Event Store",
    "keywords": "Class PTableVersions Inheritance System.Object PTableVersions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Index Assembly : EventStore.Core.dll Syntax public class PTableVersions Fields IndexV1 Declaration public const byte IndexV1 = 1 Field Value Type System.Byte IndexV2 Declaration public const byte IndexV2 = 2 Field Value Type System.Byte IndexV3 Declaration public const byte IndexV3 = 3 Field Value Type System.Byte IndexV4 Declaration public const byte IndexV4 = 4 Field Value Type System.Byte Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Index.PTableHeader.html": {
    "href": "dotnet-api/code/EventStore.Core.Index.PTableHeader.html",
    "title": "Class PTableHeader | Event Store",
    "keywords": "Class PTableHeader Inheritance System.Object PTableHeader Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Index Assembly : EventStore.Core.dll Syntax public class PTableHeader Constructors PTableHeader(Byte) Declaration public PTableHeader(byte version) Parameters Type Name System.Byte version Fields FileType Declaration public readonly FileType FileType Field Value Type FileType Size Declaration public const int Size = 128 Field Value Type System.Int32 Version Declaration public readonly byte Version Field Value Type System.Byte Methods AsByteArray() Declaration public byte[] AsByteArray() Returns Type Description System.Byte [] FromStream(Stream) Declaration public static PTableHeader FromStream(Stream stream) Parameters Type Name System.IO.Stream stream Returns Type Description PTableHeader Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Exceptions.HashValidationException.html": {
    "href": "dotnet-api/code/EventStore.Core.Exceptions.HashValidationException.html",
    "title": "Class HashValidationException | Event Store",
    "keywords": "Class HashValidationException Inheritance System.Object System.Exception HashValidationException Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Exceptions Assembly : EventStore.Core.dll Syntax public class HashValidationException : Exception, _Exception, ISerializable Constructors HashValidationException() Declaration public HashValidationException() HashValidationException(String) Declaration public HashValidationException(string message) Parameters Type Name System.String message HashValidationException(String, Exception) Declaration public HashValidationException(string message, Exception innerException) Parameters Type Name System.String message System.Exception innerException Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Data.StreamMetadata.html": {
    "href": "dotnet-api/code/EventStore.Core.Data.StreamMetadata.html",
    "title": "Class StreamMetadata | Event Store",
    "keywords": "Class StreamMetadata Inheritance System.Object StreamMetadata Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Data Assembly : EventStore.Core.dll Syntax public class StreamMetadata Constructors StreamMetadata(Nullable<Int64>, Nullable<TimeSpan>, Nullable<Int64>, Nullable<Boolean>, Nullable<TimeSpan>, StreamAcl) Declaration public StreamMetadata(long? maxCount = default(long? ), TimeSpan? maxAge = default(TimeSpan? ), long? truncateBefore = default(long? ), bool? tempStream = default(bool? ), TimeSpan? cacheControl = default(TimeSpan? ), StreamAcl acl = null) Parameters Type Name System.Nullable < System.Int64 > maxCount System.Nullable < System.TimeSpan > maxAge System.Nullable < System.Int64 > truncateBefore System.Nullable < System.Boolean > tempStream System.Nullable < System.TimeSpan > cacheControl StreamAcl acl Fields Acl Declaration public readonly StreamAcl Acl Field Value Type StreamAcl CacheControl Declaration public readonly TimeSpan? CacheControl Field Value Type System.Nullable < System.TimeSpan > Empty Declaration public static readonly StreamMetadata Empty Field Value Type StreamMetadata MaxAge Declaration public readonly TimeSpan? MaxAge Field Value Type System.Nullable < System.TimeSpan > MaxCount Declaration public readonly long? MaxCount Field Value Type System.Nullable < System.Int64 > TempStream Declaration public readonly bool? TempStream Field Value Type System.Nullable < System.Boolean > TruncateBefore Declaration public readonly long? TruncateBefore Field Value Type System.Nullable < System.Int64 > Methods FromJson(String) Declaration public static StreamMetadata FromJson(string json) Parameters Type Name System.String json Returns Type Description StreamMetadata FromJsonBytes(Byte[]) Declaration public static StreamMetadata FromJsonBytes(byte[] json) Parameters Type Name System.Byte [] json Returns Type Description StreamMetadata FromJsonReader(JsonTextReader) Declaration public static StreamMetadata FromJsonReader(JsonTextReader reader) Parameters Type Name Newtonsoft.Json.JsonTextReader reader Returns Type Description StreamMetadata ToJsonBytes() Declaration public byte[] ToJsonBytes() Returns Type Description System.Byte [] ToJsonString() Declaration public string ToJsonString() Returns Type Description System.String ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Bus.QueuedHandlerAutoResetWithMpsc.html": {
    "href": "dotnet-api/code/EventStore.Core.Bus.QueuedHandlerAutoResetWithMpsc.html",
    "title": "Class QueuedHandlerAutoResetWithMpsc | Event Store",
    "keywords": "Class QueuedHandlerAutoResetWithMpsc Lightweight in-memory queue with a separate thread in which it passes messages to the consumer. It also tracks statistics about the message processing to help in identifying bottlenecks Inheritance System.Object QueuedHandlerAutoResetWithMpsc Implements IQueuedHandler IHandle < Message > IPublisher IMonitoredQueue IThreadSafePublisher Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Bus Assembly : EventStore.Core.dll Syntax public class QueuedHandlerAutoResetWithMpsc : IQueuedHandler, IHandle<Message>, IPublisher, IMonitoredQueue, IThreadSafePublisher Constructors QueuedHandlerAutoResetWithMpsc(IHandle<Message>, String, Boolean, Nullable<TimeSpan>, Nullable<TimeSpan>, String) Declaration public QueuedHandlerAutoResetWithMpsc(IHandle<Message> consumer, string name, bool watchSlowMsg = true, TimeSpan? slowMsgThreshold = default(TimeSpan? ), TimeSpan? threadStopWaitTimeout = default(TimeSpan? ), string groupName = null) Parameters Type Name IHandle < Message > consumer System.String name System.Boolean watchSlowMsg System.Nullable < System.TimeSpan > slowMsgThreshold System.Nullable < System.TimeSpan > threadStopWaitTimeout System.String groupName Properties Name Declaration public string Name { get; } Property Value Type System.String Methods GetStatistics() Declaration public QueueStats GetStatistics() Returns Type Description QueueStats Handle(Message) Declaration public void Handle(Message message) Parameters Type Name Message message Publish(Message) Declaration public void Publish(Message message) Parameters Type Name Message message RequestStop() Declaration public void RequestStop() Start() Declaration public Task Start() Returns Type Description System.Threading.Tasks.Task Stop() Declaration public void Stop() Implements IQueuedHandler IHandle<T> IPublisher IMonitoredQueue IThreadSafePublisher Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) HandleExtensions.WidenFrom<TInput, TOutput>(IHandle<TOutput>) HandleExtensions.NarrowTo<TInput, TOutput>(IHandle<TOutput>) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.PhasePositionTagger.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.PhasePositionTagger.html",
    "title": "Class PhasePositionTagger | Event Store",
    "keywords": "Class PhasePositionTagger Inheritance System.Object PositionTagger PhasePositionTagger Inherited Members PositionTagger.Phase System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class PhasePositionTagger : PositionTagger Constructors PhasePositionTagger(Int32) Declaration public PhasePositionTagger(int phase) Parameters Type Name System.Int32 phase Methods AdjustTag(CheckpointTag) Declaration public override CheckpointTag AdjustTag(CheckpointTag tag) Parameters Type Name CheckpointTag tag Returns Type Description CheckpointTag Overrides PositionTagger.AdjustTag(CheckpointTag) IsCompatible(CheckpointTag) Declaration public override bool IsCompatible(CheckpointTag checkpointTag) Parameters Type Name CheckpointTag checkpointTag Returns Type Description System.Boolean Overrides PositionTagger.IsCompatible(CheckpointTag) IsMessageAfterCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.CommittedEventDistributed) Declaration public override bool IsMessageAfterCheckpointTag(CheckpointTag previous, ReaderSubscriptionMessage.CommittedEventDistributed committedEvent) Parameters Type Name CheckpointTag previous ReaderSubscriptionMessage.CommittedEventDistributed committedEvent Returns Type Description System.Boolean Overrides PositionTagger.IsMessageAfterCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.CommittedEventDistributed) MakeCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.CommittedEventDistributed) Declaration public override CheckpointTag MakeCheckpointTag(CheckpointTag previous, ReaderSubscriptionMessage.CommittedEventDistributed committedEvent) Parameters Type Name CheckpointTag previous ReaderSubscriptionMessage.CommittedEventDistributed committedEvent Returns Type Description CheckpointTag Overrides PositionTagger.MakeCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.CommittedEventDistributed) MakeCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.EventReaderPartitionDeleted) Declaration public override CheckpointTag MakeCheckpointTag(CheckpointTag previous, ReaderSubscriptionMessage.EventReaderPartitionDeleted partitionDeleted) Parameters Type Name CheckpointTag previous ReaderSubscriptionMessage.EventReaderPartitionDeleted partitionDeleted Returns Type Description CheckpointTag Overrides PositionTagger.MakeCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.EventReaderPartitionDeleted) MakeCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.EventReaderPartitionEof) Declaration public override CheckpointTag MakeCheckpointTag(CheckpointTag previous, ReaderSubscriptionMessage.EventReaderPartitionEof partitionEof) Parameters Type Name CheckpointTag previous ReaderSubscriptionMessage.EventReaderPartitionEof partitionEof Returns Type Description CheckpointTag Overrides PositionTagger.MakeCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.EventReaderPartitionEof) MakeZeroCheckpointTag() Declaration public override CheckpointTag MakeZeroCheckpointTag() Returns Type Description CheckpointTag Overrides PositionTagger.MakeZeroCheckpointTag() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.PartitionStateUpdateManager.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.PartitionStateUpdateManager.html",
    "title": "Class PartitionStateUpdateManager | Event Store",
    "keywords": "Class PartitionStateUpdateManager Inheritance System.Object PartitionStateUpdateManager Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class PartitionStateUpdateManager Constructors PartitionStateUpdateManager(ProjectionNamesBuilder) Declaration public PartitionStateUpdateManager(ProjectionNamesBuilder namingBuilder) Parameters Type Name ProjectionNamesBuilder namingBuilder Methods EmitEvents(IEventWriter) Declaration public void EmitEvents(IEventWriter eventWriter) Parameters Type Name IEventWriter eventWriter PartitionCompleted(String) Declaration public void PartitionCompleted(string partition) Parameters Type Name System.String partition StateUpdated(String, PartitionState, CheckpointTag) Declaration public void StateUpdated(string partition, PartitionState state, CheckpointTag basedOn) Parameters Type Name System.String partition PartitionState state CheckpointTag basedOn Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.PartitionStateCache.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.PartitionStateCache.html",
    "title": "Class PartitionStateCache | Event Store",
    "keywords": "Class PartitionStateCache Inheritance System.Object PartitionStateCache Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class PartitionStateCache Constructors PartitionStateCache(Int32) Declaration public PartitionStateCache(int maxCachedPartitions = 4000) Parameters Type Name System.Int32 maxCachedPartitions Properties CachedItemCount Declaration public int CachedItemCount { get; } Property Value Type System.Int32 Methods CacheAndLockPartitionState(String, PartitionState, CheckpointTag) Declaration public void CacheAndLockPartitionState(string partition, PartitionState data, CheckpointTag at) Parameters Type Name System.String partition PartitionState data CheckpointTag at CachePartitionState(String, PartitionState) Declaration public void CachePartitionState(string partition, PartitionState data) Parameters Type Name System.String partition PartitionState data Enumerate() Declaration public IEnumerable<Tuple<string, PartitionState>> Enumerate() Returns Type Description System.Collections.Generic.IEnumerable < System.Tuple < System.String , PartitionState >> GetLockedPartitionState(String) Declaration public PartitionState GetLockedPartitionState(string partition) Parameters Type Name System.String partition Returns Type Description PartitionState Initialize() Declaration public void Initialize() TryGetAndLockPartitionState(String, CheckpointTag) Declaration public PartitionState TryGetAndLockPartitionState(string partition, CheckpointTag lockAt) Parameters Type Name System.String partition CheckpointTag lockAt Returns Type Description PartitionState TryGetPartitionState(String) Declaration public PartitionState TryGetPartitionState(string partition) Parameters Type Name System.String partition Returns Type Description PartitionState Unlock(CheckpointTag, Boolean) Declaration public void Unlock(CheckpointTag beforeCheckpoint, bool forgetUnlocked = false) Parameters Type Name CheckpointTag beforeCheckpoint System.Boolean forgetUnlocked Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.PartitionState.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.PartitionState.html",
    "title": "Class PartitionState | Event Store",
    "keywords": "Class PartitionState Inheritance System.Object PartitionState Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class PartitionState Constructors PartitionState(String, String, CheckpointTag) Declaration public PartitionState(string state, string result, CheckpointTag causedBy) Parameters Type Name System.String state System.String result CheckpointTag causedBy Properties CausedBy Declaration public CheckpointTag CausedBy { get; } Property Value Type CheckpointTag Result Declaration public string Result { get; } Property Value Type System.String State Declaration public string State { get; } Property Value Type System.String Methods Deserialize(String, CheckpointTag) Declaration public static PartitionState Deserialize(string serializedState, CheckpointTag causedBy) Parameters Type Name System.String serializedState CheckpointTag causedBy Returns Type Description PartitionState IsChanged(PartitionState) Declaration public bool IsChanged(PartitionState newState) Parameters Type Name PartitionState newState Returns Type Description System.Boolean Serialize() Declaration public string Serialize() Returns Type Description System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ParallelQueryProcessingStrategy.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ParallelQueryProcessingStrategy.html",
    "title": "Class ParallelQueryProcessingStrategy | Event Store",
    "keywords": "Class ParallelQueryProcessingStrategy Inheritance System.Object ProjectionProcessingStrategy EventReaderBasedProjectionProcessingStrategy ParallelQueryProcessingStrategy Inherited Members EventReaderBasedProjectionProcessingStrategy._projectionConfig EventReaderBasedProjectionProcessingStrategy._sourceDefinition EventReaderBasedProjectionProcessingStrategy.CreateProcessingPhases(IPublisher, IPublisher, Guid, PartitionStateCache, Action, CoreProjection, ProjectionNamesBuilder, ITimeProvider, IODispatcher, CoreProjectionCheckpointWriter) EventReaderBasedProjectionProcessingStrategy.GetSourceDefinition() EventReaderBasedProjectionProcessingStrategy.CreateCheckpointManager(Guid, IPublisher, IODispatcher, ProjectionNamesBuilder, CoreProjectionCheckpointWriter, Boolean, IReaderStrategy) EventReaderBasedProjectionProcessingStrategy.CreateFirstPhaseResultWriter(IEmittedEventWriter, CheckpointTag, ProjectionNamesBuilder) ProjectionProcessingStrategy._name ProjectionProcessingStrategy._projectionVersion ProjectionProcessingStrategy._logger ProjectionProcessingStrategy.Create(Guid, IPublisher, Guid, IPrincipal, IPublisher, IODispatcher, ReaderSubscriptionDispatcher, ITimeProvider) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class ParallelQueryProcessingStrategy : EventReaderBasedProjectionProcessingStrategy Constructors ParallelQueryProcessingStrategy(String, ProjectionVersion, IProjectionStateHandler, ProjectionConfig, IQuerySources, String, String, ProjectionNamesBuilder, ILogger, SpooledStreamReadingDispatcher, ReaderSubscriptionDispatcher) Declaration public ParallelQueryProcessingStrategy(string name, ProjectionVersion projectionVersion, IProjectionStateHandler stateHandler, ProjectionConfig projectionConfig, IQuerySources sourceDefinition, string handlerType, string query, ProjectionNamesBuilder namesBuilder, ILogger logger, SpooledStreamReadingDispatcher spoolProcessingResponseDispatcher, ReaderSubscriptionDispatcher subscriptionDispatcher) Parameters Type Name System.String name ProjectionVersion projectionVersion IProjectionStateHandler stateHandler ProjectionConfig projectionConfig IQuerySources sourceDefinition System.String handlerType System.String query ProjectionNamesBuilder namesBuilder ILogger logger SpooledStreamReadingDispatcher spoolProcessingResponseDispatcher ReaderSubscriptionDispatcher subscriptionDispatcher Methods CreateFirstPhaseResultEmitter(ProjectionNamesBuilder) Declaration protected override IResultEventEmitter CreateFirstPhaseResultEmitter(ProjectionNamesBuilder namingBuilder) Parameters Type Name ProjectionNamesBuilder namingBuilder Returns Type Description IResultEventEmitter Overrides EventReaderBasedProjectionProcessingStrategy.CreateFirstPhaseResultEmitter(ProjectionNamesBuilder) CreateFirstProcessingPhase(IPublisher, IPublisher, Guid, PartitionStateCache, Action, CoreProjection, ReaderSubscriptionDispatcher, CheckpointTag, ICoreProjectionCheckpointManager, IReaderStrategy, IResultWriter, IEmittedStreamsTracker) Declaration protected override IProjectionProcessingPhase CreateFirstProcessingPhase(IPublisher publisher, IPublisher inputQueue, Guid projectionCorrelationId, PartitionStateCache partitionStateCache, Action updateStatistics, CoreProjection coreProjection, ReaderSubscriptionDispatcher subscriptionDispatcher, CheckpointTag zeroCheckpointTag, ICoreProjectionCheckpointManager checkpointManager, IReaderStrategy readerStrategy, IResultWriter resultWriter, IEmittedStreamsTracker emittedStreamsTracker) Parameters Type Name IPublisher publisher IPublisher inputQueue System.Guid projectionCorrelationId PartitionStateCache partitionStateCache System.Action updateStatistics CoreProjection coreProjection ReaderSubscriptionDispatcher subscriptionDispatcher CheckpointTag zeroCheckpointTag ICoreProjectionCheckpointManager checkpointManager IReaderStrategy readerStrategy IResultWriter resultWriter IEmittedStreamsTracker emittedStreamsTracker Returns Type Description IProjectionProcessingPhase Overrides EventReaderBasedProjectionProcessingStrategy.CreateFirstProcessingPhase(IPublisher, IPublisher, Guid, PartitionStateCache, Action, CoreProjection, ReaderSubscriptionDispatcher, CheckpointTag, ICoreProjectionCheckpointManager, IReaderStrategy, IResultWriter, IEmittedStreamsTracker) CreateProjectionProcessingPhases(IPublisher, IPublisher, Guid, ProjectionNamesBuilder, PartitionStateCache, CoreProjection, IODispatcher, IProjectionProcessingPhase) Declaration protected override IProjectionProcessingPhase[] CreateProjectionProcessingPhases(IPublisher publisher, IPublisher inputQueue, Guid projectionCorrelationId, ProjectionNamesBuilder namingBuilder, PartitionStateCache partitionStateCache, CoreProjection coreProjection, IODispatcher ioDispatcher, IProjectionProcessingPhase firstPhase) Parameters Type Name IPublisher publisher IPublisher inputQueue System.Guid projectionCorrelationId ProjectionNamesBuilder namingBuilder PartitionStateCache partitionStateCache CoreProjection coreProjection IODispatcher ioDispatcher IProjectionProcessingPhase firstPhase Returns Type Description IProjectionProcessingPhase [] Overrides EventReaderBasedProjectionProcessingStrategy.CreateProjectionProcessingPhases(IPublisher, IPublisher, Guid, ProjectionNamesBuilder, PartitionStateCache, CoreProjection, IODispatcher, IProjectionProcessingPhase) CreateReaderStrategy(ITimeProvider) Declaration protected override IReaderStrategy CreateReaderStrategy(ITimeProvider timeProvider) Parameters Type Name ITimeProvider timeProvider Returns Type Description IReaderStrategy Overrides EventReaderBasedProjectionProcessingStrategy.CreateReaderStrategy(ITimeProvider) EnrichStatistics(ProjectionStatistics) Declaration public override void EnrichStatistics(ProjectionStatistics info) Parameters Type Name ProjectionStatistics info Overrides EventReaderBasedProjectionProcessingStrategy.EnrichStatistics(ProjectionStatistics) GetIsSlaveProjection() Declaration public override bool GetIsSlaveProjection() Returns Type Description System.Boolean Overrides ProjectionProcessingStrategy.GetIsSlaveProjection() GetProducesRunningResults() Declaration public override bool GetProducesRunningResults() Returns Type Description System.Boolean Overrides ProjectionProcessingStrategy.GetProducesRunningResults() GetRequiresRootPartition() Declaration public override bool GetRequiresRootPartition() Returns Type Description System.Boolean Overrides EventReaderBasedProjectionProcessingStrategy.GetRequiresRootPartition() GetSlaveProjections() Declaration public override SlaveProjectionDefinitions GetSlaveProjections() Returns Type Description SlaveProjectionDefinitions Overrides ProjectionProcessingStrategy.GetSlaveProjections() GetStopOnEof() Declaration public override bool GetStopOnEof() Returns Type Description System.Boolean Overrides ProjectionProcessingStrategy.GetStopOnEof() GetUseCheckpoints() Declaration public override bool GetUseCheckpoints() Returns Type Description System.Boolean Overrides ProjectionProcessingStrategy.GetUseCheckpoints() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ParallelQueryMasterReaderStrategy.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ParallelQueryMasterReaderStrategy.html",
    "title": "Class ParallelQueryMasterReaderStrategy | Event Store",
    "keywords": "Class ParallelQueryMasterReaderStrategy Inheritance System.Object ParallelQueryMasterReaderStrategy Implements IReaderStrategy Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class ParallelQueryMasterReaderStrategy : IReaderStrategy Constructors ParallelQueryMasterReaderStrategy(String, Int32, IPrincipal, ITimeProvider, String) Declaration public ParallelQueryMasterReaderStrategy(string tag, int phase, IPrincipal runAs, ITimeProvider timeProvider, string catalogStream) Parameters Type Name System.String tag System.Int32 phase System.Security.Principal.IPrincipal runAs ITimeProvider timeProvider System.String catalogStream Properties EventFilter Declaration public EventFilter EventFilter { get; } Property Value Type EventFilter IsReadingOrderRepeatable Declaration public bool IsReadingOrderRepeatable { get; } Property Value Type System.Boolean PositionTagger Declaration public PositionTagger PositionTagger { get; } Property Value Type PositionTagger Methods CreatePausedEventReader(Guid, IPublisher, IODispatcher, CheckpointTag, Boolean, Nullable<Int32>) Declaration public IEventReader CreatePausedEventReader(Guid eventReaderId, IPublisher publisher, IODispatcher ioDispatcher, CheckpointTag checkpointTag, bool stopOnEof, int? stopAfterNEvents) Parameters Type Name System.Guid eventReaderId IPublisher publisher IODispatcher ioDispatcher CheckpointTag checkpointTag System.Boolean stopOnEof System.Nullable < System.Int32 > stopAfterNEvents Returns Type Description IEventReader CreateReaderSubscription(IPublisher, CheckpointTag, Guid, ReaderSubscriptionOptions) Declaration public IReaderSubscription CreateReaderSubscription(IPublisher publisher, CheckpointTag fromCheckpointTag, Guid subscriptionId, ReaderSubscriptionOptions readerSubscriptionOptions) Parameters Type Name IPublisher publisher CheckpointTag fromCheckpointTag System.Guid subscriptionId ReaderSubscriptionOptions readerSubscriptionOptions Returns Type Description IReaderSubscription Implements IReaderStrategy Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ParallelQueryMasterProjectionProcessingPhase.html",
    "title": "Class ParallelQueryMasterProjectionProcessingPhase | Event Store",
    "keywords": "Class ParallelQueryMasterProjectionProcessingPhase Inheritance System.Object EventSubscriptionBasedProjectionProcessingPhase ParallelQueryMasterProjectionProcessingPhase Implements IProjectionPhaseCompleter IProjectionPhaseCheckpointManager IHandle < EventReaderSubscriptionMessage.ProgressChanged > IHandle < EventReaderSubscriptionMessage.SubscriptionStarted > IHandle < EventReaderSubscriptionMessage.NotAuthorized > IHandle < EventReaderSubscriptionMessage.EofReached > IHandle < EventReaderSubscriptionMessage.CheckpointSuggested > IHandle < EventReaderSubscriptionMessage.ReaderAssignedReader > IHandle < EventReaderSubscriptionMessage.Failed > IProjectionProcessingPhase System.IDisposable IHandle < CoreProjectionManagementMessage.GetState > IHandle < CoreProjectionManagementMessage.GetResult > IHandle < CoreProjectionProcessingMessage.PrerecordedEventsLoaded > IProjectionPhaseStateManager IHandle < EventReaderSubscriptionMessage.CommittedEventReceived > ISpoolStreamWorkItemContainer Inherited Members EventSubscriptionBasedProjectionProcessingPhase._publisher EventSubscriptionBasedProjectionProcessingPhase._coreProjection EventSubscriptionBasedProjectionProcessingPhase._projectionCorrelationId EventSubscriptionBasedProjectionProcessingPhase._checkpointManager EventSubscriptionBasedProjectionProcessingPhase._progressResultWriter EventSubscriptionBasedProjectionProcessingPhase._projectionConfig EventSubscriptionBasedProjectionProcessingPhase._projectionName EventSubscriptionBasedProjectionProcessingPhase._logger EventSubscriptionBasedProjectionProcessingPhase._zeroCheckpointTag EventSubscriptionBasedProjectionProcessingPhase._processingQueue EventSubscriptionBasedProjectionProcessingPhase._partitionStateCache EventSubscriptionBasedProjectionProcessingPhase._subscriptionDispatcher EventSubscriptionBasedProjectionProcessingPhase._readerStrategy EventSubscriptionBasedProjectionProcessingPhase._resultWriter EventSubscriptionBasedProjectionProcessingPhase._useCheckpoints EventSubscriptionBasedProjectionProcessingPhase._expectedSubscriptionMessageSequenceNumber EventSubscriptionBasedProjectionProcessingPhase._currentSubscriptionId EventSubscriptionBasedProjectionProcessingPhase._subscribed EventSubscriptionBasedProjectionProcessingPhase._state EventSubscriptionBasedProjectionProcessingPhase._stopOnEof EventSubscriptionBasedProjectionProcessingPhase._emittedStreamsTracker EventSubscriptionBasedProjectionProcessingPhase.UnlockAndForgetBefore(CheckpointTag) EventSubscriptionBasedProjectionProcessingPhase.LastProcessedEventPosition EventSubscriptionBasedProjectionProcessingPhase.CheckpointManager EventSubscriptionBasedProjectionProcessingPhase.EmittedStreamsTracker EventSubscriptionBasedProjectionProcessingPhase.IsOutOfOrderSubscriptionMessage(EventReaderSubscriptionMessageBase) EventSubscriptionBasedProjectionProcessingPhase.RegisterSubscriptionMessage(EventReaderSubscriptionMessageBase) EventSubscriptionBasedProjectionProcessingPhase.EnsureTickPending() EventSubscriptionBasedProjectionProcessingPhase.ProcessEvent() EventSubscriptionBasedProjectionProcessingPhase.Handle(EventReaderSubscriptionMessage.ProgressChanged) EventSubscriptionBasedProjectionProcessingPhase.Handle(EventReaderSubscriptionMessage.SubscriptionStarted) EventSubscriptionBasedProjectionProcessingPhase.Handle(EventReaderSubscriptionMessage.NotAuthorized) EventSubscriptionBasedProjectionProcessingPhase.Unsubscribed() EventSubscriptionBasedProjectionProcessingPhase.Handle(EventReaderSubscriptionMessage.EofReached) EventSubscriptionBasedProjectionProcessingPhase.Handle(EventReaderSubscriptionMessage.CheckpointSuggested) EventSubscriptionBasedProjectionProcessingPhase.Handle(CoreProjectionManagementMessage.GetState) EventSubscriptionBasedProjectionProcessingPhase.Handle(CoreProjectionManagementMessage.GetResult) EventSubscriptionBasedProjectionProcessingPhase.Handle(EventReaderSubscriptionMessage.Failed) EventSubscriptionBasedProjectionProcessingPhase.UnsubscribeFromPreRecordedOrderEvents() EventSubscriptionBasedProjectionProcessingPhase.Subscribed(Guid) EventSubscriptionBasedProjectionProcessingPhase.GetSubscriptionOptions() EventSubscriptionBasedProjectionProcessingPhase.SubscribeReaders(CheckpointTag) EventSubscriptionBasedProjectionProcessingPhase.SubscribeToPreRecordedOrderEvents() EventSubscriptionBasedProjectionProcessingPhase.Handle(CoreProjectionProcessingMessage.PrerecordedEventsLoaded) EventSubscriptionBasedProjectionProcessingPhase.AdjustTag(CheckpointTag) EventSubscriptionBasedProjectionProcessingPhase.SetFaulting(String, Exception) EventSubscriptionBasedProjectionProcessingPhase.ValidateEmittedEvents(EmittedEventEnvelope[]) EventSubscriptionBasedProjectionProcessingPhase.InitializeFromCheckpoint(CheckpointTag) EventSubscriptionBasedProjectionProcessingPhase.GetBufferedEventCount() EventSubscriptionBasedProjectionProcessingPhase.GetStatus() EventSubscriptionBasedProjectionProcessingPhase.InternalCommittedEventProcessed(String, EventReaderSubscriptionMessage.CommittedEventReceived, EmittedEventEnvelope[], PartitionState, PartitionState) EventSubscriptionBasedProjectionProcessingPhase.InternalPartitionDeletedProcessed(String, CheckpointTag, PartitionState) EventSubscriptionBasedProjectionProcessingPhase.BeginGetPartitionStateAt(String, CheckpointTag, Action<PartitionState>, Boolean) EventSubscriptionBasedProjectionProcessingPhase.FinalizeEventProcessing(EventProcessedResult, CheckpointTag, Single) EventSubscriptionBasedProjectionProcessingPhase.EmitEofResult(String, String, CheckpointTag, Guid, String) EventSubscriptionBasedProjectionProcessingPhase.RecordEventOrder(ResolvedEvent, CheckpointTag, Action) EventSubscriptionBasedProjectionProcessingPhase.Complete() EventSubscriptionBasedProjectionProcessingPhase.SetCurrentCheckpointSuggestedWorkItem(CheckpointSuggestedWorkItem) EventSubscriptionBasedProjectionProcessingPhase.GetStatistics(ProjectionStatistics) EventSubscriptionBasedProjectionProcessingPhase.MakeZeroCheckpointTag() EventSubscriptionBasedProjectionProcessingPhase.EnsureUnsubscribed() EventSubscriptionBasedProjectionProcessingPhase._subscriptionStartedAtLastCommitPosition EventSubscriptionBasedProjectionProcessingPhase.Handle(EventReaderSubscriptionMessage.ReaderAssignedReader) EventSubscriptionBasedProjectionProcessingPhase.SetProjectionState(PhaseState) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class ParallelQueryMasterProjectionProcessingPhase : EventSubscriptionBasedProjectionProcessingPhase, IProjectionPhaseCompleter, IProjectionPhaseCheckpointManager, IHandle<EventReaderSubscriptionMessage.ProgressChanged>, IHandle<EventReaderSubscriptionMessage.SubscriptionStarted>, IHandle<EventReaderSubscriptionMessage.NotAuthorized>, IHandle<EventReaderSubscriptionMessage.EofReached>, IHandle<EventReaderSubscriptionMessage.CheckpointSuggested>, IHandle<EventReaderSubscriptionMessage.ReaderAssignedReader>, IHandle<EventReaderSubscriptionMessage.Failed>, IProjectionProcessingPhase, IDisposable, IHandle<CoreProjectionManagementMessage.GetState>, IHandle<CoreProjectionManagementMessage.GetResult>, IHandle<CoreProjectionProcessingMessage.PrerecordedEventsLoaded>, IProjectionPhaseStateManager, IHandle<EventReaderSubscriptionMessage.CommittedEventReceived>, ISpoolStreamWorkItemContainer Constructors ParallelQueryMasterProjectionProcessingPhase(CoreProjection, Guid, IPublisher, IPublisher, ProjectionConfig, Action, IProjectionStateHandler, PartitionStateCache, String, ILogger, CheckpointTag, ICoreProjectionCheckpointManager, ReaderSubscriptionDispatcher, IReaderStrategy, IResultWriter, Boolean, Boolean, SpooledStreamReadingDispatcher, IEmittedStreamsTracker) Declaration public ParallelQueryMasterProjectionProcessingPhase(CoreProjection coreProjection, Guid projectionCorrelationId, IPublisher publisher, IPublisher inputQueue, ProjectionConfig projectionConfig, Action updateStatistics, IProjectionStateHandler stateHandler, PartitionStateCache partitionStateCache, string name, ILogger logger, CheckpointTag zeroCheckpointTag, ICoreProjectionCheckpointManager checkpointManager, ReaderSubscriptionDispatcher subscriptionDispatcher, IReaderStrategy readerStrategy, IResultWriter resultWriter, bool checkpointsEnabled, bool stopOnEof, SpooledStreamReadingDispatcher spoolProcessingResponseDispatcher, IEmittedStreamsTracker emittedStreamsTracker) Parameters Type Name CoreProjection coreProjection System.Guid projectionCorrelationId IPublisher publisher IPublisher inputQueue ProjectionConfig projectionConfig System.Action updateStatistics IProjectionStateHandler stateHandler PartitionStateCache partitionStateCache System.String name ILogger logger CheckpointTag zeroCheckpointTag ICoreProjectionCheckpointManager checkpointManager ReaderSubscriptionDispatcher subscriptionDispatcher IReaderStrategy readerStrategy IResultWriter resultWriter System.Boolean checkpointsEnabled System.Boolean stopOnEof SpooledStreamReadingDispatcher spoolProcessingResponseDispatcher IEmittedStreamsTracker emittedStreamsTracker Fields _maxScheduledSizePerWorker Declaration public const int _maxScheduledSizePerWorker = 10000 Field Value Type System.Int32 _maxUnmeasuredTasksPerWorker Declaration public const int _maxUnmeasuredTasksPerWorker = 30 Field Value Type System.Int32 Methods AssignSlaves(SlaveProjectionCommunicationChannels) Declaration public override void AssignSlaves(SlaveProjectionCommunicationChannels slaveProjections) Parameters Type Name SlaveProjectionCommunicationChannels slaveProjections Overrides EventSubscriptionBasedProjectionProcessingPhase.AssignSlaves(SlaveProjectionCommunicationChannels) CompleteSpoolProcessingWorkItem(Guid, CheckpointTag) Declaration public void CompleteSpoolProcessingWorkItem(Guid correlationId, CheckpointTag position) Parameters Type Name System.Guid correlationId CheckpointTag position Dispose() Declaration public override void Dispose() Overrides EventSubscriptionBasedProjectionProcessingPhase.Dispose() Handle(EventReaderSubscriptionMessage.CommittedEventReceived) Declaration public void Handle(EventReaderSubscriptionMessage.CommittedEventReceived message) Parameters Type Name EventReaderSubscriptionMessage.CommittedEventReceived message NewCheckpointStarted(CheckpointTag) Declaration public override void NewCheckpointStarted(CheckpointTag at) Parameters Type Name CheckpointTag at Overrides EventSubscriptionBasedProjectionProcessingPhase.NewCheckpointStarted(CheckpointTag) Subscribe(CheckpointTag, Boolean) Declaration public override void Subscribe(CheckpointTag from, bool fromCheckpoint) Parameters Type Name CheckpointTag from System.Boolean fromCheckpoint Overrides EventSubscriptionBasedProjectionProcessingPhase.Subscribe(CheckpointTag, Boolean) TransformCatalogEvent(CheckpointTag, ResolvedEvent) Declaration public string TransformCatalogEvent(CheckpointTag position, ResolvedEvent event) Parameters Type Name CheckpointTag position ResolvedEvent event Returns Type Description System.String Implements IProjectionPhaseCompleter IProjectionPhaseCheckpointManager IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IProjectionProcessingPhase System.IDisposable IHandle<T> IHandle<T> IHandle<T> IProjectionPhaseStateManager IHandle<T> ISpoolStreamWorkItemContainer Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ParallelQueryAllStreamsMasterReaderStrategy.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ParallelQueryAllStreamsMasterReaderStrategy.html",
    "title": "Class ParallelQueryAllStreamsMasterReaderStrategy | Event Store",
    "keywords": "Class ParallelQueryAllStreamsMasterReaderStrategy Inheritance System.Object ParallelQueryAllStreamsMasterReaderStrategy Implements IReaderStrategy Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class ParallelQueryAllStreamsMasterReaderStrategy : IReaderStrategy Constructors ParallelQueryAllStreamsMasterReaderStrategy(String, Int32, IPrincipal, ITimeProvider) Declaration public ParallelQueryAllStreamsMasterReaderStrategy(string tag, int phase, IPrincipal runAs, ITimeProvider timeProvider) Parameters Type Name System.String tag System.Int32 phase System.Security.Principal.IPrincipal runAs ITimeProvider timeProvider Properties EventFilter Declaration public EventFilter EventFilter { get; } Property Value Type EventFilter IsReadingOrderRepeatable Declaration public bool IsReadingOrderRepeatable { get; } Property Value Type System.Boolean PositionTagger Declaration public PositionTagger PositionTagger { get; } Property Value Type PositionTagger Methods CreatePausedEventReader(Guid, IPublisher, IODispatcher, CheckpointTag, Boolean, Nullable<Int32>) Declaration public IEventReader CreatePausedEventReader(Guid eventReaderId, IPublisher publisher, IODispatcher ioDispatcher, CheckpointTag checkpointTag, bool stopOnEof, int? stopAfterNEvents) Parameters Type Name System.Guid eventReaderId IPublisher publisher IODispatcher ioDispatcher CheckpointTag checkpointTag System.Boolean stopOnEof System.Nullable < System.Int32 > stopAfterNEvents Returns Type Description IEventReader CreateReaderSubscription(IPublisher, CheckpointTag, Guid, ReaderSubscriptionOptions) Declaration public IReaderSubscription CreateReaderSubscription(IPublisher publisher, CheckpointTag fromCheckpointTag, Guid subscriptionId, ReaderSubscriptionOptions readerSubscriptionOptions) Parameters Type Name IPublisher publisher CheckpointTag fromCheckpointTag System.Guid subscriptionId ReaderSubscriptionOptions readerSubscriptionOptions Returns Type Description IReaderSubscription Implements IReaderStrategy Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ParallelProcessingLoadBalancer.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ParallelProcessingLoadBalancer.html",
    "title": "Class ParallelProcessingLoadBalancer | Event Store",
    "keywords": "Class ParallelProcessingLoadBalancer Inheritance System.Object ParallelProcessingLoadBalancer Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class ParallelProcessingLoadBalancer Constructors ParallelProcessingLoadBalancer(Int32, Int64, Int32) Declaration public ParallelProcessingLoadBalancer(int workers, long maxScheduledSizePerWorker, int maxUnmeasuredTasksPerWorker) Parameters Type Name System.Int32 workers System.Int64 maxScheduledSizePerWorker System.Int32 maxUnmeasuredTasksPerWorker Methods AccountCompleted(Object) Declaration public void AccountCompleted(object task) Parameters Type Name System.Object task AccountMeasured(Object, Int64) Declaration public void AccountMeasured(object task, long size) Parameters Type Name System.Object task System.Int64 size ScheduleTask<T>(T, Action<T, Int32>) Declaration public void ScheduleTask<T>(T task, Action<T, int> scheduled) Parameters Type Name T task System.Action <T, System.Int32 > scheduled Type Parameters Name Description T Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ParallelProcessingLoadBalancer.WorkerState.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ParallelProcessingLoadBalancer.WorkerState.html",
    "title": "Class ParallelProcessingLoadBalancer.WorkerState | Event Store",
    "keywords": "Class ParallelProcessingLoadBalancer.WorkerState Inheritance System.Object ParallelProcessingLoadBalancer.WorkerState Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class WorkerState Constructors WorkerState(Int32) Declaration public WorkerState(int worker) Parameters Type Name System.Int32 worker Fields MeasuredTasksScheduled Declaration public int MeasuredTasksScheduled Field Value Type System.Int32 ScheduledSize Declaration public long ScheduledSize Field Value Type System.Int64 UnmeasuredTasksScheduled Declaration public int UnmeasuredTasksScheduled Field Value Type System.Int32 Worker Declaration public readonly int Worker Field Value Type System.Int32 Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ParallelProcessingLoadBalancer.TaskState.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ParallelProcessingLoadBalancer.TaskState.html",
    "title": "Class ParallelProcessingLoadBalancer.TaskState | Event Store",
    "keywords": "Class ParallelProcessingLoadBalancer.TaskState Inheritance System.Object ParallelProcessingLoadBalancer.TaskState Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class TaskState Constructors TaskState(Action<Int32>) Declaration public TaskState(Action<int> scheduled) Parameters Type Name System.Action < System.Int32 > scheduled Fields Measured Declaration public bool Measured Field Value Type System.Boolean Size Declaration public long Size Field Value Type System.Int64 Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messaging.UnwrapEnvelopeHandler.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messaging.UnwrapEnvelopeHandler.html",
    "title": "Class UnwrapEnvelopeHandler | Event Store",
    "keywords": "Class UnwrapEnvelopeHandler Inheritance System.Object UnwrapEnvelopeHandler Implements IHandle < UnwrapEnvelopeMessage > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messaging Assembly : EventStore.Projections.Core.dll Syntax public class UnwrapEnvelopeHandler : IHandle<UnwrapEnvelopeMessage> Methods Handle(UnwrapEnvelopeMessage) Declaration public void Handle(UnwrapEnvelopeMessage message) Parameters Type Name UnwrapEnvelopeMessage message Implements IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.QuerySourcesExtensions.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.QuerySourcesExtensions.html",
    "title": "Class QuerySourcesExtensions | Event Store",
    "keywords": "Class QuerySourcesExtensions Inheritance System.Object QuerySourcesExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public static class QuerySourcesExtensions Methods HasCategories(IQuerySources) Declaration public static bool HasCategories(this IQuerySources sources) Parameters Type Name IQuerySources sources Returns Type Description System.Boolean HasEvents(IQuerySources) Declaration public static bool HasEvents(this IQuerySources sources) Parameters Type Name IQuerySources sources Returns Type Description System.Boolean HasStreams(IQuerySources) Declaration public static bool HasStreams(this IQuerySources sources) Parameters Type Name IQuerySources sources Returns Type Description System.Boolean"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.CoreTick.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.CoreTick.html",
    "title": "Class ProjectionCoreServiceMessage.CoreTick | Event Store",
    "keywords": "Class ProjectionCoreServiceMessage.CoreTick Inheritance System.Object Message ProjectionCoreServiceMessage.CoreTick Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class CoreTick : Message Constructors CoreTick(Action) Declaration public CoreTick(Action action) Parameters Type Name System.Action action Properties Action Declaration public Action Action { get; } Property Value Type System.Action MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.Connected.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionCoreServiceMessage.Connected.html",
    "title": "Class ProjectionCoreServiceMessage.Connected | Event Store",
    "keywords": "Class ProjectionCoreServiceMessage.Connected Inheritance System.Object Message ProjectionCoreServiceMessage.Connected Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class Connected : Message Constructors Connected(TcpConnectionManager) Declaration public Connected(TcpConnectionManager connection) Parameters Type Name TcpConnectionManager connection Properties Connection Declaration public TcpConnectionManager Connection { get; } Property Value Type TcpConnectionManager MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Responses.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Responses.html",
    "title": "Namespace EventStore.Projections.Core.Messages.Persisted.Responses | Event Store",
    "keywords": "Namespace EventStore.Projections.Core.Messages.Persisted.Responses Classes AbortCommand DeleteCommand DisableCommand EnableCommand Faulted GetQueryCommand GetResultCommand GetStateCommand GetStatisticsCommand PostCommand Prepared ProjectionWorkerStarted ResetCommand ResultReport SetRunAsCommand SlaveProjectionReaderAssigned Started StartSlaveProjectionsCommand StateReport StatisticsReport Stopped UpdateQueryCommand"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Responses.UpdateQueryCommand.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Responses.UpdateQueryCommand.html",
    "title": "Class UpdateQueryCommand | Event Store",
    "keywords": "Class UpdateQueryCommand Inheritance System.Object UpdateQueryCommand Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages.Persisted.Responses Assembly : EventStore.Projections.Core.dll Syntax public class UpdateQueryCommand Fields EmitEnabled Declaration public bool? EmitEnabled Field Value Type System.Nullable < System.Boolean > HandlerType Declaration public string HandlerType Field Value Type System.String Name Declaration public string Name Field Value Type System.String Query Declaration public string Query Field Value Type System.String RunAs Declaration public SerializedRunAs RunAs Field Value Type SerializedRunAs Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Responses.Stopped.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Responses.Stopped.html",
    "title": "Class Stopped | Event Store",
    "keywords": "Class Stopped Inheritance System.Object Stopped Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages.Persisted.Responses Assembly : EventStore.Projections.Core.dll Syntax public class Stopped Properties Completed Declaration public bool Completed { get; set; } Property Value Type System.Boolean Id Declaration public string Id { get; set; } Property Value Type System.String Name Declaration public string Name { get; set; } Property Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Responses.StatisticsReport.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Responses.StatisticsReport.html",
    "title": "Class StatisticsReport | Event Store",
    "keywords": "Class StatisticsReport Inheritance System.Object StatisticsReport Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages.Persisted.Responses Assembly : EventStore.Projections.Core.dll Syntax public class StatisticsReport Properties Id Declaration public string Id { get; set; } Property Value Type System.String Statistics Declaration public ProjectionStatistics Statistics { get; set; } Property Value Type ProjectionStatistics Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Responses.StateReport.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Responses.StateReport.html",
    "title": "Class StateReport | Event Store",
    "keywords": "Class StateReport Inheritance System.Object StateReport Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages.Persisted.Responses Assembly : EventStore.Projections.Core.dll Syntax public class StateReport Properties CorrelationId Declaration public string CorrelationId { get; set; } Property Value Type System.String Id Declaration public string Id { get; set; } Property Value Type System.String Partition Declaration public string Partition { get; set; } Property Value Type System.String Position Declaration [JsonConverter(typeof(CheckpointTagJsonConverter))] public CheckpointTag Position { get; set; } Property Value Type CheckpointTag State Declaration public string State { get; set; } Property Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Responses.Started.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Responses.Started.html",
    "title": "Class Started | Event Store",
    "keywords": "Class Started Inheritance System.Object Started Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages.Persisted.Responses Assembly : EventStore.Projections.Core.dll Syntax public class Started Properties Id Declaration public string Id { get; set; } Property Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Responses.StartSlaveProjectionsCommand.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Responses.StartSlaveProjectionsCommand.html",
    "title": "Class StartSlaveProjectionsCommand | Event Store",
    "keywords": "Class StartSlaveProjectionsCommand Inheritance System.Object StartSlaveProjectionsCommand Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages.Persisted.Responses Assembly : EventStore.Projections.Core.dll Syntax public class StartSlaveProjectionsCommand Fields MasterCorrelationId Declaration public string MasterCorrelationId Field Value Type System.String MasterWorkerId Declaration public string MasterWorkerId Field Value Type System.String Name Declaration public string Name Field Value Type System.String RunAs Declaration public SerializedRunAs RunAs Field Value Type SerializedRunAs SlaveProjections Declaration public SlaveProjectionDefinitions SlaveProjections Field Value Type SlaveProjectionDefinitions Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Responses.SlaveProjectionReaderAssigned.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Responses.SlaveProjectionReaderAssigned.html",
    "title": "Class SlaveProjectionReaderAssigned | Event Store",
    "keywords": "Class SlaveProjectionReaderAssigned Inheritance System.Object SlaveProjectionReaderAssigned Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages.Persisted.Responses Assembly : EventStore.Projections.Core.dll Syntax public class SlaveProjectionReaderAssigned Properties Id Declaration public string Id { get; set; } Property Value Type System.String SubscriptionId Declaration public string SubscriptionId { get; set; } Property Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Responses.Slave.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Responses.Slave.html",
    "title": "Namespace EventStore.Projections.Core.Messages.Persisted.Responses.Slave | Event Store",
    "keywords": "Namespace EventStore.Projections.Core.Messages.Persisted.Responses.Slave Classes PartitionMeasuredResponse PartitionProcessingProgressResponse PartitionProcessingResultResponse"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingResultResponse.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingResultResponse.html",
    "title": "Class PartitionProcessingResultResponse | Event Store",
    "keywords": "Class PartitionProcessingResultResponse Inheritance System.Object PartitionProcessingResultResponse Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages.Persisted.Responses.Slave Assembly : EventStore.Projections.Core.dll Syntax public class PartitionProcessingResultResponse Fields CausedBy Declaration public string CausedBy Field Value Type System.String Partition Declaration public string Partition Field Value Type System.String Position Declaration [JsonConverter(typeof(CheckpointTagJsonConverter))] public CheckpointTag Position Field Value Type CheckpointTag Result Declaration public string Result Field Value Type System.String SubscriptionId Declaration public string SubscriptionId Field Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingProgressResponse.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionProcessingProgressResponse.html",
    "title": "Class PartitionProcessingProgressResponse | Event Store",
    "keywords": "Class PartitionProcessingProgressResponse Inheritance System.Object PartitionProcessingProgressResponse Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages.Persisted.Responses.Slave Assembly : EventStore.Projections.Core.dll Syntax public class PartitionProcessingProgressResponse Fields Partition Declaration public string Partition Field Value Type System.String Progress Declaration public float Progress Field Value Type System.Single SubscriptionId Declaration public string SubscriptionId Field Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionMeasuredResponse.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Responses.Slave.PartitionMeasuredResponse.html",
    "title": "Class PartitionMeasuredResponse | Event Store",
    "keywords": "Class PartitionMeasuredResponse Inheritance System.Object PartitionMeasuredResponse Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages.Persisted.Responses.Slave Assembly : EventStore.Projections.Core.dll Syntax public class PartitionMeasuredResponse Fields Partition Declaration public string Partition Field Value Type System.String Size Declaration public long Size Field Value Type System.Int64 SubscriptionId Declaration public string SubscriptionId Field Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Responses.SetRunAsCommand.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Responses.SetRunAsCommand.html",
    "title": "Class SetRunAsCommand | Event Store",
    "keywords": "Class SetRunAsCommand Inheritance System.Object SetRunAsCommand Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages.Persisted.Responses Assembly : EventStore.Projections.Core.dll Syntax public class SetRunAsCommand Fields Name Declaration public string Name Field Value Type System.String RunAs Declaration public SerializedRunAs RunAs Field Value Type SerializedRunAs SetRemove Declaration public ProjectionManagementMessage.Command.SetRunAs.SetRemove SetRemove Field Value Type ProjectionManagementMessage.Command.SetRunAs.SetRemove Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Standard.StreamCategoryExtractorByFirstSeparator.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Standard.StreamCategoryExtractorByFirstSeparator.html",
    "title": "Class StreamCategoryExtractorByFirstSeparator | Event Store",
    "keywords": "Class StreamCategoryExtractorByFirstSeparator Inheritance System.Object StreamCategoryExtractor StreamCategoryExtractorByFirstSeparator Inherited Members StreamCategoryExtractor.GetExtractor(String, Action<String, Object[]>) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Standard Assembly : EventStore.Projections.Core.dll Syntax public class StreamCategoryExtractorByFirstSeparator : StreamCategoryExtractor Constructors StreamCategoryExtractorByFirstSeparator(Char) Declaration public StreamCategoryExtractorByFirstSeparator(char separator) Parameters Type Name System.Char separator Methods GetCategoryByStreamId(String) Declaration public override string GetCategoryByStreamId(string streamId) Parameters Type Name System.String streamId Returns Type Description System.String Overrides StreamCategoryExtractor.GetCategoryByStreamId(String) Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Standard.StreamCategoryExtractor.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Standard.StreamCategoryExtractor.html",
    "title": "Class StreamCategoryExtractor | Event Store",
    "keywords": "Class StreamCategoryExtractor Inheritance System.Object StreamCategoryExtractor StreamCategoryExtractorByFirstSeparator StreamCategoryExtractorByLastSeparator Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Standard Assembly : EventStore.Projections.Core.dll Syntax public abstract class StreamCategoryExtractor Methods GetCategoryByStreamId(String) Declaration public abstract string GetCategoryByStreamId(string streamId) Parameters Type Name System.String streamId Returns Type Description System.String GetExtractor(String, Action<String, Object[]>) Declaration public static StreamCategoryExtractor GetExtractor(string source, Action<string, object[]> logger) Parameters Type Name System.String source System.Action < System.String , System.Object []> logger Returns Type Description StreamCategoryExtractor Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Standard.IndexStreams.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Standard.IndexStreams.html",
    "title": "Class IndexStreams | Event Store",
    "keywords": "Class IndexStreams Inheritance System.Object IndexStreams Implements IProjectionStateHandler System.IDisposable ISourceDefinitionSource Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Standard Assembly : EventStore.Projections.Core.dll Syntax public class IndexStreams : IProjectionStateHandler, IDisposable, ISourceDefinitionSource Constructors IndexStreams(String, Action<String, Object[]>) Declaration public IndexStreams(string source, Action<string, object[]> logger) Parameters Type Name System.String source System.Action < System.String , System.Object []> logger Methods ConfigureSourceProcessingStrategy(SourceDefinitionBuilder) Declaration public void ConfigureSourceProcessingStrategy(SourceDefinitionBuilder builder) Parameters Type Name SourceDefinitionBuilder builder Dispose() Declaration public void Dispose() GetSourceDefinition() Declaration public IQuerySources GetSourceDefinition() Returns Type Description IQuerySources GetStatePartition(CheckpointTag, String, ResolvedEvent) Declaration public string GetStatePartition(CheckpointTag eventPosition, string category, ResolvedEvent data) Parameters Type Name CheckpointTag eventPosition System.String category ResolvedEvent data Returns Type Description System.String Initialize() Declaration public void Initialize() InitializeShared() Declaration public void InitializeShared() Load(String) Declaration public void Load(string state) Parameters Type Name System.String state LoadShared(String) Declaration public void LoadShared(string state) Parameters Type Name System.String state ProcessEvent(String, CheckpointTag, String, ResolvedEvent, out String, out String, out EmittedEventEnvelope[]) Declaration public bool ProcessEvent(string partition, CheckpointTag eventPosition, string category1, ResolvedEvent data, out string newState, out string newSharedState, out EmittedEventEnvelope[] emittedEvents) Parameters Type Name System.String partition CheckpointTag eventPosition System.String category1 ResolvedEvent data System.String newState System.String newSharedState EmittedEventEnvelope [] emittedEvents Returns Type Description System.Boolean ProcessPartitionCreated(String, CheckpointTag, ResolvedEvent, out EmittedEventEnvelope[]) Declaration public bool ProcessPartitionCreated(string partition, CheckpointTag createPosition, ResolvedEvent data, out EmittedEventEnvelope[] emittedEvents) Parameters Type Name System.String partition CheckpointTag createPosition ResolvedEvent data EmittedEventEnvelope [] emittedEvents Returns Type Description System.Boolean ProcessPartitionDeleted(String, CheckpointTag, out String) Declaration public bool ProcessPartitionDeleted(string partition, CheckpointTag deletePosition, out string newState) Parameters Type Name System.String partition CheckpointTag deletePosition System.String newState Returns Type Description System.Boolean TransformCatalogEvent(CheckpointTag, ResolvedEvent) Declaration public string TransformCatalogEvent(CheckpointTag eventPosition, ResolvedEvent data) Parameters Type Name CheckpointTag eventPosition ResolvedEvent data Returns Type Description System.String TransformStateToResult() Declaration public string TransformStateToResult() Returns Type Description System.String Implements IProjectionStateHandler System.IDisposable ISourceDefinitionSource Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProjectionStateHandlerTestExtensions.ProcessEvent(IProjectionStateHandler, String, CheckpointTag, String, String, String, Guid, Int64, String, String, out String, out EmittedEventEnvelope[], Boolean) ProjectionStateHandlerTestExtensions.ProcessEvent(IProjectionStateHandler, String, CheckpointTag, String, String, String, Guid, Int64, String, String, out String, out String, out EmittedEventEnvelope[], Boolean) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Transport.Http.Client.IHttpClient.html": {
    "href": "dotnet-api/code/EventStore.Transport.Http.Client.IHttpClient.html",
    "title": "Interface IHttpClient | Event Store",
    "keywords": "Interface IHttpClient Namespace : EventStore.Transport.Http.Client Assembly : EventStore.Transport.Http.dll Syntax public interface IHttpClient Methods Delete(String, Action<HttpResponse>, Action<Exception>) Declaration void Delete(string url, Action<HttpResponse> onSuccess, Action<Exception> onException) Parameters Type Name System.String url System.Action < HttpResponse > onSuccess System.Action < System.Exception > onException Get(String, Action<HttpResponse>, Action<Exception>) Declaration void Get(string url, Action<HttpResponse> onSuccess, Action<Exception> onException) Parameters Type Name System.String url System.Action < HttpResponse > onSuccess System.Action < System.Exception > onException Post(String, String, String, Action<HttpResponse>, Action<Exception>) Declaration void Post(string url, string request, string contentType, Action<HttpResponse> onSuccess, Action<Exception> onException) Parameters Type Name System.String url System.String request System.String contentType System.Action < HttpResponse > onSuccess System.Action < System.Exception > onException Put(String, String, String, Action<HttpResponse>, Action<Exception>) Declaration void Put(string url, string request, string contentType, Action<HttpResponse> onSuccess, Action<Exception> onException) Parameters Type Name System.String url System.String request System.String contentType System.Action < HttpResponse > onSuccess System.Action < System.Exception > onException Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Transport.Http.Client.HttpAsyncClient.html": {
    "href": "dotnet-api/code/EventStore.Transport.Http.Client.HttpAsyncClient.html",
    "title": "Class HttpAsyncClient | Event Store",
    "keywords": "Class HttpAsyncClient Inheritance System.Object HttpAsyncClient Implements IHttpClient Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Transport.Http.Client Assembly : EventStore.Transport.Http.dll Syntax public class HttpAsyncClient : IHttpClient Constructors HttpAsyncClient(TimeSpan) Declaration public HttpAsyncClient(TimeSpan timeout) Parameters Type Name System.TimeSpan timeout Methods Delete(String, Action<HttpResponse>, Action<Exception>) Declaration public void Delete(string url, Action<HttpResponse> onSuccess, Action<Exception> onException) Parameters Type Name System.String url System.Action < HttpResponse > onSuccess System.Action < System.Exception > onException Dispose() Declaration public void Dispose() Get(String, Action<HttpResponse>, Action<Exception>) Declaration public void Get(string url, Action<HttpResponse> onSuccess, Action<Exception> onException) Parameters Type Name System.String url System.Action < HttpResponse > onSuccess System.Action < System.Exception > onException Get(String, IEnumerable<KeyValuePair<String, String>>, Action<HttpResponse>, Action<Exception>) Declaration public void Get(string url, IEnumerable<KeyValuePair<string, string>> headers, Action<HttpResponse> onSuccess, Action<Exception> onException) Parameters Type Name System.String url System.Collections.Generic.IEnumerable < System.Collections.Generic.KeyValuePair < System.String , System.String >> headers System.Action < HttpResponse > onSuccess System.Action < System.Exception > onException Post(String, String, String, Action<HttpResponse>, Action<Exception>) Declaration public void Post(string url, string body, string contentType, Action<HttpResponse> onSuccess, Action<Exception> onException) Parameters Type Name System.String url System.String body System.String contentType System.Action < HttpResponse > onSuccess System.Action < System.Exception > onException Post(String, String, String, IEnumerable<KeyValuePair<String, String>>, Action<HttpResponse>, Action<Exception>) Declaration public void Post(string url, string body, string contentType, IEnumerable<KeyValuePair<string, string>> headers, Action<HttpResponse> onSuccess, Action<Exception> onException) Parameters Type Name System.String url System.String body System.String contentType System.Collections.Generic.IEnumerable < System.Collections.Generic.KeyValuePair < System.String , System.String >> headers System.Action < HttpResponse > onSuccess System.Action < System.Exception > onException Put(String, String, String, Action<HttpResponse>, Action<Exception>) Declaration public void Put(string url, string body, string contentType, Action<HttpResponse> onSuccess, Action<Exception> onException) Parameters Type Name System.String url System.String body System.String contentType System.Action < HttpResponse > onSuccess System.Action < System.Exception > onException Implements IHttpClient Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Transport.Http.Client.ClientOperationState.html": {
    "href": "dotnet-api/code/EventStore.Transport.Http.Client.ClientOperationState.html",
    "title": "Class ClientOperationState | Event Store",
    "keywords": "Class ClientOperationState Inheritance System.Object ClientOperationState Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Transport.Http.Client Assembly : EventStore.Transport.Http.dll Syntax public class ClientOperationState Constructors ClientOperationState(HttpRequestMessage, Action<HttpResponse>, Action<Exception>) Declaration public ClientOperationState(HttpRequestMessage request, Action<HttpResponse> onSuccess, Action<Exception> onError) Parameters Type Name System.Net.Http.HttpRequestMessage request System.Action < HttpResponse > onSuccess System.Action < System.Exception > onError Fields OnError Declaration public readonly Action<Exception> OnError Field Value Type System.Action < System.Exception > OnSuccess Declaration public readonly Action<HttpResponse> OnSuccess Field Value Type System.Action < HttpResponse > Request Declaration public readonly HttpRequestMessage Request Field Value Type System.Net.Http.HttpRequestMessage Properties Response Declaration public HttpResponse Response { get; set; } Property Value Type HttpResponse Methods Dispose() Declaration public void Dispose() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Transport.Http.Atom.html": {
    "href": "dotnet-api/code/EventStore.Transport.Http.Atom.html",
    "title": "Namespace EventStore.Transport.Http.Atom | Event Store",
    "keywords": "Namespace EventStore.Transport.Http.Atom Classes AcceptElement AtomSpecificationViolationException AtomSpecs CollectionElement EntryElement FeedElement LinkElement PersonElement RichEntryElement ServiceDocument ThrowHelper WorkspaceElement"
  },
  "dotnet-api/code/EventStore.Transport.Http.Atom.WorkspaceElement.html": {
    "href": "dotnet-api/code/EventStore.Transport.Http.Atom.WorkspaceElement.html",
    "title": "Class WorkspaceElement | Event Store",
    "keywords": "Class WorkspaceElement Inheritance System.Object WorkspaceElement Implements System.Xml.Serialization.IXmlSerializable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Transport.Http.Atom Assembly : EventStore.Transport.Http.dll Syntax public class WorkspaceElement : IXmlSerializable Constructors WorkspaceElement() Declaration public WorkspaceElement() Properties Collections Declaration public List<CollectionElement> Collections { get; set; } Property Value Type System.Collections.Generic.List < CollectionElement > Title Declaration public string Title { get; set; } Property Value Type System.String Methods AddCollection(CollectionElement) Declaration public void AddCollection(CollectionElement collection) Parameters Type Name CollectionElement collection GetSchema() Declaration public XmlSchema GetSchema() Returns Type Description System.Xml.Schema.XmlSchema ReadXml(XmlReader) Declaration public void ReadXml(XmlReader reader) Parameters Type Name System.Xml.XmlReader reader SetTitle(String) Declaration public void SetTitle(string title) Parameters Type Name System.String title WriteXml(XmlWriter) Declaration public void WriteXml(XmlWriter writer) Parameters Type Name System.Xml.XmlWriter writer Implements System.Xml.Serialization.IXmlSerializable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Transport.Http.Atom.ThrowHelper.html": {
    "href": "dotnet-api/code/EventStore.Transport.Http.Atom.ThrowHelper.html",
    "title": "Class ThrowHelper | Event Store",
    "keywords": "Class ThrowHelper Inheritance System.Object ThrowHelper Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Transport.Http.Atom Assembly : EventStore.Transport.Http.dll Syntax public class ThrowHelper Methods ThrowSpecificationViolation(String) Declaration public static void ThrowSpecificationViolation(string message) Parameters Type Name System.String message ThrowSpecificationViolation(String, Exception) Declaration public static void ThrowSpecificationViolation(string message, Exception innnerException) Parameters Type Name System.String message System.Exception innnerException Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Transport.Http.Atom.ServiceDocument.html": {
    "href": "dotnet-api/code/EventStore.Transport.Http.Atom.ServiceDocument.html",
    "title": "Class ServiceDocument | Event Store",
    "keywords": "Class ServiceDocument Inheritance System.Object ServiceDocument Implements System.Xml.Serialization.IXmlSerializable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Transport.Http.Atom Assembly : EventStore.Transport.Http.dll Syntax public class ServiceDocument : IXmlSerializable Constructors ServiceDocument() Declaration public ServiceDocument() Properties Workspaces Declaration public List<WorkspaceElement> Workspaces { get; set; } Property Value Type System.Collections.Generic.List < WorkspaceElement > Methods AddWorkspace(WorkspaceElement) Declaration public void AddWorkspace(WorkspaceElement workspace) Parameters Type Name WorkspaceElement workspace GetSchema() Declaration public XmlSchema GetSchema() Returns Type Description System.Xml.Schema.XmlSchema ReadXml(XmlReader) Declaration public void ReadXml(XmlReader reader) Parameters Type Name System.Xml.XmlReader reader WriteXml(XmlWriter) Declaration public void WriteXml(XmlWriter writer) Parameters Type Name System.Xml.XmlWriter writer Implements System.Xml.Serialization.IXmlSerializable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Transport.Http.Atom.RichEntryElement.html": {
    "href": "dotnet-api/code/EventStore.Transport.Http.Atom.RichEntryElement.html",
    "title": "Class RichEntryElement | Event Store",
    "keywords": "Class RichEntryElement Inheritance System.Object EntryElement RichEntryElement Implements System.Xml.Serialization.IXmlSerializable Inherited Members EntryElement.Title EntryElement.Id EntryElement.Updated EntryElement.Author EntryElement.Summary EntryElement.Content EntryElement.Links EntryElement.SetTitle(String) EntryElement.SetId(String) EntryElement.SetUpdated(DateTime) EntryElement.SetAuthor(String) EntryElement.SetSummary(String) EntryElement.AddLink(String, String, String) EntryElement.GetSchema() EntryElement.ReadXml(XmlReader) EntryElement.WriteXml(XmlWriter) EntryElement.WriteXml(XmlWriter, Boolean) EntryElement.SetContent(Object) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Transport.Http.Atom Assembly : EventStore.Transport.Http.dll Syntax public class RichEntryElement : EntryElement, IXmlSerializable Properties Data Declaration public string Data { get; set; } Property Value Type System.String EventId Declaration public Guid EventId { get; set; } Property Value Type System.Guid EventNumber Declaration public long EventNumber { get; set; } Property Value Type System.Int64 EventType Declaration public string EventType { get; set; } Property Value Type System.String IsJson Declaration public bool IsJson { get; set; } Property Value Type System.Boolean IsLinkMetaData Declaration public bool IsLinkMetaData { get; set; } Property Value Type System.Boolean IsMetaData Declaration public bool IsMetaData { get; set; } Property Value Type System.Boolean LinkMetaData Declaration public string LinkMetaData { get; set; } Property Value Type System.String MetaData Declaration public string MetaData { get; set; } Property Value Type System.String PositionEventNumber Declaration public long PositionEventNumber { get; set; } Property Value Type System.Int64 PositionStreamId Declaration public string PositionStreamId { get; set; } Property Value Type System.String StreamId Declaration public string StreamId { get; set; } Property Value Type System.String Implements System.Xml.Serialization.IXmlSerializable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Transport.Http.Atom.PersonElement.html": {
    "href": "dotnet-api/code/EventStore.Transport.Http.Atom.PersonElement.html",
    "title": "Class PersonElement | Event Store",
    "keywords": "Class PersonElement Inheritance System.Object PersonElement Implements System.Xml.Serialization.IXmlSerializable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Transport.Http.Atom Assembly : EventStore.Transport.Http.dll Syntax public class PersonElement : IXmlSerializable Constructors PersonElement(String) Declaration public PersonElement(string name) Parameters Type Name System.String name Properties Name Declaration public string Name { get; set; } Property Value Type System.String Methods GetSchema() Declaration public XmlSchema GetSchema() Returns Type Description System.Xml.Schema.XmlSchema ReadXml(XmlReader) Declaration public void ReadXml(XmlReader reader) Parameters Type Name System.Xml.XmlReader reader WriteXml(XmlWriter) Declaration public void WriteXml(XmlWriter writer) Parameters Type Name System.Xml.XmlWriter writer Implements System.Xml.Serialization.IXmlSerializable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Transport.Http.Atom.LinkElement.html": {
    "href": "dotnet-api/code/EventStore.Transport.Http.Atom.LinkElement.html",
    "title": "Class LinkElement | Event Store",
    "keywords": "Class LinkElement Inheritance System.Object LinkElement Implements System.Xml.Serialization.IXmlSerializable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Transport.Http.Atom Assembly : EventStore.Transport.Http.dll Syntax public class LinkElement : IXmlSerializable Constructors LinkElement(String) Declaration public LinkElement(string uri) Parameters Type Name System.String uri LinkElement(String, String) Declaration public LinkElement(string uri, string relation) Parameters Type Name System.String uri System.String relation LinkElement(String, String, String) Declaration public LinkElement(string uri, string relation, string type) Parameters Type Name System.String uri System.String relation System.String type Properties Relation Declaration public string Relation { get; set; } Property Value Type System.String Type Declaration public string Type { get; set; } Property Value Type System.String Uri Declaration public string Uri { get; set; } Property Value Type System.String Methods GetSchema() Declaration public XmlSchema GetSchema() Returns Type Description System.Xml.Schema.XmlSchema ReadXml(XmlReader) Declaration public void ReadXml(XmlReader reader) Parameters Type Name System.Xml.XmlReader reader WriteXml(XmlWriter) Declaration public void WriteXml(XmlWriter writer) Parameters Type Name System.Xml.XmlWriter writer Implements System.Xml.Serialization.IXmlSerializable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Transport.Http.Atom.FeedElement.html": {
    "href": "dotnet-api/code/EventStore.Transport.Http.Atom.FeedElement.html",
    "title": "Class FeedElement | Event Store",
    "keywords": "Class FeedElement Inheritance System.Object FeedElement Implements System.Xml.Serialization.IXmlSerializable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Transport.Http.Atom Assembly : EventStore.Transport.Http.dll Syntax public class FeedElement : IXmlSerializable Constructors FeedElement() Declaration public FeedElement() Properties Author Declaration public PersonElement Author { get; set; } Property Value Type PersonElement Entries Declaration public List<EntryElement> Entries { get; set; } Property Value Type System.Collections.Generic.List < EntryElement > ETag Declaration public string ETag { get; set; } Property Value Type System.String HeadOfStream Declaration public bool HeadOfStream { get; set; } Property Value Type System.Boolean Id Declaration public string Id { get; set; } Property Value Type System.String Links Declaration public List<LinkElement> Links { get; set; } Property Value Type System.Collections.Generic.List < LinkElement > SelfUrl Declaration public string SelfUrl { get; set; } Property Value Type System.String StreamId Declaration public string StreamId { get; set; } Property Value Type System.String Title Declaration public string Title { get; set; } Property Value Type System.String Updated Declaration public string Updated { get; set; } Property Value Type System.String Methods AddEntry(EntryElement) Declaration public void AddEntry(EntryElement entry) Parameters Type Name EntryElement entry AddLink(String, String, String) Declaration public void AddLink(string relation, string uri, string contentType = null) Parameters Type Name System.String relation System.String uri System.String contentType GetSchema() Declaration public XmlSchema GetSchema() Returns Type Description System.Xml.Schema.XmlSchema ReadXml(XmlReader) Declaration public void ReadXml(XmlReader reader) Parameters Type Name System.Xml.XmlReader reader SetAuthor(String) Declaration public void SetAuthor(string name) Parameters Type Name System.String name SetETag(String) Declaration public void SetETag(string etag) Parameters Type Name System.String etag SetHeadOfStream(Boolean) Declaration public void SetHeadOfStream(bool headOfStream) Parameters Type Name System.Boolean headOfStream SetId(String) Declaration public void SetId(string id) Parameters Type Name System.String id SetSelfUrl(String) Declaration public void SetSelfUrl(string self) Parameters Type Name System.String self SetTitle(String) Declaration public void SetTitle(string title) Parameters Type Name System.String title SetUpdated(DateTime) Declaration public void SetUpdated(DateTime dateTime) Parameters Type Name System.DateTime dateTime WriteXml(XmlWriter) Declaration public void WriteXml(XmlWriter writer) Parameters Type Name System.Xml.XmlWriter writer Implements System.Xml.Serialization.IXmlSerializable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Transport.Http.Atom.EntryElement.html": {
    "href": "dotnet-api/code/EventStore.Transport.Http.Atom.EntryElement.html",
    "title": "Class EntryElement | Event Store",
    "keywords": "Class EntryElement Inheritance System.Object EntryElement RichEntryElement Implements System.Xml.Serialization.IXmlSerializable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Transport.Http.Atom Assembly : EventStore.Transport.Http.dll Syntax public class EntryElement : IXmlSerializable Constructors EntryElement() Declaration public EntryElement() Properties Author Declaration public PersonElement Author { get; set; } Property Value Type PersonElement Content Declaration public object Content { get; set; } Property Value Type System.Object Id Declaration public string Id { get; set; } Property Value Type System.String Links Declaration public List<LinkElement> Links { get; set; } Property Value Type System.Collections.Generic.List < LinkElement > Summary Declaration public string Summary { get; set; } Property Value Type System.String Title Declaration public string Title { get; set; } Property Value Type System.String Updated Declaration public string Updated { get; set; } Property Value Type System.String Methods AddLink(String, String, String) Declaration public void AddLink(string relation, string uri, string type = null) Parameters Type Name System.String relation System.String uri System.String type GetSchema() Declaration public XmlSchema GetSchema() Returns Type Description System.Xml.Schema.XmlSchema ReadXml(XmlReader) Declaration public void ReadXml(XmlReader reader) Parameters Type Name System.Xml.XmlReader reader SetAuthor(String) Declaration public void SetAuthor(string name) Parameters Type Name System.String name SetContent(Object) Declaration public void SetContent(object content) Parameters Type Name System.Object content SetId(String) Declaration public void SetId(string id) Parameters Type Name System.String id SetSummary(String) Declaration public void SetSummary(string summary) Parameters Type Name System.String summary SetTitle(String) Declaration public void SetTitle(string title) Parameters Type Name System.String title SetUpdated(DateTime) Declaration public void SetUpdated(DateTime dateTime) Parameters Type Name System.DateTime dateTime WriteXml(XmlWriter) Declaration public void WriteXml(XmlWriter writer) Parameters Type Name System.Xml.XmlWriter writer WriteXml(XmlWriter, Boolean) Declaration public void WriteXml(XmlWriter writer, bool usePrefix) Parameters Type Name System.Xml.XmlWriter writer System.Boolean usePrefix Implements System.Xml.Serialization.IXmlSerializable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Transport.Http.Atom.CollectionElement.html": {
    "href": "dotnet-api/code/EventStore.Transport.Http.Atom.CollectionElement.html",
    "title": "Class CollectionElement | Event Store",
    "keywords": "Class CollectionElement Inheritance System.Object CollectionElement Implements System.Xml.Serialization.IXmlSerializable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Transport.Http.Atom Assembly : EventStore.Transport.Http.dll Syntax public class CollectionElement : IXmlSerializable Constructors CollectionElement() Declaration public CollectionElement() Properties Accepts Declaration public List<AcceptElement> Accepts { get; set; } Property Value Type System.Collections.Generic.List < AcceptElement > Title Declaration public string Title { get; set; } Property Value Type System.String Uri Declaration public string Uri { get; set; } Property Value Type System.String Methods AddAcceptType(String) Declaration public void AddAcceptType(string type) Parameters Type Name System.String type GetSchema() Declaration public XmlSchema GetSchema() Returns Type Description System.Xml.Schema.XmlSchema ReadXml(XmlReader) Declaration public void ReadXml(XmlReader reader) Parameters Type Name System.Xml.XmlReader reader SetTitle(String) Declaration public void SetTitle(string title) Parameters Type Name System.String title SetUri(String) Declaration public void SetUri(string uri) Parameters Type Name System.String uri WriteXml(XmlWriter) Declaration public void WriteXml(XmlWriter writer) Parameters Type Name System.Xml.XmlWriter writer Implements System.Xml.Serialization.IXmlSerializable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Transport.Http.Atom.AtomSpecs.html": {
    "href": "dotnet-api/code/EventStore.Transport.Http.Atom.AtomSpecs.html",
    "title": "Class AtomSpecs | Event Store",
    "keywords": "Class AtomSpecs Inheritance System.Object AtomSpecs Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Transport.Http.Atom Assembly : EventStore.Transport.Http.dll Syntax public class AtomSpecs Fields AtomPubV1Namespace Declaration public const string AtomPubV1Namespace = \"http://www.w3.org/2007/app\" Field Value Type System.String AtomV1Namespace Declaration public const string AtomV1Namespace = \"http://www.w3.org/2005/Atom\" Field Value Type System.String Author Declaration public const string Author = \"EventStore\" Field Value Type System.String FeedPageSize Declaration public const int FeedPageSize = 20 Field Value Type System.Int32 Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Transport.Http.Atom.AtomSpecificationViolationException.html": {
    "href": "dotnet-api/code/EventStore.Transport.Http.Atom.AtomSpecificationViolationException.html",
    "title": "Class AtomSpecificationViolationException | Event Store",
    "keywords": "Class AtomSpecificationViolationException Inheritance System.Object System.Exception AtomSpecificationViolationException Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Transport.Http.Atom Assembly : EventStore.Transport.Http.dll Syntax public class AtomSpecificationViolationException : Exception, _Exception, ISerializable Constructors AtomSpecificationViolationException() Declaration public AtomSpecificationViolationException() AtomSpecificationViolationException(SerializationInfo, StreamingContext) Declaration protected AtomSpecificationViolationException(SerializationInfo info, StreamingContext context) Parameters Type Name System.Runtime.Serialization.SerializationInfo info System.Runtime.Serialization.StreamingContext context AtomSpecificationViolationException(String) Declaration public AtomSpecificationViolationException(string message) Parameters Type Name System.String message AtomSpecificationViolationException(String, Exception) Declaration public AtomSpecificationViolationException(string message, Exception innerException) Parameters Type Name System.String message System.Exception innerException Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Transport.Http.Atom.AcceptElement.html": {
    "href": "dotnet-api/code/EventStore.Transport.Http.Atom.AcceptElement.html",
    "title": "Class AcceptElement | Event Store",
    "keywords": "Class AcceptElement Inheritance System.Object AcceptElement Implements System.Xml.Serialization.IXmlSerializable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Transport.Http.Atom Assembly : EventStore.Transport.Http.dll Syntax public class AcceptElement : IXmlSerializable Constructors AcceptElement(String) Declaration public AcceptElement(string type) Parameters Type Name System.String type Properties Type Declaration public string Type { get; set; } Property Value Type System.String Methods GetSchema() Declaration public XmlSchema GetSchema() Returns Type Description System.Xml.Schema.XmlSchema ReadXml(XmlReader) Declaration public void ReadXml(XmlReader reader) Parameters Type Name System.Xml.XmlReader reader WriteXml(XmlWriter) Declaration public void WriteXml(XmlWriter writer) Parameters Type Name System.Xml.XmlWriter writer Implements System.Xml.Serialization.IXmlSerializable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Transport.Http.AsyncStreamCopier-1.html": {
    "href": "dotnet-api/code/EventStore.Transport.Http.AsyncStreamCopier-1.html",
    "title": "Class AsyncStreamCopier<T> | Event Store",
    "keywords": "Class AsyncStreamCopier<T> Inheritance System.Object AsyncStreamCopier<T> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Transport.Http Assembly : EventStore.Transport.Http.dll Syntax public class AsyncStreamCopier<T> Type Parameters Name Description T Constructors AsyncStreamCopier(Stream, Stream, T, Action<AsyncStreamCopier<T>>) Declaration public AsyncStreamCopier(Stream input, Stream output, T state, Action<AsyncStreamCopier<T>> onCompleted) Parameters Type Name System.IO.Stream input System.IO.Stream output T state System.Action < AsyncStreamCopier <T>> onCompleted Fields AsyncState Declaration public readonly T AsyncState Field Value Type T Properties Error Declaration public Exception Error { get; } Property Value Type System.Exception Methods Start() Declaration public void Start() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Transport.Http.AsyncQueuedBufferWriter.html": {
    "href": "dotnet-api/code/EventStore.Transport.Http.AsyncQueuedBufferWriter.html",
    "title": "Class AsyncQueuedBufferWriter | Event Store",
    "keywords": "Class AsyncQueuedBufferWriter Manages a queue of buffers to send to output stream and sens them to the output stream as previous requests complete Inheritance System.Object AsyncQueuedBufferWriter Implements System.IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Transport.Http Assembly : EventStore.Transport.Http.dll Syntax public class AsyncQueuedBufferWriter : IDisposable Constructors AsyncQueuedBufferWriter(Stream, Action) Declaration public AsyncQueuedBufferWriter(Stream outputStream, Action onDispose) Parameters Type Name System.IO.Stream outputStream System.Action onDispose Methods Append(Byte[], Action<Exception>) Declaration public void Append(byte[] buffer, Action<Exception> onCompletion) Parameters Type Name System.Byte [] buffer System.Action < System.Exception > onCompletion AppendDispose(Action<Exception>) Schedules auto-dispose when all previous writes are completed Declaration public void AppendDispose(Action<Exception> onCompletion) Parameters Type Name System.Action < System.Exception > onCompletion Dispose() Declaration public void Dispose() Implements System.IDisposable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Rags.html": {
    "href": "dotnet-api/code/EventStore.Rags.html",
    "title": "Namespace EventStore.Rags | Event Store",
    "keywords": "Namespace EventStore.Rags Classes ArgAliasAttribute Set an alias or aliases for an argument. ArgDescriptionAttribute ArgException An exception that should be thrown when the error condition is caused because of bad user input. ArgReviverAttribute The attribute used when you want to create an arg reviver. You add this to public static methods that take 2 string parameters (the first represents the name of the property, the second represents the string value and the return type is the type that you are reviving (or converting) the string into. ArgShortcut Use this attribute to override the shortcut that PowerArgs automatically assigns to each property. ArgumentUsageInfo ArgUsage CommandLine ConsoleString A wrapper for string that encapsulates foreground and background colors. DuplicateArgException An exception that should be thrown when the same argument is repeated. EnvironmentVariables IEnumerableExtensions InvalidArgDefinitionException An exception that should be thrown when the error condition is caused by an improperly formed argument scaffold type. For example if the user specified the same shortcut value for more than one property. MemberInfoEx Provides some reflection helpers in the form of extension methods for the MemberInfo type. MissingArgException An exception that should be thrown when a required argument is missing. NameTranslators OptionApplicator OptionException QueryInvalidArgException An exception that should be thrown when the query can not be compiled. Translators TypeDefaultOptions TypeMap UnexpectedArgException An exception that should be thrown when an unexpected named|positional argument is found. UnknownActionArgException An exception that should be thrown when an unknown action argument is specified. ValidationArgException An exception that should be thrown when an argument's value is not valid. Yaml Structs ConsoleCharacter A wrapper for char that encapsulates foreground and background colors. OptionSource Enums ArgShortcutPolicy An enum to represent argument shortcut policies."
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ReaderSubscriptionBase.html",
    "title": "Class ReaderSubscriptionBase | Event Store",
    "keywords": "Class ReaderSubscriptionBase Inheritance System.Object ReaderSubscriptionBase EventReorderingReaderSubscription ReaderSubscription Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class ReaderSubscriptionBase Constructors ReaderSubscriptionBase(IPublisher, Guid, CheckpointTag, IReaderStrategy, ITimeProvider, Nullable<Int64>, Nullable<Int32>, Int32, Boolean, Nullable<Int32>) Declaration protected ReaderSubscriptionBase(IPublisher publisher, Guid subscriptionId, CheckpointTag from, IReaderStrategy readerStrategy, ITimeProvider timeProvider, long? checkpointUnhandledBytesThreshold, int? checkpointProcessedEventsThreshold, int checkpointAfterMs, bool stopOnEof, int? stopAfterNEvents) Parameters Type Name IPublisher publisher System.Guid subscriptionId CheckpointTag from IReaderStrategy readerStrategy ITimeProvider timeProvider System.Nullable < System.Int64 > checkpointUnhandledBytesThreshold System.Nullable < System.Int32 > checkpointProcessedEventsThreshold System.Int32 checkpointAfterMs System.Boolean stopOnEof System.Nullable < System.Int32 > stopAfterNEvents Fields _eventFilter Declaration protected readonly EventFilter _eventFilter Field Value Type EventFilter _positionTagger Declaration protected readonly PositionTagger _positionTagger Field Value Type PositionTagger _positionTracker Declaration protected readonly PositionTracker _positionTracker Field Value Type PositionTracker _tag Declaration protected string _tag Field Value Type System.String Properties SubscriptionId Declaration public Guid SubscriptionId { get; } Property Value Type System.Guid Tag Declaration public string Tag { get; } Property Value Type System.String Methods CreatePausedEventReader(IPublisher, IODispatcher, Guid) Declaration public IEventReader CreatePausedEventReader(IPublisher publisher, IODispatcher ioDispatcher, Guid eventReaderId) Parameters Type Name IPublisher publisher IODispatcher ioDispatcher System.Guid eventReaderId Returns Type Description IEventReader EofReached() Declaration protected virtual void EofReached() Handle(ReaderSubscriptionMessage.EventReaderEof) Declaration public void Handle(ReaderSubscriptionMessage.EventReaderEof message) Parameters Type Name ReaderSubscriptionMessage.EventReaderEof message Handle(ReaderSubscriptionMessage.EventReaderNotAuthorized) Declaration public void Handle(ReaderSubscriptionMessage.EventReaderNotAuthorized message) Parameters Type Name ReaderSubscriptionMessage.EventReaderNotAuthorized message Handle(ReaderSubscriptionMessage.EventReaderPartitionEof) Declaration public void Handle(ReaderSubscriptionMessage.EventReaderPartitionEof message) Parameters Type Name ReaderSubscriptionMessage.EventReaderPartitionEof message Handle(ReaderSubscriptionMessage.EventReaderPartitionMeasured) Declaration public void Handle(ReaderSubscriptionMessage.EventReaderPartitionMeasured message) Parameters Type Name ReaderSubscriptionMessage.EventReaderPartitionMeasured message Handle(ReaderSubscriptionMessage.EventReaderStarting) Declaration public void Handle(ReaderSubscriptionMessage.EventReaderStarting message) Parameters Type Name ReaderSubscriptionMessage.EventReaderStarting message ProcessOne(ReaderSubscriptionMessage.CommittedEventDistributed) Declaration protected void ProcessOne(ReaderSubscriptionMessage.CommittedEventDistributed message) Parameters Type Name ReaderSubscriptionMessage.CommittedEventDistributed message PublishPartitionDeleted(String, CheckpointTag) Declaration protected void PublishPartitionDeleted(string partition, CheckpointTag deletePosition) Parameters Type Name System.String partition CheckpointTag deletePosition Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ReaderSubscription.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ReaderSubscription.html",
    "title": "Class ReaderSubscription | Event Store",
    "keywords": "Class ReaderSubscription Inheritance System.Object ReaderSubscriptionBase ReaderSubscription Implements IReaderSubscription IHandle < ReaderSubscriptionMessage.CommittedEventDistributed > IHandle < ReaderSubscriptionMessage.EventReaderIdle > IHandle < ReaderSubscriptionMessage.EventReaderStarting > IHandle < ReaderSubscriptionMessage.EventReaderEof > IHandle < ReaderSubscriptionMessage.EventReaderPartitionEof > IHandle < ReaderSubscriptionMessage.EventReaderPartitionDeleted > IHandle < ReaderSubscriptionMessage.EventReaderPartitionMeasured > IHandle < ReaderSubscriptionMessage.EventReaderNotAuthorized > Inherited Members ReaderSubscriptionBase._eventFilter ReaderSubscriptionBase._positionTagger ReaderSubscriptionBase._positionTracker ReaderSubscriptionBase._tag ReaderSubscriptionBase.Tag ReaderSubscriptionBase.SubscriptionId ReaderSubscriptionBase.ProcessOne(ReaderSubscriptionMessage.CommittedEventDistributed) ReaderSubscriptionBase.PublishPartitionDeleted(String, CheckpointTag) ReaderSubscriptionBase.CreatePausedEventReader(IPublisher, IODispatcher, Guid) ReaderSubscriptionBase.Handle(ReaderSubscriptionMessage.EventReaderEof) ReaderSubscriptionBase.Handle(ReaderSubscriptionMessage.EventReaderPartitionEof) ReaderSubscriptionBase.Handle(ReaderSubscriptionMessage.EventReaderPartitionMeasured) ReaderSubscriptionBase.Handle(ReaderSubscriptionMessage.EventReaderNotAuthorized) ReaderSubscriptionBase.Handle(ReaderSubscriptionMessage.EventReaderStarting) ReaderSubscriptionBase.EofReached() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class ReaderSubscription : ReaderSubscriptionBase, IReaderSubscription, IHandle<ReaderSubscriptionMessage.CommittedEventDistributed>, IHandle<ReaderSubscriptionMessage.EventReaderIdle>, IHandle<ReaderSubscriptionMessage.EventReaderStarting>, IHandle<ReaderSubscriptionMessage.EventReaderEof>, IHandle<ReaderSubscriptionMessage.EventReaderPartitionEof>, IHandle<ReaderSubscriptionMessage.EventReaderPartitionDeleted>, IHandle<ReaderSubscriptionMessage.EventReaderPartitionMeasured>, IHandle<ReaderSubscriptionMessage.EventReaderNotAuthorized> Constructors ReaderSubscription(String, IPublisher, Guid, CheckpointTag, IReaderStrategy, ITimeProvider, Nullable<Int64>, Nullable<Int32>, Int32, Boolean, Nullable<Int32>) Declaration public ReaderSubscription(string tag, IPublisher publisher, Guid subscriptionId, CheckpointTag from, IReaderStrategy readerStrategy, ITimeProvider timeProvider, long? checkpointUnhandledBytesThreshold, int? checkpointProcessedEventsThreshold, int checkpointAfterMs, bool stopOnEof = false, int? stopAfterNEvents = default(int? )) Parameters Type Name System.String tag IPublisher publisher System.Guid subscriptionId CheckpointTag from IReaderStrategy readerStrategy ITimeProvider timeProvider System.Nullable < System.Int64 > checkpointUnhandledBytesThreshold System.Nullable < System.Int32 > checkpointProcessedEventsThreshold System.Int32 checkpointAfterMs System.Boolean stopOnEof System.Nullable < System.Int32 > stopAfterNEvents Methods Handle(ReaderSubscriptionMessage.CommittedEventDistributed) Declaration public void Handle(ReaderSubscriptionMessage.CommittedEventDistributed message) Parameters Type Name ReaderSubscriptionMessage.CommittedEventDistributed message Handle(ReaderSubscriptionMessage.EventReaderIdle) Declaration public void Handle(ReaderSubscriptionMessage.EventReaderIdle message) Parameters Type Name ReaderSubscriptionMessage.EventReaderIdle message Handle(ReaderSubscriptionMessage.EventReaderPartitionDeleted) Declaration public void Handle(ReaderSubscriptionMessage.EventReaderPartitionDeleted message) Parameters Type Name ReaderSubscriptionMessage.EventReaderPartitionDeleted message Implements IReaderSubscription IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ReaderStrategy.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ReaderStrategy.html",
    "title": "Class ReaderStrategy | Event Store",
    "keywords": "Class ReaderStrategy Inheritance System.Object ReaderStrategy Implements IReaderStrategy Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class ReaderStrategy : IReaderStrategy Properties EventFilter Declaration public EventFilter EventFilter { get; } Property Value Type EventFilter IsReadingOrderRepeatable Declaration public bool IsReadingOrderRepeatable { get; } Property Value Type System.Boolean Phase Declaration public int Phase { get; } Property Value Type System.Int32 PositionTagger Declaration public PositionTagger PositionTagger { get; } Property Value Type PositionTagger Methods Create(String, Int32, IQuerySources, ITimeProvider, Boolean, IPrincipal) Declaration public static IReaderStrategy Create(string tag, int phase, IQuerySources sources, ITimeProvider timeProvider, bool stopOnEof, IPrincipal runAs) Parameters Type Name System.String tag System.Int32 phase IQuerySources sources ITimeProvider timeProvider System.Boolean stopOnEof System.Security.Principal.IPrincipal runAs Returns Type Description IReaderStrategy CreateExternallyFedReaderStrategy(String, Int32, ITimeProvider, IPrincipal, Int64) Declaration public static IReaderStrategy CreateExternallyFedReaderStrategy(string tag, int phase, ITimeProvider timeProvider, IPrincipal runAs, long limitingCommitPosition) Parameters Type Name System.String tag System.Int32 phase ITimeProvider timeProvider System.Security.Principal.IPrincipal runAs System.Int64 limitingCommitPosition Returns Type Description IReaderStrategy CreatePausedEventReader(Guid, IPublisher, IODispatcher, CheckpointTag, Boolean, Nullable<Int32>) Declaration public IEventReader CreatePausedEventReader(Guid eventReaderId, IPublisher publisher, IODispatcher ioDispatcher, CheckpointTag checkpointTag, bool stopOnEof, int? stopAfterNEvents) Parameters Type Name System.Guid eventReaderId IPublisher publisher IODispatcher ioDispatcher CheckpointTag checkpointTag System.Boolean stopOnEof System.Nullable < System.Int32 > stopAfterNEvents Returns Type Description IEventReader CreateReaderSubscription(IPublisher, CheckpointTag, Guid, ReaderSubscriptionOptions) Declaration public IReaderSubscription CreateReaderSubscription(IPublisher publisher, CheckpointTag fromCheckpointTag, Guid subscriptionId, ReaderSubscriptionOptions readerSubscriptionOptions) Parameters Type Name IPublisher publisher CheckpointTag fromCheckpointTag System.Guid subscriptionId ReaderSubscriptionOptions readerSubscriptionOptions Returns Type Description IReaderSubscription Implements IReaderStrategy Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.QueuedEmittedStreamsWriter.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.QueuedEmittedStreamsWriter.html",
    "title": "Class QueuedEmittedStreamsWriter | Event Store",
    "keywords": "Class QueuedEmittedStreamsWriter Inheritance System.Object QueuedEmittedStreamsWriter Implements IEmittedStreamsWriter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class QueuedEmittedStreamsWriter : IEmittedStreamsWriter Constructors QueuedEmittedStreamsWriter(IODispatcher, Guid) Declaration public QueuedEmittedStreamsWriter(IODispatcher ioDispatcher, Guid writeQueueId) Parameters Type Name IODispatcher ioDispatcher System.Guid writeQueueId Methods WriteEvents(String, Int64, Event[], IPrincipal, Action<ClientMessage.WriteEventsCompleted>) Declaration public void WriteEvents(string streamId, long expectedVersion, Event[] events, IPrincipal writeAs, Action<ClientMessage.WriteEventsCompleted> complete) Parameters Type Name System.String streamId System.Int64 expectedVersion Event [] events System.Security.Principal.IPrincipal writeAs System.Action < ClientMessage.WriteEventsCompleted > complete Implements IEmittedStreamsWriter Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.QuerySourceOptions.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.QuerySourceOptions.html",
    "title": "Class QuerySourceOptions | Event Store",
    "keywords": "Class QuerySourceOptions Inheritance System.Object QuerySourceOptions Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax [DataContract] public class QuerySourceOptions Properties DefinesCatalogTransform Declaration [DataMember] public bool DefinesCatalogTransform { get; set; } Property Value Type System.Boolean DefinesFold Declaration [DataMember] public bool DefinesFold { get; set; } Property Value Type System.Boolean DefinesStateTransform Declaration [DataMember] public bool DefinesStateTransform { get; set; } Property Value Type System.Boolean DisableParallelism Declaration [DataMember] public bool DisableParallelism { get; set; } Property Value Type System.Boolean HandlesDeletedNotifications Declaration [DataMember] public bool HandlesDeletedNotifications { get; set; } Property Value Type System.Boolean IncludeLinks Declaration [DataMember] public bool IncludeLinks { get; set; } Property Value Type System.Boolean IsBiState Declaration [DataMember] public bool IsBiState { get; set; } Property Value Type System.Boolean PartitionResultStreamNamePattern Declaration [DataMember] public string PartitionResultStreamNamePattern { get; set; } Property Value Type System.String ProcessingLag Declaration [DataMember] public int ProcessingLag { get; set; } Property Value Type System.Int32 ProducesResults Declaration [DataMember] public bool ProducesResults { get; set; } Property Value Type System.Boolean ReorderEvents Declaration [DataMember] public bool ReorderEvents { get; set; } Property Value Type System.Boolean ResultStreamName Declaration [DataMember] public string ResultStreamName { get; set; } Property Value Type System.String Methods Equals(QuerySourceOptions) Declaration protected bool Equals(QuerySourceOptions other) Parameters Type Name QuerySourceOptions other Returns Type Description System.Boolean Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.QueryProcessingStrategy.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.QueryProcessingStrategy.html",
    "title": "Class QueryProcessingStrategy | Event Store",
    "keywords": "Class QueryProcessingStrategy Inheritance System.Object ProjectionProcessingStrategy EventReaderBasedProjectionProcessingStrategy DefaultProjectionProcessingStrategy QueryProcessingStrategy Inherited Members DefaultProjectionProcessingStrategy.CreateFirstProcessingPhase(IPublisher, IPublisher, Guid, PartitionStateCache, Action, CoreProjection, ReaderSubscriptionDispatcher, CheckpointTag, ICoreProjectionCheckpointManager, IReaderStrategy, IResultWriter, IEmittedStreamsTracker) DefaultProjectionProcessingStrategy.CreateStatePartitionSelector() EventReaderBasedProjectionProcessingStrategy._projectionConfig EventReaderBasedProjectionProcessingStrategy._sourceDefinition EventReaderBasedProjectionProcessingStrategy.CreateProcessingPhases(IPublisher, IPublisher, Guid, PartitionStateCache, Action, CoreProjection, ProjectionNamesBuilder, ITimeProvider, IODispatcher, CoreProjectionCheckpointWriter) EventReaderBasedProjectionProcessingStrategy.CreateReaderStrategy(ITimeProvider) EventReaderBasedProjectionProcessingStrategy.GetSourceDefinition() EventReaderBasedProjectionProcessingStrategy.GetRequiresRootPartition() EventReaderBasedProjectionProcessingStrategy.EnrichStatistics(ProjectionStatistics) EventReaderBasedProjectionProcessingStrategy.CreateCheckpointManager(Guid, IPublisher, IODispatcher, ProjectionNamesBuilder, CoreProjectionCheckpointWriter, Boolean, IReaderStrategy) EventReaderBasedProjectionProcessingStrategy.CreateFirstPhaseResultWriter(IEmittedEventWriter, CheckpointTag, ProjectionNamesBuilder) ProjectionProcessingStrategy._name ProjectionProcessingStrategy._projectionVersion ProjectionProcessingStrategy._logger ProjectionProcessingStrategy.Create(Guid, IPublisher, Guid, IPrincipal, IPublisher, IODispatcher, ReaderSubscriptionDispatcher, ITimeProvider) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class QueryProcessingStrategy : DefaultProjectionProcessingStrategy Constructors QueryProcessingStrategy(String, ProjectionVersion, IProjectionStateHandler, ProjectionConfig, IQuerySources, ILogger, ReaderSubscriptionDispatcher) Declaration public QueryProcessingStrategy(string name, ProjectionVersion projectionVersion, IProjectionStateHandler stateHandler, ProjectionConfig projectionConfig, IQuerySources sourceDefinition, ILogger logger, ReaderSubscriptionDispatcher subscriptionDispatcher) Parameters Type Name System.String name ProjectionVersion projectionVersion IProjectionStateHandler stateHandler ProjectionConfig projectionConfig IQuerySources sourceDefinition ILogger logger ReaderSubscriptionDispatcher subscriptionDispatcher Methods CreateFirstPhaseResultEmitter(ProjectionNamesBuilder) Declaration protected override IResultEventEmitter CreateFirstPhaseResultEmitter(ProjectionNamesBuilder namingBuilder) Parameters Type Name ProjectionNamesBuilder namingBuilder Returns Type Description IResultEventEmitter Overrides EventReaderBasedProjectionProcessingStrategy.CreateFirstPhaseResultEmitter(ProjectionNamesBuilder) CreateProjectionProcessingPhases(IPublisher, IPublisher, Guid, ProjectionNamesBuilder, PartitionStateCache, CoreProjection, IODispatcher, IProjectionProcessingPhase) Declaration protected override IProjectionProcessingPhase[] CreateProjectionProcessingPhases(IPublisher publisher, IPublisher inputQueue, Guid projectionCorrelationId, ProjectionNamesBuilder namingBuilder, PartitionStateCache partitionStateCache, CoreProjection coreProjection, IODispatcher ioDispatcher, IProjectionProcessingPhase firstPhase) Parameters Type Name IPublisher publisher IPublisher inputQueue System.Guid projectionCorrelationId ProjectionNamesBuilder namingBuilder PartitionStateCache partitionStateCache CoreProjection coreProjection IODispatcher ioDispatcher IProjectionProcessingPhase firstPhase Returns Type Description IProjectionProcessingPhase [] Overrides EventReaderBasedProjectionProcessingStrategy.CreateProjectionProcessingPhases(IPublisher, IPublisher, Guid, ProjectionNamesBuilder, PartitionStateCache, CoreProjection, IODispatcher, IProjectionProcessingPhase) GetIsSlaveProjection() Declaration public override bool GetIsSlaveProjection() Returns Type Description System.Boolean Overrides ProjectionProcessingStrategy.GetIsSlaveProjection() GetProducesRunningResults() Declaration public override bool GetProducesRunningResults() Returns Type Description System.Boolean Overrides ProjectionProcessingStrategy.GetProducesRunningResults() GetSlaveProjections() Declaration public override SlaveProjectionDefinitions GetSlaveProjections() Returns Type Description SlaveProjectionDefinitions Overrides ProjectionProcessingStrategy.GetSlaveProjections() GetStopOnEof() Declaration public override bool GetStopOnEof() Returns Type Description System.Boolean Overrides ProjectionProcessingStrategy.GetStopOnEof() GetUseCheckpoints() Declaration public override bool GetUseCheckpoints() Returns Type Description System.Boolean Overrides ProjectionProcessingStrategy.GetUseCheckpoints() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ProjectionVersion.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ProjectionVersion.html",
    "title": "Struct ProjectionVersion | Event Store",
    "keywords": "Struct ProjectionVersion Inherited Members System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public struct ProjectionVersion Constructors ProjectionVersion(Int64, Int64, Int64) Declaration public ProjectionVersion(long projectionId, long epoch, long version) Parameters Type Name System.Int64 projectionId System.Int64 epoch System.Int64 version Fields Epoch Declaration public readonly long Epoch Field Value Type System.Int64 ProjectionId Declaration public readonly long ProjectionId Field Value Type System.Int64 Version Declaration public readonly long Version Field Value Type System.Int64 Methods Equals(ProjectionVersion) Declaration public bool Equals(ProjectionVersion other) Parameters Type Name ProjectionVersion other Returns Type Description System.Boolean Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) EnumExtensions.EnumValueName<T>(T) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ProjectionSourceDefinition.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ProjectionSourceDefinition.html",
    "title": "Class ProjectionSourceDefinition | Event Store",
    "keywords": "Class ProjectionSourceDefinition Inheritance System.Object ProjectionSourceDefinition Implements IQuerySources Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax [DataContract] public class ProjectionSourceDefinition : IQuerySources Properties AllEvents Declaration [DataMember] public bool AllEvents { get; set; } Property Value Type System.Boolean AllStreams Declaration [DataMember] public bool AllStreams { get; set; } Property Value Type System.Boolean ByCustomPartitions Declaration [DataMember] public bool ByCustomPartitions { get; set; } Property Value Type System.Boolean ByStream Declaration [DataMember] public bool ByStream { get; set; } Property Value Type System.Boolean CatalogStream Declaration [DataMember] public string CatalogStream { get; set; } Property Value Type System.String Categories Declaration [DataMember] public string[] Categories { get; set; } Property Value Type System.String [] Events Declaration [DataMember] public string[] Events { get; set; } Property Value Type System.String [] LimitingCommitPosition Declaration [DataMember] public long? LimitingCommitPosition { get; set; } Property Value Type System.Nullable < System.Int64 > Options Declaration [DataMember] public QuerySourceOptions Options { get; set; } Property Value Type QuerySourceOptions Streams Declaration [DataMember] public string[] Streams { get; set; } Property Value Type System.String [] Methods Equals(ProjectionSourceDefinition) Declaration protected bool Equals(ProjectionSourceDefinition other) Parameters Type Name ProjectionSourceDefinition other Returns Type Description System.Boolean Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) From(IQuerySources) Declaration public static ProjectionSourceDefinition From(IQuerySources sources) Parameters Type Name IQuerySources sources Returns Type Description ProjectionSourceDefinition GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() Explicit Interface Implementations IQuerySources.ByStreams Declaration bool IQuerySources.ByStreams { get; } Returns Type Description System.Boolean IQuerySources.DefinesCatalogTransform Declaration bool IQuerySources.DefinesCatalogTransform { get; } Returns Type Description System.Boolean IQuerySources.DefinesFold Declaration bool IQuerySources.DefinesFold { get; } Returns Type Description System.Boolean IQuerySources.DefinesStateTransform Declaration bool IQuerySources.DefinesStateTransform { get; } Returns Type Description System.Boolean IQuerySources.DisableParallelismOption Declaration bool IQuerySources.DisableParallelismOption { get; } Returns Type Description System.Boolean IQuerySources.HandlesDeletedNotifications Declaration bool IQuerySources.HandlesDeletedNotifications { get; } Returns Type Description System.Boolean IQuerySources.IncludeLinksOption Declaration bool IQuerySources.IncludeLinksOption { get; } Returns Type Description System.Boolean IQuerySources.IsBiState Declaration bool IQuerySources.IsBiState { get; } Returns Type Description System.Boolean IQuerySources.PartitionResultStreamNamePatternOption Declaration string IQuerySources.PartitionResultStreamNamePatternOption { get; } Returns Type Description System.String IQuerySources.ProcessingLagOption Declaration int? IQuerySources.ProcessingLagOption { get; } Returns Type Description System.Nullable < System.Int32 > IQuerySources.ProducesResults Declaration bool IQuerySources.ProducesResults { get; } Returns Type Description System.Boolean IQuerySources.ReorderEventsOption Declaration bool IQuerySources.ReorderEventsOption { get; } Returns Type Description System.Boolean IQuerySources.ResultStreamNameOption Declaration string IQuerySources.ResultStreamNameOption { get; } Returns Type Description System.String Implements IQuerySources Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) QuerySourcesExtensions.HasStreams(IQuerySources) QuerySourcesExtensions.HasCategories(IQuerySources) QuerySourcesExtensions.HasEvents(IQuerySources) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ProjectionProcessingStrategy.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ProjectionProcessingStrategy.html",
    "title": "Class ProjectionProcessingStrategy | Event Store",
    "keywords": "Class ProjectionProcessingStrategy Inheritance System.Object ProjectionProcessingStrategy EventReaderBasedProjectionProcessingStrategy Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public abstract class ProjectionProcessingStrategy Constructors ProjectionProcessingStrategy(String, ProjectionVersion, ILogger) Declaration protected ProjectionProcessingStrategy(string name, ProjectionVersion projectionVersion, ILogger logger) Parameters Type Name System.String name ProjectionVersion projectionVersion ILogger logger Fields _logger Declaration protected readonly ILogger _logger Field Value Type ILogger _name Declaration protected readonly string _name Field Value Type System.String _projectionVersion Declaration protected readonly ProjectionVersion _projectionVersion Field Value Type ProjectionVersion Methods Create(Guid, IPublisher, Guid, IPrincipal, IPublisher, IODispatcher, ReaderSubscriptionDispatcher, ITimeProvider) Declaration public CoreProjection Create(Guid projectionCorrelationId, IPublisher inputQueue, Guid workerId, IPrincipal runAs, IPublisher publisher, IODispatcher ioDispatcher, ReaderSubscriptionDispatcher subscriptionDispatcher, ITimeProvider timeProvider) Parameters Type Name System.Guid projectionCorrelationId IPublisher inputQueue System.Guid workerId System.Security.Principal.IPrincipal runAs IPublisher publisher IODispatcher ioDispatcher ReaderSubscriptionDispatcher subscriptionDispatcher ITimeProvider timeProvider Returns Type Description CoreProjection CreateProcessingPhases(IPublisher, IPublisher, Guid, PartitionStateCache, Action, CoreProjection, ProjectionNamesBuilder, ITimeProvider, IODispatcher, CoreProjectionCheckpointWriter) Declaration public abstract IProjectionProcessingPhase[] CreateProcessingPhases(IPublisher publisher, IPublisher inputQueue, Guid projectionCorrelationId, PartitionStateCache partitionStateCache, Action updateStatistics, CoreProjection coreProjection, ProjectionNamesBuilder namingBuilder, ITimeProvider timeProvider, IODispatcher ioDispatcher, CoreProjectionCheckpointWriter coreProjectionCheckpointWriter) Parameters Type Name IPublisher publisher IPublisher inputQueue System.Guid projectionCorrelationId PartitionStateCache partitionStateCache System.Action updateStatistics CoreProjection coreProjection ProjectionNamesBuilder namingBuilder ITimeProvider timeProvider IODispatcher ioDispatcher CoreProjectionCheckpointWriter coreProjectionCheckpointWriter Returns Type Description IProjectionProcessingPhase [] EnrichStatistics(ProjectionStatistics) Declaration public abstract void EnrichStatistics(ProjectionStatistics info) Parameters Type Name ProjectionStatistics info GetIsSlaveProjection() Declaration public abstract bool GetIsSlaveProjection() Returns Type Description System.Boolean GetProducesRunningResults() Declaration public abstract bool GetProducesRunningResults() Returns Type Description System.Boolean GetRequiresRootPartition() Declaration public abstract bool GetRequiresRootPartition() Returns Type Description System.Boolean GetSlaveProjections() Declaration public abstract SlaveProjectionDefinitions GetSlaveProjections() Returns Type Description SlaveProjectionDefinitions GetSourceDefinition() Declaration protected abstract IQuerySources GetSourceDefinition() Returns Type Description IQuerySources GetStopOnEof() Declaration public abstract bool GetStopOnEof() Returns Type Description System.Boolean GetUseCheckpoints() Declaration public abstract bool GetUseCheckpoints() Returns Type Description System.Boolean Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ProjectionOutputConfig.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ProjectionOutputConfig.html",
    "title": "Class ProjectionOutputConfig | Event Store",
    "keywords": "Class ProjectionOutputConfig Inheritance System.Object ProjectionOutputConfig Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax [DataContract] public class ProjectionOutputConfig Properties ResultStreamName Declaration [DataMember] public string ResultStreamName { get; set; } Property Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder.html",
    "title": "Class ProjectionNamesBuilder | Event Store",
    "keywords": "Class ProjectionNamesBuilder Inheritance System.Object ProjectionNamesBuilder Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class ProjectionNamesBuilder Constructors ProjectionNamesBuilder(String, IQuerySources) Declaration public ProjectionNamesBuilder(string name, IQuerySources sources) Parameters Type Name System.String name IQuerySources sources Fields _projectionsControlStream Declaration public const string _projectionsControlStream = \"$projections-$control\" Field Value Type System.String _projectionsMasterStream Declaration public const string _projectionsMasterStream = \"$projections-$master\" Field Value Type System.String ControlStreamMaxAge Declaration public static TimeSpan ControlStreamMaxAge Field Value Type System.TimeSpan CoreControlStreamMaxAge Declaration public static TimeSpan CoreControlStreamMaxAge Field Value Type System.TimeSpan MasterStreamMaxAge Declaration public static TimeSpan MasterStreamMaxAge Field Value Type System.TimeSpan ProjectionsRegistrationStream Declaration public const string ProjectionsRegistrationStream = \"$projections-$all\" Field Value Type System.String ProjectionsStreamPrefix Declaration public const string ProjectionsStreamPrefix = \"$projections-\" Field Value Type System.String SlaveProjectionControlStreamMaxAge Declaration public static TimeSpan SlaveProjectionControlStreamMaxAge Field Value Type System.TimeSpan Properties EffectiveProjectionName Declaration public string EffectiveProjectionName { get; } Property Value Type System.String Methods BuildControlStreamName(Guid) Declaration public static string BuildControlStreamName(Guid uniqueId) Parameters Type Name System.Guid uniqueId Returns Type Description System.String CreateForTest(String) Declaration public static ProjectionNamesBuilder CreateForTest(string name) Parameters Type Name System.String name Returns Type Description ProjectionNamesBuilder GetCategoryCatalogStreamName(String) Declaration public string GetCategoryCatalogStreamName(string category) Parameters Type Name System.String category Returns Type Description System.String GetEmittedStreamsCheckpointName() Declaration public string GetEmittedStreamsCheckpointName() Returns Type Description System.String GetEmittedStreamsName() Declaration public string GetEmittedStreamsName() Returns Type Description System.String GetOrderStreamName() Declaration public string GetOrderStreamName() Returns Type Description System.String GetPartitionCatalogStreamName() Declaration public string GetPartitionCatalogStreamName() Returns Type Description System.String GetPartitionResultCatalogStreamName() Declaration public string GetPartitionResultCatalogStreamName() Returns Type Description System.String GetPartitionResultStreamNamePattern() Declaration public string GetPartitionResultStreamNamePattern() Returns Type Description System.String GetResultStreamName() Declaration public string GetResultStreamName() Returns Type Description System.String MakeCheckpointStreamName() Declaration public string MakeCheckpointStreamName() Returns Type Description System.String MakeControlStreamName(Guid) Declaration public static string MakeControlStreamName(Guid guid) Parameters Type Name System.Guid guid Returns Type Description System.String MakeControlStreamName(String) Declaration public static string MakeControlStreamName(string guid) Parameters Type Name System.String guid Returns Type Description System.String MakePartitionCheckpointStreamName(String) Declaration public string MakePartitionCheckpointStreamName(string statePartition) Parameters Type Name System.String statePartition Returns Type Description System.String MakePartitionResultStreamName(String) Declaration public string MakePartitionResultStreamName(string statePartition) Parameters Type Name System.String statePartition Returns Type Description System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder.StandardProjections.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ProjectionNamesBuilder.StandardProjections.html",
    "title": "Class ProjectionNamesBuilder.StandardProjections | Event Store",
    "keywords": "Class ProjectionNamesBuilder.StandardProjections Inheritance System.Object ProjectionNamesBuilder.StandardProjections Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public static class StandardProjections Fields EventByCategoryStandardProjection Declaration public const string EventByCategoryStandardProjection = \"$by_category\" Field Value Type System.String EventByCorrIdStandardProjection Declaration public const string EventByCorrIdStandardProjection = \"$by_correlation_id\" Field Value Type System.String EventByTypeStandardProjection Declaration public const string EventByTypeStandardProjection = \"$by_event_type\" Field Value Type System.String StreamByCategoryStandardProjection Declaration public const string StreamByCategoryStandardProjection = \"$stream_by_category\" Field Value Type System.String StreamsStandardProjection Declaration public const string StreamsStandardProjection = \"$streams\" Field Value Type System.String"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ProjectionCoreServiceCommandReader.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ProjectionCoreServiceCommandReader.html",
    "title": "Class ProjectionCoreServiceCommandReader | Event Store",
    "keywords": "Class ProjectionCoreServiceCommandReader Inheritance System.Object ProjectionCoreServiceCommandReader Implements IHandle < ProjectionCoreServiceMessage.StartCore > IHandle < ProjectionCoreServiceMessage.StopCore > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class ProjectionCoreServiceCommandReader : IHandle<ProjectionCoreServiceMessage.StartCore>, IHandle<ProjectionCoreServiceMessage.StopCore> Constructors ProjectionCoreServiceCommandReader(IPublisher, IODispatcher, String) Declaration public ProjectionCoreServiceCommandReader(IPublisher publisher, IODispatcher ioDispatcher, string workerId) Parameters Type Name IPublisher publisher IODispatcher ioDispatcher System.String workerId Methods Handle(ProjectionCoreServiceMessage.StartCore) Declaration public void Handle(ProjectionCoreServiceMessage.StartCore message) Parameters Type Name ProjectionCoreServiceMessage.StartCore message Handle(ProjectionCoreServiceMessage.StopCore) Declaration public void Handle(ProjectionCoreServiceMessage.StopCore message) Parameters Type Name ProjectionCoreServiceMessage.StopCore message Implements IHandle<T> IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ProjectionCoreService.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ProjectionCoreService.html",
    "title": "Class ProjectionCoreService | Event Store",
    "keywords": "Class ProjectionCoreService Inheritance System.Object ProjectionCoreService Implements IHandle < ProjectionCoreServiceMessage.StartCore > IHandle < ProjectionCoreServiceMessage.StopCore > IHandle < ProjectionCoreServiceMessage.CoreTick > IHandle < CoreProjectionManagementMessage.CreateAndPrepare > IHandle < CoreProjectionManagementMessage.CreatePrepared > IHandle < CoreProjectionManagementMessage.CreateAndPrepareSlave > IHandle < CoreProjectionManagementMessage.Dispose > IHandle < CoreProjectionManagementMessage.Start > IHandle < CoreProjectionManagementMessage.LoadStopped > IHandle < CoreProjectionManagementMessage.Stop > IHandle < CoreProjectionManagementMessage.Kill > IHandle < CoreProjectionManagementMessage.GetState > IHandle < CoreProjectionManagementMessage.GetResult > IHandle < ProjectionManagementMessage.SlaveProjectionsStarted > IHandle < CoreProjectionProcessingMessage.CheckpointCompleted > IHandle < CoreProjectionProcessingMessage.CheckpointLoaded > IHandle < CoreProjectionProcessingMessage.PrerecordedEventsLoaded > IHandle < CoreProjectionProcessingMessage.RestartRequested > IHandle < CoreProjectionProcessingMessage.Failed > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class ProjectionCoreService : IHandle<ProjectionCoreServiceMessage.StartCore>, IHandle<ProjectionCoreServiceMessage.StopCore>, IHandle<ProjectionCoreServiceMessage.CoreTick>, IHandle<CoreProjectionManagementMessage.CreateAndPrepare>, IHandle<CoreProjectionManagementMessage.CreatePrepared>, IHandle<CoreProjectionManagementMessage.CreateAndPrepareSlave>, IHandle<CoreProjectionManagementMessage.Dispose>, IHandle<CoreProjectionManagementMessage.Start>, IHandle<CoreProjectionManagementMessage.LoadStopped>, IHandle<CoreProjectionManagementMessage.Stop>, IHandle<CoreProjectionManagementMessage.Kill>, IHandle<CoreProjectionManagementMessage.GetState>, IHandle<CoreProjectionManagementMessage.GetResult>, IHandle<ProjectionManagementMessage.SlaveProjectionsStarted>, IHandle<CoreProjectionProcessingMessage.CheckpointCompleted>, IHandle<CoreProjectionProcessingMessage.CheckpointLoaded>, IHandle<CoreProjectionProcessingMessage.PrerecordedEventsLoaded>, IHandle<CoreProjectionProcessingMessage.RestartRequested>, IHandle<CoreProjectionProcessingMessage.Failed> Constructors ProjectionCoreService(Guid, IPublisher, IPublisher, ReaderSubscriptionDispatcher, ITimeProvider, IODispatcher, SpooledStreamReadingDispatcher, ISingletonTimeoutScheduler) Declaration public ProjectionCoreService(Guid workerId, IPublisher inputQueue, IPublisher publisher, ReaderSubscriptionDispatcher subscriptionDispatcher, ITimeProvider timeProvider, IODispatcher ioDispatcher, SpooledStreamReadingDispatcher spoolProcessingResponseDispatcher, ISingletonTimeoutScheduler timeoutScheduler) Parameters Type Name System.Guid workerId IPublisher inputQueue IPublisher publisher ReaderSubscriptionDispatcher subscriptionDispatcher ITimeProvider timeProvider IODispatcher ioDispatcher SpooledStreamReadingDispatcher spoolProcessingResponseDispatcher ISingletonTimeoutScheduler timeoutScheduler Properties Logger Declaration public ILogger Logger { get; } Property Value Type ILogger Methods CreateStateHandler(ISingletonTimeoutScheduler, ILogger, String, String) Declaration public static IProjectionStateHandler CreateStateHandler(ISingletonTimeoutScheduler singletonTimeoutScheduler, ILogger logger, string handlerType, string query) Parameters Type Name ISingletonTimeoutScheduler singletonTimeoutScheduler ILogger logger System.String handlerType System.String query Returns Type Description IProjectionStateHandler Handle(CoreProjectionProcessingMessage.CheckpointCompleted) Declaration public void Handle(CoreProjectionProcessingMessage.CheckpointCompleted message) Parameters Type Name CoreProjectionProcessingMessage.CheckpointCompleted message Handle(CoreProjectionProcessingMessage.CheckpointLoaded) Declaration public void Handle(CoreProjectionProcessingMessage.CheckpointLoaded message) Parameters Type Name CoreProjectionProcessingMessage.CheckpointLoaded message Handle(CoreProjectionProcessingMessage.Failed) Declaration public void Handle(CoreProjectionProcessingMessage.Failed message) Parameters Type Name CoreProjectionProcessingMessage.Failed message Handle(CoreProjectionProcessingMessage.PrerecordedEventsLoaded) Declaration public void Handle(CoreProjectionProcessingMessage.PrerecordedEventsLoaded message) Parameters Type Name CoreProjectionProcessingMessage.PrerecordedEventsLoaded message Handle(CoreProjectionProcessingMessage.RestartRequested) Declaration public void Handle(CoreProjectionProcessingMessage.RestartRequested message) Parameters Type Name CoreProjectionProcessingMessage.RestartRequested message Handle(CoreProjectionManagementMessage.CreateAndPrepare) Declaration public void Handle(CoreProjectionManagementMessage.CreateAndPrepare message) Parameters Type Name CoreProjectionManagementMessage.CreateAndPrepare message Handle(CoreProjectionManagementMessage.CreateAndPrepareSlave) Declaration public void Handle(CoreProjectionManagementMessage.CreateAndPrepareSlave message) Parameters Type Name CoreProjectionManagementMessage.CreateAndPrepareSlave message Handle(CoreProjectionManagementMessage.CreatePrepared) Declaration public void Handle(CoreProjectionManagementMessage.CreatePrepared message) Parameters Type Name CoreProjectionManagementMessage.CreatePrepared message Handle(CoreProjectionManagementMessage.Dispose) Declaration public void Handle(CoreProjectionManagementMessage.Dispose message) Parameters Type Name CoreProjectionManagementMessage.Dispose message Handle(CoreProjectionManagementMessage.GetResult) Declaration public void Handle(CoreProjectionManagementMessage.GetResult message) Parameters Type Name CoreProjectionManagementMessage.GetResult message Handle(CoreProjectionManagementMessage.GetState) Declaration public void Handle(CoreProjectionManagementMessage.GetState message) Parameters Type Name CoreProjectionManagementMessage.GetState message Handle(CoreProjectionManagementMessage.Kill) Declaration public void Handle(CoreProjectionManagementMessage.Kill message) Parameters Type Name CoreProjectionManagementMessage.Kill message Handle(CoreProjectionManagementMessage.LoadStopped) Declaration public void Handle(CoreProjectionManagementMessage.LoadStopped message) Parameters Type Name CoreProjectionManagementMessage.LoadStopped message Handle(CoreProjectionManagementMessage.Start) Declaration public void Handle(CoreProjectionManagementMessage.Start message) Parameters Type Name CoreProjectionManagementMessage.Start message Handle(CoreProjectionManagementMessage.Stop) Declaration public void Handle(CoreProjectionManagementMessage.Stop message) Parameters Type Name CoreProjectionManagementMessage.Stop message Handle(ProjectionCoreServiceMessage.CoreTick) Declaration public void Handle(ProjectionCoreServiceMessage.CoreTick message) Parameters Type Name ProjectionCoreServiceMessage.CoreTick message Handle(ProjectionCoreServiceMessage.StartCore) Declaration public void Handle(ProjectionCoreServiceMessage.StartCore message) Parameters Type Name ProjectionCoreServiceMessage.StartCore message Handle(ProjectionCoreServiceMessage.StopCore) Declaration public void Handle(ProjectionCoreServiceMessage.StopCore message) Parameters Type Name ProjectionCoreServiceMessage.StopCore message Handle(ProjectionManagementMessage.SlaveProjectionsStarted) Declaration public void Handle(ProjectionManagementMessage.SlaveProjectionsStarted message) Parameters Type Name ProjectionManagementMessage.SlaveProjectionsStarted message Implements IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ProjectionCheckpoint.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ProjectionCheckpoint.html",
    "title": "Class ProjectionCheckpoint | Event Store",
    "keywords": "Class ProjectionCheckpoint Inheritance System.Object ProjectionCheckpoint Implements System.IDisposable IEmittedStreamContainer IProjectionCheckpointManager IHandle < CoreProjectionProcessingMessage.ReadyForCheckpoint > IHandle < CoreProjectionProcessingMessage.RestartRequested > IHandle < CoreProjectionProcessingMessage.Failed > IHandle < CoreProjectionProcessingMessage.EmittedStreamAwaiting > IHandle < CoreProjectionProcessingMessage.EmittedStreamWriteCompleted > IEventWriter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class ProjectionCheckpoint : IDisposable, IEmittedStreamContainer, IProjectionCheckpointManager, IHandle<CoreProjectionProcessingMessage.ReadyForCheckpoint>, IHandle<CoreProjectionProcessingMessage.RestartRequested>, IHandle<CoreProjectionProcessingMessage.Failed>, IHandle<CoreProjectionProcessingMessage.EmittedStreamAwaiting>, IHandle<CoreProjectionProcessingMessage.EmittedStreamWriteCompleted>, IEventWriter Constructors ProjectionCheckpoint(IPublisher, IODispatcher, ProjectionVersion, IPrincipal, IProjectionCheckpointManager, CheckpointTag, PositionTagger, Int32, Int32, ILogger) Declaration public ProjectionCheckpoint(IPublisher publisher, IODispatcher ioDispatcher, ProjectionVersion projectionVersion, IPrincipal runAs, IProjectionCheckpointManager readyHandler, CheckpointTag from, PositionTagger positionTagger, int maxWriteBatchLength, int maximumAllowedWritesInFlight, ILogger logger = null) Parameters Type Name IPublisher publisher IODispatcher ioDispatcher ProjectionVersion projectionVersion System.Security.Principal.IPrincipal runAs IProjectionCheckpointManager readyHandler CheckpointTag from PositionTagger positionTagger System.Int32 maxWriteBatchLength System.Int32 maximumAllowedWritesInFlight ILogger logger Methods Dispose() Declaration public void Dispose() GetReadsInProgress() Declaration public int GetReadsInProgress() Returns Type Description System.Int32 GetWritePendingEvents() Declaration public int GetWritePendingEvents() Returns Type Description System.Int32 GetWritesInProgress() Declaration public int GetWritesInProgress() Returns Type Description System.Int32 Handle(CoreProjectionProcessingMessage.EmittedStreamAwaiting) Declaration public void Handle(CoreProjectionProcessingMessage.EmittedStreamAwaiting message) Parameters Type Name CoreProjectionProcessingMessage.EmittedStreamAwaiting message Handle(CoreProjectionProcessingMessage.EmittedStreamWriteCompleted) Declaration public void Handle(CoreProjectionProcessingMessage.EmittedStreamWriteCompleted message) Parameters Type Name CoreProjectionProcessingMessage.EmittedStreamWriteCompleted message Handle(CoreProjectionProcessingMessage.Failed) Declaration public void Handle(CoreProjectionProcessingMessage.Failed message) Parameters Type Name CoreProjectionProcessingMessage.Failed message Handle(CoreProjectionProcessingMessage.ReadyForCheckpoint) Declaration public void Handle(CoreProjectionProcessingMessage.ReadyForCheckpoint message) Parameters Type Name CoreProjectionProcessingMessage.ReadyForCheckpoint message Handle(CoreProjectionProcessingMessage.RestartRequested) Declaration public void Handle(CoreProjectionProcessingMessage.RestartRequested message) Parameters Type Name CoreProjectionProcessingMessage.RestartRequested message Prepare(CheckpointTag) Declaration public void Prepare(CheckpointTag position) Parameters Type Name CheckpointTag position Start() Declaration public void Start() ValidateOrderAndEmitEvents(EmittedEventEnvelope[]) Declaration public void ValidateOrderAndEmitEvents(EmittedEventEnvelope[] events) Parameters Type Name EmittedEventEnvelope [] events Implements System.IDisposable IEmittedStreamContainer IProjectionCheckpointManager IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IEventWriter Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.DataStructures.PairingHeap-1.html": {
    "href": "dotnet-api/code/EventStore.Core.DataStructures.PairingHeap-1.html",
    "title": "Class PairingHeap<T> | Event Store",
    "keywords": "Class PairingHeap<T> Inheritance System.Object PairingHeap<T> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.DataStructures Assembly : EventStore.Core.dll Syntax public class PairingHeap<T> Type Parameters Name Description T Constructors PairingHeap() Declaration public PairingHeap() PairingHeap(IComparer<T>) Declaration public PairingHeap(IComparer<T> comparer) Parameters Type Name System.Collections.Generic.IComparer <T> comparer PairingHeap(IEnumerable<T>) Declaration public PairingHeap(IEnumerable<T> items) Parameters Type Name System.Collections.Generic.IEnumerable <T> items PairingHeap(IEnumerable<T>, IComparer<T>) Declaration public PairingHeap(IEnumerable<T> items, IComparer<T> comparer) Parameters Type Name System.Collections.Generic.IEnumerable <T> items System.Collections.Generic.IComparer <T> comparer PairingHeap(IEnumerable<T>, Func<T, T, Boolean>) Declaration public PairingHeap(IEnumerable<T> items, Func<T, T, bool> compare) Parameters Type Name System.Collections.Generic.IEnumerable <T> items System.Func <T, T, System.Boolean > compare PairingHeap(Func<T, T, Boolean>) Declaration public PairingHeap(Func<T, T, bool> compare) Parameters Type Name System.Func <T, T, System.Boolean > compare Properties Count Declaration public int Count { get; } Property Value Type System.Int32 Methods Add(T) Declaration public void Add(T x) Parameters Type Name T x DeleteMin() Declaration public T DeleteMin() Returns Type Description T FindMin() Declaration public T FindMin() Returns Type Description T Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Data.VNodeInfo.html": {
    "href": "dotnet-api/code/EventStore.Core.Data.VNodeInfo.html",
    "title": "Class VNodeInfo | Event Store",
    "keywords": "Class VNodeInfo Inheritance System.Object VNodeInfo Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Data Assembly : EventStore.Core.dll Syntax public class VNodeInfo Constructors VNodeInfo(Guid, Int32, IPEndPoint, IPEndPoint, IPEndPoint, IPEndPoint, IPEndPoint, IPEndPoint) Declaration public VNodeInfo(Guid instanceId, int debugIndex, IPEndPoint internalTcp, IPEndPoint internalSecureTcp, IPEndPoint externalTcp, IPEndPoint externalSecureTcp, IPEndPoint internalHttp, IPEndPoint externalHttp) Parameters Type Name System.Guid instanceId System.Int32 debugIndex System.Net.IPEndPoint internalTcp System.Net.IPEndPoint internalSecureTcp System.Net.IPEndPoint externalTcp System.Net.IPEndPoint externalSecureTcp System.Net.IPEndPoint internalHttp System.Net.IPEndPoint externalHttp Fields DebugIndex Declaration public readonly int DebugIndex Field Value Type System.Int32 ExternalHttp Declaration public readonly IPEndPoint ExternalHttp Field Value Type System.Net.IPEndPoint ExternalSecureTcp Declaration public readonly IPEndPoint ExternalSecureTcp Field Value Type System.Net.IPEndPoint ExternalTcp Declaration public readonly IPEndPoint ExternalTcp Field Value Type System.Net.IPEndPoint InstanceId Declaration public readonly Guid InstanceId Field Value Type System.Guid InternalHttp Declaration public readonly IPEndPoint InternalHttp Field Value Type System.Net.IPEndPoint InternalSecureTcp Declaration public readonly IPEndPoint InternalSecureTcp Field Value Type System.Net.IPEndPoint InternalTcp Declaration public readonly IPEndPoint InternalTcp Field Value Type System.Net.IPEndPoint Methods Is(IPEndPoint) Declaration public bool Is(IPEndPoint endPoint) Parameters Type Name System.Net.IPEndPoint endPoint Returns Type Description System.Boolean ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Data.UserData.html": {
    "href": "dotnet-api/code/EventStore.Core.Data.UserData.html",
    "title": "Class UserData | Event Store",
    "keywords": "Class UserData Inheritance System.Object UserData Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Data Assembly : EventStore.Core.dll Syntax public class UserData Constructors UserData(String, String, String[], String, String, Boolean) Declaration public UserData(string loginName, string fullName, string[] groups, string hash, string salt, bool disabled) Parameters Type Name System.String loginName System.String fullName System.String [] groups System.String hash System.String salt System.Boolean disabled Fields Disabled Declaration public readonly bool Disabled Field Value Type System.Boolean FullName Declaration public readonly string FullName Field Value Type System.String Groups Declaration public readonly string[] Groups Field Value Type System.String [] Hash Declaration public readonly string Hash Field Value Type System.String LoginName Declaration public readonly string LoginName Field Value Type System.String Salt Declaration public readonly string Salt Field Value Type System.String Methods SetDisabled() Declaration public UserData SetDisabled() Returns Type Description UserData SetEnabled() Declaration public UserData SetEnabled() Returns Type Description UserData SetFullName(String) Declaration public UserData SetFullName(string fullName) Parameters Type Name System.String fullName Returns Type Description UserData SetGroups(String[]) Declaration public UserData SetGroups(string[] groups) Parameters Type Name System.String [] groups Returns Type Description UserData SetPassword(String, String) Declaration public UserData SetPassword(string hash, string salt) Parameters Type Name System.String hash System.String salt Returns Type Description UserData Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Data.TFPos.html": {
    "href": "dotnet-api/code/EventStore.Core.Data.TFPos.html",
    "title": "Struct TFPos | Event Store",
    "keywords": "Struct TFPos Implements System.IEquatable < TFPos > System.IComparable < TFPos > Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Data Assembly : EventStore.Core.dll Syntax public struct TFPos : IEquatable<TFPos>, IComparable<TFPos> Constructors TFPos(Int64, Int64) Declaration public TFPos(long commitPosition, long preparePosition) Parameters Type Name System.Int64 commitPosition System.Int64 preparePosition Fields CommitPosition Declaration public readonly long CommitPosition Field Value Type System.Int64 HeadOfTf Declaration public static readonly TFPos HeadOfTf Field Value Type TFPos Invalid Declaration public static readonly TFPos Invalid Field Value Type TFPos PreparePosition Declaration public readonly long PreparePosition Field Value Type System.Int64 Methods AsString() Declaration [Pure] public string AsString() Returns Type Description System.String CompareTo(TFPos) Declaration public int CompareTo(TFPos other) Parameters Type Name TFPos other Returns Type Description System.Int32 Equals(TFPos) Declaration public bool Equals(TFPos other) Parameters Type Name TFPos other Returns Type Description System.Boolean Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() TryParse(String, out TFPos) Declaration public static bool TryParse(string s, out TFPos pos) Parameters Type Name System.String s TFPos pos Returns Type Description System.Boolean Operators Equality(TFPos, TFPos) Declaration public static bool operator ==(TFPos left, TFPos right) Parameters Type Name TFPos left TFPos right Returns Type Description System.Boolean GreaterThan(TFPos, TFPos) Declaration public static bool operator>(TFPos left, TFPos right) Parameters Type Name TFPos left TFPos right Returns Type Description System.Boolean GreaterThanOrEqual(TFPos, TFPos) Declaration public static bool operator >=(TFPos left, TFPos right) Parameters Type Name TFPos left TFPos right Returns Type Description System.Boolean Inequality(TFPos, TFPos) Declaration public static bool operator !=(TFPos left, TFPos right) Parameters Type Name TFPos left TFPos right Returns Type Description System.Boolean LessThan(TFPos, TFPos) Declaration public static bool operator <(TFPos left, TFPos right) Parameters Type Name TFPos left TFPos right Returns Type Description System.Boolean LessThanOrEqual(TFPos, TFPos) Declaration public static bool operator <=(TFPos left, TFPos right) Parameters Type Name TFPos left TFPos right Returns Type Description System.Boolean Implements System.IEquatable<T> System.IComparable<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) EnumExtensions.EnumValueName<T>(T) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Data.SystemSettings.html": {
    "href": "dotnet-api/code/EventStore.Core.Data.SystemSettings.html",
    "title": "Class SystemSettings | Event Store",
    "keywords": "Class SystemSettings Inheritance System.Object SystemSettings Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Data Assembly : EventStore.Core.dll Syntax public class SystemSettings Constructors SystemSettings(StreamAcl, StreamAcl) Declaration public SystemSettings(StreamAcl userStreamAcl, StreamAcl systemStreamAcl) Parameters Type Name StreamAcl userStreamAcl StreamAcl systemStreamAcl Fields Default Declaration public static readonly SystemSettings Default Field Value Type SystemSettings SystemStreamAcl Declaration public readonly StreamAcl SystemStreamAcl Field Value Type StreamAcl UserStreamAcl Declaration public readonly StreamAcl UserStreamAcl Field Value Type StreamAcl Methods FromJsonBytes(Byte[]) Declaration public static SystemSettings FromJsonBytes(byte[] json) Parameters Type Name System.Byte [] json Returns Type Description SystemSettings ToJsonBytes() Declaration public byte[] ToJsonBytes() Returns Type Description System.Byte [] ToJsonString() Declaration public string ToJsonString() Returns Type Description System.String ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Data.Epoch.html": {
    "href": "dotnet-api/code/EventStore.Core.Data.Epoch.html",
    "title": "Class Epoch | Event Store",
    "keywords": "Class Epoch Inheritance System.Object Epoch Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Data Assembly : EventStore.Core.dll Syntax public class Epoch Constructors Epoch(Int64, Int32, Guid) Declaration public Epoch(long epochPosition, int epochNumber, Guid epochId) Parameters Type Name System.Int64 epochPosition System.Int32 epochNumber System.Guid epochId Fields EpochId Declaration public readonly Guid EpochId Field Value Type System.Guid EpochNumber Declaration public readonly int EpochNumber Field Value Type System.Int32 EpochPosition Declaration public readonly long EpochPosition Field Value Type System.Int64 Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) EpochRecordExtensions.AsString(Epoch) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Data.CommitEventRecord.html": {
    "href": "dotnet-api/code/EventStore.Core.Data.CommitEventRecord.html",
    "title": "Struct CommitEventRecord | Event Store",
    "keywords": "Struct CommitEventRecord Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Data Assembly : EventStore.Core.dll Syntax public struct CommitEventRecord Constructors CommitEventRecord(EventRecord, Int64) Declaration public CommitEventRecord(EventRecord event, long commitPosition) Parameters Type Name EventRecord event System.Int64 commitPosition Fields CommitPosition Declaration public readonly long CommitPosition Field Value Type System.Int64 Event Declaration public readonly EventRecord Event Field Value Type EventRecord Methods ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) EnumExtensions.EnumValueName<T>(T) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.ClusterVNode.html": {
    "href": "dotnet-api/code/EventStore.Core.ClusterVNode.html",
    "title": "Class ClusterVNode | Event Store",
    "keywords": "Class ClusterVNode Inheritance System.Object ClusterVNode Implements IHandle < SystemMessage.StateChangeMessage > IHandle < SystemMessage.BecomeShutdown > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core Assembly : EventStore.Core.dll Syntax public class ClusterVNode : IHandle<SystemMessage.StateChangeMessage>, IHandle<SystemMessage.BecomeShutdown> Constructors ClusterVNode(TFChunkDb, ClusterVNodeSettings, IGossipSeedSource, InfoController, ISubsystem[]) Declaration public ClusterVNode(TFChunkDb db, ClusterVNodeSettings vNodeSettings, IGossipSeedSource gossipSeedSource, InfoController infoController, params ISubsystem[] subsystems) Parameters Type Name TFChunkDb db ClusterVNodeSettings vNodeSettings IGossipSeedSource gossipSeedSource InfoController infoController ISubsystem [] subsystems Properties ExternalHttpService Declaration public HttpService ExternalHttpService { get; } Property Value Type HttpService InternalAuthenticationProvider Declaration public IAuthenticationProvider InternalAuthenticationProvider { get; } Property Value Type IAuthenticationProvider InternalHttpService Declaration public HttpService InternalHttpService { get; } Property Value Type HttpService MainBus Declaration public ISubscriber MainBus { get; } Property Value Type ISubscriber MainQueue Declaration public IQueuedHandler MainQueue { get; } Property Value Type IQueuedHandler NetworkSendService Declaration public IPublisher NetworkSendService { get; } Property Value Type IPublisher Tasks Declaration public IEnumerable<Task> Tasks { get; } Property Value Type System.Collections.Generic.IEnumerable < System.Threading.Tasks.Task > TimerService Declaration public TimerService TimerService { get; } Property Value Type TimerService Methods AddTask(Task) Declaration public void AddTask(Task task) Parameters Type Name System.Threading.Tasks.Task task AddTasks(IEnumerable<Task>) Declaration public void AddTasks(IEnumerable<Task> tasks) Parameters Type Name System.Collections.Generic.IEnumerable < System.Threading.Tasks.Task > tasks Handle(SystemMessage.BecomeShutdown) Declaration public void Handle(SystemMessage.BecomeShutdown message) Parameters Type Name SystemMessage.BecomeShutdown message Handle(SystemMessage.StateChangeMessage) Declaration public void Handle(SystemMessage.StateChangeMessage message) Parameters Type Name SystemMessage.StateChangeMessage message OnNodeStatusChanged(VNodeStatusChangeArgs) Declaration protected virtual void OnNodeStatusChanged(VNodeStatusChangeArgs e) Parameters Type Name VNodeStatusChangeArgs e Start() Declaration public void Start() StartAndWaitUntilReady() Declaration public Task<ClusterVNode> StartAndWaitUntilReady() Returns Type Description System.Threading.Tasks.Task < ClusterVNode > Stop() Declaration public bool Stop() Returns Type Description System.Boolean Stop(TimeSpan, Boolean, Boolean) Declaration public bool Stop(TimeSpan timeout, bool exitProcess, bool shutdownHttp) Parameters Type Name System.TimeSpan timeout System.Boolean exitProcess System.Boolean shutdownHttp Returns Type Description System.Boolean StopNonblocking(Boolean, Boolean) Declaration public void StopNonblocking(bool exitProcess, bool shutdownHttp) Parameters Type Name System.Boolean exitProcess System.Boolean shutdownHttp ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Events NodeStatusChanged Declaration public event EventHandler<VNodeStatusChangeArgs> NodeStatusChanged Event Type Type System.EventHandler < VNodeStatusChangeArgs > Implements IHandle<T> IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.ClusterNodeMutex.html": {
    "href": "dotnet-api/code/EventStore.Core.ClusterNodeMutex.html",
    "title": "Class ClusterNodeMutex | Event Store",
    "keywords": "Class ClusterNodeMutex Inheritance System.Object ClusterNodeMutex Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core Assembly : EventStore.Core.dll Syntax public class ClusterNodeMutex Constructors ClusterNodeMutex() Declaration public ClusterNodeMutex() Fields MutexName Declaration public readonly string MutexName Field Value Type System.String Properties IsAcquired Declaration public bool IsAcquired { get; } Property Value Type System.Boolean Methods Acquire() Declaration public bool Acquire() Returns Type Description System.Boolean IsPresent(Int32) Declaration public static bool IsPresent(int pid) Parameters Type Name System.Int32 pid Returns Type Description System.Boolean Release() Declaration public void Release() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Bus.QueuedHandlerSleep.html": {
    "href": "dotnet-api/code/EventStore.Core.Bus.QueuedHandlerSleep.html",
    "title": "Class QueuedHandlerSleep | Event Store",
    "keywords": "Class QueuedHandlerSleep Lightweight in-memory queue with a separate thread in which it passes messages to the consumer. It also tracks statistics about the message processing to help in identifying bottlenecks Inheritance System.Object QueuedHandlerSleep Implements IQueuedHandler IHandle < Message > IPublisher IMonitoredQueue IThreadSafePublisher Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Bus Assembly : EventStore.Core.dll Syntax public class QueuedHandlerSleep : IQueuedHandler, IHandle<Message>, IPublisher, IMonitoredQueue, IThreadSafePublisher Constructors QueuedHandlerSleep(IHandle<Message>, String, Boolean, Nullable<TimeSpan>, Nullable<TimeSpan>, String) Declaration public QueuedHandlerSleep(IHandle<Message> consumer, string name, bool watchSlowMsg = true, TimeSpan? slowMsgThreshold = default(TimeSpan? ), TimeSpan? threadStopWaitTimeout = default(TimeSpan? ), string groupName = null) Parameters Type Name IHandle < Message > consumer System.String name System.Boolean watchSlowMsg System.Nullable < System.TimeSpan > slowMsgThreshold System.Nullable < System.TimeSpan > threadStopWaitTimeout System.String groupName Properties MessageCount Declaration public int MessageCount { get; } Property Value Type System.Int32 Name Declaration public string Name { get; } Property Value Type System.String Methods GetStatistics() Declaration public QueueStats GetStatistics() Returns Type Description QueueStats Handle(Message) Declaration public void Handle(Message message) Parameters Type Name Message message Publish(Message) Declaration public void Publish(Message message) Parameters Type Name Message message RequestStop() Declaration public void RequestStop() Start() Declaration public Task Start() Returns Type Description System.Threading.Tasks.Task Stop() Declaration public void Stop() Implements IQueuedHandler IHandle<T> IPublisher IMonitoredQueue IThreadSafePublisher Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) HandleExtensions.WidenFrom<TInput, TOutput>(IHandle<TOutput>) HandleExtensions.NarrowTo<TInput, TOutput>(IHandle<TOutput>) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Bus.QueuedHandlerPulse.html": {
    "href": "dotnet-api/code/EventStore.Core.Bus.QueuedHandlerPulse.html",
    "title": "Class QueuedHandlerPulse | Event Store",
    "keywords": "Class QueuedHandlerPulse Lightweight in-memory queue with a separate thread in which it passes messages to the consumer. It also tracks statistics about the message processing to help in identifying bottlenecks Inheritance System.Object QueuedHandlerPulse Implements IQueuedHandler IHandle < Message > IPublisher IMonitoredQueue IThreadSafePublisher Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Bus Assembly : EventStore.Core.dll Syntax public class QueuedHandlerPulse : IQueuedHandler, IHandle<Message>, IPublisher, IMonitoredQueue, IThreadSafePublisher Constructors QueuedHandlerPulse(IHandle<Message>, String, Boolean, Nullable<TimeSpan>, Nullable<TimeSpan>, String) Declaration public QueuedHandlerPulse(IHandle<Message> consumer, string name, bool watchSlowMsg = true, TimeSpan? slowMsgThreshold = default(TimeSpan? ), TimeSpan? threadStopWaitTimeout = default(TimeSpan? ), string groupName = null) Parameters Type Name IHandle < Message > consumer System.String name System.Boolean watchSlowMsg System.Nullable < System.TimeSpan > slowMsgThreshold System.Nullable < System.TimeSpan > threadStopWaitTimeout System.String groupName Properties MessageCount Declaration public int MessageCount { get; } Property Value Type System.Int32 Name Declaration public string Name { get; } Property Value Type System.String Methods GetStatistics() Declaration public QueueStats GetStatistics() Returns Type Description QueueStats Handle(Message) Declaration public void Handle(Message message) Parameters Type Name Message message Publish(Message) Declaration public void Publish(Message message) Parameters Type Name Message message RequestStop() Declaration public void RequestStop() Start() Declaration public Task Start() Returns Type Description System.Threading.Tasks.Task Stop() Declaration public void Stop() Implements IQueuedHandler IHandle<T> IPublisher IMonitoredQueue IThreadSafePublisher Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) HandleExtensions.WidenFrom<TInput, TOutput>(IHandle<TOutput>) HandleExtensions.NarrowTo<TInput, TOutput>(IHandle<TOutput>) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Bus.QueuedHandlerMresWithMpsc.html": {
    "href": "dotnet-api/code/EventStore.Core.Bus.QueuedHandlerMresWithMpsc.html",
    "title": "Class QueuedHandlerMresWithMpsc | Event Store",
    "keywords": "Class QueuedHandlerMresWithMpsc Lightweight in-memory queue with a separate thread in which it passes messages to the consumer. It also tracks statistics about the message processing to help in identifying bottlenecks Inheritance System.Object QueuedHandlerMresWithMpsc Implements IQueuedHandler IHandle < Message > IPublisher IMonitoredQueue IThreadSafePublisher Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Bus Assembly : EventStore.Core.dll Syntax public class QueuedHandlerMresWithMpsc : IQueuedHandler, IHandle<Message>, IPublisher, IMonitoredQueue, IThreadSafePublisher Constructors QueuedHandlerMresWithMpsc(IHandle<Message>, String, Boolean, Nullable<TimeSpan>, Nullable<TimeSpan>, String) Declaration public QueuedHandlerMresWithMpsc(IHandle<Message> consumer, string name, bool watchSlowMsg = true, TimeSpan? slowMsgThreshold = default(TimeSpan? ), TimeSpan? threadStopWaitTimeout = default(TimeSpan? ), string groupName = null) Parameters Type Name IHandle < Message > consumer System.String name System.Boolean watchSlowMsg System.Nullable < System.TimeSpan > slowMsgThreshold System.Nullable < System.TimeSpan > threadStopWaitTimeout System.String groupName Properties Name Declaration public string Name { get; } Property Value Type System.String Methods GetStatistics() Declaration public QueueStats GetStatistics() Returns Type Description QueueStats Handle(Message) Declaration public void Handle(Message message) Parameters Type Name Message message Publish(Message) Declaration public void Publish(Message message) Parameters Type Name Message message RequestStop() Declaration public void RequestStop() Start() Declaration public Task Start() Returns Type Description System.Threading.Tasks.Task Stop() Declaration public void Stop() Implements IQueuedHandler IHandle<T> IPublisher IMonitoredQueue IThreadSafePublisher Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) HandleExtensions.WidenFrom<TInput, TOutput>(IHandle<TOutput>) HandleExtensions.NarrowTo<TInput, TOutput>(IHandle<TOutput>) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.DeletePersistentSubscriptionCompleted.DeletePersistentSubscriptionResult.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.DeletePersistentSubscriptionCompleted.DeletePersistentSubscriptionResult.html",
    "title": "Enum TcpClientMessageDto.DeletePersistentSubscriptionCompleted.DeletePersistentSubscriptionResult | Event Store",
    "keywords": "Enum TcpClientMessageDto.DeletePersistentSubscriptionCompleted.DeletePersistentSubscriptionResult Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax [ProtoContract(Name = \"DeletePersistentSubscriptionResult\")] public enum DeletePersistentSubscriptionResult Fields Name Description AccessDenied DoesNotExist Fail Success Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<TcpClientMessageDto.DeletePersistentSubscriptionCompleted.DeletePersistentSubscriptionResult>() ProtobufExtensions.Serialize<TcpClientMessageDto.DeletePersistentSubscriptionCompleted.DeletePersistentSubscriptionResult>() ProtobufExtensions.SerializeToArray<TcpClientMessageDto.DeletePersistentSubscriptionCompleted.DeletePersistentSubscriptionResult>()"
  },
  "dotnet-api/code/EventStore.Core.Messages.SystemMessage.WaitForChaserToCatchUp.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.SystemMessage.WaitForChaserToCatchUp.html",
    "title": "Class SystemMessage.WaitForChaserToCatchUp | Event Store",
    "keywords": "Class SystemMessage.WaitForChaserToCatchUp Inheritance System.Object Message SystemMessage.WaitForChaserToCatchUp Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class WaitForChaserToCatchUp : Message Constructors WaitForChaserToCatchUp(Guid, TimeSpan) Declaration public WaitForChaserToCatchUp(Guid correlationId, TimeSpan totalTimeWasted) Parameters Type Name System.Guid correlationId System.TimeSpan totalTimeWasted Fields CorrelationId Declaration public readonly Guid CorrelationId Field Value Type System.Guid TotalTimeWasted Declaration public readonly TimeSpan TotalTimeWasted Field Value Type System.TimeSpan Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.SystemMessage.VNodeConnectionLost.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.SystemMessage.VNodeConnectionLost.html",
    "title": "Class SystemMessage.VNodeConnectionLost | Event Store",
    "keywords": "Class SystemMessage.VNodeConnectionLost Inheritance System.Object Message SystemMessage.VNodeConnectionLost Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class VNodeConnectionLost : Message Constructors VNodeConnectionLost(IPEndPoint, Guid) Declaration public VNodeConnectionLost(IPEndPoint vNodeEndPoint, Guid connectionId) Parameters Type Name System.Net.IPEndPoint vNodeEndPoint System.Guid connectionId Fields ConnectionId Declaration public readonly Guid ConnectionId Field Value Type System.Guid VNodeEndPoint Declaration public readonly IPEndPoint VNodeEndPoint Field Value Type System.Net.IPEndPoint Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.SystemMessage.VNodeConnectionEstablished.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.SystemMessage.VNodeConnectionEstablished.html",
    "title": "Class SystemMessage.VNodeConnectionEstablished | Event Store",
    "keywords": "Class SystemMessage.VNodeConnectionEstablished Inheritance System.Object Message SystemMessage.VNodeConnectionEstablished Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class VNodeConnectionEstablished : Message Constructors VNodeConnectionEstablished(IPEndPoint, Guid) Declaration public VNodeConnectionEstablished(IPEndPoint vNodeEndPoint, Guid connectionId) Parameters Type Name System.Net.IPEndPoint vNodeEndPoint System.Guid connectionId Fields ConnectionId Declaration public readonly Guid ConnectionId Field Value Type System.Guid VNodeEndPoint Declaration public readonly IPEndPoint VNodeEndPoint Field Value Type System.Net.IPEndPoint Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Rags.UnexpectedArgException.html": {
    "href": "dotnet-api/code/EventStore.Rags.UnexpectedArgException.html",
    "title": "Class UnexpectedArgException | Event Store",
    "keywords": "Class UnexpectedArgException An exception that should be thrown when an unexpected named|positional argument is found. Inheritance System.Object System.Exception ArgException UnexpectedArgException Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Rags Assembly : EventStore.Rags.dll Syntax public class UnexpectedArgException : ArgException, _Exception, ISerializable Constructors UnexpectedArgException(String) Creates a new UnexpectedArgException given a user friendly message Declaration public UnexpectedArgException(string msg) Parameters Type Name System.String msg UnexpectedArgException(String, Exception) Creates a new UnexpectedArgException given a user friendly message Declaration public UnexpectedArgException(string msg, Exception inner) Parameters Type Name System.String msg System.Exception inner Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Rags.TypeMap.html": {
    "href": "dotnet-api/code/EventStore.Rags.TypeMap.html",
    "title": "Class TypeMap | Event Store",
    "keywords": "Class TypeMap Inheritance System.Object TypeMap Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Rags Assembly : EventStore.Rags.dll Syntax public static class TypeMap Methods Register<T>(Func<String, String, T>) Declaration public static void Register<T>(Func<string, string, T> translator) Parameters Type Name System.Func < System.String , System.String , T> translator Type Parameters Name Description T Translate(Type, String, String) Declaration public static object Translate(Type t, string name, string value) Parameters Type Name System.Type t System.String name System.String value Returns Type Description System.Object"
  },
  "dotnet-api/code/EventStore.Rags.TypeDefaultOptions.html": {
    "href": "dotnet-api/code/EventStore.Rags.TypeDefaultOptions.html",
    "title": "Class TypeDefaultOptions | Event Store",
    "keywords": "Class TypeDefaultOptions Inheritance System.Object TypeDefaultOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Rags Assembly : EventStore.Rags.dll Syntax public static class TypeDefaultOptions Methods Get<TOptions>() Declaration public static IEnumerable<OptionSource> Get<TOptions>() where TOptions : new() Returns Type Description System.Collections.Generic.IEnumerable < OptionSource > Type Parameters Name Description TOptions"
  },
  "dotnet-api/code/EventStore.Rags.Translators.html": {
    "href": "dotnet-api/code/EventStore.Rags.Translators.html",
    "title": "Class Translators | Event Store",
    "keywords": "Class Translators Inheritance System.Object Translators Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Rags Assembly : EventStore.Rags.dll Syntax public class Translators Methods TranlateIPAddress(String, String) Declaration public static IPAddress TranlateIPAddress(string prop, string val) Parameters Type Name System.String prop System.String val Returns Type Description System.Net.IPAddress TranslateBool(String, String) Declaration public static bool TranslateBool(string prop, string val) Parameters Type Name System.String prop System.String val Returns Type Description System.Boolean TranslateByte(String, String) Declaration public static byte TranslateByte(string prop, string val) Parameters Type Name System.String prop System.String val Returns Type Description System.Byte TranslateDateTime(String, String) Declaration public static DateTime TranslateDateTime(string prop, string val) Parameters Type Name System.String prop System.String val Returns Type Description System.DateTime TranslateDouble(String, String) Declaration public static double TranslateDouble(string prop, string val) Parameters Type Name System.String prop System.String val Returns Type Description System.Double TranslateGuid(String, String) Declaration public static Guid TranslateGuid(string prop, string val) Parameters Type Name System.String prop System.String val Returns Type Description System.Guid TranslateInt(String, String) Declaration public static int TranslateInt(string prop, string val) Parameters Type Name System.String prop System.String val Returns Type Description System.Int32 TranslateIPEndPoint(String, String) Declaration public static IPEndPoint TranslateIPEndPoint(string prop, string val) Parameters Type Name System.String prop System.String val Returns Type Description System.Net.IPEndPoint TranslateLong(String, String) Declaration public static long TranslateLong(string prop, string val) Parameters Type Name System.String prop System.String val Returns Type Description System.Int64 TranslateUri(String, String) Declaration public static Uri TranslateUri(string prop, string val) Parameters Type Name System.String prop System.String val Returns Type Description System.Uri Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Rags.QueryInvalidArgException.html": {
    "href": "dotnet-api/code/EventStore.Rags.QueryInvalidArgException.html",
    "title": "Class QueryInvalidArgException | Event Store",
    "keywords": "Class QueryInvalidArgException An exception that should be thrown when the query can not be compiled. Inheritance System.Object System.Exception ArgException QueryInvalidArgException Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Rags Assembly : EventStore.Rags.dll Syntax public class QueryInvalidArgException : ArgException, _Exception, ISerializable Constructors QueryInvalidArgException(String) Creates a new QueryInvalidArgException given a user friendly message Declaration public QueryInvalidArgException(string msg) Parameters Type Name System.String msg QueryInvalidArgException(String, Exception) Creates a new QueryInvalidArgException given a user friendly message Declaration public QueryInvalidArgException(string msg, Exception inner) Parameters Type Name System.String msg System.Exception inner Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Rags.OptionSource.html": {
    "href": "dotnet-api/code/EventStore.Rags.OptionSource.html",
    "title": "Struct OptionSource | Event Store",
    "keywords": "Struct OptionSource Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Rags Assembly : EventStore.Rags.dll Syntax public struct OptionSource Constructors OptionSource(String, String, Boolean, Object, Boolean) Declaration public OptionSource(string source, string name, bool isTyped, object value, bool isReference = false) Parameters Type Name System.String source System.String name System.Boolean isTyped System.Object value System.Boolean isReference Fields IsReference Declaration public bool IsReference Field Value Type System.Boolean IsTyped Declaration public bool IsTyped Field Value Type System.Boolean Name Declaration public string Name Field Value Type System.String Source Declaration public string Source Field Value Type System.String Value Declaration public object Value Field Value Type System.Object Methods String(String, String, Object, Boolean) Declaration public static OptionSource String(string source, string name, object value, bool isReference = false) Parameters Type Name System.String source System.String name System.Object value System.Boolean isReference Returns Type Description OptionSource Typed(String, String, Object, Boolean) Declaration public static OptionSource Typed(string source, string name, object value, bool isReference = false) Parameters Type Name System.String source System.String name System.Object value System.Boolean isReference Returns Type Description OptionSource Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) EnumExtensions.EnumValueName<T>(T) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Rags.OptionException.html": {
    "href": "dotnet-api/code/EventStore.Rags.OptionException.html",
    "title": "Class OptionException | Event Store",
    "keywords": "Class OptionException Inheritance System.Object System.Exception OptionException Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Rags Assembly : EventStore.Rags.dll Syntax public class OptionException : Exception, _Exception, ISerializable Constructors OptionException() Declaration public OptionException() OptionException(String, String) Declaration public OptionException(string message, string optionName) Parameters Type Name System.String message System.String optionName OptionException(String, String, Exception) Declaration public OptionException(string message, string optionName, Exception innerException) Parameters Type Name System.String message System.String optionName System.Exception innerException Properties OptionName Declaration public string OptionName { get; } Property Value Type System.String Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Rags.OptionApplicator.html": {
    "href": "dotnet-api/code/EventStore.Rags.OptionApplicator.html",
    "title": "Class OptionApplicator | Event Store",
    "keywords": "Class OptionApplicator Inheritance System.Object OptionApplicator Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Rags Assembly : EventStore.Rags.dll Syntax public class OptionApplicator Methods Get<T>(IEnumerable<OptionSource>) Declaration public static T Get<T>(IEnumerable<OptionSource> source) where T : class, new() Parameters Type Name System.Collections.Generic.IEnumerable < OptionSource > source Returns Type Description T Type Parameters Name Description T Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Rags.NameTranslators.html": {
    "href": "dotnet-api/code/EventStore.Rags.NameTranslators.html",
    "title": "Class NameTranslators | Event Store",
    "keywords": "Class NameTranslators Inheritance System.Object NameTranslators Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Rags Assembly : EventStore.Rags.dll Syntax public static class NameTranslators Methods CombineByPascalCase(String, String) Declaration public static string CombineByPascalCase(string name, string token) Parameters Type Name System.String name System.String token Returns Type Description System.String None(String) Declaration public static string None(string name) Parameters Type Name System.String name Returns Type Description System.String PrefixEnvironmentVariable(String, String) Declaration public static string PrefixEnvironmentVariable(string name, string prefix) Parameters Type Name System.String name System.String prefix Returns Type Description System.String"
  },
  "dotnet-api/code/EventStore.Rags.MissingArgException.html": {
    "href": "dotnet-api/code/EventStore.Rags.MissingArgException.html",
    "title": "Class MissingArgException | Event Store",
    "keywords": "Class MissingArgException An exception that should be thrown when a required argument is missing. Inheritance System.Object System.Exception ArgException MissingArgException Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Rags Assembly : EventStore.Rags.dll Syntax public class MissingArgException : ArgException, _Exception, ISerializable Constructors MissingArgException(String) Creates a new MissingArgException given a user friendly message Declaration public MissingArgException(string msg) Parameters Type Name System.String msg MissingArgException(String, Exception) Creates a new MissingArgException given a user friendly message Declaration public MissingArgException(string msg, Exception inner) Parameters Type Name System.String msg System.Exception inner Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Rags.MemberInfoEx.html": {
    "href": "dotnet-api/code/EventStore.Rags.MemberInfoEx.html",
    "title": "Class MemberInfoEx | Event Store",
    "keywords": "Class MemberInfoEx Provides some reflection helpers in the form of extension methods for the MemberInfo type. Inheritance System.Object MemberInfoEx Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Rags Assembly : EventStore.Rags.dll Syntax public static class MemberInfoEx Methods Attr<T>(MemberInfo) Gets the attribute of the given type or null if the member does not have this attribute defined. The standard reflection helper GetCustomAttributes will give you a new instance of the attribute every time you call it. This helper caches it's results so if you ask for the same attibute twice you will actually get back the same attribute. Note that the cache key is based off of the type T that you provide. So asking for Attr() where T : BaseType> and then asking for Attr() where T : ConcreteType will result in two different objects being returned. If you ask for Attr() where T : BaseType and then Attr() where T :BaseType the caching will work and you'll get the same object back the second time. Declaration public static T Attr<T>(this MemberInfo info) Parameters Type Name System.Reflection.MemberInfo info Returns Type Description T The desired attribute or null if it is not present Type Parameters Name Description T The type of attribute to search for Attrs<T>(MemberInfo) Gets the attributes of the given type. The standard reflection helper GetCustomAttributes will give you new instances of the attributes every time you call it. This helper caches it's results so if you ask for the same attibutes twice you will actually get back the same attributes. Note that the cache key is based off of the type T that you provide. So asking for Attrs() where T : BaseType and then asking for Attrs() where T : ConcreteType will result in two different sets of objects being returned. If you ask for Attrs() where T : BaseType and then Attrs() where T : BaseType the caching will work and you'll get the same results back the second time. Declaration public static List<T> Attrs<T>(this MemberInfo info) Parameters Type Name System.Reflection.MemberInfo info Returns Type Description System.Collections.Generic.List <T> The list of attributes that you asked for Type Parameters Name Description T The type of attribute to search for HasAttr<T>(MemberInfo) Returns true if the given member has an attribute of the given type (including inherited types). Declaration public static bool HasAttr<T>(this MemberInfo info) Parameters Type Name System.Reflection.MemberInfo info Returns Type Description System.Boolean true if a matching attribute was found, false otherwise Type Parameters Name Description T The type of attribute to test for (will return true for attributes that inherit from this type)"
  },
  "dotnet-api/code/EventStore.Rags.InvalidArgDefinitionException.html": {
    "href": "dotnet-api/code/EventStore.Rags.InvalidArgDefinitionException.html",
    "title": "Class InvalidArgDefinitionException | Event Store",
    "keywords": "Class InvalidArgDefinitionException An exception that should be thrown when the error condition is caused by an improperly formed argument scaffold type. For example if the user specified the same shortcut value for more than one property. Inheritance System.Object System.Exception InvalidArgDefinitionException Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Rags Assembly : EventStore.Rags.dll Syntax public class InvalidArgDefinitionException : Exception, _Exception, ISerializable Constructors InvalidArgDefinitionException(String) Creates a new InvalidArgDefinitionException given a message. Declaration public InvalidArgDefinitionException(string msg) Parameters Type Name System.String msg InvalidArgDefinitionException(String, Exception) Creates a new InvalidArgDefinitionException given a message. Declaration public InvalidArgDefinitionException(string msg, Exception inner) Parameters Type Name System.String msg System.Exception inner Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "http-api/swagger/Subscriptions/Replay previously parked messages.html": {
    "href": "http-api/swagger/Subscriptions/Replay previously parked messages.html",
    "title": "Replay previously parked messages | Event Store",
    "keywords": "Replay previously parked messages Replay any previously parked messages in a stream that were parked by a negative acknowledgement action. Request POST /subscriptions/{stream}/{subscription}/replayParked Parameters Name Type Value Notes *stream string The stream the persistent subscription is on *subscription string The name of the subscription group application/vnd.eventstore.competingatom+json application/vnd.eventstore.competingatom+json Responses Status Code Description Samples one two 200 OK"
  },
  "http-api/swagger/Projections/Get all projections.html": {
    "href": "http-api/swagger/Projections/Get all projections.html",
    "title": "Get all projections | Event Store",
    "keywords": "Get all projections Returns all projections defined in Event Store. Request GET /projections/any application/json application/json Responses Status Code Description Samples one two 200 OK one two 404 Not found"
  },
  "http-api/swagger/Projections/Get all non-transient projections.html": {
    "href": "http-api/swagger/Projections/Get all non-transient projections.html",
    "title": "Get all non-transient projections | Event Store",
    "keywords": "Get all non-transient projections Returns all known projections except ad-hoc projections. Request GET /projections/all-non-transient application/json application/json Responses Status Code Description Samples one two 200 OK one two 404 Not found"
  },
  "http-api/swagger/Projections/Get all queries.html": {
    "href": "http-api/swagger/Projections/Get all queries.html",
    "title": "Get all queries | Event Store",
    "keywords": "Get all queries Returns all queries defined in Event Store. Request GET /projections/onetime application/json application/json Responses Status Code Description Samples one two 200 OK one two 404 Not found"
  },
  "http-api/swagger/Projections/Create a onetime projection.html": {
    "href": "http-api/swagger/Projections/Create a onetime projection.html",
    "title": "Create a onetime projection | Event Store",
    "keywords": "Create a onetime projection Create a new onetime projection. Request POST /projections/onetime[?name&type&enabled&checkpoints&emit&trackemittedstreams] Parameters Name Type Value Notes name string Name of the projection type string The projection type enabled boolean Is the projection enabled checkpoints boolean Are checkpoints enabled emit boolean Is emit enabled trackemittedstreams boolean Should your projection create a separate stream and write any streams it emits to that stream. application/json application/json Responses Status Code Description Samples one two 201 New projection created one two 400 Bad request"
  },
  "http-api/swagger/Projections/Get all continious projections.html": {
    "href": "http-api/swagger/Projections/Get all continious projections.html",
    "title": "Get all continious projections | Event Store",
    "keywords": "Get all continious projections Returns all continually running projections defined in Event Store. Request GET /projections/continuous application/json application/json Responses Status Code Description Samples one two 200 OK one two 404 Not found"
  },
  "http-api/swagger/Projections/Create a continious projection.html": {
    "href": "http-api/swagger/Projections/Create a continious projection.html",
    "title": "Create a continious projection | Event Store",
    "keywords": "Create a continious projection Create a new continious projection. Request POST /projections/continuous[?name&enabled&checkpoints&emit&type&trackemittedstreams] Parameters Name Type Value Notes name string Name of the projection enabled boolean Is the projection enabled checkpoints boolean Are checkpoints enabled emit boolean Is emit enabled type string The projection type trackemittedstreams boolean Should your projection create a separate stream and write any streams it emits to that stream. application/json application/json Responses Status Code Description Samples one two 201 New projection created one two 400 Bad request"
  },
  "http-api/swagger/Projections/Read projection events based on a query.html": {
    "href": "http-api/swagger/Projections/Read projection events based on a query.html",
    "title": "Read projection events based on a query | Event Store",
    "keywords": "Read projection events based on a query Read events from projection based on a query definition, i.e. fromAll, fromStream, fromStreams Request POST /projections/read-events application/json application/json Responses Status Code Description Samples one two 200 OK one two 404 Not found"
  },
  "http-api/swagger/Projections/Get all transient projections.html": {
    "href": "http-api/swagger/Projections/Get all transient projections.html",
    "title": "Get all transient projections | Event Store",
    "keywords": "Get all transient projections Returns all transient projections defined in Event Store. Request GET /projections/transient application/json application/json Responses Status Code Description Samples one two 200 OK one two 404 Not found"
  },
  "http-api/swagger/Projections/Create a transient projection.html": {
    "href": "http-api/swagger/Projections/Create a transient projection.html",
    "title": "Create a transient projection | Event Store",
    "keywords": "Create a transient projection Create a new transient projection. Request POST /projections/transient[?name&type&enabled] Parameters Name Type Value Notes name string Name of the projection type string The projection type enabled boolean Is the projection enabled application/json application/json Responses Status Code Description Samples one two 201 New user created one two 400 Bad request"
  },
  "http-api/swagger/Projections/Get projection definition.html": {
    "href": "http-api/swagger/Projections/Get projection definition.html",
    "title": "Get projection definition | Event Store",
    "keywords": "Get projection definition Returns definition of the specified projection. Request GET /projection/{name}/query[?config] Parameters Name Type Value Notes *name string The name of the projection config boolean Wether to return the projection definition config. application/json application/json Responses Status Code Description Samples one two 200 OK one two 404 Not found"
  },
  "http-api/swagger/Projections/Update projection definition.html": {
    "href": "http-api/swagger/Projections/Update projection definition.html",
    "title": "Update projection definition | Event Store",
    "keywords": "Update projection definition Update the specified projection definition. Request PUT /projection/{name}/query[?type&emit] Parameters Name Type Value Notes *name string The name of the projection type string The projection type emit boolean Is emit enabled application/json application/json Responses Status Code Description Samples one two 200 OK one two 404 Not found"
  },
  "http-api/swagger/Projections/Get the projection state.html": {
    "href": "http-api/swagger/Projections/Get the projection state.html",
    "title": "Get the projection state | Event Store",
    "keywords": "Get the projection state Return the current state of the specified projection. Request GET /projection/{name}/state[?partition] Parameters Name Type Value Notes *name string The name of the projection partition string The partition name in state application/json application/json Responses Status Code Description Samples one two 200 OK one two 404 Not found"
  },
  "http-api/swagger/Projections/Get result of projection.html": {
    "href": "http-api/swagger/Projections/Get result of projection.html",
    "title": "Get result of projection | Event Store",
    "keywords": "Get result of projection Get the final result of a projection. Request GET /projection/{name}/result[?partition] Parameters Name Type Value Notes *name string The name of the projection partition string The partition name in state application/json application/json Responses Status Code Description Samples one two 200 OK one two 404 Not found"
  },
  "http-api/swagger/Projections/Get projection statistics.html": {
    "href": "http-api/swagger/Projections/Get projection statistics.html",
    "title": "Get projection statistics | Event Store",
    "keywords": "Get projection statistics Returns the statistics for a projection, such as how many events, the status etc. Request GET /projection/{name}/statistics Parameters Name Type Value Notes *name string The name of the projection application/json application/json Responses Status Code Description Samples one two 200 OK one two 404 Not found"
  },
  "http-api/swagger/Projections/Disable projection.html": {
    "href": "http-api/swagger/Projections/Disable projection.html",
    "title": "Disable projection | Event Store",
    "keywords": "Disable projection Disable the specified projection. Request POST /projection/{name}/command/disable[?enableRunAs] Parameters Name Type Value Notes *name string The name of the projection enableRunAs boolean Run as the user issuing the command. application/json application/json Responses Status Code Description Samples one two 200 OK one two 404 Not found"
  },
  "http-api/swagger/Projections/Enable projection.html": {
    "href": "http-api/swagger/Projections/Enable projection.html",
    "title": "Enable projection | Event Store",
    "keywords": "Enable projection Enable the specified projection. Request POST /projection/{name}/command/enable[?enableRunAs] Parameters Name Type Value Notes *name string The name of the projection enableRunAs boolean Run as the user issuing the command. application/json application/json Responses Status Code Description Samples one two 200 OK one two 404 Not found"
  },
  "http-api/swagger/Projections/Reset projection.html": {
    "href": "http-api/swagger/Projections/Reset projection.html",
    "title": "Reset projection | Event Store",
    "keywords": "Reset projection Reset the specified projection. Request POST /projection/{name}/command/reset[?enableRunAs] Parameters Name Type Value Notes *name string The name of the projection enableRunAs boolean Run as the user issuing the command. application/json application/json Responses Status Code Description Samples one two 200 OK one two 404 Not found"
  },
  "http-api/swagger/Projections/Abort projection.html": {
    "href": "http-api/swagger/Projections/Abort projection.html",
    "title": "Abort projection | Event Store",
    "keywords": "Abort projection Abort the specified projection. Request POST /projection/{name}/command/abort[?enableRunAs] Parameters Name Type Value Notes *name string The name of the projection enableRunAs boolean Run as the user issuing the command. application/json application/json Responses Status Code Description Samples one two 200 OK one two 404 Not found"
  },
  "http-api/swagger/Projections/Get projection config.html": {
    "href": "http-api/swagger/Projections/Get projection config.html",
    "title": "Get projection config | Event Store",
    "keywords": "Get projection config Returns the performance configuration of the specified projection. Request GET /projection/{name}/config Parameters Name Type Value Notes *name string The name of the projection application/json application/json Responses Status Code Description Samples one two 200 OK one two 404 Not found"
  },
  "http-api/swagger/Projections/Update projection config.html": {
    "href": "http-api/swagger/Projections/Update projection config.html",
    "title": "Update projection config | Event Store",
    "keywords": "Update projection config Update the performance configuration of the specified projection. Request PUT /projection/{name}/config Parameters Name Type Value Notes *name string The name of the projection application/json application/json Responses Status Code Description Samples one two 200 OK one two 404 Not found"
  },
  "http-api/swagger/Projections/Get a projection.html": {
    "href": "http-api/swagger/Projections/Get a projection.html",
    "title": "Get a projection | Event Store",
    "keywords": "Get a projection Returns a specific projection. Request GET /projection/{name} Parameters Name Type Value Notes *name string The name of the projection application/json application/json Responses Status Code Description Samples one two 200 OK one two 404 Not found"
  },
  "http-api/swagger/Projections/Delete a projection.html": {
    "href": "http-api/swagger/Projections/Delete a projection.html",
    "title": "Delete a projection | Event Store",
    "keywords": "Delete a projection Deletes a projection Request DELETE /projection/{name}[?deleteStateStream&deleteCheckpointStream&deleteEmittedStreams] Parameters Name Type Value Notes *name string The projection to delete deleteStateStream boolean TBD deleteCheckpointStream boolean TBD deleteEmittedStreams boolean TBD application/xml application/xml Responses Status Code Description Samples one two 204 Projection deleted"
  },
  "http-api/swagger/Admin/Shutdown a node.html": {
    "href": "http-api/swagger/Admin/Shutdown a node.html",
    "title": "Shutdown a node | Event Store",
    "keywords": "Shutdown a node Issues a shut down command to a node. Request POST /admin/shutdown application/json Responses Status Code Description Samples one two 200 OK"
  },
  "http-api/swagger/Admin/Scavenge a node.html": {
    "href": "http-api/swagger/Admin/Scavenge a node.html",
    "title": "Scavenge a node | Event Store",
    "keywords": "Scavenge a node Scavenge reclaims disk space by rewriting database chunks, minus the events to delete, and then deleting the old chunks. Request POST /admin/scavenge[?startFromChunk&threads] Parameters Name Type Value Notes startFromChunk integer The chunk ID to start the scavenge operation from. threads integer 1 The number of threads to run the scavenge operation on (max 4). application/json Responses Status Code Description Samples one two 200 OK one two 401 Unauthorized"
  },
  "http-api/swagger/Admin/Stop a scavenge.html": {
    "href": "http-api/swagger/Admin/Stop a scavenge.html",
    "title": "Stop a scavenge | Event Store",
    "keywords": "Stop a scavenge Stop a running scavenge operation. Request DELETE /admin/scavenge/{scavengeId} Parameters Name Type Value Notes *scavengeId integer The scavenge ID application/json Responses Status Code Description Samples one two 200 OK one two 401 Unauthorized"
  },
  "http-api/swagger/Admin/Merge Indexes.html": {
    "href": "http-api/swagger/Admin/Merge Indexes.html",
    "title": "Merge Indexes | Event Store",
    "keywords": "Merge Indexes Manually merge indexes after a scavenge operation Request DELETE /admin/mergeindexes application/json Responses Status Code Description Samples one two 200 OK one two 401 Unauthorized"
  },
  "http-api/swagger/Info/Get info for node.html": {
    "href": "http-api/swagger/Info/Get info for node.html",
    "title": "Get info for node | Event Store",
    "keywords": "Get info for node Returns information about node. Request GET /info application/json Responses Status Code Description Samples one two 200 OK one two 401 Unauthorized"
  },
  "http-api/swagger/Info/Get configuration for node.html": {
    "href": "http-api/swagger/Info/Get configuration for node.html",
    "title": "Get configuration for node | Event Store",
    "keywords": "Get configuration for node Returns configuration details about node. Request GET /info/options application/json Responses Status Code Description Samples one two 200 OK one two 401 Unauthorized"
  },
  "http-api/swagger/Users/Get all users.html": {
    "href": "http-api/swagger/Users/Get all users.html",
    "title": "Get all users | Event Store",
    "keywords": "Get all users Returns all users defined in Event Store. Request GET /users/ application/json application/json Responses Status Code Description Samples one two 200 OK one two 404 Not found"
  },
  "http-api/swagger/Users/Create a user.html": {
    "href": "http-api/swagger/Users/Create a user.html",
    "title": "Create a user | Event Store",
    "keywords": "Create a user Create a new user. Request POST /users/ Parameters Name Type Value Notes userItem User to create application/json application/json Responses Status Code Description Samples one two 201 New user created one two 400 Bad request one two 401 Unauthorized"
  },
  "http-api/swagger/Users/Get a user.html": {
    "href": "http-api/swagger/Users/Get a user.html",
    "title": "Get a user | Event Store",
    "keywords": "Get a user Returns the user currently authenticated with the API, or the user specified. Request GET /users/{login} Parameters Name Type Value Notes *login string The user passed to the API call. application/json application/json Responses Status Code Description Samples one two 200 OK one two 404 Not found"
  },
  "http-api/swagger/Users/Update a user.html": {
    "href": "http-api/swagger/Users/Update a user.html",
    "title": "Update a user | Event Store",
    "keywords": "Update a user Update the FullName of Groups of the specified user. Request PUT /users/{login} Parameters Name Type Value Notes *login string The user's name userUpdateItem User to update application/json application/json Responses Status Code Description Samples one two 200 OK one two 404 Not found"
  },
  "http-api/swagger/Users/Delete a user.html": {
    "href": "http-api/swagger/Users/Delete a user.html",
    "title": "Delete a user | Event Store",
    "keywords": "Delete a user Delete specified user. Request DELETE /users/{login} Parameters Name Type Value Notes *login string The user's name application/xml application/xml Responses Status Code Description Samples one two 204 User deleted"
  },
  "http-api/swagger/Users/Enable a user.html": {
    "href": "http-api/swagger/Users/Enable a user.html",
    "title": "Enable a user | Event Store",
    "keywords": "Enable a user Enable the acount of the specified user. Request PUT /users/{login}/command/enable Parameters Name Type Value Notes *login string The user's name application/json application/json Responses Status Code Description Samples one two 200 OK one two 404 Not found"
  },
  "http-api/swagger/Users/Disable a user.html": {
    "href": "http-api/swagger/Users/Disable a user.html",
    "title": "Disable a user | Event Store",
    "keywords": "Disable a user Disable the acount of the specified user. Request PUT /users/{login}/command/disable Parameters Name Type Value Notes *login string The user's name application/json application/json Responses Status Code Description Samples one two 200 OK one two 404 Not found"
  },
  "http-api/swagger/Users/Reset password.html": {
    "href": "http-api/swagger/Users/Reset password.html",
    "title": "Reset password | Event Store",
    "keywords": "Reset password Reset the password of the specified user. Request POST /users/{login}/command/reset-password Parameters Name Type Value Notes *login string The user's name *newPassword The new password for the user application/json application/json Responses Status Code Description Samples one two 200 OK one two 400 Bad request"
  },
  "http-api/swagger/Users/Change password.html": {
    "href": "http-api/swagger/Users/Change password.html",
    "title": "Change password | Event Store",
    "keywords": "Change password Change the password of the specified user. Request POST /users/{login}/command/change-password Parameters Name Type Value Notes *login string The user's name *newPassword The new password for the user application/json application/json Responses Status Code Description Samples one two 200 OK one two 400 Bad request"
  },
  "http-api/swagger/Stats/Get all stats.html": {
    "href": "http-api/swagger/Stats/Get all stats.html",
    "title": "Get all stats | Event Store",
    "keywords": "Get all stats Returns all stats enabled for Event Store. Request GET /stats application/json application/json Responses Status Code Description Samples one two 200 OK one two 404 Not found"
  },
  "http-api/swagger/Stats/Get specified stat.html": {
    "href": "http-api/swagger/Stats/Get specified stat.html",
    "title": "Get specified stat | Event Store",
    "keywords": "Get specified stat Returns the sub path of the Event Store statistics available. Request GET /stats/{statPath} Parameters Name Type Value Notes *statPath string The stats sub path application/json application/json Responses Status Code Description Samples one two 200 OK one two 404 Not found"
  },
  "server/caching/index.html": {
    "href": "server/caching/index.html",
    "title": "Caching | Event Store",
    "keywords": "Caching As there are large differences between running Event Store in development and production, it's important to understand how caching works. Most of the URIs that Event Store emits are immutable (including the UI and Atom Feeds). An Atom feed has a URI that represents an event, e.g., /streams/foo/0 , representing 'event 0'. The data for event 0 never changes. If this stream is open to public reads then the URI is set to be 'cachable' for long periods of time. You can see a similar example in reading a feed. If a stream has 50 events in it, the feed page 20/forward/10 never changes, it will always be events 20-30. Internally Event Store controls serving the right URIs by using rel links with feeds (for example prev / next ). This caching behaviour is great for performance in a production environment and we recommended you use it, but in a developer environment it can become confusing. For example, what happens if you started a database, wrote /streams/foo/0 and performed a GET request? The GET request is cachable and now in your cache. Since this is a development environment, you shutdown Event Store and delete the database. You then restart Event Store and write a different event to /streams/foo/0 . You open your browser and inspect the /streams/foo/0 stream, and you see the event written before you deleted the database. To avoid this during development it's best to run Event Store with the --disable-http-caching command line option. This disables all caching and solve the issue."
  },
  "reference/reliability/index.html": {
    "href": "reference/reliability/index.html",
    "title": "Reliability | Event Store",
    "keywords": "Reliability You should look at reliability from a holistic perspective. Event Store treats data transactionally with full durability assurances, but this doesn't help you if the hardware on your machine does not support it. Many consumer grade disks (and SSDs especially) lie about durability to appear faster. This is fine until you have a power outage and lose information. These issues do not just affect Event Store. Other vendors and projects have created tests to check whether you may be losing data. We recommend running one of these such tests against your production environment. You can check the state of your drives on Linux by using the following command: sudo hdparm -I {drive} For example, check /dev/sda to see if caching is enabled on your drive. Be wary though, just because caching is disabled does not mean that all writes are fully durable. If you are running Linux you might want to consider adding the following to /etc/hdparm.conf : /dev/yourdrive { write_cache = off } If you are running the clustered version of Event Store you may wish to allow these unlikely events to happen. The drives run faster with caching enabled and it's unlikely that you would lose three machines at the same time with corruption. If this were to happen you can truncate your data and re-replicate from the other nodes."
  },
  "reference/internal-architectural-overview/index.html": {
    "href": "reference/internal-architectural-overview/index.html",
    "title": "Internal Architectural Overview | Event Store",
    "keywords": "Internal Architectural Overview <!-- TODO: Overview image or intro? --> Messaging The architecture style of Event Store is SEDA (Staged Event Driven Architecture) . Messages flow forward through queues internally, including the Transaction File which is also a queue. There are communication endpoints that flow forward through series of queues to be processed. All operations are purely asynchronous. The core processing runs on a single thread reading requests off of a single concurrent queue. Messages first flow through a state machine that represents the state of the node. In a distributed scenario a node is not always allowed to write (slaves forward writes, not write themselves), or if the node is still initializing its not allowed to read. Each request is handled by a state machine that manages the lifecycle of that request including time outs and acknowledgements throughout the cluster. Because of this architecture, the main monitoring points of Event Store is the status of the queues. You can view the status in the health area of the admin interface or through the HTTP API. It's also periodically written to a special $statistics-node:port stream. <!-- TODO: Which endpoint --> <!-- TODO: IMAGE(s)--> The most common queue to be slow is the storage writer as it writes to storage in a durable fashion. It uses fsync and flushfile buffers to ensure that data is persisted to disk and survives, say a power outage on the machine. The storage writer is capable of writing more than 15,000 transactions to disk per second on the open source single node version. Transaction File Event Store provides durable storage including handling cases where the power may be turned off to a machine through the use of a commit log. The commit log is a conceptual constantly appending file (though it is not implemented this way <!-- TODO: This is confusing, link to more details? --> ). Every write to Event Store appends to this file. The commit log is built not as one large file but as a series of small files implemented with an abstraction called a 'TFChunk'. For all files it writes, Event Store always writes sequentially, except for checkpoints, although there is a non-performing sequential version of checkpoints. This results in seeks not being necessary for writes. While less of a problem with SSDs, this can drastically help with performance of spindle drives. It also allows for the possibility to store data for Event Store (both indexes and the transaction file) on write once media. Entire TFChunks are cached by loading the entire chunk into unmanaged memory. Most of the memory usage by Event Store is unmanaged. It's rare to see it use more than a few hundred megabytes in managed heaps. Even in these scenarios most of the memory is in the large object heap (LOH) and point to native types such as byte[] to put a minimum load possible on the garbage collector. Scavenging The chunks in the transaction file are periodically scavenged to remove deleted or old data, and depending on stream rules such as $maxCount in the stream metadata, can be compacted. This process generates new chunks and switches them out atomically, deleting them once they are no longer in use by readers. This gives the benefit that, once completed, TFChunks are immutable. This includes the current chunk. Since it's only written to sequentially it never seeks back to overwrite something. Every record in the log has an ID. The ID is the logical position at which the record was originally written to disk. This is useful as an identifier, as in a scenario where you are not deleting you know exactly where the record is stored. When you begin scavenging this location can move. As part of the process of scavenging a TFChunk, a map is written of remappings from the original IDs. This is crucial because index points back to these IDs. This map allows the index and the TFChunks to be scavenged independently. If, during the scavenge process, the overhead of the map outweighs the benefit of the scavenge the scavenge is not performed. Chunks that are completed also have an MD5 checksum to validate the data inside of them since disks do occasionally go bad or mangle data. This checksum is checked periodically to validate that the data is not corrupted. Index Event Store only has one index. You should use projections for building application level indexes. The index is immutable. Queries executed against Event Store are always to get an event represented as a sequence number inside of a stream. The index is optimized for this purpose. Each record in the index is 16 bytes: 4 bytes for the hash of the stream ID. 4 bytes for the sequence number. 8 bytes for the original position the record had in the log. This identifier of a record is useful as you can avoid additional lookups when writing the record to disk, this can change due to scavenging of the transaction file. As transactions are written to the transaction file, where an in-memory index is appended. A query hits the in memory index. The in-memory index is implemented as a hash of sorted lists with a fine grained lock on the stream. When there are enough items in the in-memory index, the index is flushed to disk (known as a 'PTable' or 'Persistent Table'). A PTable is a sorted group of index entries (remember that they are only 16 bytes each). A binary search across the PTables is used to search. The search function has been memoized by storing midpoints in memory. Mid point caching reduces the number of seeks from log(n) by the depth to which midpoints are filled and often all are in memory. Index Rebuilds You can copy indexes from machine to machine providing the data structure is the same. This guide explains how the index rebuild process works when you add new nodes to a cluster, or backup and restore an index. TFiles make up a transaction log, but conceptually they are one continuous file. Event Store breaks them up into many files instead of one big file for operational reasons such as incremental back ups. This mechanism also tends to play better with the filesystem. Rebuilding an index requires starting from position 0 in this large continuous file and then moving forward indexing every item one at a time. Rebuilds on a New Node When Event Store starts on a blank machine there are no persistent indexes, there is only a memtable (in memory index). There is a limit to how many items the memory index can store (1 million). When an index hits this number, the index is then moved to a disk based format known as a PTable. Event Store stores what the position was in the TFile for what the PTable represents. In a single index file example it may be 0,12345678 meaning the index covers all transactions between position 0 and 12345678s . When Event Store loads the index, it calculates the position that the persistent index covers, in this example, 12345678 . After loading the index, Event Store then knows that the index covers all events before positions 12345678 , and does not need to take them into account. Event Store then rebuilds the memory index from position 12345678 up to the current, which you can see in log output when Event Store starts. PTables get merged into larger PTables over time. During this operation they are scavenged for items to be removed. The merging of N PTables to 1 larger PTable is a linear operation as they are all sorted. Once written to disk, PTables are immutable and have like TFchunks MD5 checksums. Unlike a failure in a TFChunk checksum, if a problem is found within the index it's simply rebuilt. Backup and Restore When it comes to restoring Event Store from a backup, Event Store loads the persistent indexes, and finds out the highest logical position covered in the index. Event Store then creates a memtable from that point forward, this process is asynchronous and does not hold up start up."
  },
  "http-api/optional-http-headers/requires-master/index.html": {
    "href": "http-api/optional-http-headers/requires-master/index.html",
    "title": "Optional HTTP Headers: Requires Master | Event Store",
    "keywords": "Optional HTTP Headers: Requires Master When running in a clustered environment there are times when you only want an operation to happen on the current leader node. A client can fetch information in an eventually consistent fashion by communicating with the servers. The TCP client included with the multi-node version does this. Over HTTP the RequiresMaster header tells the node that it is not allowed to serve a read or forward a write request. If the node is the leader everything works as normal, if it isn't it responds with a 307 temporary redirect to the leader. Run the below on the master: Request Response curl -i \"http://127.0.0.1:32004/streams/newstream\" -H \"ES-RequireMaster: True\" HTTP/1.1 200 OK Cache-Control: max-age=0, no-cache, must-revalidate Content-Length: 1296 Content-Type: application/vnd.eventstore.atom+json; charset: utf-8 ETag: \"0;-2060438500\" Vary: Accept Server: Microsoft-HTTPAPI/2.0 Access-Control-Allow-Methods: POST, DELETE, GET, OPTIONS Access-Control-Allow-Headers: Content-Type, X-Requested-With, X-PINGOTHER Access-Control-Allow-Origin: * Date: Thu, 27 Jun 2013 14:48:37 GMT { \"title\": \"Event stream 'stream'\", \"id\": \"http://127.0.0.1:32004/streams/stream\", \"updated\": \"2013-06-27T14:48:15.2596358Z\", \"streamId\": \"stream\", \"author\": { \"name\": \"EventStore\" }, \"links\": [ { \"uri\": \"http://127.0.0.1:32004/streams/stream\", \"relation\": \"self\" }, { \"uri\": \"http://127.0.0.1:32004/streams/stream/head/backward/20\", \"relation\": \"first\" }, { \"uri\": \"http://127.0.0.1:32004/streams/stream/0/forward/20\", \"relation\": \"last\" }, { \"uri\": \"http://127.0.0.1:32004/streams/stream/1/forward/20\", \"relation\": \"previous\" }, { \"uri\": \"http://127.0.0.1:32004/streams/stream/metadata\", \"relation\": \"metadata\" } ], \"entries\": [ { \"title\": \"0@stream\", \"id\": \"http://127.0.0.1:32004/streams/stream/0\", \"updated\": \"2013-06-27T14:48:15.2596358Z\", \"author\": { \"name\": \"EventStore\" }, \"summary\": \"TakeSomeSpaceEvent\", \"links\": [ { \"uri\": \"http://127.0.0.1:32004/streams/stream/0\", \"relation\": \"edit\" }, { \"uri\": \"http://127.0.0.1:32004/streams/stream/0\", \"relation\": \"alternate\" } ] } ] } Run the following on any other node: Request Response curl -i \"http://127.0.0.1:31004/streams/newstream\" -H \"ES-RequireMaster: True\" HTTP/1.1 307 Temporary Redirect Content-Length: 0 Content-Type: text/plain; charset: utf-8 Location: http://127.0.0.1:32004/streams/stream Server: Microsoft-HTTPAPI/2.0 Access-Control-Allow-Methods: POST, DELETE, GET, OPTIONS Access-Control-Allow-Headers: Content-Type, X-Requested-With, X-PINGOTHER Access-Control-Allow-Origin: * Date: Thu, 27 Jun 2013 14:48:28 GMT"
  },
  "http-api/optional-http-headers/longpoll/index.html": {
    "href": "http-api/optional-http-headers/longpoll/index.html",
    "title": "Optional HTTP Headers: LongPoll | Event Store",
    "keywords": "Optional HTTP Headers: LongPoll You use the ES-LongPoll header to tell Event Store that when on the head link of a stream and no data is available to wait a period of time to see if data becomes available. You can use this to give lower latency for Atom clients instead of client initiated polling. Instead of the client polling every 5 seconds to get data from the feed the client sends a request with ES-LongPoll: 15 . This instructs Event Store to wait for up to 15 seconds before returning with no result. The latency is therefore lowered from the poll interval to about 10ms from the time an event is written until the time the HTTP connection is notified. You can see the use of the ES-LongPoll header in the following cURL command. First go to the head of the stream. Request Response curl -i http://127.0.0.1:2113/streams/newstream -H \"Accept: application/json\" HTTP/1.1 200 OK Access-Control-Allow-Methods: POST, DELETE, GET, OPTIONS Access-Control-Allow-Headers: Content-Type, X-Requested-With, X-Forwarded-Host, X-Forwarded-Prefix, X-PINGOTHER, Authorization, ES-LongPoll, ES-ExpectedVersion, ES-EventId, ES-EventType, ES-RequiresMaster, ES-HardDelete, ES-ResolveLinkTos Access-Control-Allow-Origin: * Access-Control-Expose-Headers: Location, ES-Position, ES-CurrentVersion Cache-Control: max-age=0, no-cache, must-revalidate Vary: Accept ETag: \"1;1391431453\" Content-Type: application/json; charset=utf-8 Server: Mono-HTTPAPI/1.0 Date: Mon, 27 Aug 2018 09:37:21 GMT Content-Length: 1749 Keep-Alive: timeout=15,max=100 { \"title\": \"Event stream 'newstream'\", \"id\": \"http://127.0.0.1:2113/streams/newstream\", \"updated\": \"2018-08-27T09:21:39.668888Z\", \"streamId\": \"newstream\", \"author\": { \"name\": \"EventStore\" }, \"headOfStream\": true, \"selfUrl\": \"http://127.0.0.1:2113/streams/newstream\", \"eTag\": \"1;-2060438500\", \"links\": [ { \"uri\": \"http://127.0.0.1:2113/streams/newstream\", \"relation\": \"self\" }, { \"uri\": \"http://127.0.0.1:2113/streams/newstream/head/backward/20\", \"relation\": \"first\" }, { \"uri\": \"http://127.0.0.1:2113/streams/newstream/2/forward/20\", \"relation\": \"previous\" }, { \"uri\": \"http://127.0.0.1:2113/streams/newstream/metadata\", \"relation\": \"metadata\" } ], \"entries\": [ \"entries\": [ ] } Then fetch the previous rel link http://127.0.0.1:2113/streams/newstream/2/forward/20 and try it. It returns an empty feed. Request Response curl -i http://127.0.0.1:2113/streams/newstream/2/forward/20 -H \"Accept: application/json\" HTTP/1.1 200 OK Access-Control-Allow-Methods: GET, OPTIONS Access-Control-Allow-Headers: Content-Type, X-Requested-With, X-Forwarded-Host, X-Forwarded-Prefix, X-PINGOTHER, Authorization, ES-LongPoll, ES-ExpectedVersion, ES-EventId, ES-EventType, ES-RequiresMaster, ES-HardDelete, ES-ResolveLinkTos Access-Control-Allow-Origin: * Access-Control-Expose-Headers: Location, ES-Position, ES-CurrentVersion Cache-Control: max-age=0, no-cache, must-revalidate Vary: Accept ETag: \"1;1391431453\" Content-Type: application/json; charset=utf-8 Server: Mono-HTTPAPI/1.0 Date: Mon, 27 Aug 2018 09:53:14 GMT Content-Length: 786 Keep-Alive: timeout=15,max=100 { \"title\": \"Event stream 'newstream'\", \"id\": \"http://127.0.0.1:2113/streams/newstream\", \"updated\": \"0001-01-01T00:00:00Z\", \"streamId\": \"newstream\", \"author\": { \"name\": \"EventStore\" }, \"headOfStream\": true, \"links\": [ { \"uri\": \"http://127.0.0.1:2113/streams/newstream\", \"relation\": \"self\" }, { \"uri\": \"http://127.0.0.1:2113/streams/newstream/head/backward/20\", \"relation\": \"first\" }, { \"uri\": \"http://127.0.0.1:2113/streams/newstream/0/forward/20\", \"relation\": \"last\" }, { \"uri\": \"http://127.0.0.1:2113/streams/newstream/1/backward/20\", \"relation\": \"next\" }, { \"uri\": \"http://127.0.0.1:2113/streams/newstream/metadata\", \"relation\": \"metadata\" } ], \"entries\": [] } The entries section is empty (there is no further data to provide). Now try the same URI with a long poll header. Request curl -i http://127.0.0.1:2113/streams/newstream/2/forward/20 -H \"Accept: application/json\" -H \"ES-LongPoll: 10\" If you do not insert any events into the stream while this is running it takes 10 seconds for the HTTP request to finish. If you append an event to the stream while its running you see the result for that request when you append the event."
  },
  "http-api/optional-http-headers/index.html": {
    "href": "http-api/optional-http-headers/index.html",
    "title": "Optional HTTP Headers | Event Store",
    "keywords": "Optional HTTP Headers <!-- TODO: Can Swagger replace this? And sub files --> Event Store supports custom HTTP headers for requests. The headers were previously in the form X-ES-ExpectedVersion but were changed to ES-ExpectedVersion in compliance with RFC-6648 . The headers supported are: Header Description ES-ExpectedVersion The expected version of the stream (allows optimistic concurrency) ES-ResolveLinkTo Whether to resolve linkTos in stream ES-RequiresMaster Whether this operation needs to run on the master node ES-TrustedAuth Allows a trusted intermediary to handle authentication ES-LongPoll Instructs the server to do a long poll operation on a stream read ES-HardDelete Instructs the server to hard delete the stream when deleting as opposed to the default soft delete ES-EventType Instructs the server the event type associated to a posted body ES-EventId Instructs the server the event id associated to a posted body"
  },
  "http-api/optional-http-headers/harddelete/index.html": {
    "href": "http-api/optional-http-headers/harddelete/index.html",
    "title": "Optional HTTP Headers: HardDelete | Event Store",
    "keywords": "Optional HTTP Headers: HardDelete The ES-HardDelete header controls deleting a stream. By default Event Store soft deletes a stream allowing you to later reuse that stream. If you set the ES-HardDelete header Event Store permanently deletes the stream. Request Response curl -X DELETE http://127.0.0.1:2113/streams/newstream -H \"ES-HardDelete:true\" HTTP/1.1 204 Stream deleted Content-Length: 0 Content-Type: text/plain; charset=utf-8 Server: Microsoft-HTTPAPI/2.0 Access-Control-Allow-Methods: POST, DELETE, GET, OPTIONS Access-Control-Allow-Headers: Content-Type, X-Requested-With, X-PINGOTHER, Authorization Access-Control-Allow-Origin: * Access-Control-Expose-Headers: Location Date: Thu, 13 Mar 2014 20:56:55 GMT This changes the general behaviour from returning a '404' and recreatable to the stream now return a 410 Deleted response."
  },
  "http-api/stream-metadata/index.html": {
    "href": "http-api/stream-metadata/index.html",
    "title": "Stream Metadata | Event Store",
    "keywords": "Stream Metadata By default streams you create in Event Store have no metadata associated with them. Internally, the metadata includes information such as the ACL of the stream, the maximum count and age for the events in the stream. Client code can also add information into stream metadata for use with projections or the client API. Stream metadata is stored internally as JSON, and you can access it over the HTTP API. Reading Stream Metadata To read the metadata, issue a GET request to the attached metadata resource, which is typically of the form: http://{eventstore-ip-address}/streams/{stream-name}/metadata You should not access metadata by constructing this URL yourself, as the right to change the resource address is reserved. Instead, you should follow the link from the stream itself, which enables your client to tolerate future changes to the addressing structure. Request Response curl -i -H \"Accept:application/vnd.eventstore.atom+json\" http://127.0.0.1:2113/streams/%24users --user admin:changeit HTTP/1.1 200 OK Access-Control-Allow-Methods: POST, DELETE, GET, OPTIONS Access-Control-Allow-Headers: Content-Type, X-Requested-With, X-Forwarded-Host, X-Forwarded-Prefix, X-PINGOTHER, Authorization, ES-LongPoll, ES-ExpectedVersion, ES-EventId, ES-EventType, ES-RequiresMaster, ES-HardDelete, ES-ResolveLinkTos Access-Control-Allow-Origin: * Access-Control-Expose-Headers: Location, ES-Position, ES-CurrentVersion Cache-Control: max-age=0, no-cache, must-revalidate Vary: Accept ETag: \"3;-2060438500\" Content-Type: application/vnd.eventstore.atom+json; charset=utf-8 Server: Mono-HTTPAPI/1.0 Date: Thu, 23 Aug 2018 10:03:34 GMT Content-Length: 2670 Keep-Alive: timeout=15,max=100 { \"title\": \"Event stream '$users'\", \"id\": \"http://127.0.0.1:2113/streams/%24users\", \"updated\": \"2018-08-23T09:19:37.880827Z\", \"streamId\": \"$users\", \"author\": { \"name\": \"EventStore\" }, \"headOfStream\": true, \"selfUrl\": \"http://127.0.0.1:2113/streams/%24users\", \"eTag\": \"3;-2060438500\", \"links\": [ { \"uri\": \"http://127.0.0.1:2113/streams/%24users\", \"relation\": \"self\" }, { \"uri\": \"http://127.0.0.1:2113/streams/%24users/head/backward/20\", \"relation\": \"first\" }, { \"uri\": \"http://127.0.0.1:2113/streams/%24users/4/forward/20\", \"relation\": \"previous\" }, { \"uri\": \"http://127.0.0.1:2113/streams/%24users/metadata\", \"relation\": \"metadata\" } ], \"entries\": [ ] } Once you have the URI of the metadata stream, issue a GET request to retrieve the metadata: Request curl -i -H \"Accept:application/vnd.eventstore.atom+json\" http://127.0.0.1:2113/streams/%24users/metadata --user admin:changeit If you have security enabled, reading metadata may require that you pass credentials, as in the examples above. If credentials are required and you do not pass them, then you receive a '401 Unauthorized' response. Request Response curl -i -H \"Accept:application/vnd.eventstore.atom+json\" http://127.0.0.1:2113/streams/%24users HTTP/1.1 401 Unauthorized Access-Control-Allow-Methods: GET, POST, GET, OPTIONS Access-Control-Allow-Headers: Content-Type, X-Requested-With, X-Forwarded-Host, X-Forwarded-Prefix, X-PINGOTHER, Authorization, ES-LongPoll, ES-ExpectedVersion, ES-EventId, ES-EventType, ES-RequiresMaster, ES-HardDelete, ES-ResolveLinkTos Access-Control-Allow-Origin: * Access-Control-Expose-Headers: Location, ES-Position, ES-CurrentVersion WWW-Authenticate: Basic realm=\"ES\" Content-Type: text/plain; charset=utf-8 Server: Mono-HTTPAPI/1.0 Date: Thu, 23 Aug 2018 10:26:52 GMT Content-Length: 0 Keep-Alive: timeout=15,max=100 Writing Metadata To update the metadata for a stream, issue a POST request to the metadata resource. Inside a file named metadata.json : [ { \"eventId\": \"7c314750-05e1-439f-b2eb-f5b0e019be72\", \"eventType\": \"$user-updated\", \"data\": { \"readRole\": \"$all\", \"metaReadRole\": \"$all\" } } ] You can also add user-specified metadata here. Some examples user-specified metadata are: Which adapter populates a stream. Which projection created a stream. A correlation ID to a business process. You then post this information is then posted to the stream: Request Response curl -i -d @metadata.json http://127.0.0.1:2113/streams/%24users/metadata --user admin:changeit -H \"Content-Type: application/vnd.eventstore.events+json\" HTTP/1.1 201 Created Access-Control-Allow-Methods: GET, POST, GET, OPTIONS Access-Control-Allow-Headers: Content-Type, X-Requested-With, X-Forwarded-Host, X-Forwarded-Prefix, X-PINGOTHER, Authorization, ES-LongPoll, ES-ExpectedVersion, ES-EventId, ES-EventType, ES-RequiresMaster, ES-HardDelete, ES-ResolveLinkTos Access-Control-Allow-Origin: * Access-Control-Expose-Headers: Location, ES-Position, ES-CurrentVersion Location: http://127.0.0.1:2113/streams/%24%24%24users/0 Content-Type: text/plain; charset=utf-8 Server: Mono-HTTPAPI/1.0 Date: Thu, 23 Aug 2018 10:35:19 GMT Content-Length: 0 Keep-Alive: timeout=15,max=100 If the specified user does not have permissions to write to the stream metadata, you receive a '401 Unauthorized' response."
  },
  "http-api/security/index.html": {
    "href": "http-api/security/index.html",
    "title": "Security | Event Store",
    "keywords": "Security Event Store supports basic authentication for HTTP API calls, and access control lists (ACL). Authentication Creating users Event Store supports basic HTTP authentication to internal users. You create these users with the RESTful API or the admin console. You need to use the credentials of the default user in the request, which has the user name of admin , and the password of changeit . Request Response curl -i -d \"@new-user.json\" \"http://127.0.0.1:2113/users\" -H \"Content-Type:application/json\" HTTP/1.1 201 Created Access-Control-Allow-Methods: GET, POST, OPTIONS Access-Control-Allow-Headers: Content-Type, X-Requested-With, X-Forwarded-Host, X-Forwarded-Prefix, X-PINGOTHER, Authorization, ES-LongPoll, ES-ExpectedVersion, ES-EventId, ES-EventType, ES-RequiresMaster, ES-HardDelete, ES-ResolveLinkTos Access-Control-Allow-Origin: * Access-Control-Expose-Headers: Location, ES-Position, ES-CurrentVersion Location: http://127.0.0.1:2113/users/adminuser Content-Type: application/json; charset=utf-8 Server: Mono-HTTPAPI/1.0 Date: Thu, 23 Aug 2018 09:08:40 GMT Content-Length: 90 Keep-Alive: timeout=15,max=100 { \"loginName\": \"adminuser\", \"success\": true, \"error\": \"Success\", \"msgTypeId\": 50 }% Once you have added users, you can use their details with requests. Note You can also use the 'trusted intermediary' header for externalized authentication that allows you to integrate almost any authentication system with Event Store. Read more about the trusted intermediary header . If you were to use the wrong user or no user when a request requires one, you receive a 401 Unauthorized response. Request Response curl -i 'http://127.0.0.1:2113/streams/$all' -u admin:password HTTP/1.1 401 Unauthorized Access-Control-Allow-Methods: Access-Control-Allow-Headers: Content-Type, X-Requested-With, X-Forwarded-Host, X-Forwarded-Prefix, X-PINGOTHER, Authorization, ES-LongPoll, ES-ExpectedVersion, ES-EventId, ES-EventType, ES-RequiresMaster, ES-HardDelete, ES-ResolveLinkTos Access-Control-Allow-Origin: * Access-Control-Expose-Headers: Location, ES-Position, ES-CurrentVersion WWW-Authenticate: Basic realm=\"ES\" Content-Type: Server: Mono-HTTPAPI/1.0 Date: Thu, 23 Aug 2018 09:27:34 GMT Content-Length: 0 Keep-Alive: timeout=15,max=100 As you pass the username and password in the request we recommend you run Event Store over HTTP, and enable SSL to encrypt the user information. Read this guide for instructions . If you are running the clustered version you can also setup SSL for the replication protocol. <!-- TODO: Does this need further explanation? Any more details anywhere? --> Access Control Lists Alongside authentication, Event Store supports per stream configuration of Access Control Lists (ACL). To configure the ACL of a stream go to its head and look for the metadata relationship link to fetch the metadata for the stream. To set access control lists over HTTP you can post to the metadata stream as with setting any other metadata . You can also set Access Control Lists for a stream in the admin UI. For more information on the structure of Access Control Lists read Access Control Lists . <!-- TODO: Merge ACL here? -->"
  },
  "http-api/reading-streams/index.html": {
    "href": "http-api/reading-streams/index.html",
    "title": "Reading Streams and Events | Event Store",
    "keywords": "Reading Streams and Events Reading a stream Event Store exposes streams as a resource located at http(s)://{yourdomain.com}:{port}/streams/{stream} . If you issue a simple GET request to this resource, you receive a standard AtomFeed document as a response. Request Response curl -i -H \"Accept:application/vnd.eventstore.atom+json\" \"http://127.0.0.1:2113/streams/newstream\" HTTP/1.1 200 OK Access-Control-Allow-Methods: POST, DELETE, GET, OPTIONS Access-Control-Allow-Headers: Content-Type, X-Requested-With, X-Forwarded-Host, X-Forwarded-Prefix, X-PINGOTHER, Authorization, ES-LongPoll, ES-ExpectedVersion, ES-EventId, ES-EventType, ES-RequiresMaster, ES-HardDelete, ES-ResolveLinkTos Access-Control-Allow-Origin: * Access-Control-Expose-Headers: Location, ES-Position, ES-CurrentVersion Cache-Control: max-age=0, no-cache, must-revalidate Vary: Accept ETag: \"0;-2060438500\" Content-Type: application/vnd.eventstore.atom+json; charset=utf-8 Server: Mono-HTTPAPI/1.0 Date: Fri, 15 Dec 2017 12:23:23 GMT Content-Length: 1262 Keep-Alive: timeout=15,max=100 { \"title\": \"Event stream 'newstream'\", \"id\": \"http://127.0.0.1:2113/streams/newstream\", \"updated\": \"2017-12-15T12:19:32.021776Z\", \"streamId\": \"newstream\", \"author\": { \"name\": \"EventStore\" }, \"headOfStream\": true, \"selfUrl\": \"http://127.0.0.1:2113/streams/newstream\", \"eTag\": \"0;-2060438500\", \"links\": [ { \"uri\": \"http://127.0.0.1:2113/streams/newstream\", \"relation\": \"self\" }, { \"uri\": \"http://127.0.0.1:2113/streams/newstream/head/backward/20\", \"relation\": \"first\" }, { \"uri\": \"http://127.0.0.1:2113/streams/newstream/1/forward/20\", \"relation\": \"previous\" }, { \"uri\": \"http://127.0.0.1:2113/streams/newstream/metadata\", \"relation\": \"metadata\" } ], \"entries\": [ { \"title\": \"0@newstream\", \"id\": \"http://127.0.0.1:2113/streams/newstream/0\", \"updated\": \"2017-12-15T12:19:32.021776Z\", \"author\": { \"name\": \"EventStore\" }, \"summary\": \"event-type\", \"links\": [ { \"uri\": \"http://127.0.0.1:2113/streams/newstream/0\", \"relation\": \"edit\" }, { \"uri\": \"http://127.0.0.1:2113/streams/newstream/0\", \"relation\": \"alternate\" } ] } ] } Reading an event from a stream The feed has one item in it, and if there are more than one, then items are sorted from newest to oldest. For each entry, there are a series of links to the actual events, we cover embedding data into a stream later . To GET an event, follow the alternate link and set your Accept headers to the mime type you would like the event in. The accepted content types for GET requests are: application/xml application/atom+xml application/json application/vnd.eventstore.atom+json text/xml text/html The non-atom version of the event has fewer details about the event. Request Response curl -i http://127.0.0.1:2113/streams/newstream/0 -H \"Accept: application/json\" HTTP/1.1 200 OK Access-Control-Allow-Methods: GET, OPTIONS Access-Control-Allow-Headers: Content-Type, X-Requested-With, X-PINGOTHER Access-Control-Allow-Origin: * Cache-Control: max-age=31536000, public Vary: Accept Content-Type: application/json; charset: utf-8 Server: Mono-HTTPAPI/1.0 Date: Wed, 03 Jul 2013 11:09:12 GMT Content-Length: 14 Keep-Alive: timeout=15,max=100 { \"a\": \"1\" } Feed Paging The next step in understanding how to read a stream is the first / last / previous / next links within a stream. Event Store supplies these links so you can read through a stream, and they follow the pattern defined in RFC 5005 . In the example above the server returned the following links as part of its result: \"links\": [ { \"uri\": \"http://127.0.0.1:2113/streams/newstream\", \"relation\": \"self\" }, { \"uri\": \"http://127.0.0.1:2113/streams/newstream/head/backward/20\", \"relation\": \"first\" }, { \"uri\": \"http://127.0.0.1:2113/streams/newstream/2/forward/20\", \"relation\": \"previous\" }, { \"uri\": \"http://127.0.0.1:2113/streams/newstream/metadata\", \"relation\": \"metadata\" } ], This shows that there is not a next URL as all the information is in this request and that the URL requested is the first link. When dealing with these URLs, there are two ways of reading the data in the stream. You GET the last link and move backwards following previous links, or You GET the first link and follow the next links, and the final item will not have a next link. If you want to follow a live stream, then you keep following the previous links. When you reach the end of a stream, you receive an empty document with no entries or previous link. You then continue polling this URI (in the future a document will appear). You can see this by trying the previous link from the above feed. Request Response curl -i http://127.0.0.1:2113/streams/newstream/1/forward/20 -H \"Accept:application/vnd.eventstore.atom+json\" HTTP/1.1 200 OK Access-Control-Allow-Methods: GET, OPTIONS Access-Control-Allow-Headers: Content-Type, X-Requested-With, X-PINGOTHER, Authorization, ES-LongPoll, ES-ExpectedVersion, ES-EventId, ES-EventType, ES-RequiresMaster, ES-HardDelete, ES-ResolveLinkTo, ES-ExpectedVersion Access-Control-Allow-Origin: * Access-Control-Expose-Headers: Location, ES-Position Cache-Control: max-age=0, no-cache, must-revalidate Vary: Accept ETag: \"0;248368668\" Content-Type: application/vnd.eventstore.atom+json; charset=utf-8 Server: Mono-HTTPAPI/1.0 Date: Fri, 13 Mar 2015 14:04:47 GMT Content-Length: 795 Keep-Alive: timeout=15,max=100 { \"title\": \"Event stream 'newstream'\", \"id\": \"<http://127.0.0.1:2113/streams/newstream\">, \"updated\": \"0001-01-01T00:00:00Z\", \"streamId\": \"newstream\", \"author\": { \"name\": \"EventStore\" }, \"headOfStream\": false, \"links\": [ { \"uri\": \"http://127.0.0.1:2113/streams/newstream\", \"relation\": \"self\" }, { \"uri\": \"http://127.0.0.1:2113/streams/newstream/head/backward/20\", \"relation\": \"first\" }, { \"uri\": \"http://127.0.0.1:2113/streams/newstream/0/forward/20\", \"relation\": \"last\" }, { \"uri\": \"http://127.0.0.1:2113/streams/newstream/0/backward/20\", \"relation\": \"next\" }, { \"uri\": \"http://127.0.0.1:2113/streams/newstream/metadata\", \"relation\": \"metadata\" } ], \"entries\": \\[] } When parsing an atom subscription, the IDs of events always stay the same. This is important for figuring out if you are referring to the same event. Paging through events Let's now try an example with more than a single page. First create the multiple events: Request Response curl -i -d \"@paging-events.json\" \"http://127.0.0.1:2113/streams/alphabet\" -H \"Content-Type:application/vnd.eventstore.events+json\" HTTP/1.1 100 Continue HTTP/1.1 201 Created Access-Control-Allow-Methods: POST, DELETE, GET, OPTIONS Access-Control-Allow-Headers: Content-Type, X-Requested-With, X-Forwarded-Host, X-Forwarded-Prefix, X-PINGOTHER, Authorization, ES-LongPoll, ES-ExpectedVersion, ES-EventId, ES-EventType, ES-RequiresMaster, ES-HardDelete, ES-ResolveLinkTos Access-Control-Allow-Origin: * Access-Control-Expose-Headers: Location, ES-Position, ES-CurrentVersion Location: http://127.0.0.1:2113/streams/alphabet/0 Content-Type: text/plain; charset=utf-8 Server: Mono-HTTPAPI/1.0 Date: Tue, 21 Aug 2018 09:53:46 GMT Content-Length: 0 Keep-Alive: timeout=15,max=100 If you request the stream of events, you see a series of links above the events: Request Response curl -i http://127.0.0.1:2113/streams/alphabet -H \"Accept:application/vnd.eventstore.atom+json\" HTTP/1.1 200 OK Access-Control-Allow-Methods: POST, DELETE, GET, OPTIONS Access-Control-Allow-Headers: Content-Type, X-Requested-With, X-Forwarded-Host, X-Forwarded-Prefix, X-PINGOTHER, Authorization, ES-LongPoll, ES-ExpectedVersion, ES-EventId, ES-EventType, ES-RequiresMaster, ES-HardDelete, ES-ResolveLinkTos Access-Control-Allow-Origin: * Access-Control-Expose-Headers: Location, ES-Position, ES-CurrentVersion Cache-Control: max-age=0, no-cache, must-revalidate Vary: Accept ETag: \"26;-2060438500\" Content-Type: application/vnd.eventstore.atom+json; charset=utf-8 Server: Mono-HTTPAPI/1.0 Date: Tue, 21 Aug 2018 10:12:31 GMT Content-Length: 10727 Keep-Alive: timeout=15,max=100 { \"title\": \"Event stream 'alphabet'\", \"id\": \"http://127.0.0.1:2113/streams/alphabet\", \"updated\": \"2018-08-21T09:53:46.869815Z\", \"streamId\": \"alphabet\", \"author\": { \"name\": \"EventStore\" }, \"headOfStream\": true, \"selfUrl\": \"http://127.0.0.1:2113/streams/alphabet\", \"eTag\": \"26;-2060438500\", \"links\": [ { \"uri\": \"http://127.0.0.1:2113/streams/alphabet\", \"relation\": \"self\" }, { \"uri\": \"http://127.0.0.1:2113/streams/alphabet/head/backward/20\", \"relation\": \"first\" }, { \"uri\": \"http://127.0.0.1:2113/streams/alphabet/0/forward/20\", \"relation\": \"last\" }, { \"uri\": \"http://127.0.0.1:2113/streams/alphabet/6/backward/20\", \"relation\": \"next\" }, { \"uri\": \"http://127.0.0.1:2113/streams/alphabet/27/forward/20\", \"relation\": \"previous\" }, { \"uri\": \"http://127.0.0.1:2113/streams/alphabet/metadata\", \"relation\": \"metadata\" } ], \"entries\": [ ] } Using the links in the stream of events, you can traverse through all the events in the stream by going to the last URL and following previous links, or by following next links from the first link. For example, if you request the last link from above: Request Response curl -i http://127.0.0.1:2113/streams/alphabet/0/forward/20 -H \"Accept:application/vnd.eventstore.atom+json\" HTTP/1.1 200 OK Access-Control-Allow-Methods: GET, OPTIONS Access-Control-Allow-Headers: Content-Type, X-Requested-With, X-Forwarded-Host, X-Forwarded-Prefix, X-PINGOTHER, Authorization, ES-LongPoll, ES-ExpectedVersion, ES-EventId, ES-EventType, ES-RequiresMaster, ES-HardDelete, ES-ResolveLinkTos Access-Control-Allow-Origin: * Access-Control-Expose-Headers: Location, ES-Position, ES-CurrentVersion Cache-Control: max-age=31536000, public Vary: Accept Content-Type: application/vnd.eventstore.atom+json; charset=utf-8 Server: Mono-HTTPAPI/1.0 Date: Tue, 21 Aug 2018 10:24:28 GMT Content-Length: 10403 Keep-Alive: timeout=15,max=100 { \"title\": \"Event stream 'alphabet'\", \"id\": \"http://127.0.0.1:2113/streams/alphabet\", \"updated\": \"2018-08-21T09:53:46.869716Z\", \"streamId\": \"alphabet\", \"author\": { \"name\": \"EventStore\" }, \"headOfStream\": false, \"links\": [ { \"uri\": \"http://127.0.0.1:2113/streams/alphabet\", \"relation\": \"self\" }, { \"uri\": \"http://127.0.0.1:2113/streams/alphabet/head/backward/20\", \"relation\": \"first\" }, { \"uri\": \"http://127.0.0.1:2113/streams/alphabet/20/forward/20\", \"relation\": \"previous\" }, { \"uri\": \"http://127.0.0.1:2113/streams/alphabet/metadata\", \"relation\": \"metadata\" } ], \"entries\": [ ] } You then follow previous links until you are back to the head of the stream, where you can continue reading events in real time by polling the previous link. Note All links except the head link are fully cacheable as you can see in the HTTP header Cache-Control: max-age=31536000, public . This is important when discussing intermediaries and performance as you commonly replay a stream from storage. You should never bookmark links aside from the head of the stream resource, and always follow links. We may in the future change how internal links work, and bookmarking links other than the head may break. Reading All Events $all is a special paged stream for all events. You can use the same paged form of reading described above to read all events for a node by pointing the stream at /streams/$all . As it's a stream like any other, you can perform all operations, except posting to it. Note To access the $all stream, you must use admin details, find more information on the security page. Request Response curl -i http://127.0.0.1:2113/streams/%24all -H \"Accept:application/vnd.eventstore.atom+json\" -u admin:changeit HTTP/1.1 200 OK Access-Control-Allow-Methods: POST, DELETE, GET, GET, OPTIONS Access-Control-Allow-Headers: Content-Type, X-Requested-With, X-PINGOTHER, Authorization, ES-LongPoll, ES-ExpectedVersion, ES-EventId, ES-EventType, ES-RequiresMaster, ES-HardDelete, ES-ResolveLinkTo, ES-ExpectedVersion Access-Control-Allow-Origin: * Access-Control-Expose-Headers: Location, ES-Position Cache-Control: max-age=0, no-cache, must-revalidate Vary: Accept ETag: \"25159393;248368668\" Content-Type: application/vnd.eventstore.atom+json; charset=utf-8 Server: Mono-HTTPAPI/1.0 Date: Fri, 13 Mar 2015 16:19:09 GMT Content-Length: 12157 Keep-Alive: timeout=15,max=100 { \"title\": \"All events\", \"id\": \"<http://127.0.0.1:2113/streams/%24all\">, \"updated\": \"2015-03-13T16:19:06.548415Z\", \"author\": { \"name\": \"EventStore\" }, \"headOfStream\": false, \"links\": [ { \"uri\": \"http://127.0.0.1:2113/streams/%24all\", \"relation\": \"self\" }, { \"uri\": \"http://127.0.0.1:2113/streams/%24all/head/backward/20\", \"relation\": \"first\" }, { \"uri\": \"http://127.0.0.1:2113/streams/%24all/00000000000000000000000000000000/forward/20\", \"relation\": \"last\" }, { \"uri\": \"http://127.0.0.1:2113/streams/%24all/00000000017BC0D000000000017BC0D0/backward/20\", \"relation\": \"next\" }, { \"uri\": \"http://127.0.0.1:2113/streams/%24all/0000000001801EBF0000000001801EBF/forward/20\", \"relation\": \"previous\" }, { \"uri\": \"http://127.0.0.1:2113/streams/%24all/metadata\", \"relation\": \"metadata\" } ], \"entries\": [] # TODO: Make complete Conditional Gets The head link supports conditional GET s with the use of ETAGS , a well-known HTTP construct. You can include the ETAG of your last request and issue a conditional GET to the server. If nothing has changed, it won't return the full feed. For example the earlier request has an ETAG: Request Response curl -i http://127.0.0.1:2113/streams/alphabet -H \"Accept:application/vnd.eventstore.atom+json\" ETag: \"26;-2060438500\" You can use this in your next request when polling the stream for changes by putting it in the If-None-Match header. This tells the server to check if the response is the one you already know and returning a '304 not modified' response. If the tags have changed, the server returns a '200 OK' response. You can use this method to optimise your application by not sending large streams if there are no changes. Request Response curl -i http://127.0.0.1:2113/streams/alphabet -H \"Accept:application/vnd.eventstore.atom+json\" -H \"If-None-Match:26;-2060438500\" HTTP/1.1 304 Not Modified Access-Control-Allow-Methods: POST, DELETE, GET, OPTIONS Access-Control-Allow-Headers: Content-Type, X-Requested-With, X-Forwarded-Host, X-Forwarded-Prefix, X-PINGOTHER, Authorization, ES-LongPoll, ES-ExpectedVersion, ES-EventId, ES-EventType, ES-RequiresMaster, ES-HardDelete, ES-ResolveLinkTos Access-Control-Allow-Origin: * Access-Control-Expose-Headers: Location, ES-Position, ES-CurrentVersion Content-Type: text/plain; charset=utf-8 Server: Mono-HTTPAPI/1.0 Date: Tue, 21 Aug 2018 12:07:35 GMT Content-Length: 0 Keep-Alive: timeout=15,max=100 Note You create Etags using the version of the stream and the media type of the stream you are reading. You can't read an Etag from a stream in one media type and use it with another media type. Embedding Data into Streams in JSON format So far in this guide, the feeds returned have contained links that refer to the actual event data. This is normally a preferable mechanism for several reasons: They can be in a different media type than the feed, and you can negotiate them separately from the feed itself (e.g., the feed in JSON, the event in XML). You can cache the event data separately from the feed, and you can point it to different feeds. If you use a linkTo() in your projection this is what happens in your atom feeds. If you are using JSON, you can embed the events into the atom feed events. This can help cut down on the number of requests in some situations, but the messages are larger. There are ways of embedding events and further metadata into your stream by using the embed= parameter. Rich embed mode The rich embed mode returns more properties about the event ( eventtype , streamid , position , etc.) as you can see in the following request. Request Response curl -i -H \"Accept:application/vnd.eventstore.atom+json\" \"http://127.0.0.1:2113/streams/newstream?embed=rich\" HTTP/1.1 200 OK Access-Control-Allow-Methods: POST, DELETE, GET, OPTIONS Access-Control-Allow-Headers: Content-Type, X-Requested-With, X-PINGOTHER, Authorization, ES-LongPoll, ES-ExpectedVersion, ES-EventId, ES-EventType, ES-RequiresMaster, ES-HardDelete, ES-ResolveLinkTo, ES-ExpectedVersion Access-Control-Allow-Origin: * Access-Control-Expose-Headers: Location, ES-Position Cache-Control: max-age=0, no-cache, must-revalidate Vary: Accept ETag: \"0;248368668\" Content-Type: application/vnd.eventstore.atom+json; charset=utf-8 Server: Mono-HTTPAPI/1.0 Date: Fri, 13 Mar 2015 16:30:57 GMT Content-Length: 1570 Keep-Alive: timeout=15,max=100 { \"title\": \"Event stream 'newstream'\", \"id\": \"<http://127.0.0.1:2113/streams/newstream\">, \"updated\": \"2015-03-13T12:13:42.492473Z\", \"streamId\": \"newstream\", \"author\": { \"name\": \"EventStore\" }, \"headOfStream\": true, \"selfUrl\": \"<http://127.0.0.1:2113/streams/newstream\">, \"eTag\": \"0;248368668\", \"links\": [ { \"uri\": \"http://127.0.0.1:2113/streams/newstream\", \"relation\": \"self\" }, { \"uri\": \"http://127.0.0.1:2113/streams/newstream/head/backward/20\", \"relation\": \"first\" }, { \"uri\": \"http://127.0.0.1:2113/streams/newstream/1/forward/20\", \"relation\": \"previous\" }, { \"uri\": \"http://127.0.0.1:2113/streams/newstream/metadata\", \"relation\": \"metadata\" } ], \"entries\": [ { \"eventId\": \"fbf4a1a1-b4a3-4dfe-a01f-ec52c34e16e4\", \"eventType\": \"event-type\", \"eventNumber\": 0, \"streamId\": \"newstream\", \"isJson\": true, \"isMetaData\": false, \"isLinkMetaData\": false, \"positionEventNumber\": 0, \"positionStreamId\": \"newstream\", \"title\": \"0@newstream\", \"id\": \"<http://127.0.0.1:2113/streams/newstream/0\">, \"updated\": \"2015-03-13T12:13:42.492473Z\", \"author\": { \"name\": \"EventStore\" }, \"summary\": \"event-type\", \"links\": [ { \"uri\": \"http://127.0.0.1:2113/streams/newstream/0\", \"relation\": \"edit\" }, { \"uri\": \"http://127.0.0.1:2113/streams/newstream/0\", \"relation\": \"alternate\" } ] } ] } Body embed mode The body embed mode returns the JSON/XML body of the events into the feed as well, depending on the type of the feed. You can see this in the request below: Request Response curl -i -H \"Accept:application/vnd.eventstore.atom+json\" \"http://127.0.0.1:2113/streams/newstream?embed=body\" HTTP/1.1 200 OK Access-Control-Allow-Methods: POST, DELETE, GET, OPTIONS Access-Control-Allow-Headers: Content-Type, X-Requested-With, X-PINGOTHER, Authorization, ES-LongPoll, ES-ExpectedVersion, ES-EventId, ES-EventType, ES-RequiresMaster, ES-HardDelete, ES-ResolveLinkTo, ES-ExpectedVersion Access-Control-Allow-Origin: * Access-Control-Expose-Headers: Location, ES-Position Cache-Control: max-age=0, no-cache, must-revalidate Vary: Accept ETag: \"0;248368668\" Content-Type: application/vnd.eventstore.atom+json; charset=utf-8 Server: Mono-HTTPAPI/1.0 Date: Fri, 13 Mar 2015 16:32:06 GMT Content-Length: 1608 Keep-Alive: timeout=15,max=100 { \"title\": \"Event stream 'newstream'\", \"id\": \"<http://127.0.0.1:2113/streams/newstream\">, \"updated\": \"2015-03-13T12:13:42.492473Z\", \"streamId\": \"newstream\", \"author\": { \"name\": \"EventStore\" }, \"headOfStream\": true, \"selfUrl\": \"<http://127.0.0.1:2113/streams/newstream\">, \"eTag\": \"0;248368668\", \"links\": [ { \"uri\": \"http://127.0.0.1:2113/streams/newstream\", \"relation\": \"self\" }, { \"uri\": \"http://127.0.0.1:2113/streams/newstream/head/backward/20\", \"relation\": \"first\" }, { \"uri\": \"http://127.0.0.1:2113/streams/newstream/1/forward/20\", \"relation\": \"previous\" }, { \"uri\": \"http://127.0.0.1:2113/streams/newstream/metadata\", \"relation\": \"metadata\" } ], \"entries\": \\[ { \"eventId\": \"fbf4a1a1-b4a3-4dfe-a01f-ec52c34e16e4\", \"eventType\": \"event-type\", \"eventNumber\": 0, \"data\": \"{\\\\n \"a\": \"1\"\\\\n}\", \"streamId\": \"newstream\", \"isJson\": true, \"isMetaData\": false, \"isLinkMetaData\": false, \"positionEventNumber\": 0, \"positionStreamId\": \"newstream\", \"title\": \"0@newstream\", \"id\": \"<http://127.0.0.1:2113/streams/newstream/0\">, \"updated\": \"2015-03-13T12:13:42.492473Z\", \"author\": { \"name\": \"EventStore\" }, \"summary\": \"event-type\", \"links\": [ { \"uri\": \"http://127.0.0.1:2113/streams/newstream/0\", \"relation\": \"edit\" }, { \"uri\": \"http://127.0.0.1:2113/streams/newstream/0\", \"relation\": \"alternate\" } ] } ] } Variants of body embed mode Two other modes are variants of body : PrettyBody tries to reformat the JSON to make it \"pretty to read\". TryHarder works harder to try to parse and reformat the JSON from an event to return it in the feed. These do not include further information and are focused on how the feed looks. Embedding Data into Streams in XML format The XML format embeds no additional data, as only JSON supports embedding. Request Response curl -i -H \"Accept:application/atom+xml\" \"http://127.0.0.1:2113/streams/newstream?embed=body\" HTTP/1.1 200 OK Access-Control-Allow-Methods: POST, DELETE, GET, OPTIONS Access-Control-Allow-Headers: Content-Type, X-Requested-With, X-PINGOTHER, Authorization, ES-LongPoll, ES-ExpectedVersion, ES-EventId, ES-EventType, ES-RequiresMaster, ES-HardDelete, ES-ResolveLinkTo, ES-ExpectedVersion Access-Control-Allow-Origin: * Access-Control-Expose-Headers: Location, ES-Position Cache-Control: max-age=0, no-cache, must-revalidate Vary: Accept ETag: \"0;-1296467268\" Content-Type: application/atom+xml; charset=utf-8 Server: Mono-HTTPAPI/1.0 Date: Fri, 13 Mar 2015 16:32:56 GMT Content-Length: 929 Keep-Alive: timeout=15,max=100 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <feed xmlns=\"http://www.w3.org/2005/Atom\"> <title>Event stream 'newstream'</title> <id>http://127.0.0.1:2113/streams/newstream</id> <updated>2013-06-29T15:12:53.570125Z</updated> <author> <name>EventStore</name> </author> <link href=\"http://127.0.0.1:2113/streams/newstream\" rel=\"self\" /> <link href=\"http://127.0.0.1:2113/streams/newstream/head/backward/20\" rel=\"first\" /> <link href=\"http://127.0.0.1:2113/streams/newstream/0/forward/20\" rel=\"last\" /> <link href=\"http://127.0.0.1:2113/streams/newstream/1/forward/20\" rel=\"previous\" /> <link href=\"http://127.0.0.1:2113/streams/newstream/metadata\" rel=\"metadata\" /> <entry> <title>0@newstream</title> <id>http://127.0.0.1:2113/streams/newstream/0</id> <updated>2013-06-29T15:12:53.570125Z</updated> <author> <name>EventStore</name> </author> <summary>event-type</summary> <link href=\"http://127.0.0.1:2113/streams/newstream/0\" rel=\"edit\" /> <link href=\"http://127.0.0.1:2113/streams/newstream/0\" rel=\"alternate\" /> </entry> </feed>"
  },
  "http-api/optimistic-concurrency-and-idempotence/index.html": {
    "href": "http-api/optimistic-concurrency-and-idempotence/index.html",
    "title": "Optimistic Concurrency & Idempotence | Event Store",
    "keywords": "Optimistic Concurrency & Idempotence Idempotency All operations on the HTTP interface are idempotent (unless the expected version is ignored). It is the responsibility of the client to retry operations under failure conditions, ensuring that the event IDs of the events posted are the same as the first attempt. Provided the client maintains this Event Store will treat all operations as idempotent. For example: Request Response curl -i -d @event.txt \"http://127.0.0.1:2113/streams/newstream\" HTTP/1.1 201 Created Access-Control-Allow-Origin: * Access-Control-Allow-Methods: POST, GET, PUT, DELETE Location: http://127.0.0.1:2113/streams/newstream444/1 Content-Type: application/json Server: Mono-HTTPAPI/1.0 Date: Thu, 06 Sep 2012 19:49:37 GMT Content-Length: 107 Keep-Alive: timeout=15,max=100 <!-- TODO: What's this? --> Request Response curl -i -d @event.txt \"http://127.0.0.1:2113/streams/newstream444\" HTTP/1.1 201 Created Access-Control-Allow-Origin: * Access-Control-Allow-Methods: POST, GET, PUT, DELETE Location: http://127.0.0.1:2113/streams/newstream444/1 Content-Type: application/json Server: Mono-HTTPAPI/1.0 Date: Thu, 06 Sep 2012 19:49:37 GMT Content-Length: 107 Keep-Alive: timeout=15,max=100 Assuming you were posting to a new stream you would get the event written once (and the stream created). The second event will return as the first but not write again. Note This allows the client rule of “if you get an unknown condition, retry” to work. For example: Request Response curl -i \"http://127.0.0.1:2113/streams/newstream444\" HTTP/1.1 200 OK Access-Control-Allow-Origin: * Access-Control-Allow-Methods: POST, GET, PUT, DELETE Content-Type: application/json Server: Mono-HTTPAPI/1.0 Date: Thu, 06 Sep 2012 19:50:30 GMT Content-Length: 2131 Keep-Alive: timeout=15,max=100 { \"title\": \"Event stream 'newstream444'\", \"id\": \"http://127.0.0.1:2113/streams/newstream444\", \"updated\": \"2012-09-06T16:39:44.695643Z\", \"author\": { \"name\": \"EventStore\" }, \"links\": [ { \"uri\": \"http://127.0.0.1:2113/streams/newstream444\", \"relation\": \"self\" }, { \"uri\": \"http://127.0.0.1:2113/streams/newstream444\", \"relation\": \"first\" } ], \"entries\": [ { \"title\": \"newstream444 #1\", \"id\": \"http://127.0.0.1:2113/streams/newstream444/1\", \"updated\": \"2012-09-06T16:39:44.695643Z\", \"author\": { \"name\": \"EventStore\" }, \"summary\": \"Entry #1\", \"links\": [ { \"uri\": \"http://127.0.0.1:2113/streams/newstream444/1\", \"relation\": \"edit\" }, { \"uri\": \"http://127.0.0.1:2113/streams/newstream444/event/1?format=text\", \"type\": \"text/plain\" }, { \"uri\": \"http://127.0.0.1:2113/streams/newstream444/event/1?format=json\", \"relation\": \"alternate\", \"type\": \"application/json\" }, { \"uri\": \"http://127.0.0.1:2113/streams/newstream444/event/1?format=xml\", \"relation\": \"alternate\", \"type\": \"text/xml\" } ] }, { \"title\": \"newstream444 #0\", \"id\": \"http://127.0.0.1:2113/streams/newstream444/0\", \"updated\": \"2012-09-06T16:39:44.695631Z\", \"author\": { \"name\": \"EventStore\" }, \"summary\": \"Entry #0\", \"links\": [ { \"uri\": \"http://127.0.0.1:2113/streams/newstream444/0\", \"relation\": \"edit\" }, { \"uri\": \"http://127.0.0.1:2113/streams/newstream444/event/0?format=text\", \"type\": \"text/plain\" }, { \"uri\": \"http://127.0.0.1:2113/streams/newstream444/event/0?format=json\", \"relation\": \"alternate\", \"type\": \"application/json\" }, { \"uri\": \"http://127.0.0.1:2113/streams/newstream444/event/0?format=xml\", \"relation\": \"alternate\", \"type\": \"text/xml\" } ] } ] } <!-- TODO: Still to do -->"
  },
  "event-sourcing-basics/rolling-snapshots/index.html": {
    "href": "event-sourcing-basics/rolling-snapshots/index.html",
    "title": "Rolling Snapshots | Event Store",
    "keywords": "Rolling Snapshots A rolling snapshot is a projection of the current state of an aggregate at a given point. It represents the state when all events to that point have been replayed. You use rolling snapshots as a heuristic to prevent the need to load all events for the entire history of an aggregate. One way of processing events in the event stream is to replay the events from the beginning of time until the end of the event stream. The problem is that there may be a large number of events between the beginning of time and the current point. You can imagine that an event stream with a million or more events would be inefficient to load. The solution is to use a rolling snapshot to place a denormalization of the state at a given point. It is then possible to play the events from that point forward to load the aggregate. The process for rebuilding an aggregate changes when using rolling snapshots. Instead of reading forward from the beginning of time it is read backwards, putting the events on to a stack until there are no more events left or a snapshot is found. The snapshot is then applied and the events would popped off the stack and applied until the stack was empty. Note Although this is an easy way to conceptualize how rolling snapshots work, this is a less than ideal solution in a production system for various reasons. It is better to store them separately events. The snapshot itself is nothing more than a serialized form of the graph at that given point. By having the state of that graph at that point replaying all the events prior to that snapshot can be avoided. Snapshots can be taken asynchronously by a process monitoring the Event Store. Introducing Rolling Snapshots allows control of the worst case when loading from events. The maximum number of events that would be processed can be tuned to optimize performance for the system in question. With the introduction of Rolling Snapshots it is a relatively trivial process to achieve one to two orders of magnitude of performance gain on the two operations that the Event Storage supports. It is important though to remember that Rolling Snapshots are just a heuristic and that conceptually the event stream is still viewed in its entirety."
  },
  "event-sourcing-basics/performance-and-scaling/index.html": {
    "href": "event-sourcing-basics/performance-and-scaling/index.html",
    "title": "Performance and Scalability | Event Store",
    "keywords": "Performance and Scalability There are also architectural benefits to not deleting data. The storage system becomes an append-only architecture. Append-only architectures typically distribute and scale more easily than updating architectures because there are fewer locks to deal with. A common performance optimization is the use of \"horizontal partitioning\" (or \"sharding\"), where the same schema will exist in many places and a key within the data will determine in which place the data exists. One problem with horizontal partitioning with an RDMS is that it is necessary to define the key with which the partitioning should operate. This problem goes away when using events. Aggregate IDs are the only partition point in the system. No matter how many aggregates exist or how they may change structures, the aggregate ID associated with events is the only partition point in the system. Horizontally partitioning an Event Store is a simpler process. Saving Objects When dealing with a stereotypical system utilizing an RDMS it can be complex to figure out what has changed within the aggregate. Many tools have been built to help alleviate the pain that arises from this task but is the need for a tool a sign of a bigger problem? Most Object-relational mapping (ORM) tools figure out the changes that occurred within a graph. They do this by maintaining two copies of a given graph. The first held in memory and the second for applications to interact with. When it's time to save, the database logic traverses the graph that the code has interacted with and uses the copy of the original graph to determine what has changed while the graph was in use by the code. These changes are then saved to the data storage system. In a system that is Domain Event centric, the aggregates are themselves tracking strong events as to what has changed within them. There is no complex process for comparing to another copy of a graph. Instead ask the aggregate for its changes. The operation to ask for changes is far more efficient than having to figure out what has changed. Loading Objects A similar issue exists when loading objects. Consider the work that involved with loading a graph of objects in a stereotypical relational database backed system. Often there are many queries that must be issued to build the aggregate. To help minimize the latency cost of these queries many ORMs have introduced a heuristic of \"Lazy Loading\" also known as \"Delayed Loading\", where a proxy is given in lieu of the real object. The data is only loaded when some code attempts to use that particular object. Lazy loading is useful because often a given behavior will only use a certain portion of data out of the aggregate and it prevents the developer from having to explicitly represent which data that is while reducing the cost of the loading of the aggregate. It is this need for reducing cost that shows a problem. Aggregates are considered as a whole represented by the Aggregate Root. Conceptually an Aggregate is loaded and saved in its entirety. Evans, 2001 Conceptually it is much easier to deal with the concept of an aggregate loaded and saved in its entirety. The concept of lazy loading is not a trivial one and especially when optimizing use cases. The heuristic is needed because loading full aggregates from a relational database is operationally too slow. When dealing with events as a storage mechanism things are different. There is one thing stored, events. Load all the events for an aggregate and replay them. There can only ever be a single query on the system. There is no need to attempt to implement things like lazy loading."
  },
  "event-sourcing-basics/index.html": {
    "href": "event-sourcing-basics/index.html",
    "title": "Event Sourcing Basics | Event Store",
    "keywords": "Event Sourcing Basics What is an Event Store? Event Store is a database that supports the concept of Event Sourcing, which is an old idea that has recently become popular again Note If you are familiar with functional programming you may wish to jump to the Event Store viewed as a functional database section . Production systems often rely on storing their current state to process transactions, but this has not always been the case. Before the general acceptance of relational database management systems (RDBMS) as the center of system architectures many did not store the current state. This was especially true in high performance, mission critical, and highly secure systems. If you look at the inner workings of an RDBMS you will find that most do not themselves work by managing current state. What is an Event? An event is something that happened in the past, and so you should represent events as verbs in the past tense such as CustomerRelocated , CargoShipped , or InventoryLossageRecorded . If you are taking a domain driven design approach, it's imperative that events are verbs in the past tense, as they are part of the Ubiquitous Language. Consider the differences with ubiquitous language when relocating a customer. An event makes the concept explicit where previously the changes would occur within an aggregate or between multiple aggregates and were left as an implicit concept that you needed to explore and define. In most applications, a developer discovers that a side effect occurred with a tool such as Hibernate or Entity Framework. If there is a change to the side effects of a use case, it is an implicit concept. The introduction of the event makes the concept explicit and part of the Ubiquitous Language. Relocating a customer does not change something, relocating a customer produces a CustomerRelocatedEvent event which is explicitly defined within the language. In code an event is a data holding structure such as the following: public class InventoryItemDeactivated { public readonly Guid InventoryItemId; public readonly string Reason; public InventoryItemDeactivated(inventoryItemId, reason) { InventoryItemId = inventoryItemId; Reason = reason; } } Other Definitions of Domain Events There is a concept related to a Domain Event defined in Streamlined Object Modeling (SOM). The term “Domain Event” is often used in SOM when discussing “The Event Principle”. Model the event of people interacting at a place with a thing with a transaction object. Model a point-in-time interaction as a transaction with a single timestamp; model a time-interval interaction as a transaction with multiple timestamps. Jill Nicola, 2002ll, p. 23 Although people use the term Domain Event to describe this concept the term does not have the same definition as a Domain Event in the context of this document. SOM uses another term for the concept that better describes what the object is, a transaction. The concept of a transaction object is an important one in a domain and deserves a name. An example of such a transaction might be a player swinging a bat. This is an action that occurred at a given point and you should model as such in the domain, but this is not the same as a Domain Event. This also differs from Martin Fowler’s example of what a Domain Event is: Example: I go to Babur’s for a meal on Tuesday, and pay by credit card. This might be modeled as an event, whose type is “Make Purchase”, whose subject is my credit card, and whose occurred date is Tuesday. If Babur’s uses an old manual system and doesn’t transmit the transaction until Friday, then the noticed date would be Friday. Fowler Furthermore By funneling inputs of a system into streams of Domain Events you can keep a record of all the inputs to a system. This helps you to organize your processing logic, and also allows you to keep an audit log of the system. Fowler What Martin is actually describing here is a \"command\". The language “Make Purchase” is wrong if we are to consider this as an event. A purchase was made, therefore it makes more sense to introduce a PurchaseMade event. Martin did make a purchase at the location, they did charge his credit card, and he ate and enjoyed his food. All these events are in the past tense. They have already happened and cannot be undone. An example such as the sales example given tends to lead towards a secondary problem when built within a system. The problem is that the domain may be responsible for filling in parts of the event. Consider a system where the domain processes the sale itself. How much is the sales tax? Often the domain would calculate this. This leads to a dual definition of the event. There is the event as sent from the client without the sales tax, and then the domain would receive it and add in the sales tax. It causes the event to have multiple definitions, as well as forcing mutability on some attributes. Dual events can sidestep this issue (one for the client with just what it provides and another for the domain including what it enriched the event from the client with) but this is the command event model, and the linguistic problems still exist. You can see a further example of the linguistic problems involved in error conditions. How should the domain handle the fact that a client told it to do something that it cannot? This condition can exist for many reasons but let’s imagine a simple one of the client not having enough information to source the event in a known correct way. Linguistically the command/event separation makes more sense here as the command arrives in the imperative “Place Sale” while the event is in the past tense “Sale Completed”. It's natural for the domain to reject a client attempting to “Place a sale”, it's not natural for the domain to tell the client that something in the past tense no longer happened. Consider the discussion with a domain expert. Does the domain have a time machine? Parallel realities are far too complex and costly to model in most business systems. These are the problems that led to the separation of the concepts of Commands and Events. This separation makes the language much clearer and although subtle, it tends to lead developers towards a clearer understanding of context based solely on the language used. Dual definitions of a concept force the developer to recognize and distinguish context. This weight can translate into both ramp up time for new developers on a project and another thing a member of the team needs to remember. Anytime a team member needs to remember something to distinguish context there is a higher probability that they will overlook it or mistaken for another context. Being explicit in the language and avoiding dual definitions helps make things clearer both for domain experts, the developers, and anyone who may be consuming the API. Further Reading DDD CQRS Video Event Sourcing Getting Started"
  },
  "event-sourcing-basics/impendence-missmatch/index.html": {
    "href": "event-sourcing-basics/impendence-missmatch/index.html",
    "title": "Impedance Mismatch | Event Store",
    "keywords": "Impedance Mismatch Using events as a storage mechanism offers different properties when compared to a typical relational model, as the impedance mismatch that exists between a typical relational model and the object oriented domain model is analyzed. Scott Ambler describes the problem in an essay on agiledata.org as: Why does this impedance mismatch exist? The object-oriented paradigm is based on proven software engineering principles. The relational paradigm, however, is based on proven mathematical principles. Because the underlying paradigms are different the two technologies do not work together seamlessly. The impedance mismatch becomes apparent when you look at the preferred approach to access: With the object paradigm you traverse objects via their relationships whereas with the relational paradigm you join the data rows of tables. This fundamental difference results in a non-ideal combination of object and relational technologies, although when have you ever used two different things together without a few hitches? Ambler The impedance mismatch between the domain model and the relational database has a large cost associated with it. There are many tools that aim to help minimize the effects of the impedance mismatch such as Object Relational Mappers (ORMs). They tend to work well in most situations but there is a large cost associated to the impedance mismatch even when using tools such as ORMs. The cost is that a developer needs to be intimately familiar with both the relational model and the object oriented model. They also need to be familiar with the subtle differences between the two models. Scott identifies this with: To succeed using objects and relational databases together you need to understand both paradigms, and their differences, and then make intelligent tradeoffs based on that knowledge. Ambler You can find some of these subtle differences on Wikipedia under the \" Object-Relational Impedance Mismatch \" page but to include some of the major differences: Declarative vs. imperative interfaces Relational thinking tends to use data as interfaces, not behaviour as interfaces. It thus has a declarative tilt in design philosophy in contrast to Object-oriented programming’s behavioural tilt. (Some relational proponents propose using triggers, stored procedures, etc. to provide complex behaviour, but this is not a common viewpoint.) Object-Relational Impedance Mismatch Structure vs. behaviour - Object-oriented programming primarily focuses on ensuring that the structure of the program is reasonable (maintainable, understandable, extensible, reusable, safe), whereas relational systems focus on what kind of behaviour the resulting run-time system has (efficiency, adaptability, fault-tolerance, liveness, logical integrity, etc.). Object-oriented methods generally assume that the primary user of the object-oriented code and its interfaces are the application developers. In relational systems, the end-user’s view of the behaviour of the system is sometimes considered to be more important. However, relational queries and \"views\" are common techniques to re-represent information in application- or task-specific configurations. Further, relational does not prohibit local or application-specific structures or tables from being created, although many common development tools do not directly provide such a feature, assuming objects will be used instead. This makes it difficult to know whether the stated non-developer perspective of relational is inherent to relational, or merely a product of current practice and tObject-oriented programmingl implementation assumptions. Object-Relational Impedance Mismatch Set vs. graph relationships The relationship between different items (objects or records) tend to be handled differently between the paradigms. Relational relationships are usually based on idioms taken from set theory, while object relationships lean toward idioms adopted from graph theory (including trees). While each can represent the same information as the other, the approaches they provide to access and manage information differ. Object-Relational Impedance Mismatch There are many other subtle differences such as data types, identity, and how transactions work. The object-relational impedance mismatch can be quite a pain to deal with and it requires a very large amount of knowledge to deal with effectively. There is not an impedance mismatch between events and the domain model. The events are themselves a domain concept. The idea of replaying events to reach a given state is also a domain concept. The entire system becomes defined in domain terms. Defining everything in domain terms not only lowers the amount of knowledge that developers need to have but it also limits the number of representations of the model needed as the events are directly tied to the domain model itself."
  },
  "dotnet-api/projections/index.html": {
    "href": "dotnet-api/projections/index.html",
    "title": "Projections Management | Event Store",
    "keywords": "Projections Management The Event Store Client API includes helper methods that use the HTTP API to allow you to manage projections. This document describes the methods found in the ProjectionsManager class. All methods in this class are asynchronous. Methods Enable a Projection Enables an existing projection by name. You must have access to a projection to enable it. public Task EnableAsync(string name, UserCredentials userCredentials = null) Disable a Projection Disables an existing projection by name. You must have access to a projection to disable it. public Task DisableAsync(string name, UserCredentials userCredentials = null) Abort a Projection Aborts an existing projection by name. You must have access to a projection to abort it. public Task AbortAsync(string name, UserCredentials userCredentials = null) Create a One-Time Projection Creates a projection that runs until the end of the log and then stops. The query parameter contains the JavaScript you want created as a one time projection. public Task CreateOneTimeAsync(string query, UserCredentials userCredentials = null) Create a Continuous Projection Creates a projection that runs until the end of the log and then continues running. The query parameter contains the JavaScript you want created as a one time projection. Continuous projections have explicit names and you can enable or disable them via this name. public Task CreateContinuousAsync(string name, string query, UserCredentials userCredentials = null) List all Projections Returns a list of all projections. public Task<List<ProjectionDetails>> ListAllAsync(UserCredentials userCredentials = null) List One-Time Projections Returns a list of all One-Time Projections. public Task<List<ProjectionDetails>> ListOneTimeAsync(UserCredentials userCredentials = null) Get Statistics on a Projection Returns the statistics associated with a named projection. public Task<string> GetStatisticsAsync(string name, UserCredentials userCredentials = null) Delete Projection Deletes a named projection. You must have access to a projection to delete it. public Task DeleteAsync(string name, UserCredentials userCredentials = null) Get State Retrieves the state of a projection. public Task<string> GetState(string name, UserCredentials userCredentials = null) Get Partition State Retrieves the state of the projection via the given partition. public Task<string> GetPartitionStateAsync(string name, string partition, UserCredentials userCredentials = null) Get Result Retrieves the result of the projection. public Task<string> GetResult(string name, UserCredentials userCredentials = null) Get Partition Result Retrieves the result of the projection via the given partition. public Task<string> GetPartitionResultAsync(string name, string partition, UserCredentials userCredentials = null)"
  },
  "dotnet-api/optimistic-concurrency-and-idempotence/index.html": {
    "href": "dotnet-api/optimistic-concurrency-and-idempotence/index.html",
    "title": "Optimistic Concurrency & Idempotence | Event Store",
    "keywords": "Optimistic Concurrency & Idempotence Writing supports an optimistic concurrency check on the version of the stream to which events are written. The method of specifying what the expected version is depends whether you are making writes using the HTTP or .NET API. The .NET API has constants which you can use to represent certain conditions: Parameter Description ExpectedVersion.Any Disables the optimistic concurrency check. ExpectedVersion.NoStream Specifies the expectation that target stream does not yet exist. ExpectedVersion.EmptyStream Specifies the expectation that the target stream has been explicitly created, but does not yet have any user events written in it. ExpectedVersion.StreamExists Specifies the expectation that the target stream or its metadata stream has been created, but does not expect the stream to be at a specific event number. Any other integer value The event number that you expect the stream to currently be at. If the optimistic concurrency check fails during writing, a WrongExpectedVersionException is thrown. Idempotence If identical write operations occur, Event Store treats them in a way which makes it idempotent. If a write is treated in this manner, Event Store acknowledges it as successful, but duplicate events are not written. The idempotence check is based on the EventId and stream . It is possible to reuse an EventId across streams whilst maintaining idempotence. The level of idempotence guarantee depends on whether the optimistic concurrency check is not disabled during writing (by passing ExpectedVersion.Any as the expectedVersion for the write). If you specify an expected version The specified expectedVersion is compared to the currentVersion of the stream. This will yield one of three results: expectedVersion > currentVersion - a WrongExpectedVersionException is thrown. expectedVersion == currentVersion - events are written and acknowledged. expectedVersion < currentVersion - the EventId of each event in the stream starting from expectedVersion are compared to those in the write operation. This can yield one of three further results: All events have been committed already - the write is acknowledged as successful, but no duplicate events written. None of the events were previously committed - a WrongExpectedVersionException is thrown. Some of the events were previously committed - this is considered a bad request. If the write contains the same events as a previous request, either all or none of the events should have been previously committed. This surfaces as a WrongExpectedVersionException . If you specify ExpectedVersion.Any Note Idempotence is not guaranteed if you use ExpectedVersion.Any . The chance of a duplicate event is small, but is possible. The idempotence check will yield one of three results: All events have been committed already - the write is acknowledged as successful, but no duplicate events written. None of the events were previously committed - the events are written and the write acknowledged. Some of the events were previously committed - this is considered a bad request. If the write contains the same events as a previous request, either all or none of the events should have been previously committed. This currently surfaces as a WrongExpectedVersionException ."
  },
  "server/deploy-kubernetes-gke/index.html": {
    "href": "server/deploy-kubernetes-gke/index.html",
    "title": "Deploy with Kubernetes to Google Cloud GKE | Event Store",
    "keywords": "Deploy with Kubernetes to Google Cloud GKE This guide is to show how to use the official Event Store Helm Chart to interactively deploy an Event Store Cluster in Kubernetes Google Cloud GKE service. Prerequisites Install the following utilities in your development machine. Kubectl Helm Google Cloud SDK Configuration steps Login in your Google Cloud account using the gcloud cli, this prompts you to login using any browser and copy/paste a key back in to the cli: gcloud auth login --no-launch-browser Set the region , and the project id from above: gcloud config set compute/region <regionname> gcloud config set project <projectid> Enable the Kubernetes Engine API for your project, by visiting the https://console.cloud.google.com/apis/library/container.googleapis.com?project={project-id} page. Create a Kubernetes Cluster in your account, the following command does not specify the number of nodes and uses the default of 3:. gcloud container clusters create <clustername> --zone <zonename> We recommend kubectl for managing resources in the Kubernetes cluster. Set the current context for kubectl and merge it with any existing configuration in your existing config file: gcloud beta container clusters get-credentials <clustername> --zone <zonename> --project <projectid> On the server side Helm relies on a service account called Tiller, and you need to configure this account for Role Base Access as Google Cloud GKE enables it by default. To configure RBAC follow these instructions . In Summary you need to create a special deployment with the Tiller user settings before running the helm init command. You can then check if the 'tiller-deploy-xxxx' pod is running kubectl -n kube-system get pod Deploy Event Store Cluster with Helm It is possible to specify a lot of options to customise your Event Store deployment. The setting used in this guide is \"Persistent Volume\", that allows you to deploy a Persistent Volume Claim . This Claim is an abstraction that requires Kubernetes to set up one persistent volume per each Event Store node and assign an id to it. These volumes are then reused by the cluster, for example, we want to upgrade the version of the Cluster and retain the data. If we don’t specify an existing volume then the volumes are dynamically created. helm repo add eventstore <https://eventstore.github.io/EventStore.Charts> helm repo update helm install -n eventstore eventstore/eventstore --set persistence.enabled=true Google Cloud GKE sets the authentication to use RBAC by default. Because of this, to reach your Event Store cluster you have to set up access for anonymous users. This is something you would only do for a test environment using the following command: kubectl create clusterrolebinding cluster-system-anonymous --clusterrole=cluster-admin --user=system:anonymous Upgrade the cluster with a newer version Verify your current Event Store cluster: helm status eventstore Fork the official Helm Chart Event Store repository and change the version of the image in the chart values.yaml . And run the command in the same directory as the chart: helm upgrade eventstore . --set persistence.enabled=true The upgrade command upgrades all the pods one by one without downtime and attaches the existing volumes to the new pods during the upgrade. Rollback to a previous version To rollback the upgrade, first use the following command to display the history: helm history eventstore And then the following command to rollback to a specific revision: helm rollback eventstore 1 Delete resources gcloud container clusters delete <clustername> --zone <zonename> Then login in to the Google Cloud Web UI, and in the Kubernetes Engine view delete the Kubernetes Cluster using the bin icon."
  },
  "server/deploy-kubernetes-aks/index.html": {
    "href": "server/deploy-kubernetes-aks/index.html",
    "title": "Deploy with Kubernetes to Azure Cloud AKS | Event Store",
    "keywords": "Deploy with Kubernetes to Azure Cloud AKS This guide is to show how to use the official Event Store Helm Chart to interactively deploy an Event Store Cluster in Kubernetes Azure Cloud AKS service. Prerequisites Install the following utilities in your development machine. Kubectl Helm The Azure CLI Configuration steps Login in your Azure Cloud account using the az cli, this triggers 2 factor authentication that launches your default browser to select account credentials. az login Create a new resource group: az group create -n {resourcegroupname} -l {location-compatible-with-aks} Create a Kubernetes cluster with 3 nodes. This command accept parameters such as the version of Kubernetes you want installed. For this tutorial we use the default options. az aks create -n {clustername} -g {resourcegroupname} -c 3 The command (after some delay) returns a JSON object with details of the new Kubernetes cluster. Use the command below to return a list of all Kubernetes clusters in your Azure account: az aks list -o table We recommend kubectl for managing resources in the Kubernetes cluster. Set the current context for kubectl and merge it with any existing configuration in your existing config file: az aks get-credentials -n {clustername} -g {groupname} Get the list of nodes using kubectl: kubectl get nodes To use the Kubernetes dashboard you need to change the Role Base Access Control enabled by default on Azure AKS. Create a rbac-config.yaml file containing the following yaml: apiVersion: rbac.authorization.k8s.io/v1beta1 kind: ClusterRoleBinding metadata: name: kubernetes-dashboard labels: k8s-app: kubernetes-dashboard roleRef: apiGroup: rbac.authorization.k8s.io kind: ClusterRole name: cluster-admin subjects: - kind: ServiceAccount name: kubernetes-dashboard namespace: kube-system Create a deployment for this ClusterRoleBinding object kubectl create -f ./rbac-config.yaml To access the dashboard you can now use the browse command. This command is a wrapper around the proxy command of kubectl. It creates a local web server with a tunnel to the cluster hosted in Azure AKS web server az aks browse -n {clustername} -g {groupname} Deploy Event Store Cluster with Helm Helm is the package manager for Kubernetes. After you've created a new Kubernetes cluster you need to configure Helm for your local helm CLI to connect to a configured service account on the server side. The service account used by Helm is called Tiller. Give Tiller access to the cluster and initialise it with the following commands: kubectl -n kube-system create serviceaccount tiller kubectl create clusterrolebinding tiller --clusterrole cluster-admin --serviceaccount=kube-system:tiller helm init --service-account tiller You can then check if the tiller-deploy-xxxx pod is running kubectl -n kube-system get pod Now deploy the Event Store cluster using the official Helm Chart with the following commands: helm repo add eventstore https://eventstore.github.io/EventStore.Charts helm repo update helm install -n eventstore eventstore/eventstore --set persistence.enabled=true The Event Store cluster is now deployed and available in a couple of minutes. The default cluster size in the Helm Chart is set to 3 so this results in a 3 node Event Store cluster over the 3 nodes Kubernetes cluster. The setting persistence.enable=true uses a PersistentVolumeClaim on your Kubernetes cluster to claim dynamically persistent storage volumes. You can configure this to use statically defined volumes if required. Upgrade the Event Store cluster with a newer version Verify your current Event Store cluster helm status eventstore Fork the official Helm Chart Event Store repository and change the version of the image in the chart values.yaml . Then run the command in the same directory as the chart: helm upgrade eventstore . --set persistence.enabled=true The upgrade command silently upgrades all the pods one by one without downtime. Helm takes care of attaching the existing volumes to the new pods during the upgrade. Rollback to a previous version To rollback to a previous version, first use the following command to display the history helm history eventstore And the following command to rollback to a specific revision helm rollback eventstore 1 Delete resources To delete all resources associated with the EventStore installation use the following command: az aks delete -n {clustername} -g {groupname} az group delete -n {groupname}"
  },
  "server/stats-debug/index.html": {
    "href": "server/stats-debug/index.html",
    "title": "Stats and Debug Information | Event Store",
    "keywords": "Stats and Debug Information Event Store has a lot of debug and statistics information available about a cluster you can find with the following request: HTTP API Response curl -i -X GET \"http://127.0.0.1:2113/stats\" -u \"admin:changeit\" HTTP/1.1 200 OK Access-Control-Allow-Methods: GET, OPTIONS Access-Control-Allow-Headers: Content-Type, X-Requested-With, X-Forwarded-Host, X-Forwarded-Prefix, X-PINGOTHER, Authorization, ES-LongPoll, ES-ExpectedVersion, ES-EventId, ES-EventType, ES-RequiresMaster, ES-HardDelete, ES-ResolveLinkTos Access-Control-Allow-Origin: * Access-Control-Expose-Headers: Location, ES-Position, ES-CurrentVersion Cache-Control: max-age=1, public Vary: Accept Content-Type: application/json; charset=utf-8 Server: Mono-HTTPAPI/1.0 Date: Thu, 06 Dec 2018 09:39:21 GMT Content-Length: 12664 Keep-Alive: timeout=15,max=100 { \"proc\": { \"startTime\": \"2018-12-06T09:33:13.0000000Z\", \"id\": 1, \"mem\": 84639744, \"cpu\": 9.739911, \"cpuScaled\": 4.86995554, \"threadsCount\": 25, \"contentionsRate\": 57.86452, \"thrownExceptionsRate\": 0.0, \"gc\": { \"allocationSpeed\": 0.0, \"gen0ItemsCount\": 14, \"gen0Size\": 0, \"gen1ItemsCount\": 1, \"gen1Size\": 0, \"gen2ItemsCount\": 0, \"gen2Size\": 0, \"largeHeapSize\": 0, \"timeInGc\": 0.0, \"totalBytesInHeaps\": 0 }, \"diskIo\": { \"readBytes\": 30879744, \"writtenBytes\": 987136, \"readOps\": 75895, \"writeOps\": 726 }, \"tcp\": { \"connections\": 0, \"receivingSpeed\": 0.0, \"sendingSpeed\": 0.0, \"inSend\": 0, \"measureTime\": \"00:00:29.5561630\", \"pendingReceived\": 0, \"pendingSend\": 0, \"receivedBytesSinceLastRun\": 0, \"receivedBytesTotal\": 0, \"sentBytesSinceLastRun\": 0, \"sentBytesTotal\": 0 } }, \"sys\": { \"cpu\": 8.282546, \"freeMem\": 375517184, \"drive\": { \"/var/lib/eventstore\": { \"availableBytes\": 13525999616, \"totalBytes\": 15679725568, \"usage\": \"13%\", \"usedBytes\": 2153725952 } } }, \"es\": { \"checksum\": 205117, \"checksumNonFlushed\": 205117, \"queue\": { \"index Committer\": { \"queueName\": \"Index Committer\", \"groupName\": \"\", \"avgItemsPerSecond\": 0, \"avgProcessingTime\": 29590.349000000002, \"currentIdleTime\": null, \"currentItemProcessingTime\": \"0:00:06:06.3938445\", \"idleTimePercent\": 0.0, \"length\": 0, \"lengthCurrentTryPeak\": 0, \"lengthLifetimePeak\": 0, \"totalItemsProcessed\": 60, \"inProgressMessage\": \"<none>\", \"lastProcessedMessage\": \"CommitAck\" }, \"mainQueue\": { \"queueName\": \"MainQueue\", \"groupName\": \"\", \"avgItemsPerSecond\": 13, \"avgProcessingTime\": 0.012954452926208651, \"currentIdleTime\": \"0:00:00:00.0290638\", \"currentItemProcessingTime\": null, \"idleTimePercent\": 99.982804190417681, \"length\": 0, \"lengthCurrentTryPeak\": 5, \"lengthLifetimePeak\": 14, \"totalItemsProcessed\": 6366, \"inProgressMessage\": \"<none>\", \"lastProcessedMessage\": \"Schedule\" }, \"monitoringQueue\": { \"queueName\": \"MonitoringQueue\", \"groupName\": \"\", \"avgItemsPerSecond\": 0, \"avgProcessingTime\": 584.2229, \"currentIdleTime\": null, \"currentItemProcessingTime\": \"0:00:00:00.5484086\", \"idleTimePercent\": 98.025629883927763, \"length\": 0, \"lengthCurrentTryPeak\": 0, \"lengthLifetimePeak\": 1, \"totalItemsProcessed\": 25, \"inProgressMessage\": \"GetFreshStats\", \"lastProcessedMessage\": \"GetFreshStats\" }, \"projection Core #0\": { \"queueName\": \"Projection Core #0\", \"groupName\": \"Projection Core\", \"avgItemsPerSecond\": 0, \"avgProcessingTime\": 0.00966, \"currentIdleTime\": \"0:00:00:29.5815685\", \"currentItemProcessingTime\": null, \"idleTimePercent\": 99.999673204215767, \"length\": 0, \"lengthCurrentTryPeak\": 2, \"lengthLifetimePeak\": 22, \"totalItemsProcessed\": 871, \"inProgressMessage\": \"<none>\", \"lastProcessedMessage\": \"EventReaderIdle\" }, \"projection Core #1\": { \"queueName\": \"Projection Core #1\", \"groupName\": \"Projection Core\", \"avgItemsPerSecond\": 0, \"avgProcessingTime\": 0.01033, \"currentIdleTime\": \"0:00:00:29.5815941\", \"currentItemProcessingTime\": null, \"idleTimePercent\": 99.999651237588822, \"length\": 0, \"lengthCurrentTryPeak\": 2, \"lengthLifetimePeak\": 15, \"totalItemsProcessed\": 505, \"inProgressMessage\": \"<none>\", \"lastProcessedMessage\": \"EventReaderIdle\" }, \"projection Core #2\": { \"queueName\": \"Projection Core #2\", \"groupName\": \"Projection Core\", \"avgItemsPerSecond\": 0, \"avgProcessingTime\": 0.010700000000000001, \"currentIdleTime\": \"0:00:00:29.5816107\", \"currentItemProcessingTime\": null, \"idleTimePercent\": 99.999638057613979, \"length\": 0, \"lengthCurrentTryPeak\": 2, \"lengthLifetimePeak\": 53, \"totalItemsProcessed\": 2897, \"inProgressMessage\": \"<none>\", \"lastProcessedMessage\": \"EventReaderIdle\" }, \"projections Master\": { \"queueName\": \"Projections Master\", \"groupName\": \"\", \"avgItemsPerSecond\": 19, \"avgProcessingTime\": 0.0076020905923344945, \"currentIdleTime\": \"0:00:00:00.0398806\", \"currentItemProcessingTime\": null, \"idleTimePercent\": 99.9850336301286, \"length\": 0, \"lengthCurrentTryPeak\": 0, \"lengthLifetimePeak\": 12, \"totalItemsProcessed\": 7285, \"inProgressMessage\": \"<none>\", \"lastProcessedMessage\": \"Schedule\" }, \"storage Chaser\": { \"queueName\": \"Storage Chaser\", \"groupName\": \"\", \"avgItemsPerSecond\": 104, \"avgProcessingTime\": 0.00693448498546981, \"currentIdleTime\": \"0:00:00:00.0012769\", \"currentItemProcessingTime\": null, \"idleTimePercent\": 99.926313794228051, \"length\": 0, \"lengthCurrentTryPeak\": 0, \"lengthLifetimePeak\": 0, \"totalItemsProcessed\": 38228, \"inProgressMessage\": \"<none>\", \"lastProcessedMessage\": \"ChaserCheckpointFlush\" }, \"storageReaderQueue #1\": { \"queueName\": \"StorageReaderQueue #1\", \"groupName\": \"StorageReaderQueue\", \"avgItemsPerSecond\": 0, \"avgProcessingTime\": 0.19243333333333335, \"currentIdleTime\": \"0:00:00:00.5597500\", \"currentItemProcessingTime\": null, \"idleTimePercent\": 99.994147076653874, \"length\": 0, \"lengthCurrentTryPeak\": 0, \"lengthLifetimePeak\": 1, \"totalItemsProcessed\": 274, \"inProgressMessage\": \"<none>\", \"lastProcessedMessage\": \"ReadStreamEventsBackward\" }, \"storageReaderQueue #2\": { \"queueName\": \"StorageReaderQueue #2\", \"groupName\": \"StorageReaderQueue\", \"avgItemsPerSecond\": 0, \"avgProcessingTime\": 0.11274545454545454, \"currentIdleTime\": \"0:00:00:00.0290949\", \"currentItemProcessingTime\": null, \"idleTimePercent\": 99.995787138839844, \"length\": 0, \"lengthCurrentTryPeak\": 0, \"lengthLifetimePeak\": 1, \"totalItemsProcessed\": 280, \"inProgressMessage\": \"<none>\", \"lastProcessedMessage\": \"ReadStreamEventsForward\" }, \"storageReaderQueue #3\": { \"queueName\": \"StorageReaderQueue #3\", \"groupName\": \"StorageReaderQueue\", \"avgItemsPerSecond\": 0, \"avgProcessingTime\": 0.0953888888888889, \"currentIdleTime\": \"0:00:00:02.0327931\", \"currentItemProcessingTime\": null, \"idleTimePercent\": 99.9970993914555, \"length\": 0, \"lengthCurrentTryPeak\": 0, \"lengthLifetimePeak\": 1, \"totalItemsProcessed\": 262, \"inProgressMessage\": \"<none>\", \"lastProcessedMessage\": \"ReadStreamEventsForward\" }, \"storageReaderQueue #4\": { \"queueName\": \"StorageReaderQueue #4\", \"groupName\": \"StorageReaderQueue\", \"avgItemsPerSecond\": 0, \"avgProcessingTime\": 0.087377777777777776, \"currentIdleTime\": \"0:00:00:01.0318977\", \"currentItemProcessingTime\": null, \"idleTimePercent\": 99.997328182310355, \"length\": 0, \"lengthCurrentTryPeak\": 0, \"lengthLifetimePeak\": 1, \"totalItemsProcessed\": 282, \"inProgressMessage\": \"<none>\", \"lastProcessedMessage\": \"ReadStreamEventsForward\" }, \"storageWriterQueue\": { \"queueName\": \"StorageWriterQueue\", \"groupName\": \"\", \"avgItemsPerSecond\": 0, \"avgProcessingTime\": 4.42, \"currentIdleTime\": \"0:00:00:29.5843498\", \"currentItemProcessingTime\": null, \"idleTimePercent\": 99.985062693918209, \"length\": 0, \"lengthCurrentTryPeak\": 0, \"lengthLifetimePeak\": 2, \"totalItemsProcessed\": 65, \"inProgressMessage\": \"<none>\", \"lastProcessedMessage\": \"WritePrepares\" }, \"subscriptions\": { \"queueName\": \"Subscriptions\", \"groupName\": \"\", \"avgItemsPerSecond\": 1, \"avgProcessingTime\": 0.022990322580645161, \"currentIdleTime\": \"0:00:00:00.0293309\", \"currentItemProcessingTime\": null, \"idleTimePercent\": 99.997594823346091, \"length\": 0, \"lengthCurrentTryPeak\": 0, \"lengthLifetimePeak\": 10, \"totalItemsProcessed\": 436, \"inProgressMessage\": \"<none>\", \"lastProcessedMessage\": \"CheckPollTimeout\" }, \"timer\": { \"queueName\": \"Timer\", \"groupName\": \"\", \"avgItemsPerSecond\": 32, \"avgProcessingTime\": 0.024676409185803758, \"currentIdleTime\": \"0:00:00:00.0093879\", \"currentItemProcessingTime\": null, \"idleTimePercent\": 99.918283810581556, \"length\": 9, \"lengthCurrentTryPeak\": 15, \"lengthLifetimePeak\": 614, \"totalItemsProcessed\": 12915, \"inProgressMessage\": \"<none>\", \"lastProcessedMessage\": \"ExecuteScheduledTasks\" }, \"worker #1\": { \"queueName\": \"Worker #1\", \"groupName\": \"Workers\", \"avgItemsPerSecond\": 1, \"avgProcessingTime\": 0.18848333333333334, \"currentIdleTime\": \"0:00:00:00.0295425\", \"currentItemProcessingTime\": null, \"idleTimePercent\": 99.973144953850138, \"length\": 0, \"lengthCurrentTryPeak\": 1, \"lengthLifetimePeak\": 1, \"totalItemsProcessed\": 520, \"inProgressMessage\": \"<none>\", \"lastProcessedMessage\": \"PurgeTimedOutRequests\" }, \"worker #2\": { \"queueName\": \"Worker #2\", \"groupName\": \"Workers\", \"avgItemsPerSecond\": 1, \"avgProcessingTime\": 0.2823279069767442, \"currentIdleTime\": \"0:00:00:00.0295030\", \"currentItemProcessingTime\": null, \"idleTimePercent\": 99.958977493122433, \"length\": 0, \"lengthCurrentTryPeak\": 1, \"lengthLifetimePeak\": 1, \"totalItemsProcessed\": 516, \"inProgressMessage\": \"<none>\", \"lastProcessedMessage\": \"PurgeTimedOutRequests\" }, \"worker #3\": { \"queueName\": \"Worker #3\", \"groupName\": \"Workers\", \"avgItemsPerSecond\": 1, \"avgProcessingTime\": 0.018606976744186047, \"currentIdleTime\": \"0:00:00:00.0294627\", \"currentItemProcessingTime\": null, \"idleTimePercent\": 99.997299118709734, \"length\": 0, \"lengthCurrentTryPeak\": 1, \"lengthLifetimePeak\": 1, \"totalItemsProcessed\": 517, \"inProgressMessage\": \"<none>\", \"lastProcessedMessage\": \"PurgeTimedOutRequests\" }, \"worker #4\": { \"queueName\": \"Worker #4\", \"groupName\": \"Workers\", \"avgItemsPerSecond\": 1, \"avgProcessingTime\": 0.013951162790697674, \"currentIdleTime\": \"0:00:00:00.0292979\", \"currentItemProcessingTime\": null, \"idleTimePercent\": 99.997871940733575, \"length\": 0, \"lengthCurrentTryPeak\": 1, \"lengthLifetimePeak\": 1, \"totalItemsProcessed\": 517, \"inProgressMessage\": \"<none>\", \"lastProcessedMessage\": \"PurgeTimedOutRequests\" }, \"worker #5\": { \"queueName\": \"Worker #5\", \"groupName\": \"Workers\", \"avgItemsPerSecond\": 1, \"avgProcessingTime\": 0.00796046511627907, \"currentIdleTime\": \"0:00:00:00.0290928\", \"currentItemProcessingTime\": null, \"idleTimePercent\": 99.998844217454163, \"length\": 0, \"lengthCurrentTryPeak\": 1, \"lengthLifetimePeak\": 1, \"totalItemsProcessed\": 517, \"inProgressMessage\": \"<none>\", \"lastProcessedMessage\": \"ReadStreamEventsForwardCompleted\" } }, \"writer\": { \"lastFlushSize\": 17025, \"lastFlushDelayMs\": 4.2292, \"meanFlushSize\": 4018, \"meanFlushDelayMs\": 2.6562450980392156, \"maxFlushSize\": 17025, \"maxFlushDelayMs\": 6.9021, \"queuedFlushMessages\": 0 }, \"readIndex\": { \"cachedRecord\": 306, \"notCachedRecord\": 0, \"cachedStreamInfo\": 3012, \"notCachedStreamInfo\": 90, \"cachedTransInfo\": 0, \"notCachedTransInfo\": 0 } } }% This returns a lot of information that you can filter using the sub-path of the stat: HTTP API Response curl -i -X GET \"http://127.0.0.1:2113/stats/proc/tcp\" -u \"admin:changeit\" HTTP/1.1 200 OK Access-Control-Allow-Methods: GET, OPTIONS Access-Control-Allow-Headers: Content-Type, X-Requested-With, X-Forwarded-Host, X-Forwarded-Prefix, X-PINGOTHER, Authorization, ES-LongPoll, ES-ExpectedVersion, ES-EventId, ES-EventType, ES-RequiresMaster, ES-HardDelete, ES-ResolveLinkTos Access-Control-Allow-Origin: * Access-Control-Expose-Headers: Location, ES-Position, ES-CurrentVersion Cache-Control: max-age=1, public Vary: Accept Content-Type: application/json; charset=utf-8 Server: Mono-HTTPAPI/1.0 Date: Thu, 06 Dec 2018 10:03:55 GMT Content-Length: 280 Keep-Alive: timeout=15,max=100 { \"connections\": 0, \"receivingSpeed\": 0.0, \"sendingSpeed\": 0.0, \"inSend\": 0, \"measureTime\": \"00:00:05.0223780\", \"pendingReceived\": 0, \"pendingSend\": 0, \"receivedBytesSinceLastRun\": 0, \"receivedBytesTotal\": 0, \"sentBytesSinceLastRun\": 0, \"sentBytesTotal\": 0 }% You can find more information on what each stat returns by searching for it in the reference code documentation under .NET API -> Code Documentation . <!-- TODO: Make this better, embed -->"
  },
  "server/setting-up-ssl/index.html": {
    "href": "server/setting-up-ssl/index.html",
    "title": "Setting up SSL | Event Store",
    "keywords": "Setting up SSL Setting up SSL on Windows The steps to set up SSL on Windows are as follows. First, create a certificate using powershell, and copy the thumbprint from the output New-SelfSignedCertificate -DnsName eventstore.org, localhost -CertStoreLocation cert:\\CurrentUser\\My To trust the new certificate, the certificate you have to import the certificate into the Trusted Root Certification Authorities: Press WindowsKey + R , and enter 'certmgr.msc'. Navigate to Certificates -> Current User -> Personal -> Certificates . Locate the certificate 'eventstore.org'. Right click on the certificate and click on All Tasks -> Export . Follow the prompts. Navigate to Certificates -> Current User -> Trusted Root Certification Authorities -> Certificates . Right click on the Certificates folder menu item and click All Tasks -> Import . Follow the prompts. Start Event Store with the following configuration in a configuration file : CertificateStoreLocation: CurrentUser CertificateStoreName: My CertificateThumbPrint: {Insert Thumb Print from Step 1} CertificateSubjectName: CN=eventstore.org ExtSecureTcpPort: 1115 Connect to Event Store: .NET API HTTP API var settings = ConnectionSettings.Create().UseSslConnection(\"eventstore.org\", true); using (var conn = EventStoreConnection.Create(settings, new IPEndPoint(IPAddress.Loopback, 1115))) { conn.ConnectAsync().Wait(); } curl -vk --cert <PATH_TO_CERT> --key <PATH_TO_KEY> -i -d \"@event.json\" \"http://127.0.0.1:2113/streams/newstream\" -H \"Content-Type:application/vnd.eventstore.events+json\" Setting up SSL on Linux Note This guide uses the latest Ubuntu LTS (18.04) First, create a private key and self-signed certificate request (This is only for testing purposes) openssl req \\ -x509 -sha256 -nodes -days 365 -subj \"/CN=eventstore.org\" \\ -newkey rsa:2048 -keyout eventstore.pem -out eventstore.csr Export a p12 file from the certificate request. You use this when starting Event Store: openssl pkcs12 -export -inkey eventstore.pem -in eventstore.csr -out eventstore.p12 You need to add the certificate to Ubuntu's trusted certificates. Copy the cert to the ca-certificates folder and update the certificates: sudo cp eventstore.csr /usr/local/share/ca-certificates/eventstore.crt sudo update-ca-certificates The mono framework has its own separate certificate store which you need to sync with the changes you made to Ubuntu's certificates. You first need to install mono-devel : sudo apt-get install mono-devel This process installs cert-sync , which you use to update mono's certificate store with the new certificate: sudo cert-sync eventstore.csr Start Event Store with the following configuration in a configuration file : CertificateFile: eventstore.p12 ExtSecureTcpPort: 1115 Connect to Event Store: .NET API HTTP API var settings = ConnectionSettings.Create().UseSslConnection(\"eventstore.org\", true); using (var conn = EventStoreConnection.Create(settings, new IPEndPoint(IPAddress.Loopback, 1115))) { conn.ConnectAsync().Wait(); } curl -vk --cert <PATH_TO_CERT> --key <PATH_TO_KEY> -i -d \"@event.json\" \"http://127.0.0.1:2113/streams/newstream\" -H \"Content-Type:application/vnd.eventstore.events+json\""
  },
  "server/ports-and-networking/index.html": {
    "href": "server/ports-and-networking/index.html",
    "title": "Ports and networking | Event Store",
    "keywords": "Ports and networking Single Node If you run Event Store as a single node, it only uses two ports. The first port is the external HTTP port, and the default value is 2113 . Event Store uses this port for both the client HTTP APIs and for the management HTTP interface. The second port used is the TCP interface for clients connecting over the client API, and the default for the port is 1113 . Event Store in Windows tries to add access via http.sys automatically for the 2113 port. You should ensure that these ports are open and allowed via a firewall. Cluster Node When running in cluster mode the networking for Event Store is more complex. Cluster mode requires 4 ports to run. The ports are for internal HTTP, internal TCP, external HTTP, and external TCP. <!-- TODO: And they are? --> The internal and external interfaces allow for separation of traffic. The internal network is where cluster communications runs, while the external interfaces is where client communications runs. This separation allows for more secure setups such as putting internal communications on a different network than external client communications. For example, you might want to allow clients over HTTP to talk directly to Event Store, and you can move internal communications to a separate network to ensure the management interface and internal operations are not accessible to external traffic. The external TCP and HTTP ports are similar to the HTTP and TCP ports of a single node deploy. Event Store runs client requests over the HTTP API through the external HTTP port. You can run without the management API on the external interface (internal only). The external and the internal interfaces support the gossip protocol. You can control whether the admin interface is available on the external HTTP interface using the admin-on-ext option . You can control whether gossip is enabled on external interfaces with the gossip-on-ext option (you normally want it enabled). You configure the internal TCP and HTTP ports in the same way as the external. All internal communications for the cluster happen over these interfaces. Elections and internal gossip happen over HTTP. Replication and forwarding of client requests happens over the TCP channel. When setting up a cluster the nodes must be able to reach each other over both the internal HTTP channel and the internal TCP channel. You should ensure that these ports are open on firewalls on the machines and between the machines. Heartbeat Timeouts Event Store uses heartbeats over all TCP connections to discover dead clients and nodes. Setting heartbeat timeouts requires thought. Set them too short and you receive false positives, set them too long and discovery of dead clients and nodes is slower. Each heartbeat has two points of configuration. The first is the 'interval', this represents how often the system should consider a heartbeat. Event Store doesn't send a heartbeat for every interval. Event Store sends heartbeat requests if it has not heard from a node within the configured interval. On a busy cluster, you may never see any heartbeats. The second point of configuration is the 'timeout'. This determines how long Event Store waits for a client or node to respond to a heartbeat request. Different environments need different values for these settings. While low numbers work well on a LAN they tend to not work well in the cloud. The defaults are likely fine on a LAN, for the cloud, consider setting: An interval of 5000ms. A timeout of 1000ms. Tip If in doubt, choose higher numbers. This adds a small period of time to discover a dead client or node and is better than the alternative, which is false positives. Advertise As Due to NAT, or other reasons a node may not be bound to the address it is reachable from other nodes. For example, the machine has an IP address of 192.168.1.13, but the node is visible to other nodes as 10.114.12.112. The option advertise-as allows you to tell the node that even though it is bound to a given address it should not gossip that address. Instead it uses the address that you tell it to use. In the example above you would configure\" --ext-ip 192.168.1.13 --advertise-as 10.114.12.112 Or use the equivalent configuration via environment variables or a configuration file."
  },
  "server/default-directories/index.html": {
    "href": "server/default-directories/index.html",
    "title": "Default Directories | Event Store",
    "keywords": "Default Directories The default directories used by Event Store vary by platform to fit with the common practices each platform. Note Paths beginning with \".\" are relative to the directory in which eventstored or EventStore.ClusterNode.exe are located. Absolute paths are as written. Linux Application: /usr/bin Content: /usr/share/eventstore Configuration: /etc/eventstore/ Data: /var/lib/eventstore Application Logs: /var/log/eventstore Test Client Logs: ./testclientlog Web Content: ./clusternode-web then {Content}/clusternode-web Projections: ./projections then {Content}/projections Prelude: ./Prelude then {Content}/Prelude Windows and macOS Content: ./ Configuration: ./ Data: ./data Application Logs: ./logs Test Client Log: ./testclientlogs Web Content: ./clusternode-web then {Content}/clusternode-web Projections: ./projections then {Content}/projections Prelude: ./Prelude then {Content}/Prelude"
  },
  "server/cluster-with-manager-nodes/index.html": {
    "href": "server/cluster-with-manager-nodes/index.html",
    "title": "Setting up a Cluster with Manager Nodes | Event Store",
    "keywords": "Setting up a Cluster with Manager Nodes <!-- TODO: How much of this is also relevant to OSS? --> High availability Event Store allows you to run more than one node as a cluster. There are two modes available for clustering: With database nodes only (open source and commercial) With manager nodes and database nodes (commercial only) This document covers setting up Event Store with manager nodes and database nodes. Tip When setting up a cluster, you generally want an odd number of nodes as Event Store uses a quorum based algorithm to handle high availability. We recommended you define an odd number of nodes to avoid split brain problems. Common values for the ‘ClusterSize’ setting are 3 or 5 (to have a majority of 2 nodes and a majority of 3 nodes). Next Steps Read here for more information on the roles available for nodes in an Event Store cluster. Manager Nodes Each physical (or virtual) machine in an Event Store cluster typically runs one manager node and one database node. It's also possible to have multiple database nodes per physical machine, running under one manager node. Manager nodes have a number of responsibilities: They are responsible for starting the database nodes and supervising them to ensure they rest in case of a crash or termination owing to abnormal circumstances. Event Store calls this the watchdog service. They communicate with other manager nodes to find cluster state, and relay that information to the database nodes under management. They provide a known endpoint for clients to connect to and discover cluster information. When running on Windows, manager nodes run as Windows services. Configuring Nodes Each database or manager node can have a variety of configuration sources . Each source has a priority and determines running configuration by evaluating each source and applying the option from the source with the highest priority. From lowest to highest priority, the sources of configuration are: Default settings. Settings specified in a configuration file written using YAML. Settings specified in environment variables. Settings specified as command line options to the node. You can check the configuration of a node by passing the -WhatIf flag to the process. Typical Deployment Topologies Event Store clusters follow a \"shared nothing\" philosophy, meaning that clustering requires no shared disks for clustering to work. Instead, several database nodes store your data to ensure it isn't lost in case of a drive failure or a node crashing. Event Store uses a quorum-based replication model, in which a majority of nodes in the cluster must acknowledge that they committed a write to disk before acknowledging the write to the client. This means that to be able to tolerate the failure of n nodes, the cluster must be of size (2n + 1) . A three-database-node cluster can continue to accept writes if one node is unavailable. A five-database-node cluster can continue to accept writes if two nodes are unavailable, and so forth. A typical deployment topology consists of three physical machines, each running one manager node and one database node. Each of the physical machines may have two network interfaces, one for communicating with other cluster members, and one for serving clients. Although it may be preferable in some situations to run over two separate networks. It's also possible to use different TCP ports on one interface. Cluster gossip Event Store uses a quorum-based replication model. When working normally, a cluster has one database node known as a master , and the remaining nodes are slaves . The master node is responsible for coordinating writes while it is the master. Database nodes use a consensus algorithm to determine which database node should be master and which should be slaves. Event Store bases the decision as to which node should be the master on a number of factors ( some of which are configurable ). For database nodes to have this information available to them, the nodes gossip with other nodes in the cluster. Gossip runs over the internal (and optionally the external) HTTP interfaces of database nodes, and over both internal and external interfaces of manager nodes. Discovering cluster members Manager and database nodes need to know about one another to gossip. To start this process, you provide gossip seeds or the addresses where it can find other nodes, to each node. When running with manager nodes, it normally uses the following approach: On each physical machine, configure the database node(s) with a gossip seed of the internal HTTP interface of the manager running on the same physical machine. Configure the managers to discover other managers in one of two ways: via a DNS entry and a well-known gossip port. via a list of other managers' addresses. The preferred method is via a DNS entry. To set this up, create a DNS entry for the cluster with an A record pointing to each member of the cluster. Each manager looks up other nodes in the cluster during the startup process based on the DNS name. Since DNS only provides information about addresses, you need to use a consistent TCP port across the cluster for gossip. <!-- TODO: Should this be more practical? --> Example 1 - A Three-Machine Cluster This example shows the configuration for a three node cluster, running in the typical setup of one manager node and one database node per physical machine, with cluster discovery via DNS. Each machine has one network interface, therefore uses different ports for the internal and external traffic. All nodes, in this case, are running Windows, so the manager nodes run as Windows services. The important points for writing configuration files are: Node IP Addresses: 192.168.1.11, 192.168.1.12 and 192.168.13 TCP ports: (defaults): Manager Nodes: Internal HTTP: 30777 External HTTP: 30778 Database Nodes: Internal TCP: 1112 External TCP: 1113 Internal HTTP: 2112 External HTTP: 2113 DNS Entry Name: cluster1.eventstore.local To configure the cluster correctly, there are a number of steps to follow: Set up a DNS entry named cluster1.eventstore.local with an A record for each node. Write the database node configuration file for each machine. Write the manager node configuration file for each machine. Write the watchdog configuration file for each machine. Deploy Event Store and the configuration files to each machine. ( Windows-specific ) Add HTTP URL ACL entries to allow starting HTTP servers on the required HTTP ports. ( Windows-specific ) Install the manager as a service and start the service. ( Linux-specific ) Configure the manager as a daemon. DNS entry It depends on which DNS server you use, but the eventual lookup should read: $ nslookup cluster1.eventstore.local Server: 192.168.1.2 Address: 192.168.1.2#53 Name: cluster.eventstore.local Address: 192.168.1.11 Name: cluster.eventstore.local Address: 192.168.1.12 Name: cluster.eventstore.local Address: 192.168.1.13 Database Node Configuration All three nodes are similar in configuration. The important configuration points are the: IP Addresses for internal and external interfaces. The ports for each endpoint. The location of the database file. The size of the cluster The endpoints from which to seed gossip (in this case the local manager). We assume that Event Store stores data on the _D:_ drive. You write the configuration files in YAML, and is the following for the first node: Filename: database.yaml Db: d:\\es-data IntIp: 192.168.1.11 ExtIp: 192.168.1.11 IntTcpPort: 1112 IntHttpPort: 2112 ExtTcpPort: 1113 ExtHttpPort: 2113 DiscoverViaDns: false GossipSeed: ['192.168.1.11:30777'] ClusterSize: 3 For each following node, the IP Addresses change, as does the gossip seed, since it is the manager running on the same physical machine as each node. Manager Configuration Again, all three nodes are similar in configuration. The important configuration points are the: IP addresses for the internal and external interfaces. The ports for the HTTP endpoints. The log location. The DNS information about other nodes. Another important configuration item is which database nodes the manager is responsible for starting. You define this in a separate file (the watchdog configuration), the path to which you specify as WatchdogConfig in the manager configuration. You write the configuration files in YAML, and is the following for the first node: Filename: manager.yaml IntIp: 192.168.1.11 ExtIp: 192.168.1.11 IntHttpPort: 30777 ExtHttpPort: 30778 DiscoverViaDns: true ClusterDns: cluster1.eventstore.local ClusterGossipPort: 30777 EnableWatchdog: true WatchdogConfig: c:\\EventStore-Config\\watchdog.esconfig Log: d:\\manager-log Watchdog Configuration The watchdog configuration file details which database nodes the manager is responsible for starting and supervising. Unlike the other configuration files, the manager configuration uses a custom format instead of YAML. Each node for which the manager is responsible has one line in the file, which starts with a # symbol and then details the command line options given to the database node when it starts it. Under normal circumstances, this is the path to the database node's configuration file. For the first node in the example cluster, the watchdog configuration file reads as follows: # --config c:\\EventStore-Config\\database.yaml Deploying Event Store software and configuration With configuration files for each node written, you can now deploy Event Store and the configuration. Although it's possible to use relative paths when writing configuration files, it's preferable to use absolute paths to reduce the potential for confusion. In this example, Event Store is deployed on each node in _c:\\EventStore-HA-v_, and the configuration files for that node are deployed into _C:\\EventStore-Config_. No installation process is necessary, you unzip the packaged distribution into your preferred location. Adding HTTP ACL entries for HTTP servers (Windows-Specific) <!-- TODO: Check this --> To allow for non-elevated users to run HTTP servers on Windows, you must add entries to the access control list using netsh . By default, the manager node runs as NT AUTHORITY\\Local Service , so this is the user who must have permission to run the HTTP server. The commands used to add these entries on node one are as follows (Run as an elevated user): # Database Node Internal HTTP Interface netsh http add urlacl url=http://192.168.1.11:2112/ user=\"NT AUTHORITY\\LOCAL SERVICE\" # Database Node External HTTP Interface netsh http add urlacl url=http://192.168.1.11:2113/ user=\"NT AUTHORITY\\LOCAL SERVICE\" # Manager Node Internal HTTP Interface netsh http add urlacl url=http://192.168.1.11:30777/ user=\"NT AUTHORITY\\LOCAL SERVICE\" # Manager Node External HTTP Interface netsh http add urlacl url=http://192.168.1.11:30778/ user=\"NT AUTHORITY\\LOCAL SERVICE\" Configure the Manager Node as a service (Windows-Specific) You can install manager nodes as a Windows service so they can start on boot rather than running in interactive mode. Each manager service is given an instance name, which becomes the name of the service (and part of the description for easy identification). The service is installed by default with a startup type of \"Automatic (Delayed Start)\". Installing the service To install the manager node on machine 1, use the following command: C:\\EventStore-HA-v\\> EventStore.WindowsManager.exe install -InstanceName es-cluster1 -ManagerConfig C:\\EventStore-Config\\manager.yaml The service is then visible in the services list, with a description of \"Event Store Manager (es-cluster1)\". Uninstalling the service To uninstall the manager node service, use the following command (where the instance name matches the name used during installation). C:\\EventStore-HA-v\\> EventStore.WindowsManager.exe uninstall -InstanceName es-cluster1 Manually starting and stopping the service To start the manager node use the net start es-cluster1 command. To stop the manager node use the net stop es-cluster1 command."
  },
  "projections/user-defined-projections/index.html": {
    "href": "projections/user-defined-projections/index.html",
    "title": "User Defined Projections | Event Store",
    "keywords": "User Defined Projections <!-- TODO: Again refactor to shopping cart? --> You write user defined projections in JavaScript. For example, the my_demo_projection_result projection below counts the number of myEventType events from the account-1 stream. It then uses the transformBy function to change the final state: options({ resultStreamName: \"my_demo_projection_result\", $includeLinks: false, reorderEvents: false, processingLag: 0 }) fromStream('account-1') .when({ $init:function(){ return { count: 0 } }, myEventType: function(state, event){ state.count += 1; } }) .transformBy(function(state){ state.count = 10; }) .outputState() <!-- TODO: Show example output, see above comment --> User Defined Projections API Options Name Description Notes resultStreamName Overrides the default resulting stream name for the outputState() transformation, which is $projections-{projection-name}-result . $includeLinks Configures the projection to include/exclude link to events. Default: false processingLag When reorderEvents is enabled, this value is used to compare the total milliseconds between the first and last events in the buffer and if the value is equal or greater, the events in the buffer are processed. The buffer is an ordered list of events. Default: 500ms Only valid for fromStreams() selector reorderEvents Process events by storing a buffer of events ordered by their prepare position Default: false Only valid for fromStreams() selector Selectors Selector Description Notes fromAll() Selects events from the $all stream. Provides partitionBy when foreachStream outputState fromCategory({category}) Selects events from the $ce-{category} stream. Provides partitionBy when foreachStream outputState fromStream({streamId}) Selects events from the {streamId} stream. Provides partitionBy when outputState fromStreams([]streams) Selects events from the streams supplied. Provides partitionBy when outputState fromStreamsMatching(function filter) Selects events from the $all stream that returns true for the given filter. Provides when Filters/Transformations Filter/Partition Description Notes when(handlers) Allows only the given events of a particular to pass through the projection. Provides $defines_state_transform transformBy filterBy outputTo outputState foreachStream() Partitions the state for each of the streams provided. Provides when outputState() If the projection maintains state, setting this option produces a stream called $projections-{projection-name}-result with the state as the event body. Provides transformBy filterBy outputTo partitionBy(function(event)) Partitions a projection by the partition returned from the handler. Provides when transformBy(function(state)) Provides the ability to transform the state of a projection by the provided handler. Provides transformBy filterBy outputState outputTo filterBy(function(state)) Causes projection results to be null for any state that returns a false value from the given predicate. Provides transformBy filterBy outputState outputTo Handlers Each handler is provided with the current state of the projection as well as the event that triggered the handler. The event provided through the handler contains the following properties. isJson : true/false data : {} body : s{} bodyRaw : string sequenceNumber : integer metadataRaw : {} linkMetadataRaw : string partition : string eventType : string Handler Description Notes {event-type} When using fromAll() and 2 or more event type handlers are specified and the $by_event_type projection is enabled and running, the projection starts as a fromStreams($et-event-type-foo, $et-event-type-bar) until the projection has caught up and moves to reading from the transaction log (i.e. from $all ). $init Provide the initialization for a projection. Commonly used to setup the initial state for a projection. $initShared Provide the initialization for a projection where the projection is possibly partitioned. $any Event type pattern match that match any event type. Commonly used when the user is interested in any event type from the selector. $deleted Called upon the deletion of a stream. Can only be used with foreachStream Functions Name Description Notes emit(streamId, eventName, eventBody, metadata) Writes an event to the designated stream linkTo(streamId, event, metadata) Writes a link to event to the designated stream"
  },
  "projections/system-projections/index.html": {
    "href": "projections/system-projections/index.html",
    "title": "System Projections | Event Store",
    "keywords": "System Projections <!-- TODO: retrofit to shopping cart examples? --> Event Store ships with 4 built in projections. By Category ( $by_category ) By Event Type ( $by_event_type ) By Correlation ID ( $by_correlation_id ) Stream by Category ( $stream_by_category ) Streams ( $streams ) Enabling System Projections When you start Event Store from a fresh database, these projections are present but disabled and querying their statuses returns Stopped . You can enable a projection by issuing a request which switches the status of the projection from Stopped to Running . HTTP API .NET Client curl -i -X POST \"http://{event-store-ip}:{ext-http-port}/projection/{projection-name}/command/enable\" -H \"accept:application/json\" -H \"Content-Length:0\" -u admin:changeit <!-- TODO: Is there a .NET equivelant? --> By Category The $by_category ( http://127.0.0.1:2113/projection/$by_category ) projection links existing events from streams to a new stream with a $ce- prefix (a category) by splitting a stream id by a configurable separator. first - You can configure the separator, as well as where to split the stream id . You can edit the projection and provide your own values if the defaults don't fit your particular scenario. The first parameter specifies how the separator is used, and the possible values for that parameter is first or last . The second parameter is the separator, and can be any character. For example, if the body of the projection is first and - , for a stream id of account-1 , the stream name the projection creates is $ce-account . If the body of the projection is last and - , for a stream id of shopping-cart-1 , the stream name the projection creates is $ce-shopping-cart . By Event Type The $by_event_type ( http://127.0.0.1:2113/projection/$by_event_type ) projection links existing events from streams to a new stream with a stream id in the format $et-{event-type} . You cannot configure this projection. By Correlation ID The $by_correlation_id ( http://127.0.0.1:2113/projection/$by_correlation_id ) projection links existing events from projections to a new stream with a stream id in the format $bc-<correlation id> . The projection takes one parameter, a JSON string as a projection source: {\"correlationIdProperty\":\"$myCorrelationId\"} Stream By Category The $stream_by_category ( http://127.0.0.1:2113/projection/$by_category ) projection links existing events from streams to a new stream with a $category prefix by splitting a stream id by a configurable separator. first - By default the $stream_by_category projection links existing events from a stream id with a name such as account-1 to a stream called $category-account . You can configure the separator as well as where to split the stream id . You can edit the projection and provide your own values if the defaults don't fit your particular scenario. The first parameter specifies how the separator is used, and the possible values for that parameter is first or last . The second parameter is the separator, and can be any character. For example, if the body of the projection is first and - , for a stream id of account-1 , the stream name the projection creates is $category-account . If the body of the projection is last and - , for a stream id of shopping-cart-1 , the stream name the projection creates is $category-shopping-cart . Streams The $streams ( http://127.0.0.1:2113/projection/$streams ) projection links existing events from streams to a stream named $streams You cannot configure this projection."
  },
  "projections/projections-config/index.html": {
    "href": "projections/projections-config/index.html",
    "title": "Configuring Projections | Event Store",
    "keywords": "Configuring Projections <!-- TODO: And how do you change them? UI, .NET, HTTP etc --> By changing these settings, you can lessen the amount of pressure projections put on an Event Store node or improve projection performance. You can change these settings on a case-by-case basis, and monitor potential improvements. Note You can only change the configuration of a stopped projection. You change the configuration of a projection by setting the relevant key and value in a request, or when you create a projection with the web admin interface. HTTP API .NET Client <!-- TODO: Further explanation here --> curl -i --data-binary \"@xbox-one-s-counter.json\" http://localhost:2113/projections/continuous?name=xbox-one-s-counter%26type=js%26enabled=true%26emit=true%26trackemittedstreams=true -u admin:changeit <!-- TODO: Further explanation here --> PersistentSubscriptionSettings settings = PersistentSubscriptionSettings.Create() .DoNotResolveLinkTos() .StartFromCurrent(); conn.CreatePersistentSubscriptionAsync(streamName, \"examplegroup\", settings, adminCredentials).Wait(); <!-- ## [JVM Client](#tab/tabid-7) --> <!-- TODO: Exists? --> Emit options These options control how projections write events. In busy systems, projections can put a lot of extra pressure on the master node. This is especially true for Event Store servers that also have persistent subscriptions running, which only the master node can process. If you see a lot of commit timeouts and slow writes from your projections and other clients, then start with these settings. Emit Enabled The emit boolean setting determines whether a projection can emit events and any projection that calls emit() or linkTo() requires it. If this option is not set and a projection attempts to emit events, you see an error message like the following: <!-- TODO: Is it emit or emitenabled? Or are .NET and HTTP different --> 'emit' is not allowed by the projection/configuration/mode Event Store disables this setting by default, and is usually set when you create the projection and if you need the projection to emit events. Track Emitted Streams The trackemittedstreams boolean setting enables tracking of a projection's emitted streams. It only has an affect if the projection has EmitEnabled enabled. Tracking emitted streams enables you to delete a projection and all the streams that it has created. You should only the setting if you intend to delete a projection and create new ones that project to the same stream. Warning By default Event Store disables the trackemittedstreams setting for projections. When enabled, an event written records the stream name (in $projections-{projection_name}-emittedstreams ) of each event emitted by the projection. This means that write amplification is a possibility, as each event that the projection emits writes a separate event. As such, this option is not recommended for projections that emit a lot of events, and you should enable only where necessary. Tip Between Event Store versions 3.8.0 and 4.0.2, this option was enabled by default when a projection was created through the UI. If you have any projections created during this time frame, it's worth checking whether this option is enabled. Max Allowed Writes in Flight <!-- TODO: Why is this not in the GUI for new projection? --> <!-- TODO: Is the setting name correct? Especially in HTTP --> The AllowedInFlightMessages setting sets the maximum number of writes to allow for a projection. Because a projection can write to multiple different streams, it's possible for the projection to send multiple writes at the same time. This option sets the number of concurrent writes that a projection can perform. By default, projections try to perform writes as quickly as they come. This can add a lot of pressure to a node, especially for projections that emit to many different streams. If you see your projections causing frequent commit timeouts or slow reads, you can try lowering this value to see if there is any improvement. Note Lower values may cause the projection to slow down as the number of writes are throttled, but the trade off for this is cleaner logs and fewer commit timeouts. By default, this is unbounded, allowing a projection to write as fast as it can. Max Write Batch Length <!-- TODO: Why is this not in the GUI for new projection? --> <!-- TODO: Is the setting name correct? Especially in HTTP --> The MaxWriteBatchLength setting sets the maximum number of events the projection can write in a batch at a time. The default for this option is 500. Checkpoint options Checkpoints store how far along a projection is in the streams it is processing from. There is a performance overhead with writing a checkpoint, as it does more than write an event, and writing them too often can slow projections down. We recommend you try other methods of improving projections before changing these values, as checkpoints are an important part of running projections. Checkpoint After Ms The CheckpointAfterMs setting prevents a new checkpoint from being written within a certain time frame from the previous one. The setting is to keep a projection from writing too many checkpoints too quickly, something that can happen in a busy system. The default setting is 0 seconds, which means there is no limit to how quickly checkpoints can be written. Checkpoint Handled Threshold The CheckpointHandledThreshold setting controls the number of events that a projection can handle before attempting to write a checkpoint. An event is considered handled if it actually passed through the projection's filter. If the projection is set to checkpoint every 4,000 events, but it only reads from the foo stream, the projection only checkpoints every 4,000 foo events. The default setting is 4,000 events. Checkpoint Unhandled Bytes Threshold The CheckpointUnhandledBytesThreshold setting specifies the number of bytes a projection can process before attempting to write a checkpoint. Unhandled bytes are the events that are not processed by the projection itself. For example, if the projection reads from the foo stream, but writes from the bar stream comes through, a checkpoint is written after this number of bytes have been processed. This prevents the projection from having to read through a potentially large number of unrelated events again because none of them passed its filter. The default setting is 10mb. Processing options Pending Events Threshold The PendingEventsThreshold setting determines the number of events that can be pending before the projection is paused. Pausing the projection stops the projection from reading, allowing it to finish with the current events that are waiting to be processed. Once the pending queue has drained to half the threshold, the projection starts reading again. The default setting is 5000."
  },
  "projections/index.html": {
    "href": "projections/index.html",
    "title": "Introduction to Projections | Event Store",
    "keywords": "Introduction to Projections Projections is an Event Store subsystem that lets you write new events or link existing events to streams in a reactive manner. Projections are good at solving one specific query type, a category known as 'temporal correlation queries'. This query type is common in business systems and few can execute these queries well. Note Projections require the event body to be in JSON. Business Case Examples For example. You are looking for how many Twitter users said \"happy\" within 5 minutes of the word \"foo coffee shop\" and within 2 minutes of saying \"london\". This is the type of query that projections can solve. Let's try a more complex business problem. As a medical research doctor you want to find people diagnosed with pancreatic cancer within the last year. During their treatment a patient should not have had any proxies for a heart condition such as taking aspirin every morning. Within three weeks of their diagnosis they should have been put on treatment X. Within one month after starting the treatment they should have failed with a lab result that looks like L1. Within another six weeks they should have been put on treatment Y, and within four weeks failed that treatment with a lab result that looks like L2. You can use projections in nearly all examples of near real-time complex event processing. There are a large number of problems that fit into this category from monitoring of temperature sensors, to reacting to changes in the stock market. It's important to remember the types of problems that projections help to solve. Many problems are not a good fit for projections and are better served by hosting another read model populated by a catchup subscription . Continuous Querying Projections support the concept of continuous queries. When running a projection you can choose whether the query should run and give you all results present, or whether the query should continue running into the future finding new results as they happen and updating its result set. In the medical example above the doctor could leave the query running to be notified of any new patients that meet the criteria. The output of all queries is a stream, this stream can be listened to like any other stream. Types of Projections There are 2 types of projections in Event Store: Built in (system) projections written in C#. User-defined JavaScript projections which you create via the API or the admin UI."
  },
  "event-sourcing-basics/events-as-a-storage-mechanism/index.html": {
    "href": "event-sourcing-basics/events-as-a-storage-mechanism/index.html",
    "title": "Events as a storage mechanism | Event Store",
    "keywords": "Events as a storage mechanism When most people consider storage for an object they tend to think about it in a structural sense. That is when considering how to store the sale discussed above they think of it as a \"Sale\" that has \"Line Items\" and perhaps \"Shipping Information\" associated with it. This is not the only way to conceptualize the problem and other solutions offer different and often interesting architectural properties. Consider the creation of a small \"Order\" object for a web-based sale system. Most developers would envision something similar to the image below. An \"Order\" has \"n Line Items\" and \"Shipping Information\". <!-- ![A simplified structural model of an order][1] --> This is not the only way to view this data. Earlier we discussed the concept of a transaction. Developers deal with the concept of transactions regularly, you can view them as representing the change between a point and the next subsequent point, and they are often referred to as “deltas”. You can define the delta between two static states, but frequently this is an implicit concept, relegated to a framework such as Hibernate in the Java world or Entity Framework in the Microsoft world. These frameworks save the original state and then calculate the differences with the new state and update the backing data model accordingly. Making these deltas explicit can be valuable for technical and business benefits. You can see the usage of deltas in many mature business models. The canonical example of delta usage is in the field of accounting. When looking at a ledger such as below, each transaction or delta is recorded. Next to it is a denormalized total of the state of the account at the end of that delta. To calculate this value, the current delta is applied to the last known value. The last known value can be trusted because at any given point you could re-run the transactions from the \"beginning of time\" for that account to reconcile the validity of that value. A verifiable audit log always exists. Date Comment Change Current Balance 1/Jan/2000 Deposit from 1372 +10,000.00 10,000.00 3/Jan/2000 Check 1 -4,000.00 6,000.00 4/Jan/2000 Purchase Coffee -3.00 5,997.00 4/Jan/2000 Purchase Internet -5.00 5,992.00 8/Jan/2000 Deposit from 1373 +1,000.00 6,992.00 Because the transactions or deltas associated with the account exist, you can step through them, verifying the result at each stage. You can derive the “Current Balance” at any point by looking at the “Current Balance” or by adding up all the “Changes” since the beginning of time for the account. The second property is valuable in a domain such as accounting as accountants are dealing with money and the ability to check that calculations were performed correctly is invaluable. It was more valuable before computers when it was common place to have an exhausted accountant make a mistake in a calculation at 3am when they should be sleeping. There are other interesting properties to this mechanism of representing state. As an example, it's possible to go back and look at what a state was at a given. Consider for example, that the account has reached a balance below zero and there is a rule that says it's not supposed to. It is relatively easy to view the state the account was in prior to processing the transaction that put it into the invalid state. This makes it far easier to reproduce what often end up as heisenbugs in other circumstances. These types of benefits are not only limited to naturally transaction based domains. Every domain is a naturally transaction-based domain when Domain Driven Design is applied. When applying Domain Driven Design there is a heavy focus on behaviours normally coinciding with use cases, Domain Driven Design is interested in how users use the system. Returning to the order example from earlier, you could represent the same order in the form of a transactional model as below: <!-- ![Transactional view of an order][2] --> You can apply this to any type of object. By replaying through the events, you can return the object to the last known state. It is mathematically equivalent to storing the end of the equation or the equation that represents it. There is a structural representation of the object but it exists only by replaying previous transactions to return the structure to its last known state. Data is not persisted in a structure but as a series of transactions. One interesting possibility is that unlike when storing current state in a structural way, there is no coupling between the representation of current state in the domain and in storage. The representation of current state in the domain can vary without thought of the persistence mechanism. It is important to note the language in Figure 3. All of the verbs are in the past tense. These are Domain Events. Consider what would happen if the language were in the imperative tense, \"Add 2 socks item 137\", \"Create Cart\". What if there were behaviours associated with adding an item, such as reserving it from an inventory system via a webservice call? Should you include these behaviours when reconstituting an object? What if logic has changed so that this item could no longer be added given the context? This is one of many examples where dual contexts between commands and events are required, there is a contextual difference between returning to a given state and attempting to transition to a new one. There is no Delete A common question that arises is how to delete information. It is not possible, as previously, to jump into the time machine and say that an event never happened (e.g. delete a previous event). As such, it is necessary to model a delete explicitly as a new transaction as shown below. Further discussion on the business value of handling deletes in this mechanism can be found in \" Business Value of the Event Log \". <!-- ![Transactional view of an order with delete][3] --> In the event stream above, the two pairs of socks were added then later removed. The end state is equivalent to not having added the two pairs of socks. However, the data was not deleted, new data was added to bring the object to the state as if the first event had not happened, this process is known as a \"Reversal Transaction\". By placing a reversal transaction in the event stream, not only is the object returned to the state as if the item had not been added, the reversal leaves a trail that shows that the object had been in that state at a given point in time."
  },
  "event-sourcing-basics/event-store-as-a-functional-database/index.html": {
    "href": "event-sourcing-basics/event-store-as-a-functional-database/index.html",
    "title": "Event Store as a functional database | Event Store",
    "keywords": "Event Store as a functional database Much of what we have discussed can be looked at through a functional programming perspective as well. For developers in functional languages such as Scala or Haskell this should feel natural to you, for C# developers it should feel familiar, and for Java developers I hear that Scala is a nice language. All kidding aside… When we “replay” an event stream we are returning a series of events. An event is essentially a serialized method call. We left fold something that redefines what those methods mean to us today in order to get our current state. This can be seen explicitly when looking at how the projections work in JavaScript. We define a function as: when([SomePatternMatch], function(state, event) { return new state; }); These functions are then chained over the event stream resulting at the end with a state object. The state is passed from one function to the next allowing each function to transform it. Said differently, Current State is a [left fold][6] of previous facts. We can further continue this to say that a snapshot is nothing but a memoization of the left fold. When looked at from this perspective one could state that an Event Store is actually a functional database."
  },
  "event-sourcing-basics/business-value-of-the-event-log/index.html": {
    "href": "event-sourcing-basics/business-value-of-the-event-log/index.html",
    "title": "Business Value of the Event Log | Event Store",
    "keywords": "Business Value of the Event Log Note The value of an event log is directly correlated with use cases that you would want to use Domain Driven Design in the first place. You should use Domain Driven Design in cases where the business derives competitive advantage. Domain Driven Design itself is difficult and expensive to apply, but a company will receive high ROI on the effort if the domain is complex and if they derive competitive advantage from it. Using an Event Log similarly will have high ROI when dealing with an area of competitive advantage but may have negative ROI in other places. Storing only current state limits organizations to asking certain kinds of questions about the data. For example consider orders in the stock market. They can change for a few reasons. An order can change the volume to buy/sell, the trading system can automatically adjust the volume of an order, or a trade could occur lowering the volume available on the current order. If posed with a question regarding current liquidity, such as the price for a given number of shares in the market, it does not matter which of these changes occurred. It does not matter how the data got the way it was. It matters what it is at a given point in time. A vast majority of queries even in the business world are focused on the what labels to send customers mails, how much was sold in April, how many widgets are in the warehouse. There are however other types of queries that are becoming more and more popular in business. They focus on the how. Examples can commonly be seen in the buzzword “Business Intelligence”. Perhaps there is a correlation between people having done an action and their likelihood of purchasing some product? These types of questions generally focus on how something came into being as opposed to what it came out to be. It is best to go through an example. There is a development team at a large online retailer. In an iteration planning meeting a domain expert comes up with an idea. He believes that there is a correlation between people having added then removed an item from their cart and their likelihood of responding to suggestions of that product by purchasing it at a later point. The feature is added to the following iteration. The first hypothetical team is utilizing a stereotypical current state based mechanism for storing state. They plan that in this iteration they will add tracking of items via a fact table that are removed from carts. They plan for the next iteration that they will then build a report. The business will receive after the second iteration a report that can show them information back to the previous iteration when the team released the functionality that began tracking items being removed from carts. This is a very stereotypical process. At some organizations the report and the tracking may be released simultaneously but this is a relatively small detail in the handling. From a business perspective the domain experts are happy. They made a request of the team and the team was able to quickly fulfill the request. New functionality has been added in a quick and relatively painless way. The second team will however have quite a different result. The second team has been storing events; they represent their current state by building up off of a series of events. They just like the first team go through and add tracking of items removed from carts via a fact table but they also run this handler from the beginning of the event log to back populate all of the data from the time that the business started. They release the report in the same iteration and the report has data that dates back for years. The second team can do this because they have managed to store what the system actually did as opposed to what the current state of data is. It is possible to go back and look and interpret the old data in new and interesting ways. It was never considered to track what items were removed from carts or perhaps the number of times a user removes and items from their cart was considered important. These are both examples of new and interesting ways of looking at data. As the events represent every action the system has undertaken any possible model describing the system can be built from the events. Businesses regularly come up with new and interesting ways of looking at data. It is not possible with any level of confidence to predict how a business will want to look at today’s data in five years. The ability for the business to look at the data in the way that it wants in five years is of an unknown but possibly extremely high value; it has already been stated that this should be done in areas where the business derives its competitive advantage so it is relatively easy to reason that the ability to look at today’s data in an unexpected way could be a competitive advantage for the business. How do you value the possible success or failure of a company based upon an architectural decision now? How do software teams justify looking at their Magic 8 Ball to predict what the business will need in five or even ten years? Many try to use YAGNI (You Ain’t Gonna Need It) but YAGNI only applies when you actually know that you won’t need it. How can the dynamic world of business and how they may want to look at data in five or ten years be predicted? Is it more expensive to actually model every behavior in the system? Yes. Is it more expensive in terms of disk cost and thought process to store every event in the system? Yes. Are these costs worth the ROI when the business derives a competitive advantage from the data?"
  },
  "dotnet-api/streams/index.html": {
    "href": "dotnet-api/streams/index.html",
    "title": "Streams | Event Store",
    "keywords": "Streams Writing to a Stream You can use the client API to write one or more events to a stream atomically. You do this by appending the events to the stream in one operation, or by starting a transaction on the stream, writing events in one or more operations in that transaction, and then committing the transaction. You can make an optimistic concurrency check during the write by specifying the version at which you expect the stream to be. Identical write operations are idempotent if the optimistic concurrency check is not disabled. You can find more information on optimistic concurrency and idempotence here . Appending to a stream in a single write Task<WriteResult> AppendToStreamAsync(string stream, long expectedVersion, IEnumerable<EventData> events) Task<WriteResult> AppendToStreamAsync(string stream, long expectedVersion, params EventData[] events) Using a transaction to append to a stream across multiple writes On EventStoreConnection Task<EventStoreTransaction> StartTransactionAsync(string stream, long expectedVersion) EventStoreTransaction ContinueTransaction(long transactionId) On EventStoreTransaction Task WriteAsync(IEnumerable<EventData> events) Task WriteAsync(params EventData[] events) Task CommitAsync() void Rollback() EventData The writing methods all use a type named EventData to represent an event to be stored. Instances of EventData are immutable. Event Store does not have any built-in serialisation, so the body and metadata for each event are represented in EventData as a byte[] . The members on EventData are: Member Description Guid EventId A unique identifier representing this event. Event Store uses this for idempotency if you write the same event twice you should use the same identifier both times. string Type The name of the event type. You can use this for pattern matching in projections, so should be a \"friendly\" name rather than a CLR type name, for example. bool IsJson If the data and metadata fields are serialized as JSON, you should set this to true . Setting this to true will cause the projections framework to attempt to deserialize the data and metadata later. byte[] Data The serialized data representing the event to be stored. byte[] Metadata The serialized data representing metadata about the event to be stored. Append to a stream in a single write The AppendToStreamAsync method writes events atomically to the end of a stream, working in an asynchronous manner. The parameters are: Parameter Description string stream The name of the stream to which to append. long expectedVersion The version at which you expect the stream to be in order that an optimistic concurrency check can be performed. This should either be a positive integer, or one of the constants ExpectedVersion.NoStream , ExpectedVersion.EmptyStream , or to disable the check, ExpectedVersion.Any . See here for a broader discussion of this. IEnumerable<EventData> events The events to append. There is also an overload of each method which takes the events as a params array. Deleting a Stream Soft Delete Task<DeleteResult> DeleteStreamAsync(string stream, long expectedVersion, UserCredentials userCredentials = null); <!-- TODO: Need a better explanation --> By default when you delete a stream, Event Store soft deletes it. You can recreate the stream by appending new events to it. If you try to read a soft deleted stream you receive an error response. Hard Delete You can hard delete a stream. Warning A hard delete is permanent and the stream is not removed during a scavenge. If you hard delete a stream, you cannot recreate the stream. Task<DeleteResult> DeleteStreamAsync(string stream, long expectedVersion, bool hardDelete, UserCredentials userCredentials = null);"
  },
  "dotnet-api/index.html": {
    "href": "dotnet-api/index.html",
    "title": "Overview | Event Store",
    "keywords": "Overview The .NET Client API communicates with Event Store over TCP, using length-prefixed serialised protocol buffers. The API allows for reading and writing operations, as well as for subscriptions to individual event streams or all events written. EventStoreConnection The EventStoreConnection class maintains a full-duplex connection between the client and the Event Store server. EventStoreConnection is thread-safe, and we recommend that you create one instance per application. All operations are handled fully asynchronously, returning either a Task or a Task<T> . If you need to execute synchronously, call .Wait() on the asynchronous version. Note To get maximum performance from the connection, we recommend you use it asynchronously. Quick Start The code below shows how to connect to an Event Store server, write to a stream, and read back the events. For more detailed information, read the full pages for Connecting to a Server , Reading Events and Writing to a Stream var connection = EventStoreConnection.Create(new IPEndPoint(IPAddress.Loopback, 1113)); // Don't forget to tell the connection to connect! connection.ConnectAsync().Wait(); var myEvent = new EventData(Guid.NewGuid(), \"testEvent\", false, Encoding.UTF8.GetBytes(\"some data\"), Encoding.UTF8.GetBytes(\"some metadata\")); connection.AppendToStreamAsync(\"test-stream\", ExpectedVersion.Any, myEvent).Wait(); var streamEvents = connection.ReadStreamEventsForwardAsync(\"test-stream\", 0, 1, false).Result; var returnedEvent = streamEvents.Events[0].Event; Console.WriteLine(\"Read event with data: {0}, metadata: {1}\", Encoding.UTF8.GetString(returnedEvent.Data), Encoding.UTF8.GetString(returnedEvent.Metadata));"
  },
  "dotnet-api/embedded-client/index.html": {
    "href": "dotnet-api/embedded-client/index.html",
    "title": "Embedded Client | Event Store",
    "keywords": "Embedded Client EmbeddedVNodeBuilder The EmbeddedVNodeBuilder class sets up and builds an Event Store node. You can configure your node through methods provided by the EmbeddedVNodeBuilder class. Note The builder used for the EmbeddedVNodeBuilder is the same Event Store uses internally to create the ClusterNode , see EventStore.ClusterNode.Program.cs for more examples on how to use it. Building a node You have two options when you start creating a node, EmbeddedVNodeBuilder.AsSingleNode() or EmbeddedVNodeBuilder.AsClusterMember(clusterSize) , which will create a single node or a cluster node respectively. After creating the builder, you can configure the node through the methods provided by the EmbeddedVNodeBuilder . These are listed below. Once you have configured the node, build it with EmbeddedVNodeBuilder.Build() which returns the configured ClusterVNode . Start the node with ClusterVNode.StartAndWaitUntilReady() or ClusterVNode.Start() . ClusterVNode.StartAndWaitUntilReady() returns a task that completes once the node has started and all subsystems have finished loading. For example, to build a single node with default options : var nodeBuilder = EmbeddedVNodeBuilder.AsSingleNode() .OnDefaultEndpoints() .RunInMemory(); var node = nodeBuilder.Build(); node.StartAndWaitUntilReady().Wait(); To build a node to be part of a cluster with custom endpoints and gossip seeds: var nodeBuilder = EmbeddedVNodeBuilder.AsClusterMember(3) .RunOnDisk(\"node1db\") .WithInternalHttpOn(new IPEndPoint(IPAddress.Loopback, 1112)) .WithExternalHttpOn(new IPEndPoint(IPAddress.Loopback, 1113)) .WithExternalTcpOn(new IPEndPoint(IPAddress.Loopback, 1114)) .WithInternalTcpOn(new IPEndPoint(IPAddress.Loopback, 1115)) .DisableDnsDiscovery() .WithGossipSeeds(new IPEndPoint[] { new IPEndPoint(IPAddress.Loopback, 2112), new IPEndPoint(IPAddress.Loopback, 3112) }); var node = nodeBuilder.Build(); node.Start(); Warning When running an embedded cluster, the task returned by StartAndWaitUntilReady() only completes on the master node. Connecting to an embedded node You can connect to an embedded Event Store node with the EmbeddedEventStoreConnection class. Calling EmbeddedEventStoreConnection.Create(ClusterVNode) returns an IEventStoreConnection configured to connect to your embedded node. From there you can use the connection as normal in the .NET Client. using(var embeddedConn = EmbeddedEventStoreConnection.Create(node)) { embeddedConn.ConnectAsync().Wait(); embeddedConn.AppendToStreamAsync(\"testStream\", ExpectedVersion.Any, new EventData(Guid.NewGuid(), \"eventType\", true, Encoding.UTF8.GetBytes(\"{\\\"Foo\\\":\\\"Bar\\\"}\"), null)).Wait(); } Logging with an embedded node To enable logging for an embedded node, you need to initialize the LogManager and ensure that you configure the logger with a log.config file in your configuration directory. To initialize the LogManager , call this before building the nodes: LogManager.Init(logComponentName, logDirectory, logConfigurationDirectory); EmbeddedVNodeBuilder options The following options are available when building an Embedded Node. Application Options Method Description AsSingleNode() Returns a builder set to construct options for a single node instance AsClusterMember(int clusterSize) Returns a builder set to construct options for a cluster node instance with a cluster size DisableHTTPCaching() Disable HTTP Caching WithWorkerThreads(int count) Sets the number of worker threads to use in shared threadpool WithStatsPeriod(TimeSpan statsPeriod) Sets the period between statistics gathers EnableLoggingOfHttpRequests() Enable logging of HTTP requests and responses before they are processed EnableHistograms() Enable the tracking of histograms, typically used for debugging EnableTrustedAuth() Enable trusted authentication by an intermediary in the HTTP Certificate options Method Description WithServerCertificateFromFile(string path, string password) Sets the Server SSL Certificate loaded from a file WithServerCertificate(X509Certificate2 sslCertificate) Sets the Server SSL Certificate WithServerCertificateFromStore(StoreLocation storeLocation, StoreName storeName, string certificateSubjectName, string certificateThumbprint) Sets the Server SSL Certificate loaded from a certificate store WithServerCertificateFromStore(StoreName storeName, string certificateSubjectName, string certificateThumbprint) Sets the Server SSL Certificate loaded from a certificate store Cluster options Method Description WithClusterGossipPort(int port) Sets the internal gossip port (used when using cluster DNS, this should point to a known port gossip will be running on) WithGossipSeeds(params IPEndPoint[] endpoints) Sets the gossip seeds this node should talk to WithClusterDnsName(string name) Sets the DNS name used for the discovery of other cluster nodes DisableDnsDiscovery() Disable DNS discovery for the cluster WithGossipInterval(TimeSpan gossipInterval) Sets the gossip interval WithGossipAllowedTimeDifference(TimeSpan gossipAllowedDifference) Sets the allowed gossip time difference WithGossipTimeout(TimeSpan gossipTimeout) Sets the gossip timeout WithPrepareTimeout(TimeSpan prepareTimeout) Sets the prepare timeout WithCommitTimeout(TimeSpan commitTimeout) Sets the commit timeout WithPrepareCount(int prepareCount) Sets the number of nodes which must acknowledge prepares. WithCommitCount(int commitCount) Sets the number of nodes which must acknowledge commits before acknowledging to a client. WithNodePriority(int nodePriority) Sets the node priority used during master election Database options Method Description RunInMemory() Sets the builder to run in memory RunOnDisk(string path) Sets the builder to write database files to the specified path MaximumMemoryTableSizeOf(int size) Sets the maximum size a memtable is allowed to reach (in count) before moved to be a ptable DoNotVerifyDbHashes() Marks that the existing database files should not be checked for checksums on startup. VerifyDbHashes() Marks that the existing database files should be checked for checksums on startup. WithMinFlushDelay(TimeSpan minFlushDelay) Sets the minimum flush delay DisableScavengeMerging() Disables the merging of chunks when scavenge is running WithScavengeHistoryMaxAge(int scavengeHistoryMaxAge) The number of days to keep scavenge history (Default: 30) WithIndexPath(string indexPath) Sets the path the index should be loaded or saved to WithIndexCacheDepth(int indexCacheDepth) Sets the depth to cache for the mid point cache in index WithUnsafeIgnoreHardDelete() Disables Hard Deletes (UNSAFE: use to remove hard deletes) WithUnsafeDisableFlushToDisk() Disables Hard Deletes (UNSAFE: use to remove hard deletes) WithBetterOrdering() Enable queue affinity on reads during write process to try to get better ordering. WithTfChunkSize(int chunkSize) Sets the transaction file chunk size. Default is TFConsts.ChunkSize WithTfCachedChunks(int cachedChunks) The number of chunks to cache in unmanaged memory. Default is TFConsts.ChunksCacheSize Interface options Method Description OnDefaultEndpoints() Sets the default endpoints on localhost (1113 tcp, 2113 http) AdvertiseInternalIPAs(IPAddress intIpAdvertiseAs) Sets up the Internal IP to advertise AdvertiseExternalIPAs(IPAddress extIpAdvertiseAs) Sets up the External IP to advertise AdvertiseInternalHttpPortAs(int intHttpPortAdvertiseAs) Sets up the Internal HTTP port to advertise AdvertiseExternalHttpPortAs(int extHttpPortAdvertiseAs) Sets up the External HTTP port to advertise AdvertiseInternalSecureTCPPortAs(int intSecureTcpPortAdvertiseAs) Sets up the Internal Secure TCP port to advertise AdvertiseExternalSecureTCPPortAs(int extSecureTcpPortAdvertiseAs) Sets up the External Secure TCP port to advertise AdvertiseInternalTCPPortAs(int intTcpPortAdvertiseAs) Sets up the Internal TCP port to advertise AdvertiseExternalTCPPortAs(int extTcpPortAdvertiseAs) Sets up the External TCP port to advertise WithInternalHttpOn(IPEndPoint endpoint) Sets the internal HTTP endpoint to the specified value WithExternalHttpOn(IPEndPoint endpoint) Sets the external HTTP endpoint to the specified value WithInternalTcpOn(IPEndPoint endpoint) Sets the internal TCP endpoint to the specified value WithInternalSecureTcpOn(IPEndPoint endpoint) Sets the internal secure TCP endpoint to the specified value WithExternalTcpOn(IPEndPoint endpoint) Sets the external TCP endpoint to the specified value WithExternalSecureTcpOn(IPEndPoint endpoint) Sets the external secure TCP endpoint to the specified value EnableSsl() Sets that SSL should be used on connections WithSslTargetHost(string targetHost) Sets the target host of the server's SSL certificate. ValidateSslServer() Sets whether to validate that the server's certificate is trusted. NoGossipOnPublicInterface() Disables gossip on the public (client) interface NoAdminOnPublicInterface() Disables the admin interface on the public (client) interface NoStatsOnPublicInterface() Disables statistics screens on the public (client) interface AddInternalHttpPrefix(string prefix) Adds a HTTP prefix for the internal HTTP endpoint AddExternalHttpPrefix(string prefix) Adds a HTTP prefix for the external HTTP endpoint DontAddInterfacePrefixes() Don't add the interface prefixes (e.g. If the External IP is set to the Loopback address, add http://localhost:2113/ as a prefix) WithInternalHeartbeatInterval(TimeSpan heartbeatInterval) Sets the heartbeat interval for the internal network interface. WithExternalHeartbeatInterval(TimeSpan heartbeatInterval) Sets the heartbeat interval for the external network interface. WithInternalHeartbeatTimeout(TimeSpan heartbeatTimeout) Sets the heartbeat timeout for the internal network interface. WithExternalHeartbeatTimeout(TimeSpan heartbeatTimeout) Sets the heartbeat timeout for the external network interface. Projections options Method Description StartStandardProjections() Start standard projections. RunProjections(ProjectionType projectionType, int numberOfThreads = Opts.ProjectionThreadsDefault) Sets the mode and the number of threads on which to run projections. RunProjections(ClientAPI.Embedded.ProjectionsMode projectionsMode, int numberOfThreads = Opts.ProjectionThreadsDefault) Sets the mode and the number of threads on which to run projections. EmbeddedEventStoreConnection The following methods are available on EmbeddedEventStoreConnection for connecting to an embedded node. Method Description Create(ClusterVNode eventStore, string connectionName = null) Creates a new embedded IEventStoreConnection to a single node with default connection settings Create(ClusterVNode eventStore, ConnectionSettings connectionSettings, string connectionName = null) Creates a new embedded IEventStoreConnection to a single node using specific ConnectionSettings"
  },
  "server/admin-ui/index.html": {
    "href": "server/admin-ui/index.html",
    "title": "Admin UI | Event Store",
    "keywords": "Admin UI The Event Store Admin UI is available at SERVER_IP:2113 helps you interact with and manage a cluster in a visual way. This guide explains the tabs of the interface and what they do. Dashboard The Dashboard tab shows an overview of active queues with associated statistics in the top half. The + icon indicates a queue group, click it to reveal the queues that are part of the group. The second half of the tab shows active connections to Event Store and information about them. Click the Snapshot button in the top right to output a snapshot of all queue statistics at the time you clicked the button. Stream Browser The Stream Browser tab gives an overview of recently created and changed streams, clicking on an individual stream shows details about the individual stream. Event Stream 'streamname' Each individual stream shows pages of the events in a stream with an overview of the event. Click the Name to see the EventId, and JSON to the see the event data. The buttons above change depending on what you are viewing in the interface. The Back button takes you to the parent screen. The buttons on the top right when you are viewing an event stream are: Pause : Stop showing events arriving into this stream. Resume : Resume showing events arriving into this stream. Edit ACL : Edit the access control lists for a stream. Add Event : Add a new event to the stream. Delete : Delete a stream to the stream. Query : The buttons on the left above the events when you are viewing an event stream are: self : Takes you to the overview of the stream. first : Takes you to the first page of events in a stream. previous : Takes you to the previous page of events in a stream. metadata : Shows the metadata of a stream. On the metadata screen, click Add New Like This to add a new event to the stream. Projections The Projections tab shows system and user created projections defined in Event Store, the buttons above the list do the following: Disable All : Disable all running projections. Enable All : Enable all stopped projections. Include Queries : New Projection : Create a user-defined projection with the Admin UI. Clicking an individual projection shows further details. On the left is the projection definition, and on the right, the stats, results and state of the projection. The buttons above the details do the following: Start : Start a stopped projection. Stop : Stop a running projection. Edit : Edit the projection definition. Config : Set configuration options for a projection. Debug : Opens the debugging interface to debug what effect a projection is having on events. Delete : Delete a projection. Reset : Reset a projection. Back : Returns you to the parent screen. Query The Query tab a code editor field where you can create transient and short-lived projections for quick analysis of your event streams. Persistent Subscriptions The Persistent Subscriptions tab shows an overview of persistent subscriptions configured on streams. The button above the list do the following: New Subscription : Create a new subscriptions Clicking the + icon next to a stream name reveals the subscription name and more buttons. The Back button takes you to the parent screen. : Edit : Edit the subscription. Delete : Delete the subscription. Detail : Shows the subscription configuration options. Replay Parked Messages : Replay events in subscription to return state. Admin The Admin tab shows sub systems enabled (currently only projections ) on Event Store and scavenges run. You can start a new scavenge operation by clicking the Scavenge button, and shut Event Store down by clicking the Shutdown Server button. Users The Users tab shows the users defined in Event Store , clicking an individual user shows a JSON representation of that users details. Log Out Logs you out of the Admin UI interface."
  },
  "server/system-streams/index.html": {
    "href": "server/system-streams/index.html",
    "title": "System Stream and Event Types | Event Store",
    "keywords": "System Stream and Event Types $persistentSubscriptionConfig $persistentSubscriptionConfig is a special paged stream that contains all configuration events, for all persistent subscriptions. It uses the following system event types: PersistentConfig : An event that records a configuration event, the event data contains: version : Version of event data updated : Updated date updatedBy : User who updated configuration maxCount : The number of configuration events to save entries : Configuration items set by event. Find more details of configuration items for the .NET API and the HTTP API . $all $all is a special paged stream for all events. You can use the same paged form of reading described above to read all events for a node by pointing the stream at /streams/$all . As it's a stream like any other, you can perform all operations, except posting to it. $settings The $settings stream has a special ACL used as the default ACL. This stream controls the default ACL for streams without an ACL and also controls who can create streams in the system, the default state of these is shown below: { \"$userStreamAcl\": { \"$r\": \"$all\", \"$w\": \"$all\", \"$d\": \"$all\", \"$mr\": \"$all\", \"$mw\": \"$all\" }, \"$systemStreamAcl\": { \"$r\": \"$admins\", \"$w\": \"$admins\", \"$d\": \"$admins\", \"$mr\": \"$admins\", \"$mw\": \"$admins\" } } The $userStreamAcl controls the default ACL for user streams, while all system streams use the $systemStreamAcl as the default. Note The $w in $userStreamAcl also applies to the ability to create a stream. Members of $admins always have access to everything, you cannot remove this permission. When you set a permission on a stream, it overrides the default values. However, it's not necessary to specify all permissions on a stream. It's only necessary to specify those which differ from the default. $stats Event Store has debug and statistics information available about a cluster in the $stats stream, find out more in the stats guide . $scavenges $scavenges is a special paged stream for all scavenge related events. It uses the following system event types: $scavengeIndexInitialized : An event that records the initialisation of the scavenge index. $scavengeStarted : An event that records the beginning of a scavenge event, the event data contains: scavengeId : Scavenge event ID nodeEndpoint : Node address $scavengeCompleted : An event that records the completion of a scavenge event, the event data contains: scavengeId : Scavenge event ID nodeEndpoint : Node address result : Success , Failed , Stopped error : Error details timeTaken : Time taken for the scavenge event in milliseconds spaceSaved : Space saved by scavenge event in bytes"
  },
  "server/scavenging/index.html": {
    "href": "server/scavenging/index.html",
    "title": "Scavenging events | Event Store",
    "keywords": "Scavenging events When you delete events or streams in Event Store, they aren't removed immediately. To permanently delete these events you need to run a 'scavenge' on your database. A scavenge reclaims disk space by rewriting your database chunks, minus the events to delete, and then deleting the old chunks. Scavenges only affect completed chunks, so deleted events in the current chunk are still there after you run a scavenge. After processing the chunks, the operation updates the chunk indexes using a merge sort algorithm, skipping events whose data is no longer available. Warning Once a scavenge has run, you cannot recover any deleted events. Note Before version 4.0.2, a scavenge operation only worked with database chunk files. Since version 4.0.2 that reordering also happens inside the index files. Starting a scavenge Scavenges are not run automatically by Event Store. We recommendation that you set up a scheduled task, for example using cron or Windows Scheduler, to trigger a scavenge as often as you need. You start a scavenge by issuing an empty POST request to the HTTP API with the credentials of an admin or ops user: Request Response curl -i -d {} -X POST http://localhost:2113/admin/scavenge -u \"admin:changeit\" Next Steps Scavenge operations have other options you can set to improve performance, read the API docs for more details. HTTP/1.1 200 OK Access-Control-Allow-Methods: POST, OPTIONS Access-Control-Allow-Headers: Content-Type, X-Requested-With, X-Forwarded-Host, X-Forwarded-Prefix, X-PINGOTHER, Authorization, ES-LongPoll, ES-ExpectedVersion, ES-EventId, ES-EventType, ES-RequiresMaster, ES-HardDelete, ES-ResolveLinkTos Access-Control-Allow-Origin: * Access-Control-Expose-Headers: Location, ES-Position, ES-CurrentVersion Content-Type: Server: Mono-HTTPAPI/1.0 Date: Wed, 19 Sep 2018 10:25:55 GMT Content-Length: 0 Keep-Alive: timeout=15,max=100 Next Steps For better scavenge performance, you can set the number of threads to use. If you need to restart a stopped scavenge, you can specify the starting chunk ID. Find out more in the API reference . You can also start scavenges from the Admin page of the Admin UI. Tip Each node in a cluster has its own independent database. As such, when you run a scavenge, you need to issue a scavenge request to each node. How often to run a scavenge This depends on the following: How often you delete streams. Depending on how you set $maxAge , $maxCount or $tb metadata on your streams. Stopping a scavenge Stop a running scavenge operation by issuing a DELETE request to the HTTP API with the credentials of an admin or ops user and the ID of the scavenge you want to stop: curl -i -X DELETE http://localhost:2113/admin/scavenge/{scavengeId} -u \"admin:changeit\" You can also stop scavenges from the Admin page of the Admin UI. Tip Each node in a cluster has its own independent database. As such, when you run a scavenge, you need to issue a scavenge request to each node. How often should you run a scavenge This depends on the following: How often you delete streams. How you set $maxAge , $maxCount or $tb metadata on your streams. Tip Read the .NET API or HTTP API docs for more details on setting metadata. Scavenging while Event Store is online It's safe to run a scavenge while Event Store is running and processing events, as it's designed to be an online operation. Warning Scavenging increases the number of reads/writes made to disk, and it is not recommended when your system is under heavy load."
  },
  "server/node-roles/index.html": {
    "href": "server/node-roles/index.html",
    "title": "Cluster Node Roles | Event Store",
    "keywords": "Cluster Node Roles Every node in an Event Store cluster can have one of three roles. Master A cluster assigns the Master role based on an election process. The node with the Master role ensures that the data are committed and persisted to disk before sending back to the client an acknowledge message. A cluster can only have one Master at a time. If a cluster detects two nodes with a Master role, a new election begins and shuts down the node with less data to restart and re-join the cluster. Slave A cluster assigns the Slave role based on an election process. A cluster uses one or more nodes with the Slave role to form the quorum, or the majority of nodes necessary to confirm that a write is persisted. Clone If you add nodes to a cluster beyond the number of nodes specified in the ClusterSize setting the cluster automatically assigns them the Clone role. A cluster asynchronously replicates data one way to a node with the Clone role. You don't need to wait for an acknowledgement message as the node is not part of the quorum. For this reason a node with a Clone role does not add much overhead to the other nodes. If a cluster loses nodes to take it below ClusterSize , then the cluster can promote a Clone to a Master or Slave role. You can control which clones the cluster promotes with the NodePriority command line option . The default value is 0 , and the cluster is more likely to promote clones with higher values. Note Changing NodePriority doesn't guarantee that the cluster won't promote the clone. It's only one of the criteria that the Election Service considers. Non Promotable Clone If you want the cluster to never promote a node with the Clone role, set the --is-promotable command line option to false when starting a clone node. The node never acknowledges any writes and is never part of the quorum until you change the option to true . Non promotable clones are best used for data redundancy, or for locally hosted nodes you use for application testing."
  },
  "server/deleting-streams-and-events/index.html": {
    "href": "server/deleting-streams-and-events/index.html",
    "title": "Deleting streams and events | Event Store",
    "keywords": "Deleting streams and events Meta data in Event Store defines whether an event is deleted or not. You can use stream metadata such as TruncateBefore , MaxAge and MaxCount to filter events considered deleted. When reading a stream, the index checks the stream's metadata to determine whether any of its events have been deleted. $all bypasses the index, meaning that it does not check the metadata to determine whether events exist or not. As such, events that have been deleted are still be readable until a scavenge has removed them. There are requirements for a scavenge to successfully remove events, for more information about this, read the scavenging guide . Warning The last event in a stream is always kept as a record of the last event number in the stream. Soft delete and TruncateBefore TruncateBefore and $tb considers any event with an event number lower than its value as deleted. For example, if you had the following events in a stream : 0@test-stream 1@test-stream 2@test-stream 3@test-stream If you set the TruncateBefore or $tb value to 3, a read of the stream would result in only reading the last event: 3@test-stream A Soft delete makes use of TruncateBefore and $tb . When you delete a stream, its TruncateBefore or $tb is set to the streams current last event number. When you read a soft deleted stream, the read returns a StreamNotFound or 404 result. After deleting the stream, you are able to write to it again, continuing from where it left off. For example, if you soft deleted the above example stream, the TruncateBefore or $tb is set to 3 (the stream's current event number). If you were to write to the stream again, the next event is written with event number 4. Only events from event number 4 onwards are visible when you read this stream. Max count and Max age Max count ( $maxCount and MaxCount ) limits the number of events that you can read from a stream. If you try to read a stream that has a max count of 5, you are only able to read the last 5 events, regardless of how many events are in the stream. Max age ( $maxAge and MaxAge ) specifies the number of seconds an event can live for. The age is calculated at the time of the read. So if you read a stream with a MaxAge of 3 minutes and one of the events in the stream has existed for 4 minutes at the time of the read, it is not returned. Hard delete A hard delete writes a tombstone event to the stream, permanently deleting it. You cannot recreate the stream, or write to it again. Tombstone events are written with the event type $streamDeleted . When you read a hard deleted stream, the read returns a StreamDeleted or 410 result. The events in the deleted stream are liable to be removed in a scavenge, but the tombstone event remains. Warning A hard delete of a stream is permanent. You cannot write to the stream or recreate it. As such, you should generally soft delete streams unless you have a specific need to permanently delete the stream. Deleted events and projections If you are intending on using projections and deleting streams, there are some things to take into consideration: Due to the nature of $all , projections using fromAll read any deleted events that have not been scavenged. They also receive any tombstone events from hard deletes. Projections that read from a specific stream receive that stream's metadata events. You can filter these out by ignoring events with an event type $metadata ."
  },
  "server/database-backup/index.html": {
    "href": "server/database-backup/index.html",
    "title": "Database Backup | Event Store",
    "keywords": "Database Backup Backing up an Event Store database is straightforward, but relies on you carrying out the steps below in the correct order. Backing up a database Copy all *.chk files to your backup location. Copy the remaining files and directories to your backup location. For example: rsync -a /data/eventstore/db/*.chk /backup/eventstore/db/ rsync -a /data/eventstore/db/index /backup/eventstore/db/ rsync -a /data/eventstore/db/*.0* /backup/eventstore/db/ Restoring a database Create a copy of chaser.chk and call it truncate.chk . Copy all files to the desired location. Note Many people do not rely on hot backups in a highly available cluster but instead increase their node counts to keep further copies of data. Differential backup Event Store keep most data in chunk files , named chunkX.Y , where X is the chunk number, and Y is the version of that chunk file. As Event Store scavenges, it creates new versions of scavenged chunks which are interchangeable with older versions (but for the removed data). It's only necessary to keep the file whose name has the highest Y for each X , as well as the checkpoint files and the index directory (to avoid expensive index rebuilding). Other Options There are many other options available for backing up an Event Store database. For example, you can set up a durable subscription that writes all events to another storage mechanism such as a key/value or column store. These methods would require a manual set up for restoring back to a cluster group. You can expand upon this option to use a second Event Store node/cluster as a back up. This is commonly known as a primary/secondary back up scheme. The primary cluster runs and asynchronously pushes data to a second cluster as described above. The second cluster/node is available in case of disaster on the primary cluster. If you are using this strategy then we recommend you only support manual failover from Primary to Secondary as automated strategies risk causing a split brain problem."
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.EmittedStream.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.EmittedStream.html",
    "title": "Class EmittedStream | Event Store",
    "keywords": "Class EmittedStream Inheritance System.Object EmittedStream Implements System.IDisposable IHandle < CoreProjectionProcessingMessage.EmittedStreamWriteCompleted > IHandle < ProjectionManagementMessage.Internal.ReadTimeout > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class EmittedStream : IDisposable, IHandle<CoreProjectionProcessingMessage.EmittedStreamWriteCompleted>, IHandle<ProjectionManagementMessage.Internal.ReadTimeout> Constructors EmittedStream(String, EmittedStream.WriterConfiguration, ProjectionVersion, PositionTagger, CheckpointTag, IPublisher, IODispatcher, IEmittedStreamContainer, Boolean) Declaration public EmittedStream(string streamId, EmittedStream.WriterConfiguration writerConfiguration, ProjectionVersion projectionVersion, PositionTagger positionTagger, CheckpointTag fromCheckpointPosition, IPublisher publisher, IODispatcher ioDispatcher, IEmittedStreamContainer readyHandler, bool noCheckpoints = false) Parameters Type Name System.String streamId EmittedStream.WriterConfiguration writerConfiguration ProjectionVersion projectionVersion PositionTagger positionTagger CheckpointTag fromCheckpointPosition IPublisher publisher IODispatcher ioDispatcher IEmittedStreamContainer readyHandler System.Boolean noCheckpoints Methods Checkpoint() Declaration public void Checkpoint() Dispose() Declaration public void Dispose() EmitEvents(EmittedEvent[]) Declaration public void EmitEvents(EmittedEvent[] events) Parameters Type Name EmittedEvent [] events GetReadsInProgress() Declaration public int GetReadsInProgress() Returns Type Description System.Int32 GetWritePendingEvents() Declaration public int GetWritePendingEvents() Returns Type Description System.Int32 GetWritesInProgress() Declaration public int GetWritesInProgress() Returns Type Description System.Int32 Handle(CoreProjectionProcessingMessage.EmittedStreamWriteCompleted) Declaration public void Handle(CoreProjectionProcessingMessage.EmittedStreamWriteCompleted message) Parameters Type Name CoreProjectionProcessingMessage.EmittedStreamWriteCompleted message Handle(ProjectionManagementMessage.Internal.ReadTimeout) Declaration public void Handle(ProjectionManagementMessage.Internal.ReadTimeout message) Parameters Type Name ProjectionManagementMessage.Internal.ReadTimeout message Start() Declaration public void Start() Implements System.IDisposable IHandle<T> IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.EmittedStream.WriterConfiguration.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.EmittedStream.WriterConfiguration.html",
    "title": "Class EmittedStream.WriterConfiguration | Event Store",
    "keywords": "Class EmittedStream.WriterConfiguration Inheritance System.Object EmittedStream.WriterConfiguration Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class WriterConfiguration Constructors WriterConfiguration(IEmittedStreamsWriter, EmittedStream.WriterConfiguration.StreamMetadata, IPrincipal, Int32, ILogger) Declaration public WriterConfiguration(IEmittedStreamsWriter writer, EmittedStream.WriterConfiguration.StreamMetadata streamMetadata, IPrincipal writeAs, int maxWriteBatchLength, ILogger logger = null) Parameters Type Name IEmittedStreamsWriter writer EmittedStream.WriterConfiguration.StreamMetadata streamMetadata System.Security.Principal.IPrincipal writeAs System.Int32 maxWriteBatchLength ILogger logger Properties Logger Declaration public ILogger Logger { get; } Property Value Type ILogger MaxAge Declaration public TimeSpan? MaxAge { get; } Property Value Type System.Nullable < System.TimeSpan > MaxCount Declaration public int? MaxCount { get; } Property Value Type System.Nullable < System.Int32 > MaxWriteBatchLength Declaration public int MaxWriteBatchLength { get; } Property Value Type System.Int32 WriteAs Declaration public IPrincipal WriteAs { get; } Property Value Type System.Security.Principal.IPrincipal Writer Declaration public IEmittedStreamsWriter Writer { get; } Property Value Type IEmittedStreamsWriter Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Helpers.IODispatcherAsync.Step.html": {
    "href": "dotnet-api/code/EventStore.Core.Helpers.IODispatcherAsync.Step.html",
    "title": "Delegate IODispatcherAsync.Step | Event Store",
    "keywords": "Delegate IODispatcherAsync.Step Namespace : EventStore.Core.Helpers Assembly : EventStore.Core.dll Syntax public delegate void Step(IEnumerator<IODispatcherAsync.Step> nextSteps); Parameters Type Name Description System.Collections.Generic.IEnumerator < IODispatcherAsync.Step > nextSteps Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) IODispatcherAsync.Run(IODispatcherAsync.Step) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Exceptions.BadChunkInDatabaseException.html": {
    "href": "dotnet-api/code/EventStore.Core.Exceptions.BadChunkInDatabaseException.html",
    "title": "Class BadChunkInDatabaseException | Event Store",
    "keywords": "Class BadChunkInDatabaseException Inheritance System.Object System.Exception BadChunkInDatabaseException Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Exceptions Assembly : EventStore.Core.dll Syntax public class BadChunkInDatabaseException : Exception, _Exception, ISerializable Constructors BadChunkInDatabaseException(String) Declaration public BadChunkInDatabaseException(string message) Parameters Type Name System.String message Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.DataStructures.html": {
    "href": "dotnet-api/code/EventStore.Core.DataStructures.html",
    "title": "Namespace EventStore.Core.DataStructures | Event Store",
    "keywords": "Namespace EventStore.Core.DataStructures Classes BloomFilter BoundedQueue<T> LRUCache<TKey, TValue> NoLRUCache<TKey, TValue> ObjectPool<T> ObjectPoolDisposingException ObjectPoolMaxLimitReachedException PairingHeap<T> StickyLRUCache<TKey, TValue> Interfaces ILRUCache<TKey, TValue> IStickyLRUCache<TKey, TValue>"
  },
  "dotnet-api/code/EventStore.Core.DataStructures.StickyLRUCache-2.html": {
    "href": "dotnet-api/code/EventStore.Core.DataStructures.StickyLRUCache-2.html",
    "title": "Class StickyLRUCache<TKey, TValue> | Event Store",
    "keywords": "Class StickyLRUCache<TKey, TValue> Inheritance System.Object StickyLRUCache<TKey, TValue> Implements IStickyLRUCache <TKey, TValue> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.DataStructures Assembly : EventStore.Core.dll Syntax public class StickyLRUCache<TKey, TValue> : IStickyLRUCache<TKey, TValue> Type Parameters Name Description TKey TValue Constructors StickyLRUCache(Int32) Declaration public StickyLRUCache(int maxCount) Parameters Type Name System.Int32 maxCount Methods Clear() Declaration public void Clear() Put(TKey, TValue, Int32) Declaration public TValue Put(TKey key, TValue value, int stickiness) Parameters Type Name TKey key TValue value System.Int32 stickiness Returns Type Description TValue Put(TKey, Func<TKey, TValue>, Func<TKey, TValue, TValue>, Int32) Declaration public TValue Put(TKey key, Func<TKey, TValue> addFactory, Func<TKey, TValue, TValue> updateFactory, int stickiness) Parameters Type Name TKey key System.Func <TKey, TValue> addFactory System.Func <TKey, TValue, TValue> updateFactory System.Int32 stickiness Returns Type Description TValue Remove(TKey) Declaration public void Remove(TKey key) Parameters Type Name TKey key TryGet(TKey, out TValue) Declaration public bool TryGet(TKey key, out TValue value) Parameters Type Name TKey key TValue value Returns Type Description System.Boolean Implements IStickyLRUCache<TKey, TValue> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.PluginModel.IPersistentSubscriptionConsumerStrategyPlugin.html": {
    "href": "dotnet-api/code/EventStore.Core.PluginModel.IPersistentSubscriptionConsumerStrategyPlugin.html",
    "title": "Interface IPersistentSubscriptionConsumerStrategyPlugin | Event Store",
    "keywords": "Interface IPersistentSubscriptionConsumerStrategyPlugin Namespace : EventStore.Core.PluginModel Assembly : EventStore.Core.dll Syntax public interface IPersistentSubscriptionConsumerStrategyPlugin Properties Name Declaration string Name { get; } Property Value Type System.String Version Declaration string Version { get; } Property Value Type System.String Methods GetConsumerStrategyFactory() Declaration IPersistentSubscriptionConsumerStrategyFactory GetConsumerStrategyFactory() Returns Type Description IPersistentSubscriptionConsumerStrategyFactory Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.PluginModel.IAuthenticationPlugin.html": {
    "href": "dotnet-api/code/EventStore.Core.PluginModel.IAuthenticationPlugin.html",
    "title": "Interface IAuthenticationPlugin | Event Store",
    "keywords": "Interface IAuthenticationPlugin Namespace : EventStore.Core.PluginModel Assembly : EventStore.Core.dll Syntax public interface IAuthenticationPlugin Properties CommandLineName Declaration string CommandLineName { get; } Property Value Type System.String Name Declaration string Name { get; } Property Value Type System.String Version Declaration string Version { get; } Property Value Type System.String Methods GetAuthenticationProviderFactory(String) Declaration IAuthenticationProviderFactory GetAuthenticationProviderFactory(string authenticationConfigPath) Parameters Type Name System.String authenticationConfigPath Returns Type Description IAuthenticationProviderFactory Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.NodeSubsystems.html": {
    "href": "dotnet-api/code/EventStore.Core.NodeSubsystems.html",
    "title": "Enum NodeSubsystems | Event Store",
    "keywords": "Enum NodeSubsystems Namespace : EventStore.Core Assembly : EventStore.Core.dll Syntax public enum NodeSubsystems Fields Name Description Projections Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<NodeSubsystems>() ProtobufExtensions.Serialize<NodeSubsystems>() ProtobufExtensions.SerializeToArray<NodeSubsystems>()"
  },
  "dotnet-api/code/EventStore.Core.Messaging.html": {
    "href": "dotnet-api/code/EventStore.Core.Messaging.html",
    "title": "Namespace EventStore.Core.Messaging | Event Store",
    "keywords": "Namespace EventStore.Core.Messaging Classes CallbackEnvelope Forwarder Message MessageHierarchy NoopEnvelope PublishEnvelope RequestResponseDispatcher<TRequest, TResponse> SendToThisEnvelope Interfaces IEnvelope"
  },
  "dotnet-api/code/EventStore.Core.Messaging.SendToThisEnvelope.html": {
    "href": "dotnet-api/code/EventStore.Core.Messaging.SendToThisEnvelope.html",
    "title": "Class SendToThisEnvelope | Event Store",
    "keywords": "Class SendToThisEnvelope Inheritance System.Object SendToThisEnvelope Implements IEnvelope Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messaging Assembly : EventStore.Core.dll Syntax public class SendToThisEnvelope : IEnvelope Constructors SendToThisEnvelope(Object) Declaration public SendToThisEnvelope(object receiver) Parameters Type Name System.Object receiver Methods ReplyWith<T>(T) Declaration public void ReplyWith<T>(T message) where T : Message Parameters Type Name T message Type Parameters Name Description T Implements IEnvelope Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messaging.RequestResponseDispatcher-2.html": {
    "href": "dotnet-api/code/EventStore.Core.Messaging.RequestResponseDispatcher-2.html",
    "title": "Class RequestResponseDispatcher<TRequest, TResponse> | Event Store",
    "keywords": "Class RequestResponseDispatcher<TRequest, TResponse> Inheritance System.Object RequestResponseDispatcher<TRequest, TResponse> Implements IHandle <TResponse> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messaging Assembly : EventStore.Core.dll Syntax public sealed class RequestResponseDispatcher<TRequest, TResponse> : IHandle<TResponse> where TRequest : Message where TResponse : Message Type Parameters Name Description TRequest TResponse Constructors RequestResponseDispatcher(IPublisher, Func<TRequest, Guid>, Func<TResponse, Guid>, IEnvelope, Func<Guid, Message>) Declaration public RequestResponseDispatcher(IPublisher publisher, Func<TRequest, Guid> getRequestCorrelationId, Func<TResponse, Guid> getResponseCorrelationId, IEnvelope defaultReplyEnvelope, Func<Guid, Message> cancelMessageFactory = null) Parameters Type Name IPublisher publisher System.Func <TRequest, System.Guid > getRequestCorrelationId System.Func <TResponse, System.Guid > getResponseCorrelationId IEnvelope defaultReplyEnvelope System.Func < System.Guid , Message > cancelMessageFactory Properties Envelope Declaration public IEnvelope Envelope { get; } Property Value Type IEnvelope Methods Cancel(Guid) Declaration public void Cancel(Guid requestId) Parameters Type Name System.Guid requestId CancelAll() Declaration public void CancelAll() Handle(TResponse) Declaration public bool Handle(TResponse message) Parameters Type Name TResponse message Returns Type Description System.Boolean Publish(TRequest, Action<TResponse>) Declaration public Guid Publish(TRequest request, Action<TResponse> action) Parameters Type Name TRequest request System.Action <TResponse> action Returns Type Description System.Guid Explicit Interface Implementations IHandle<TResponse>.Handle(TResponse) Declaration void IHandle<TResponse>.Handle(TResponse message) Parameters Type Name TResponse message Implements IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) HandleExtensions.WidenFrom<TInput, TOutput>(IHandle<TOutput>) HandleExtensions.NarrowTo<TInput, TOutput>(IHandle<TOutput>) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.RequestSystemProjections.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.RequestSystemProjections.html",
    "title": "Class ProjectionManagementMessage.RequestSystemProjections | Event Store",
    "keywords": "Class ProjectionManagementMessage.RequestSystemProjections Inheritance System.Object Message ProjectionManagementMessage.RequestSystemProjections Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public sealed class RequestSystemProjections : Message Constructors RequestSystemProjections(IEnvelope) Declaration public RequestSystemProjections(IEnvelope envelope) Parameters Type Name IEnvelope envelope Fields Envelope Declaration public readonly IEnvelope Envelope Field Value Type IEnvelope Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.RegisterSystemProjection.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.RegisterSystemProjection.html",
    "title": "Class ProjectionManagementMessage.RegisterSystemProjection | Event Store",
    "keywords": "Class ProjectionManagementMessage.RegisterSystemProjection Inheritance System.Object Message ProjectionManagementMessage.RegisterSystemProjection Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public sealed class RegisterSystemProjection : Message Constructors RegisterSystemProjection(String, String, String) Declaration public RegisterSystemProjection(string name, string handler, string query) Parameters Type Name System.String name System.String handler System.String query Fields Handler Declaration public readonly string Handler Field Value Type System.String Name Declaration public readonly string Name Field Value Type System.String Query Declaration public readonly string Query Field Value Type System.String Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.ReaderReady.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.ReaderReady.html",
    "title": "Class ProjectionManagementMessage.ReaderReady | Event Store",
    "keywords": "Class ProjectionManagementMessage.ReaderReady Inheritance System.Object Message ProjectionManagementMessage.ReaderReady Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class ReaderReady : Message Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionState.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionState.html",
    "title": "Class ProjectionManagementMessage.ProjectionState | Event Store",
    "keywords": "Class ProjectionManagementMessage.ProjectionState Inheritance System.Object Message ProjectionManagementMessage.ProjectionDataBase ProjectionManagementMessage.ProjectionState Inherited Members ProjectionManagementMessage.ProjectionDataBase.Name ProjectionManagementMessage.ProjectionDataBase.Exception ProjectionManagementMessage.ProjectionDataBase.Partition ProjectionManagementMessage.ProjectionDataBase.Position Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class ProjectionState : ProjectionManagementMessage.ProjectionDataBase Constructors ProjectionState(String, String, String, CheckpointTag, Exception) Declaration public ProjectionState(string name, string partition, string state, CheckpointTag position, Exception exception = null) Parameters Type Name System.String name System.String partition System.String state CheckpointTag position System.Exception exception Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides ProjectionManagementMessage.ProjectionDataBase.MsgTypeId State Declaration public string State { get; } Property Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Monitoring.Stats.StatsContainer.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Monitoring.Stats.StatsContainer.html",
    "title": "Class StatsContainer | Event Store",
    "keywords": "Class StatsContainer Inheritance System.Object StatsContainer Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Monitoring.Stats Assembly : EventStore.Core.dll Syntax public class StatsContainer Methods Add(IDictionary<String, Object>) Declaration public void Add(IDictionary<string, object> statGroup) Parameters Type Name System.Collections.Generic.IDictionary < System.String , System.Object > statGroup GetStats(Boolean, Boolean) Declaration public Dictionary<string, object> GetStats(bool useGrouping, bool useMetadata) Parameters Type Name System.Boolean useGrouping System.Boolean useMetadata Returns Type Description System.Collections.Generic.Dictionary < System.String , System.Object > Group(Dictionary<String, Object>) Declaration public static Dictionary<string, object> Group(Dictionary<string, object> input) Parameters Type Name System.Collections.Generic.Dictionary < System.String , System.Object > input Returns Type Description System.Collections.Generic.Dictionary < System.String , System.Object > Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Monitoring.Stats.StatMetadata.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Monitoring.Stats.StatMetadata.html",
    "title": "Class StatMetadata | Event Store",
    "keywords": "Class StatMetadata Inheritance System.Object StatMetadata Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Monitoring.Stats Assembly : EventStore.Core.dll Syntax public class StatMetadata Constructors StatMetadata() Declaration public StatMetadata() StatMetadata(Object, String) Declaration public StatMetadata(object value, string title) Parameters Type Name System.Object value System.String title StatMetadata(Object, String, String) Declaration public StatMetadata(object value, string category, string title) Parameters Type Name System.Object value System.String category System.String title Properties Category Declaration public string Category { get; set; } Property Value Type System.String DrawChart Declaration public bool DrawChart { get; set; } Property Value Type System.Boolean Title Declaration public string Title { get; set; } Property Value Type System.String Value Declaration public object Value { get; set; } Property Value Type System.Object Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.html",
    "title": "Class TcpClientMessageDto | Event Store",
    "keywords": "Class TcpClientMessageDto Inheritance System.Object TcpClientMessageDto Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public static class TcpClientMessageDto"
  },
  "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.WriteEventsCompleted.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.WriteEventsCompleted.html",
    "title": "Class TcpClientMessageDto.WriteEventsCompleted | Event Store",
    "keywords": "Class TcpClientMessageDto.WriteEventsCompleted Inheritance System.Object TcpClientMessageDto.WriteEventsCompleted Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax [Serializable] [ProtoContract(Name = \"WriteEventsCompleted\")] public class WriteEventsCompleted Constructors WriteEventsCompleted(TcpClientMessageDto.OperationResult, String, Int64, Int64, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>) Declaration public WriteEventsCompleted(TcpClientMessageDto.OperationResult result, string message, long firstEventNumber, long lastEventNumber, long? preparePosition, long? commitPosition, long? currentVersion) Parameters Type Name TcpClientMessageDto.OperationResult result System.String message System.Int64 firstEventNumber System.Int64 lastEventNumber System.Nullable < System.Int64 > preparePosition System.Nullable < System.Int64 > commitPosition System.Nullable < System.Int64 > currentVersion Fields CommitPosition Declaration [ProtoMember(6, IsRequired = false, Name = \"commit_position\", DataFormat = DataFormat.TwosComplement)] public readonly long? CommitPosition Field Value Type System.Nullable < System.Int64 > CurrentVersion Declaration [ProtoMember(7, IsRequired = false, Name = \"current_version\", DataFormat = DataFormat.TwosComplement)] public readonly long? CurrentVersion Field Value Type System.Nullable < System.Int64 > FirstEventNumber Declaration [ProtoMember(3, IsRequired = true, Name = \"first_event_number\", DataFormat = DataFormat.TwosComplement)] public readonly long FirstEventNumber Field Value Type System.Int64 LastEventNumber Declaration [ProtoMember(4, IsRequired = true, Name = \"last_event_number\", DataFormat = DataFormat.TwosComplement)] public readonly long LastEventNumber Field Value Type System.Int64 Message Declaration [ProtoMember(2, IsRequired = false, Name = \"message\", DataFormat = DataFormat.Default)] public readonly string Message Field Value Type System.String PreparePosition Declaration [ProtoMember(5, IsRequired = false, Name = \"prepare_position\", DataFormat = DataFormat.TwosComplement)] public readonly long? PreparePosition Field Value Type System.Nullable < System.Int64 > Result Declaration [ProtoMember(1, IsRequired = true, Name = \"result\", DataFormat = DataFormat.TwosComplement)] public readonly TcpClientMessageDto.OperationResult Result Field Value Type TcpClientMessageDto.OperationResult Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.WriteEvents.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.WriteEvents.html",
    "title": "Class TcpClientMessageDto.WriteEvents | Event Store",
    "keywords": "Class TcpClientMessageDto.WriteEvents Inheritance System.Object TcpClientMessageDto.WriteEvents Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax [Serializable] [ProtoContract(Name = \"WriteEvents\")] public class WriteEvents Constructors WriteEvents(String, Int64, TcpClientMessageDto.NewEvent[], Boolean) Declaration public WriteEvents(string eventStreamId, long expectedVersion, TcpClientMessageDto.NewEvent[] events, bool requireMaster) Parameters Type Name System.String eventStreamId System.Int64 expectedVersion TcpClientMessageDto.NewEvent [] events System.Boolean requireMaster Fields Events Declaration [ProtoMember(3, Name = \"events\", DataFormat = DataFormat.Default)] public readonly TcpClientMessageDto.NewEvent[] Events Field Value Type TcpClientMessageDto.NewEvent [] EventStreamId Declaration [ProtoMember(1, IsRequired = true, Name = \"event_stream_id\", DataFormat = DataFormat.Default)] public readonly string EventStreamId Field Value Type System.String ExpectedVersion Declaration [ProtoMember(2, IsRequired = true, Name = \"expected_version\", DataFormat = DataFormat.TwosComplement)] public readonly long ExpectedVersion Field Value Type System.Int64 RequireMaster Declaration [ProtoMember(4, IsRequired = true, Name = \"require_master\", DataFormat = DataFormat.Default)] public readonly bool RequireMaster Field Value Type System.Boolean Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.DataStructures.NoLRUCache-2.html": {
    "href": "dotnet-api/code/EventStore.Core.DataStructures.NoLRUCache-2.html",
    "title": "Class NoLRUCache<TKey, TValue> | Event Store",
    "keywords": "Class NoLRUCache<TKey, TValue> Inheritance System.Object NoLRUCache<TKey, TValue> Implements ILRUCache <TKey, TValue> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.DataStructures Assembly : EventStore.Core.dll Syntax public class NoLRUCache<TKey, TValue> : ILRUCache<TKey, TValue> Type Parameters Name Description TKey TValue Methods Clear() Declaration public void Clear() Put(TKey, TValue) Declaration public TValue Put(TKey key, TValue value) Parameters Type Name TKey key TValue value Returns Type Description TValue Put<T>(TKey, T, Func<TKey, T, TValue>, Func<TKey, TValue, T, TValue>) Declaration public TValue Put<T>(TKey key, T userData, Func<TKey, T, TValue> addFactory, Func<TKey, TValue, T, TValue> updateFactory) Parameters Type Name TKey key T userData System.Func <TKey, T, TValue> addFactory System.Func <TKey, TValue, T, TValue> updateFactory Returns Type Description TValue Type Parameters Name Description T TryGet(TKey, out TValue) Declaration public bool TryGet(TKey key, out TValue value) Parameters Type Name TKey key TValue value Returns Type Description System.Boolean Implements ILRUCache<TKey, TValue> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.DataStructures.LRUCache-2.html": {
    "href": "dotnet-api/code/EventStore.Core.DataStructures.LRUCache-2.html",
    "title": "Class LRUCache<TKey, TValue> | Event Store",
    "keywords": "Class LRUCache<TKey, TValue> Inheritance System.Object LRUCache<TKey, TValue> Implements ILRUCache <TKey, TValue> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.DataStructures Assembly : EventStore.Core.dll Syntax public class LRUCache<TKey, TValue> : ILRUCache<TKey, TValue> Type Parameters Name Description TKey TValue Constructors LRUCache(Int32) Declaration public LRUCache(int maxCount) Parameters Type Name System.Int32 maxCount LRUCache(Int32, Func<Object, Boolean>, Func<Object, Boolean>) Declaration public LRUCache(int maxCount, Func<object, bool> onPut, Func<object, bool> onRemove) Parameters Type Name System.Int32 maxCount System.Func < System.Object , System.Boolean > onPut System.Func < System.Object , System.Boolean > onRemove Methods Clear() Declaration public void Clear() Put(TKey, TValue) Declaration public TValue Put(TKey key, TValue value) Parameters Type Name TKey key TValue value Returns Type Description TValue Put<T>(TKey, T, Func<TKey, T, TValue>, Func<TKey, TValue, T, TValue>) Declaration public TValue Put<T>(TKey key, T userData, Func<TKey, T, TValue> addFactory, Func<TKey, TValue, T, TValue> updateFactory) Parameters Type Name TKey key T userData System.Func <TKey, T, TValue> addFactory System.Func <TKey, TValue, T, TValue> updateFactory Returns Type Description TValue Type Parameters Name Description T Remove(TKey) Declaration public void Remove(TKey key) Parameters Type Name TKey key TryGet(TKey, out TValue) Declaration public bool TryGet(TKey key, out TValue value) Parameters Type Name TKey key TValue value Returns Type Description System.Boolean Implements ILRUCache<TKey, TValue> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.DataStructures.IStickyLRUCache-2.html": {
    "href": "dotnet-api/code/EventStore.Core.DataStructures.IStickyLRUCache-2.html",
    "title": "Interface IStickyLRUCache<TKey, TValue> | Event Store",
    "keywords": "Interface IStickyLRUCache<TKey, TValue> Namespace : EventStore.Core.DataStructures Assembly : EventStore.Core.dll Syntax public interface IStickyLRUCache<TKey, TValue> Type Parameters Name Description TKey TValue Methods Clear() Declaration void Clear() Put(TKey, TValue, Int32) Declaration TValue Put(TKey key, TValue value, int stickiness) Parameters Type Name TKey key TValue value System.Int32 stickiness Returns Type Description TValue Put(TKey, Func<TKey, TValue>, Func<TKey, TValue, TValue>, Int32) Declaration TValue Put(TKey key, Func<TKey, TValue> addFactory, Func<TKey, TValue, TValue> updateFactory, int stickiness) Parameters Type Name TKey key System.Func <TKey, TValue> addFactory System.Func <TKey, TValue, TValue> updateFactory System.Int32 stickiness Returns Type Description TValue TryGet(TKey, out TValue) Declaration bool TryGet(TKey key, out TValue value) Parameters Type Name TKey key TValue value Returns Type Description System.Boolean Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Data.ReadStreamResult.html": {
    "href": "dotnet-api/code/EventStore.Core.Data.ReadStreamResult.html",
    "title": "Enum ReadStreamResult | Event Store",
    "keywords": "Enum ReadStreamResult Namespace : EventStore.Core.Data Assembly : EventStore.Core.dll Syntax public enum ReadStreamResult Fields Name Description AccessDenied Error NoStream NotModified StreamDeleted Success Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<ReadStreamResult>() ProtobufExtensions.Serialize<ReadStreamResult>() ProtobufExtensions.SerializeToArray<ReadStreamResult>()"
  },
  "dotnet-api/code/EventStore.Core.Data.ReadEventResult.html": {
    "href": "dotnet-api/code/EventStore.Core.Data.ReadEventResult.html",
    "title": "Enum ReadEventResult | Event Store",
    "keywords": "Enum ReadEventResult Namespace : EventStore.Core.Data Assembly : EventStore.Core.dll Syntax public enum ReadEventResult Fields Name Description AccessDenied Error NoStream NotFound StreamDeleted Success Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<ReadEventResult>() ProtobufExtensions.Serialize<ReadEventResult>() ProtobufExtensions.SerializeToArray<ReadEventResult>()"
  },
  "dotnet-api/code/EventStore.Core.Data.ReadAllResult.html": {
    "href": "dotnet-api/code/EventStore.Core.Data.ReadAllResult.html",
    "title": "Enum ReadAllResult | Event Store",
    "keywords": "Enum ReadAllResult Namespace : EventStore.Core.Data Assembly : EventStore.Core.dll Syntax public enum ReadAllResult Fields Name Description AccessDenied Error NotModified Success Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<ReadAllResult>() ProtobufExtensions.Serialize<ReadAllResult>() ProtobufExtensions.SerializeToArray<ReadAllResult>()"
  },
  "dotnet-api/code/EventStore.Core.Data.Range.html": {
    "href": "dotnet-api/code/EventStore.Core.Data.Range.html",
    "title": "Struct Range | Event Store",
    "keywords": "Struct Range Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Data Assembly : EventStore.Core.dll Syntax public struct Range Constructors Range(Int64, Int64) Declaration public Range(long lower, long upper) Parameters Type Name System.Int64 lower System.Int64 upper Fields Lower Declaration public readonly long Lower Field Value Type System.Int64 Upper Declaration public readonly long Upper Field Value Type System.Int64 Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) EnumExtensions.EnumValueName<T>(T) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Cluster.Settings.ClusterVNodeSettings.html": {
    "href": "dotnet-api/code/EventStore.Core.Cluster.Settings.ClusterVNodeSettings.html",
    "title": "Class ClusterVNodeSettings | Event Store",
    "keywords": "Class ClusterVNodeSettings Inheritance System.Object ClusterVNodeSettings Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Cluster.Settings Assembly : EventStore.Core.dll Syntax public class ClusterVNodeSettings Constructors ClusterVNodeSettings(Guid, Int32, IPEndPoint, IPEndPoint, IPEndPoint, IPEndPoint, IPEndPoint, IPEndPoint, GossipAdvertiseInfo, String[], String[], Boolean, X509Certificate2, Int32, Boolean, String, IPEndPoint[], TimeSpan, Int32, Int32, Int32, TimeSpan, TimeSpan, Boolean, Boolean, String, Boolean, TimeSpan, StatsStorage, Int32, IAuthenticationProviderFactory, Boolean, Int32, Boolean, Boolean, Boolean, TimeSpan, TimeSpan, TimeSpan, TimeSpan, TimeSpan, TimeSpan, TimeSpan, Boolean, Int32, Int32, Boolean, Boolean, Boolean, Int32, Int32, String, Boolean, Boolean, Int32, Byte, Boolean, IPersistentSubscriptionConsumerStrategyFactory[], Boolean, Boolean, Int32, Boolean, Boolean, Boolean, Boolean, Int32, Boolean, Boolean, Int32) Declaration public ClusterVNodeSettings(Guid instanceId, int debugIndex, IPEndPoint internalTcpEndPoint, IPEndPoint internalSecureTcpEndPoint, IPEndPoint externalTcpEndPoint, IPEndPoint externalSecureTcpEndPoint, IPEndPoint internalHttpEndPoint, IPEndPoint externalHttpEndPoint, GossipAdvertiseInfo gossipAdvertiseInfo, string[] intHttpPrefixes, string[] extHttpPrefixes, bool enableTrustedAuth, X509Certificate2 certificate, int workerThreads, bool discoverViaDns, string clusterDns, IPEndPoint[] gossipSeeds, TimeSpan minFlushDelay, int clusterNodeCount, int prepareAckCount, int commitAckCount, TimeSpan prepareTimeout, TimeSpan commitTimeout, bool useSsl, bool disableInsecureTCP, string sslTargetHost, bool sslValidateServer, TimeSpan statsPeriod, StatsStorage statsStorage, int nodePriority, IAuthenticationProviderFactory authenticationProviderFactory, bool disableScavengeMerging, int scavengeHistoryMaxAge, bool adminOnPublic, bool statsOnPublic, bool gossipOnPublic, TimeSpan gossipInterval, TimeSpan gossipAllowedTimeDifference, TimeSpan gossipTimeout, TimeSpan intTcpHeartbeatTimeout, TimeSpan intTcpHeartbeatInterval, TimeSpan extTcpHeartbeatTimeout, TimeSpan extTcpHeartbeatInterval, bool verifyDbHash, int maxMemtableEntryCount, int hashCollisionReadLimit, bool startStandardProjections, bool disableHTTPCaching, bool logHttpRequests, int connectionPendingSendBytesThreshold, int chunkInitialReaderCount, string index = null, bool enableHistograms = false, bool skipIndexVerify = false, int indexCacheDepth = 16, byte indexBitnessVersion = 4, bool optimizeIndexMerge = false, IPersistentSubscriptionConsumerStrategyFactory[] additionalConsumerStrategies = null, bool unsafeIgnoreHardDeletes = false, bool betterOrdering = false, int readerThreadsCount = 4, bool alwaysKeepScavenged = false, bool gossipOnSingleNode = false, bool skipIndexScanOnReads = false, bool reduceFileCachePressure = false, int initializationThreads = 1, bool faultOutOfOrderProjections = false, bool structuredLog = false, int maxAutoMergeIndexLevel = 1000) Parameters Type Name System.Guid instanceId System.Int32 debugIndex System.Net.IPEndPoint internalTcpEndPoint System.Net.IPEndPoint internalSecureTcpEndPoint System.Net.IPEndPoint externalTcpEndPoint System.Net.IPEndPoint externalSecureTcpEndPoint System.Net.IPEndPoint internalHttpEndPoint System.Net.IPEndPoint externalHttpEndPoint GossipAdvertiseInfo gossipAdvertiseInfo System.String [] intHttpPrefixes System.String [] extHttpPrefixes System.Boolean enableTrustedAuth System.Security.Cryptography.X509Certificates.X509Certificate2 certificate System.Int32 workerThreads System.Boolean discoverViaDns System.String clusterDns System.Net.IPEndPoint [] gossipSeeds System.TimeSpan minFlushDelay System.Int32 clusterNodeCount System.Int32 prepareAckCount System.Int32 commitAckCount System.TimeSpan prepareTimeout System.TimeSpan commitTimeout System.Boolean useSsl System.Boolean disableInsecureTCP System.String sslTargetHost System.Boolean sslValidateServer System.TimeSpan statsPeriod StatsStorage statsStorage System.Int32 nodePriority IAuthenticationProviderFactory authenticationProviderFactory System.Boolean disableScavengeMerging System.Int32 scavengeHistoryMaxAge System.Boolean adminOnPublic System.Boolean statsOnPublic System.Boolean gossipOnPublic System.TimeSpan gossipInterval System.TimeSpan gossipAllowedTimeDifference System.TimeSpan gossipTimeout System.TimeSpan intTcpHeartbeatTimeout System.TimeSpan intTcpHeartbeatInterval System.TimeSpan extTcpHeartbeatTimeout System.TimeSpan extTcpHeartbeatInterval System.Boolean verifyDbHash System.Int32 maxMemtableEntryCount System.Int32 hashCollisionReadLimit System.Boolean startStandardProjections System.Boolean disableHTTPCaching System.Boolean logHttpRequests System.Int32 connectionPendingSendBytesThreshold System.Int32 chunkInitialReaderCount System.String index System.Boolean enableHistograms System.Boolean skipIndexVerify System.Int32 indexCacheDepth System.Byte indexBitnessVersion System.Boolean optimizeIndexMerge IPersistentSubscriptionConsumerStrategyFactory [] additionalConsumerStrategies System.Boolean unsafeIgnoreHardDeletes System.Boolean betterOrdering System.Int32 readerThreadsCount System.Boolean alwaysKeepScavenged System.Boolean gossipOnSingleNode System.Boolean skipIndexScanOnReads System.Boolean reduceFileCachePressure System.Int32 initializationThreads System.Boolean faultOutOfOrderProjections System.Boolean structuredLog System.Int32 maxAutoMergeIndexLevel Fields AdditionalConsumerStrategies Declaration public readonly IPersistentSubscriptionConsumerStrategyFactory[] AdditionalConsumerStrategies Field Value Type IPersistentSubscriptionConsumerStrategyFactory [] AdminOnPublic Declaration public bool AdminOnPublic Field Value Type System.Boolean AlwaysKeepScavenged Declaration public readonly bool AlwaysKeepScavenged Field Value Type System.Boolean AuthenticationProviderFactory Declaration public readonly IAuthenticationProviderFactory AuthenticationProviderFactory Field Value Type IAuthenticationProviderFactory BetterOrdering Declaration public readonly bool BetterOrdering Field Value Type System.Boolean Certificate Declaration public readonly X509Certificate2 Certificate Field Value Type System.Security.Cryptography.X509Certificates.X509Certificate2 ChunkInitialReaderCount Declaration public readonly int ChunkInitialReaderCount Field Value Type System.Int32 ClusterDns Declaration public readonly string ClusterDns Field Value Type System.String ClusterNodeCount Declaration public readonly int ClusterNodeCount Field Value Type System.Int32 CommitAckCount Declaration public readonly int CommitAckCount Field Value Type System.Int32 CommitTimeout Declaration public readonly TimeSpan CommitTimeout Field Value Type System.TimeSpan ConnectionPendingSendBytesThreshold Declaration public readonly int ConnectionPendingSendBytesThreshold Field Value Type System.Int32 DisableHTTPCaching Declaration public readonly bool DisableHTTPCaching Field Value Type System.Boolean DisableInsecureTCP Declaration public readonly bool DisableInsecureTCP Field Value Type System.Boolean DisableScavengeMerging Declaration public readonly bool DisableScavengeMerging Field Value Type System.Boolean DiscoverViaDns Declaration public readonly bool DiscoverViaDns Field Value Type System.Boolean EnableHistograms Declaration public readonly bool EnableHistograms Field Value Type System.Boolean EnableTrustedAuth Declaration public readonly bool EnableTrustedAuth Field Value Type System.Boolean ExtHttpPrefixes Declaration public readonly string[] ExtHttpPrefixes Field Value Type System.String [] ExtTcpHeartbeatInterval Declaration public readonly TimeSpan ExtTcpHeartbeatInterval Field Value Type System.TimeSpan ExtTcpHeartbeatTimeout Declaration public readonly TimeSpan ExtTcpHeartbeatTimeout Field Value Type System.TimeSpan FaultOutOfOrderProjections Declaration public readonly bool FaultOutOfOrderProjections Field Value Type System.Boolean GossipAdvertiseInfo Declaration public readonly GossipAdvertiseInfo GossipAdvertiseInfo Field Value Type GossipAdvertiseInfo GossipAllowedTimeDifference Declaration public readonly TimeSpan GossipAllowedTimeDifference Field Value Type System.TimeSpan GossipInterval Declaration public readonly TimeSpan GossipInterval Field Value Type System.TimeSpan GossipOnPublic Declaration public bool GossipOnPublic Field Value Type System.Boolean GossipOnSingleNode Declaration public readonly bool GossipOnSingleNode Field Value Type System.Boolean GossipSeeds Declaration public readonly IPEndPoint[] GossipSeeds Field Value Type System.Net.IPEndPoint [] GossipTimeout Declaration public readonly TimeSpan GossipTimeout Field Value Type System.TimeSpan HashCollisionReadLimit Declaration public readonly int HashCollisionReadLimit Field Value Type System.Int32 Index Declaration public readonly string Index Field Value Type System.String IndexBitnessVersion Declaration public readonly byte IndexBitnessVersion Field Value Type System.Byte IndexCacheDepth Declaration public readonly int IndexCacheDepth Field Value Type System.Int32 InitializationThreads Declaration public readonly int InitializationThreads Field Value Type System.Int32 IntHttpPrefixes Declaration public readonly string[] IntHttpPrefixes Field Value Type System.String [] IntTcpHeartbeatInterval Declaration public readonly TimeSpan IntTcpHeartbeatInterval Field Value Type System.TimeSpan IntTcpHeartbeatTimeout Declaration public readonly TimeSpan IntTcpHeartbeatTimeout Field Value Type System.TimeSpan LogHttpRequests Declaration public readonly bool LogHttpRequests Field Value Type System.Boolean MaxAutoMergeIndexLevel Declaration public readonly int MaxAutoMergeIndexLevel Field Value Type System.Int32 MaxMemtableEntryCount Declaration public readonly int MaxMemtableEntryCount Field Value Type System.Int32 MinFlushDelay Declaration public readonly TimeSpan MinFlushDelay Field Value Type System.TimeSpan NodeInfo Declaration public readonly VNodeInfo NodeInfo Field Value Type VNodeInfo NodePriority Declaration public readonly int NodePriority Field Value Type System.Int32 OptimizeIndexMerge Declaration public readonly bool OptimizeIndexMerge Field Value Type System.Boolean PrepareAckCount Declaration public readonly int PrepareAckCount Field Value Type System.Int32 PrepareTimeout Declaration public readonly TimeSpan PrepareTimeout Field Value Type System.TimeSpan ReaderThreadsCount Declaration public readonly int ReaderThreadsCount Field Value Type System.Int32 ReduceFileCachePressure Declaration public readonly bool ReduceFileCachePressure Field Value Type System.Boolean ScavengeHistoryMaxAge Declaration public readonly int ScavengeHistoryMaxAge Field Value Type System.Int32 SkipIndexScanOnReads Declaration public readonly bool SkipIndexScanOnReads Field Value Type System.Boolean SkipIndexVerify Declaration public readonly bool SkipIndexVerify Field Value Type System.Boolean SslTargetHost Declaration public readonly string SslTargetHost Field Value Type System.String SslValidateServer Declaration public readonly bool SslValidateServer Field Value Type System.Boolean StartStandardProjections Declaration public readonly bool StartStandardProjections Field Value Type System.Boolean StatsOnPublic Declaration public bool StatsOnPublic Field Value Type System.Boolean StatsPeriod Declaration public readonly TimeSpan StatsPeriod Field Value Type System.TimeSpan StatsStorage Declaration public readonly StatsStorage StatsStorage Field Value Type StatsStorage StructuredLog Declaration public readonly bool StructuredLog Field Value Type System.Boolean UnsafeIgnoreHardDeletes Declaration public readonly bool UnsafeIgnoreHardDeletes Field Value Type System.Boolean UseSsl Declaration public readonly bool UseSsl Field Value Type System.Boolean VerifyDbHash Declaration public readonly bool VerifyDbHash Field Value Type System.Boolean WorkerThreads Declaration public readonly int WorkerThreads Field Value Type System.Int32 Methods ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Cluster.Settings.ClusterVNodeAuthenticationType.html": {
    "href": "dotnet-api/code/EventStore.Core.Cluster.Settings.ClusterVNodeAuthenticationType.html",
    "title": "Enum ClusterVNodeAuthenticationType | Event Store",
    "keywords": "Enum ClusterVNodeAuthenticationType Namespace : EventStore.Core.Cluster.Settings Assembly : EventStore.Core.dll Syntax public enum ClusterVNodeAuthenticationType Fields Name Description Internal Ldaps Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<ClusterVNodeAuthenticationType>() ProtobufExtensions.Serialize<ClusterVNodeAuthenticationType>() ProtobufExtensions.SerializeToArray<ClusterVNodeAuthenticationType>()"
  },
  "dotnet-api/code/EventStore.Core.Cluster.Settings.ClusterConsts.html": {
    "href": "dotnet-api/code/EventStore.Core.Cluster.Settings.ClusterConsts.html",
    "title": "Class ClusterConsts | Event Store",
    "keywords": "Class ClusterConsts Inheritance System.Object ClusterConsts Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Cluster.Settings Assembly : EventStore.Core.dll Syntax public static class ClusterConsts Fields SubscriptionLastEpochCount Declaration public const int SubscriptionLastEpochCount = 20 Field Value Type System.Int32 TruncationSyncTimeout Declaration public static readonly TimeSpan TruncationSyncTimeout Field Value Type System.TimeSpan"
  },
  "dotnet-api/code/EventStore.Transport.Tcp.TcpConnectionSsl.html": {
    "href": "dotnet-api/code/EventStore.Transport.Tcp.TcpConnectionSsl.html",
    "title": "Class TcpConnectionSsl | Event Store",
    "keywords": "Class TcpConnectionSsl Inheritance System.Object TcpConnectionBase TcpConnectionSsl Implements IMonitoredTcpConnection ITcpConnection Inherited Members TcpConnectionBase.RemoteEndPoint TcpConnectionBase.LocalEndPoint TcpConnectionBase.IsInitialized TcpConnectionBase.IsClosed TcpConnectionBase.InSend TcpConnectionBase.InReceive TcpConnectionBase.PendingSendBytes TcpConnectionBase.InSendBytes TcpConnectionBase.PendingReceivedBytes TcpConnectionBase.TotalBytesSent TcpConnectionBase.TotalBytesReceived TcpConnectionBase.SendCalls TcpConnectionBase.SendCallbacks TcpConnectionBase.ReceiveCalls TcpConnectionBase.ReceiveCallbacks TcpConnectionBase.IsReadyForSend TcpConnectionBase.IsReadyForReceive TcpConnectionBase.IsFaulted TcpConnectionBase.LastSendStarted TcpConnectionBase.LastReceiveStarted TcpConnectionBase.InitConnectionBase(Socket) TcpConnectionBase.NotifySendScheduled(Int32) TcpConnectionBase.NotifySendStarting(Int32) TcpConnectionBase.NotifySendCompleted(Int32) TcpConnectionBase.NotifyReceiveStarting() TcpConnectionBase.NotifyReceiveCompleted(Int32) TcpConnectionBase.NotifyReceiveDispatched(Int32) TcpConnectionBase.NotifyClosed() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Transport.Tcp Assembly : EventStore.Transport.Tcp.dll Syntax public class TcpConnectionSsl : TcpConnectionBase, IMonitoredTcpConnection, ITcpConnection Fields _clientConnectionName Declaration public string _clientConnectionName Field Value Type System.String Properties ClientConnectionName Declaration public string ClientConnectionName { get; } Property Value Type System.String ConnectionId Declaration public Guid ConnectionId { get; } Property Value Type System.Guid SendQueueSize Declaration public int SendQueueSize { get; } Property Value Type System.Int32 Methods Close(String) Declaration public void Close(string reason) Parameters Type Name System.String reason CreateClientFromSocket(Guid, IPEndPoint, Socket, String, Boolean, Boolean) Declaration public static ITcpConnection CreateClientFromSocket(Guid connectionId, IPEndPoint remoteEndPoint, Socket socket, string targetHost, bool validateServer, bool verbose) Parameters Type Name System.Guid connectionId System.Net.IPEndPoint remoteEndPoint System.Net.Sockets.Socket socket System.String targetHost System.Boolean validateServer System.Boolean verbose Returns Type Description ITcpConnection CreateConnectingConnection(Guid, IPEndPoint, String, Boolean, TcpClientConnector, TimeSpan, Action<ITcpConnection>, Action<ITcpConnection, SocketError>, Boolean) Declaration public static ITcpConnection CreateConnectingConnection(Guid connectionId, IPEndPoint remoteEndPoint, string targetHost, bool validateServer, TcpClientConnector connector, TimeSpan connectionTimeout, Action<ITcpConnection> onConnectionEstablished, Action<ITcpConnection, SocketError> onConnectionFailed, bool verbose) Parameters Type Name System.Guid connectionId System.Net.IPEndPoint remoteEndPoint System.String targetHost System.Boolean validateServer TcpClientConnector connector System.TimeSpan connectionTimeout System.Action < ITcpConnection > onConnectionEstablished System.Action < ITcpConnection , System.Net.Sockets.SocketError > onConnectionFailed System.Boolean verbose Returns Type Description ITcpConnection CreateServerFromSocket(Guid, IPEndPoint, Socket, X509Certificate, Boolean) Declaration public static ITcpConnection CreateServerFromSocket(Guid connectionId, IPEndPoint remoteEndPoint, Socket socket, X509Certificate certificate, bool verbose) Parameters Type Name System.Guid connectionId System.Net.IPEndPoint remoteEndPoint System.Net.Sockets.Socket socket System.Security.Cryptography.X509Certificates.X509Certificate certificate System.Boolean verbose Returns Type Description ITcpConnection EnqueueSend(IEnumerable<ArraySegment<Byte>>) Declaration public void EnqueueSend(IEnumerable<ArraySegment<byte>> data) Parameters Type Name System.Collections.Generic.IEnumerable < System.ArraySegment < System.Byte >> data ReceiveAsync(Action<ITcpConnection, IEnumerable<ArraySegment<Byte>>>) Declaration public void ReceiveAsync(Action<ITcpConnection, IEnumerable<ArraySegment<byte>>> callback) Parameters Type Name System.Action < ITcpConnection , System.Collections.Generic.IEnumerable < System.ArraySegment < System.Byte >>> callback SetClientConnectionName(String) Declaration public void SetClientConnectionName(string clientConnectionName) Parameters Type Name System.String clientConnectionName ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() ValidateServerCertificate(Object, X509Certificate, X509Chain, SslPolicyErrors) Declaration public bool ValidateServerCertificate(object sender, X509Certificate certificate, X509Chain chain, SslPolicyErrors sslPolicyErrors) Parameters Type Name System.Object sender System.Security.Cryptography.X509Certificates.X509Certificate certificate System.Security.Cryptography.X509Certificates.X509Chain chain System.Net.Security.SslPolicyErrors sslPolicyErrors Returns Type Description System.Boolean Events ConnectionClosed Declaration public event Action<ITcpConnection, SocketError> ConnectionClosed Event Type Type System.Action < ITcpConnection , System.Net.Sockets.SocketError > Implements IMonitoredTcpConnection ITcpConnection Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Transport.Tcp.TcpConnectionMonitor.html": {
    "href": "dotnet-api/code/EventStore.Transport.Tcp.TcpConnectionMonitor.html",
    "title": "Class TcpConnectionMonitor | Event Store",
    "keywords": "Class TcpConnectionMonitor Inheritance System.Object TcpConnectionMonitor Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Transport.Tcp Assembly : EventStore.Transport.Tcp.dll Syntax public class TcpConnectionMonitor Fields Default Declaration public static readonly TcpConnectionMonitor Default Field Value Type TcpConnectionMonitor Methods GetTcpConnectionStats() Declaration public IMonitoredTcpConnection[] GetTcpConnectionStats() Returns Type Description IMonitoredTcpConnection [] GetTcpStats() Declaration public TcpStats GetTcpStats() Returns Type Description TcpStats IsSendBlocked() Declaration public bool IsSendBlocked() Returns Type Description System.Boolean Register(IMonitoredTcpConnection) Declaration public void Register(IMonitoredTcpConnection connection) Parameters Type Name IMonitoredTcpConnection connection Unregister(IMonitoredTcpConnection) Declaration public void Unregister(IMonitoredTcpConnection connection) Parameters Type Name IMonitoredTcpConnection connection Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.v8.PreludeScript.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.v8.PreludeScript.html",
    "title": "Class PreludeScript | Event Store",
    "keywords": "Class PreludeScript Inheritance System.Object PreludeScript Implements System.IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.v8 Assembly : EventStore.Projections.Core.dll Syntax public class PreludeScript : IDisposable Constructors PreludeScript(String, String, Func<String, Tuple<String, String>>, Action<Int32, Action>, Action<String, Object[]>) Declaration public PreludeScript(string script, string fileName, Func<string, Tuple<string, string>> getModuleSourceAndFileName, Action<int, Action> cancelCallbackFactory, Action<string, object[]> logger = null) Parameters Type Name System.String script System.String fileName System.Func < System.String , System.Tuple < System.String , System.String >> getModuleSourceAndFileName System.Action < System.Int32 , System.Action > cancelCallbackFactory System.Action < System.String , System.Object []> logger Methods CancelTerminateExecution() Declaration public bool CancelTerminateExecution() Returns Type Description System.Boolean Dispose() Declaration public void Dispose() GetHandle() Declaration public IntPtr GetHandle() Returns Type Description System.IntPtr ScheduleTerminateExecution() Declaration public void ScheduleTerminateExecution() Implements System.IDisposable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.v8.Js1Exception.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.v8.Js1Exception.html",
    "title": "Class Js1Exception | Event Store",
    "keywords": "Class Js1Exception Inheritance System.Object System.Exception Js1Exception Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Projections.Core.v8 Assembly : EventStore.Projections.Core.dll Syntax public class Js1Exception : Exception, _Exception, ISerializable Constructors Js1Exception(Int32, String) Declaration public Js1Exception(int errorCode, string errorMessage) Parameters Type Name System.Int32 errorCode System.String errorMessage Properties ErrorCode Declaration public int ErrorCode { get; } Property Value Type System.Int32 Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.v8.Js1.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.v8.Js1.html",
    "title": "Class Js1 | Event Store",
    "keywords": "Class Js1 Inheritance System.Object Js1 Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.v8 Assembly : EventStore.Projections.Core.dll Syntax public static class Js1 Methods ApiVersion() Declaration public static IntPtr ApiVersion() Returns Type Description System.IntPtr CompileModule(IntPtr, String, String) Declaration public static IntPtr CompileModule(IntPtr prelude, string script, string fileName) Parameters Type Name System.IntPtr prelude System.String script System.String fileName Returns Type Description System.IntPtr CompilePrelude(String, String, Js1.LoadModuleDelegate, Js1.EnterCancellableRegionDelegate, Js1.ExitCancellableRegionDelegate, Js1.LogDelegate) Declaration public static IntPtr CompilePrelude(string prelude, string fileName, Js1.LoadModuleDelegate loadModuleHandler, Js1.EnterCancellableRegionDelegate enterCancellableRegionHandler, Js1.ExitCancellableRegionDelegate exitCancellableRegionHandler, Js1.LogDelegate logHandler) Parameters Type Name System.String prelude System.String fileName Js1.LoadModuleDelegate loadModuleHandler Js1.EnterCancellableRegionDelegate enterCancellableRegionHandler Js1.ExitCancellableRegionDelegate exitCancellableRegionHandler Js1.LogDelegate logHandler Returns Type Description System.IntPtr CompileQuery(IntPtr, String, String, Js1.CommandHandlerRegisteredDelegate, Js1.ReverseCommandHandlerDelegate) Declaration public static IntPtr CompileQuery(IntPtr prelude, string script, string fileName, Js1.CommandHandlerRegisteredDelegate commandHandlerRegisteredCallback, Js1.ReverseCommandHandlerDelegate reverseCommandHandler) Parameters Type Name System.IntPtr prelude System.String script System.String fileName Js1.CommandHandlerRegisteredDelegate commandHandlerRegisteredCallback Js1.ReverseCommandHandlerDelegate reverseCommandHandler Returns Type Description System.IntPtr DisposeScript(IntPtr) Declaration public static void DisposeScript(IntPtr scriptHandle) Parameters Type Name System.IntPtr scriptHandle ExecuteCommandHandler(IntPtr, IntPtr, String, String[], Int32, out IntPtr, out IntPtr, out IntPtr) Declaration public static bool ExecuteCommandHandler(IntPtr scriptHandle, IntPtr eventHandlerHandle, string dataJson, string[] dataOther, int otherLength, out IntPtr resultJson, out IntPtr result2Json, out IntPtr memoryHandle) Parameters Type Name System.IntPtr scriptHandle System.IntPtr eventHandlerHandle System.String dataJson System.String [] dataOther System.Int32 otherLength System.IntPtr resultJson System.IntPtr result2Json System.IntPtr memoryHandle Returns Type Description System.Boolean FreeResult(IntPtr) Declaration public static void FreeResult(IntPtr resultHandle) Parameters Type Name System.IntPtr resultHandle ReportErrors(IntPtr, Js1.ReportErrorDelegate) Declaration public static void ReportErrors(IntPtr scriptHandle, Js1.ReportErrorDelegate reportErrorCallback) Parameters Type Name System.IntPtr scriptHandle Js1.ReportErrorDelegate reportErrorCallback TerminateExecution(IntPtr) Declaration public static void TerminateExecution(IntPtr scriptHandle) Parameters Type Name System.IntPtr scriptHandle"
  },
  "dotnet-api/code/EventStore.Projections.Core.v8.Js1.ReverseCommandHandlerDelegate.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.v8.Js1.ReverseCommandHandlerDelegate.html",
    "title": "Delegate Js1.ReverseCommandHandlerDelegate | Event Store",
    "keywords": "Delegate Js1.ReverseCommandHandlerDelegate Namespace : EventStore.Projections.Core.v8 Assembly : EventStore.Projections.Core.dll Syntax public delegate void ReverseCommandHandlerDelegate(string commandName, string commandBody); Parameters Type Name Description System.String commandName System.String commandBody Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.v8.Js1.ReportErrorDelegate.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.v8.Js1.ReportErrorDelegate.html",
    "title": "Delegate Js1.ReportErrorDelegate | Event Store",
    "keywords": "Delegate Js1.ReportErrorDelegate Namespace : EventStore.Projections.Core.v8 Assembly : EventStore.Projections.Core.dll Syntax public delegate void ReportErrorDelegate(int erroe_code, string error_message); Parameters Type Name Description System.Int32 erroe_code System.String error_message Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.v8.Js1.LogDelegate.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.v8.Js1.LogDelegate.html",
    "title": "Delegate Js1.LogDelegate | Event Store",
    "keywords": "Delegate Js1.LogDelegate Namespace : EventStore.Projections.Core.v8 Assembly : EventStore.Projections.Core.dll Syntax public delegate void LogDelegate(string message); Parameters Type Name Description System.String message Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.v8.Js1.LoadModuleDelegate.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.v8.Js1.LoadModuleDelegate.html",
    "title": "Delegate Js1.LoadModuleDelegate | Event Store",
    "keywords": "Delegate Js1.LoadModuleDelegate Namespace : EventStore.Projections.Core.v8 Assembly : EventStore.Projections.Core.dll Syntax public delegate IntPtr LoadModuleDelegate(IntPtr prelude, string moduleName); Parameters Type Name Description System.IntPtr prelude System.String moduleName Returns Type Description System.IntPtr Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.v8.Js1.ExitCancellableRegionDelegate.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.v8.Js1.ExitCancellableRegionDelegate.html",
    "title": "Delegate Js1.ExitCancellableRegionDelegate | Event Store",
    "keywords": "Delegate Js1.ExitCancellableRegionDelegate Namespace : EventStore.Projections.Core.v8 Assembly : EventStore.Projections.Core.dll Syntax public delegate bool ExitCancellableRegionDelegate(); Returns Type Description System.Boolean Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.v8.Js1.EnterCancellableRegionDelegate.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.v8.Js1.EnterCancellableRegionDelegate.html",
    "title": "Delegate Js1.EnterCancellableRegionDelegate | Event Store",
    "keywords": "Delegate Js1.EnterCancellableRegionDelegate Namespace : EventStore.Projections.Core.v8 Assembly : EventStore.Projections.Core.dll Syntax public delegate bool EnterCancellableRegionDelegate(); Returns Type Description System.Boolean Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.v8.Js1.CommandHandlerRegisteredDelegate.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.v8.Js1.CommandHandlerRegisteredDelegate.html",
    "title": "Delegate Js1.CommandHandlerRegisteredDelegate | Event Store",
    "keywords": "Delegate Js1.CommandHandlerRegisteredDelegate Namespace : EventStore.Projections.Core.v8 Assembly : EventStore.Projections.Core.dll Syntax public delegate void CommandHandlerRegisteredDelegate(string eventName, IntPtr handlerHandle); Parameters Type Name Description System.String eventName System.IntPtr handlerHandle Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Utils.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Utils.html",
    "title": "Namespace EventStore.Projections.Core.Utils | Event Store",
    "keywords": "Namespace EventStore.Projections.Core.Utils Classes EncodingExtensions EnumExtensions Logging"
  },
  "dotnet-api/code/EventStore.Projections.Core.Utils.Logging.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Utils.Logging.html",
    "title": "Class Logging | Event Store",
    "keywords": "Class Logging Inheritance System.Object Logging Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Utils Assembly : EventStore.Projections.Core.dll Syntax public static class Logging Fields FilteredMessages Declaration public static readonly string[] FilteredMessages Field Value Type System.String []"
  },
  "dotnet-api/code/EventStore.Projections.Core.Utils.EnumExtensions.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Utils.EnumExtensions.html",
    "title": "Class EnumExtensions | Event Store",
    "keywords": "Class EnumExtensions Inheritance System.Object EnumExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Utils Assembly : EventStore.Projections.Core.dll Syntax public static class EnumExtensions Methods EnumValueName<T>(T) Declaration public static string EnumValueName<T>(this T value) where T : struct Parameters Type Name T value Returns Type Description System.String Type Parameters Name Description T"
  },
  "dotnet-api/code/EventStore.Projections.Core.Utils.EncodingExtensions.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Utils.EncodingExtensions.html",
    "title": "Class EncodingExtensions | Event Store",
    "keywords": "Class EncodingExtensions Inheritance System.Object EncodingExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Utils Assembly : EventStore.Projections.Core.dll Syntax public static class EncodingExtensions Methods Apply(String, Object[]) Declaration public static string Apply(this string format, params object[] args) Parameters Type Name System.String format System.Object [] args Returns Type Description System.String FromUtf8(Byte[]) Declaration public static string FromUtf8(this byte[] self) Parameters Type Name System.Byte [] self Returns Type Description System.String ToUtf8(String) Declaration public static byte[] ToUtf8(this string self) Parameters Type Name System.String self Returns Type Description System.Byte []"
  },
  "dotnet-api/code/EventStore.Projections.Core.Standard.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Standard.html",
    "title": "Namespace EventStore.Projections.Core.Standard | Event Store",
    "keywords": "Namespace EventStore.Projections.Core.Standard Classes ByCorrelationId CategorizeEventsByStreamPath CategorizeStreamByPath IndexEventsByEventType IndexStreams StreamCategoryExtractor StreamCategoryExtractorByFirstSeparator StreamCategoryExtractorByLastSeparator StreamDeletedHelper StubHandler"
  },
  "dotnet-api/code/EventStore.Projections.Core.Standard.StubHandler.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Standard.StubHandler.html",
    "title": "Class StubHandler | Event Store",
    "keywords": "Class StubHandler Inheritance System.Object StubHandler Implements IProjectionStateHandler System.IDisposable ISourceDefinitionSource Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Standard Assembly : EventStore.Projections.Core.dll Syntax public class StubHandler : IProjectionStateHandler, IDisposable, ISourceDefinitionSource Constructors StubHandler(String, Action<String, Object[]>) Declaration public StubHandler(string source, Action<string, object[]> logger) Parameters Type Name System.String source System.Action < System.String , System.Object []> logger Methods ConfigureSourceProcessingStrategy(SourceDefinitionBuilder) Declaration public void ConfigureSourceProcessingStrategy(SourceDefinitionBuilder builder) Parameters Type Name SourceDefinitionBuilder builder Dispose() Declaration public void Dispose() GetSourceDefinition() Declaration public IQuerySources GetSourceDefinition() Returns Type Description IQuerySources GetStatePartition(CheckpointTag, String, ResolvedEvent) Declaration public string GetStatePartition(CheckpointTag eventPosition, string category, ResolvedEvent data) Parameters Type Name CheckpointTag eventPosition System.String category ResolvedEvent data Returns Type Description System.String Initialize() Declaration public void Initialize() InitializeShared() Declaration public void InitializeShared() Load(String) Declaration public void Load(string state) Parameters Type Name System.String state LoadShared(String) Declaration public void LoadShared(string state) Parameters Type Name System.String state ProcessEvent(String, CheckpointTag, String, ResolvedEvent, out String, out String, out EmittedEventEnvelope[]) Declaration public bool ProcessEvent(string partition, CheckpointTag eventPosition, string category1, ResolvedEvent data, out string newState, out string newSharedState, out EmittedEventEnvelope[] emittedEvents) Parameters Type Name System.String partition CheckpointTag eventPosition System.String category1 ResolvedEvent data System.String newState System.String newSharedState EmittedEventEnvelope [] emittedEvents Returns Type Description System.Boolean ProcessPartitionCreated(String, CheckpointTag, ResolvedEvent, out EmittedEventEnvelope[]) Declaration public bool ProcessPartitionCreated(string partition, CheckpointTag createPosition, ResolvedEvent data, out EmittedEventEnvelope[] emittedEvents) Parameters Type Name System.String partition CheckpointTag createPosition ResolvedEvent data EmittedEventEnvelope [] emittedEvents Returns Type Description System.Boolean ProcessPartitionDeleted(String, CheckpointTag, out String) Declaration public bool ProcessPartitionDeleted(string partition, CheckpointTag deletePosition, out string newState) Parameters Type Name System.String partition CheckpointTag deletePosition System.String newState Returns Type Description System.Boolean TransformCatalogEvent(CheckpointTag, ResolvedEvent) Declaration public string TransformCatalogEvent(CheckpointTag eventPosition, ResolvedEvent data) Parameters Type Name CheckpointTag eventPosition ResolvedEvent data Returns Type Description System.String TransformStateToResult() Declaration public string TransformStateToResult() Returns Type Description System.String Implements IProjectionStateHandler System.IDisposable ISourceDefinitionSource Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProjectionStateHandlerTestExtensions.ProcessEvent(IProjectionStateHandler, String, CheckpointTag, String, String, String, Guid, Int64, String, String, out String, out EmittedEventEnvelope[], Boolean) ProjectionStateHandlerTestExtensions.ProcessEvent(IProjectionStateHandler, String, CheckpointTag, String, String, String, Guid, Int64, String, String, out String, out String, out EmittedEventEnvelope[], Boolean) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Standard.StreamDeletedHelper.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Standard.StreamDeletedHelper.html",
    "title": "Class StreamDeletedHelper | Event Store",
    "keywords": "Class StreamDeletedHelper Inheritance System.Object StreamDeletedHelper Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Standard Assembly : EventStore.Projections.Core.dll Syntax public static class StreamDeletedHelper Methods IsStreamDeletedEvent(String, String, Byte[], out String) Declaration public static bool IsStreamDeletedEvent(string streamOrMetaStreamId, string eventType, byte[] eventData, out string deletedPartitionStreamId) Parameters Type Name System.String streamOrMetaStreamId System.String eventType System.Byte [] eventData System.String deletedPartitionStreamId Returns Type Description System.Boolean IsStreamDeletedEvent(String, String, String, out String) Declaration public static bool IsStreamDeletedEvent(string streamOrMetaStreamId, string eventType, string eventData, out string deletedPartitionStreamId) Parameters Type Name System.String streamOrMetaStreamId System.String eventType System.String eventData System.String deletedPartitionStreamId Returns Type Description System.Boolean IsStreamDeletedEventOrLinkToStreamDeletedEvent(ResolvedEvent, out String) Declaration public static bool IsStreamDeletedEventOrLinkToStreamDeletedEvent(ResolvedEvent resolvedEvent, out string deletedPartitionStreamId) Parameters Type Name ResolvedEvent resolvedEvent System.String deletedPartitionStreamId Returns Type Description System.Boolean"
  },
  "dotnet-api/code/EventStore.Projections.Core.Standard.StreamCategoryExtractorByLastSeparator.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Standard.StreamCategoryExtractorByLastSeparator.html",
    "title": "Class StreamCategoryExtractorByLastSeparator | Event Store",
    "keywords": "Class StreamCategoryExtractorByLastSeparator Inheritance System.Object StreamCategoryExtractor StreamCategoryExtractorByLastSeparator Inherited Members StreamCategoryExtractor.GetExtractor(String, Action<String, Object[]>) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Standard Assembly : EventStore.Projections.Core.dll Syntax public class StreamCategoryExtractorByLastSeparator : StreamCategoryExtractor Constructors StreamCategoryExtractorByLastSeparator(Char) Declaration public StreamCategoryExtractorByLastSeparator(char separator) Parameters Type Name System.Char separator Methods GetCategoryByStreamId(String) Declaration public override string GetCategoryByStreamId(string streamId) Parameters Type Name System.String streamId Returns Type Description System.String Overrides StreamCategoryExtractor.GetCategoryByStreamId(String) Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Responses.Prepared.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Responses.Prepared.html",
    "title": "Class Prepared | Event Store",
    "keywords": "Class Prepared Inheritance System.Object Prepared Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages.Persisted.Responses Assembly : EventStore.Projections.Core.dll Syntax public class Prepared Properties Id Declaration public string Id { get; set; } Property Value Type System.String SourceDefinition Declaration public ProjectionSourceDefinition SourceDefinition { get; set; } Property Value Type ProjectionSourceDefinition Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Responses.PostCommand.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Responses.PostCommand.html",
    "title": "Class PostCommand | Event Store",
    "keywords": "Class PostCommand Inheritance System.Object PostCommand Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages.Persisted.Responses Assembly : EventStore.Projections.Core.dll Syntax public class PostCommand Fields CheckpointsEnabled Declaration public bool CheckpointsEnabled Field Value Type System.Boolean EmitEnabled Declaration public bool EmitEnabled Field Value Type System.Boolean Enabled Declaration public bool Enabled Field Value Type System.Boolean EnableRunAs Declaration public bool EnableRunAs Field Value Type System.Boolean HandlerType Declaration public string HandlerType Field Value Type System.String Mode Declaration public ProjectionMode Mode Field Value Type ProjectionMode Name Declaration public string Name Field Value Type System.String Query Declaration public string Query Field Value Type System.String RunAs Declaration public SerializedRunAs RunAs Field Value Type SerializedRunAs TrackEmittedStreams Declaration public bool TrackEmittedStreams Field Value Type System.Boolean Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Responses.GetStatisticsCommand.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Responses.GetStatisticsCommand.html",
    "title": "Class GetStatisticsCommand | Event Store",
    "keywords": "Class GetStatisticsCommand Inheritance System.Object GetStatisticsCommand Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages.Persisted.Responses Assembly : EventStore.Projections.Core.dll Syntax public class GetStatisticsCommand Fields IncludeDeleted Declaration public bool IncludeDeleted Field Value Type System.Boolean Mode Declaration public ProjectionMode? Mode Field Value Type System.Nullable < ProjectionMode > Name Declaration public string Name Field Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Responses.GetStateCommand.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Responses.GetStateCommand.html",
    "title": "Class GetStateCommand | Event Store",
    "keywords": "Class GetStateCommand Inheritance System.Object GetStateCommand Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages.Persisted.Responses Assembly : EventStore.Projections.Core.dll Syntax public class GetStateCommand Fields Name Declaration public string Name Field Value Type System.String Partition Declaration public string Partition Field Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Responses.GetResultCommand.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Responses.GetResultCommand.html",
    "title": "Class GetResultCommand | Event Store",
    "keywords": "Class GetResultCommand Inheritance System.Object GetResultCommand Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages.Persisted.Responses Assembly : EventStore.Projections.Core.dll Syntax public class GetResultCommand Fields Name Declaration public string Name Field Value Type System.String Partition Declaration public string Partition Field Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Responses.GetQueryCommand.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Responses.GetQueryCommand.html",
    "title": "Class GetQueryCommand | Event Store",
    "keywords": "Class GetQueryCommand Inheritance System.Object GetQueryCommand Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages.Persisted.Responses Assembly : EventStore.Projections.Core.dll Syntax public class GetQueryCommand Fields Name Declaration public string Name Field Value Type System.String RunAs Declaration public SerializedRunAs RunAs Field Value Type SerializedRunAs Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Responses.Faulted.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Responses.Faulted.html",
    "title": "Class Faulted | Event Store",
    "keywords": "Class Faulted Inheritance System.Object Faulted Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages.Persisted.Responses Assembly : EventStore.Projections.Core.dll Syntax public class Faulted Properties FaultedReason Declaration public string FaultedReason { get; set; } Property Value Type System.String Id Declaration public string Id { get; set; } Property Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Responses.EnableCommand.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Responses.EnableCommand.html",
    "title": "Class EnableCommand | Event Store",
    "keywords": "Class EnableCommand Inheritance System.Object EnableCommand Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages.Persisted.Responses Assembly : EventStore.Projections.Core.dll Syntax public class EnableCommand Fields Name Declaration public string Name Field Value Type System.String RunAs Declaration public SerializedRunAs RunAs Field Value Type SerializedRunAs Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Responses.DisableCommand.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Responses.DisableCommand.html",
    "title": "Class DisableCommand | Event Store",
    "keywords": "Class DisableCommand Inheritance System.Object DisableCommand Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages.Persisted.Responses Assembly : EventStore.Projections.Core.dll Syntax public class DisableCommand Fields Name Declaration public string Name Field Value Type System.String RunAs Declaration public SerializedRunAs RunAs Field Value Type SerializedRunAs Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Responses.DeleteCommand.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Responses.DeleteCommand.html",
    "title": "Class DeleteCommand | Event Store",
    "keywords": "Class DeleteCommand Inheritance System.Object DeleteCommand Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages.Persisted.Responses Assembly : EventStore.Projections.Core.dll Syntax public class DeleteCommand Fields DeleteCheckpointStream Declaration public bool DeleteCheckpointStream Field Value Type System.Boolean DeleteEmittedStreams Declaration public bool DeleteEmittedStreams Field Value Type System.Boolean DeleteStateStream Declaration public bool DeleteStateStream Field Value Type System.Boolean Name Declaration public string Name Field Value Type System.String RunAs Declaration public SerializedRunAs RunAs Field Value Type SerializedRunAs Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Responses.AbortCommand.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Responses.AbortCommand.html",
    "title": "Class AbortCommand | Event Store",
    "keywords": "Class AbortCommand Inheritance System.Object AbortCommand Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages.Persisted.Responses Assembly : EventStore.Projections.Core.dll Syntax public class AbortCommand Fields Name Declaration public string Name Field Value Type System.String RunAs Declaration public SerializedRunAs RunAs Field Value Type SerializedRunAs Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Commands.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Commands.html",
    "title": "Namespace EventStore.Projections.Core.Messages.Persisted.Commands | Event Store",
    "keywords": "Namespace EventStore.Projections.Core.Messages.Persisted.Commands Classes CreateAndPrepareCommand CreateAndPrepareSlaveCommand CreatePreparedCommand DisposeCommand GetResultCommand GetStateCommand KillCommand LoadStoppedCommand PersistedProjectionConfig SlaveProjectionsStartedResponse SpoolStreamReadingCommand StartCommand StopCommand Structs PersistedProjectionVersion"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Commands.StopCommand.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Commands.StopCommand.html",
    "title": "Class StopCommand | Event Store",
    "keywords": "Class StopCommand Inheritance System.Object StopCommand Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages.Persisted.Commands Assembly : EventStore.Projections.Core.dll Syntax public class StopCommand Properties Id Declaration public string Id { get; set; } Property Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Commands.StartCommand.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Commands.StartCommand.html",
    "title": "Class StartCommand | Event Store",
    "keywords": "Class StartCommand Inheritance System.Object StartCommand Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages.Persisted.Commands Assembly : EventStore.Projections.Core.dll Syntax public class StartCommand Properties Id Declaration public string Id { get; set; } Property Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Started.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Started.html",
    "title": "Class CoreProjectionStatusMessage.Started | Event Store",
    "keywords": "Class CoreProjectionStatusMessage.Started Inheritance System.Object Message CoreProjectionManagementMessageBase CoreProjectionStatusMessage.CoreProjectionStatusMessageBase CoreProjectionStatusMessage.Started Inherited Members CoreProjectionManagementMessageBase.ProjectionId Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class Started : CoreProjectionStatusMessage.CoreProjectionStatusMessageBase Constructors Started(Guid) Declaration public Started(Guid projectionId) Parameters Type Name System.Guid projectionId Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides CoreProjectionStatusMessage.CoreProjectionStatusMessageBase.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ResultReport.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ResultReport.html",
    "title": "Class CoreProjectionStatusMessage.ResultReport | Event Store",
    "keywords": "Class CoreProjectionStatusMessage.ResultReport Inheritance System.Object Message CoreProjectionManagementMessageBase CoreProjectionStatusMessage.CoreProjectionStatusMessageBase CoreProjectionStatusMessage.DataReportBase CoreProjectionStatusMessage.ResultReport Inherited Members CoreProjectionStatusMessage.DataReportBase.Partition CoreProjectionStatusMessage.DataReportBase.CorrelationId CoreProjectionStatusMessage.DataReportBase.Position CoreProjectionManagementMessageBase.ProjectionId Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class ResultReport : CoreProjectionStatusMessage.DataReportBase Constructors ResultReport(Guid, Guid, String, String, CheckpointTag) Declaration public ResultReport(Guid correlationId, Guid projectionId, string partition, string result, CheckpointTag position) Parameters Type Name System.Guid correlationId System.Guid projectionId System.String partition System.String result CheckpointTag position Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides CoreProjectionStatusMessage.DataReportBase.MsgTypeId Result Declaration public string Result { get; } Property Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ProjectionWorkerStarted.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.ProjectionWorkerStarted.html",
    "title": "Class CoreProjectionStatusMessage.ProjectionWorkerStarted | Event Store",
    "keywords": "Class CoreProjectionStatusMessage.ProjectionWorkerStarted Inheritance System.Object Message CoreProjectionStatusMessage.ProjectionWorkerStarted Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class ProjectionWorkerStarted : Message Constructors ProjectionWorkerStarted(Guid) Declaration public ProjectionWorkerStarted(Guid workerId) Parameters Type Name System.Guid workerId Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId WorkerId Declaration public Guid WorkerId { get; } Property Value Type System.Guid Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Prepared.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Prepared.html",
    "title": "Class CoreProjectionStatusMessage.Prepared | Event Store",
    "keywords": "Class CoreProjectionStatusMessage.Prepared Inheritance System.Object Message CoreProjectionManagementMessageBase CoreProjectionStatusMessage.CoreProjectionStatusMessageBase CoreProjectionStatusMessage.Prepared Inherited Members CoreProjectionManagementMessageBase.ProjectionId Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class Prepared : CoreProjectionStatusMessage.CoreProjectionStatusMessageBase Constructors Prepared(Guid, ProjectionSourceDefinition) Declaration public Prepared(Guid projectionId, ProjectionSourceDefinition sourceDefinition) Parameters Type Name System.Guid projectionId ProjectionSourceDefinition sourceDefinition Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides CoreProjectionStatusMessage.CoreProjectionStatusMessageBase.MsgTypeId SourceDefinition Declaration public ProjectionSourceDefinition SourceDefinition { get; } Property Value Type ProjectionSourceDefinition Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Faulted.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.Faulted.html",
    "title": "Class CoreProjectionStatusMessage.Faulted | Event Store",
    "keywords": "Class CoreProjectionStatusMessage.Faulted Inheritance System.Object Message CoreProjectionManagementMessageBase CoreProjectionStatusMessage.CoreProjectionStatusMessageBase CoreProjectionStatusMessage.Faulted Inherited Members CoreProjectionManagementMessageBase.ProjectionId Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class Faulted : CoreProjectionStatusMessage.CoreProjectionStatusMessageBase Constructors Faulted(Guid, String) Declaration public Faulted(Guid projectionId, string faultedReason) Parameters Type Name System.Guid projectionId System.String faultedReason Properties FaultedReason Declaration public string FaultedReason { get; } Property Value Type System.String MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides CoreProjectionStatusMessage.CoreProjectionStatusMessageBase.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.DataReportBase.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.DataReportBase.html",
    "title": "Class CoreProjectionStatusMessage.DataReportBase | Event Store",
    "keywords": "Class CoreProjectionStatusMessage.DataReportBase Inheritance System.Object Message CoreProjectionManagementMessageBase CoreProjectionStatusMessage.CoreProjectionStatusMessageBase CoreProjectionStatusMessage.DataReportBase CoreProjectionStatusMessage.ResultReport CoreProjectionStatusMessage.StateReport Inherited Members CoreProjectionManagementMessageBase.ProjectionId Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public abstract class DataReportBase : CoreProjectionStatusMessage.CoreProjectionStatusMessageBase Constructors DataReportBase(Guid, Guid, String, CheckpointTag) Declaration protected DataReportBase(Guid correlationId, Guid projectionId, string partition, CheckpointTag position) Parameters Type Name System.Guid correlationId System.Guid projectionId System.String partition CheckpointTag position Properties CorrelationId Declaration public Guid CorrelationId { get; } Property Value Type System.Guid MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides CoreProjectionStatusMessage.CoreProjectionStatusMessageBase.MsgTypeId Partition Declaration public string Partition { get; } Property Value Type System.String Position Declaration public CheckpointTag Position { get; } Property Value Type CheckpointTag Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.CoreProjectionStatusMessageBase.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.CoreProjectionStatusMessage.CoreProjectionStatusMessageBase.html",
    "title": "Class CoreProjectionStatusMessage.CoreProjectionStatusMessageBase | Event Store",
    "keywords": "Class CoreProjectionStatusMessage.CoreProjectionStatusMessageBase Inheritance System.Object Message CoreProjectionManagementMessageBase CoreProjectionStatusMessage.CoreProjectionStatusMessageBase CoreProjectionManagementMessage.SlaveProjectionReaderAssigned CoreProjectionStatusMessage.DataReportBase CoreProjectionStatusMessage.Faulted CoreProjectionStatusMessage.Prepared CoreProjectionStatusMessage.Started CoreProjectionStatusMessage.StatisticsReport CoreProjectionStatusMessage.Stopped Inherited Members CoreProjectionManagementMessageBase.ProjectionId Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class CoreProjectionStatusMessageBase : CoreProjectionManagementMessageBase Constructors CoreProjectionStatusMessageBase(Guid) Declaration protected CoreProjectionStatusMessageBase(Guid projectionId) Parameters Type Name System.Guid projectionId Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides CoreProjectionManagementMessageBase.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.CoreProjectionManagementMessageBase.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.CoreProjectionManagementMessageBase.html",
    "title": "Class CoreProjectionManagementMessageBase | Event Store",
    "keywords": "Class CoreProjectionManagementMessageBase Inheritance System.Object Message CoreProjectionManagementMessageBase CoreProjectionManagementControlMessage CoreProjectionStatusMessage.CoreProjectionStatusMessageBase Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public abstract class CoreProjectionManagementMessageBase : Message Constructors CoreProjectionManagementMessageBase(Guid) Declaration protected CoreProjectionManagementMessageBase(Guid projectionId) Parameters Type Name System.Guid projectionId Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId ProjectionId Declaration public Guid ProjectionId { get; } Property Value Type System.Guid Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.html",
    "title": "Class CoreProjectionManagementMessage | Event Store",
    "keywords": "Class CoreProjectionManagementMessage Inheritance System.Object CoreProjectionManagementMessage Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public static class CoreProjectionManagementMessage"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Stop.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Stop.html",
    "title": "Class CoreProjectionManagementMessage.Stop | Event Store",
    "keywords": "Class CoreProjectionManagementMessage.Stop Inheritance System.Object Message CoreProjectionManagementMessageBase CoreProjectionManagementControlMessage CoreProjectionManagementMessage.Stop Inherited Members CoreProjectionManagementControlMessage.WorkerId CoreProjectionManagementMessageBase.ProjectionId Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class Stop : CoreProjectionManagementControlMessage Constructors Stop(Guid, Guid) Declaration public Stop(Guid projectionId, Guid workerId) Parameters Type Name System.Guid projectionId System.Guid workerId Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides CoreProjectionManagementControlMessage.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Start.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Start.html",
    "title": "Class CoreProjectionManagementMessage.Start | Event Store",
    "keywords": "Class CoreProjectionManagementMessage.Start Inheritance System.Object Message CoreProjectionManagementMessageBase CoreProjectionManagementControlMessage CoreProjectionManagementMessage.Start Inherited Members CoreProjectionManagementControlMessage.WorkerId CoreProjectionManagementMessageBase.ProjectionId Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class Start : CoreProjectionManagementControlMessage Constructors Start(Guid, Guid) Declaration public Start(Guid projectionId, Guid workerId) Parameters Type Name System.Guid projectionId System.Guid workerId Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides CoreProjectionManagementControlMessage.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.SlaveProjectionReaderAssigned.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.SlaveProjectionReaderAssigned.html",
    "title": "Class CoreProjectionManagementMessage.SlaveProjectionReaderAssigned | Event Store",
    "keywords": "Class CoreProjectionManagementMessage.SlaveProjectionReaderAssigned Inheritance System.Object Message CoreProjectionManagementMessageBase CoreProjectionStatusMessage.CoreProjectionStatusMessageBase CoreProjectionManagementMessage.SlaveProjectionReaderAssigned Inherited Members CoreProjectionManagementMessageBase.ProjectionId Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public sealed class SlaveProjectionReaderAssigned : CoreProjectionStatusMessage.CoreProjectionStatusMessageBase Constructors SlaveProjectionReaderAssigned(Guid, Guid) Declaration public SlaveProjectionReaderAssigned(Guid projectionId, Guid subscriptionId) Parameters Type Name System.Guid projectionId System.Guid subscriptionId Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides CoreProjectionStatusMessage.CoreProjectionStatusMessageBase.MsgTypeId SubscriptionId Declaration public Guid SubscriptionId { get; } Property Value Type System.Guid Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.LoadStopped.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.LoadStopped.html",
    "title": "Class CoreProjectionManagementMessage.LoadStopped | Event Store",
    "keywords": "Class CoreProjectionManagementMessage.LoadStopped Inheritance System.Object Message CoreProjectionManagementMessageBase CoreProjectionManagementControlMessage CoreProjectionManagementMessage.LoadStopped Inherited Members CoreProjectionManagementControlMessage.WorkerId CoreProjectionManagementMessageBase.ProjectionId Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class LoadStopped : CoreProjectionManagementControlMessage Constructors LoadStopped(Guid, Guid) Declaration public LoadStopped(Guid correlationId, Guid workerId) Parameters Type Name System.Guid correlationId System.Guid workerId Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides CoreProjectionManagementControlMessage.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Kill.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Kill.html",
    "title": "Class CoreProjectionManagementMessage.Kill | Event Store",
    "keywords": "Class CoreProjectionManagementMessage.Kill Inheritance System.Object Message CoreProjectionManagementMessageBase CoreProjectionManagementControlMessage CoreProjectionManagementMessage.Kill Inherited Members CoreProjectionManagementControlMessage.WorkerId CoreProjectionManagementMessageBase.ProjectionId Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class Kill : CoreProjectionManagementControlMessage Constructors Kill(Guid, Guid) Declaration public Kill(Guid projectionId, Guid workerId) Parameters Type Name System.Guid projectionId System.Guid workerId Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides CoreProjectionManagementControlMessage.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Transport.Http.EntityManagement.HttpEntityManager.html": {
    "href": "dotnet-api/code/EventStore.Transport.Http.EntityManagement.HttpEntityManager.html",
    "title": "Class HttpEntityManager | Event Store",
    "keywords": "Class HttpEntityManager Inheritance System.Object HttpEntityManager Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Transport.Http.EntityManagement Assembly : EventStore.Transport.Http.dll Syntax public sealed class HttpEntityManager Fields HttpEntity Declaration public readonly HttpEntity HttpEntity Field Value Type HttpEntity TimeStamp Declaration public readonly DateTime TimeStamp Field Value Type System.DateTime Properties AsyncState Declaration public object AsyncState { get; set; } Property Value Type System.Object IsProcessing Declaration public bool IsProcessing { get; } Property Value Type System.Boolean RequestCodec Declaration public ICodec RequestCodec { get; } Property Value Type ICodec RequestedUrl Declaration public Uri RequestedUrl { get; } Property Value Type System.Uri ResponseCodec Declaration public ICodec ResponseCodec { get; } Property Value Type ICodec ResponseUrl Declaration public Uri ResponseUrl { get; } Property Value Type System.Uri User Declaration public IPrincipal User { get; } Property Value Type System.Security.Principal.IPrincipal Methods BeginReply(Int32, String, String, Encoding, IEnumerable<KeyValuePair<String, String>>) Declaration public bool BeginReply(int code, string description, string contentType, Encoding encoding, IEnumerable<KeyValuePair<string, string>> headers) Parameters Type Name System.Int32 code System.String description System.String contentType System.Text.Encoding encoding System.Collections.Generic.IEnumerable < System.Collections.Generic.KeyValuePair < System.String , System.String >> headers Returns Type Description System.Boolean CompressResponse(Byte[], String) Declaration public static byte[] CompressResponse(byte[] response, string compressionAlgorithm) Parameters Type Name System.Byte [] response System.String compressionAlgorithm Returns Type Description System.Byte [] ContinueReply(Byte[], Action<Exception>, Action) Declaration public void ContinueReply(byte[] response, Action<Exception> onError, Action onCompleted) Parameters Type Name System.Byte [] response System.Action < System.Exception > onError System.Action onCompleted EndReply() Declaration public void EndReply() ForwardReply(HttpResponseMessage, Action<Exception>) Declaration public void ForwardReply(HttpResponseMessage response, Action<Exception> onError) Parameters Type Name System.Net.Http.HttpResponseMessage response System.Action < System.Exception > onError ReadRequestAsync(Action<HttpEntityManager, Byte[]>, Action<Exception>) Declaration public void ReadRequestAsync(Action<HttpEntityManager, byte[]> onReadSuccess, Action<Exception> onError) Parameters Type Name System.Action < HttpEntityManager , System.Byte []> onReadSuccess System.Action < System.Exception > onError Reply(Byte[], Int32, String, String, Encoding, IEnumerable<KeyValuePair<String, String>>, Action<Exception>) Declaration public void Reply(byte[] response, int code, string description, string contentType, Encoding encoding, IEnumerable<KeyValuePair<string, string>> headers, Action<Exception> onError) Parameters Type Name System.Byte [] response System.Int32 code System.String description System.String contentType System.Text.Encoding encoding System.Collections.Generic.IEnumerable < System.Collections.Generic.KeyValuePair < System.String , System.String >> headers System.Action < System.Exception > onError Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T) HttpHelpers.Reply(HttpEntityManager, String, Int32, String, String, IEnumerable<KeyValuePair<String, String>>) HttpEntityManagerExtensions.ReplyStatus(HttpEntityManager, Int32, String, Action<Exception>, IEnumerable<KeyValuePair<String, String>>) HttpEntityManagerExtensions.ReplyContent(HttpEntityManager, Byte[], Int32, String, String, IEnumerable<KeyValuePair<String, String>>, Action<Exception>) HttpEntityManagerExtensions.ReplyTextContent(HttpEntityManager, String, Int32, String, String, IEnumerable<KeyValuePair<String, String>>, Action<Exception>) HttpEntityManagerExtensions.ContinueReplyTextContent(HttpEntityManager, String, Action<Exception>, Action) HttpEntityManagerExtensions.ReadTextRequestAsync(HttpEntityManager, Action<HttpEntityManager, String>, Action<Exception>)"
  },
  "dotnet-api/code/EventStore.Transport.Http.EntityManagement.HttpEntity.html": {
    "href": "dotnet-api/code/EventStore.Transport.Http.EntityManagement.HttpEntity.html",
    "title": "Class HttpEntity | Event Store",
    "keywords": "Class HttpEntity Inheritance System.Object HttpEntity Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Transport.Http.EntityManagement Assembly : EventStore.Transport.Http.dll Syntax public class HttpEntity Constructors HttpEntity(HttpListenerRequest, HttpListenerResponse, IPrincipal, Boolean, IPAddress, Int32) Declaration public HttpEntity(HttpListenerRequest request, HttpListenerResponse response, IPrincipal user, bool logHttpRequests, IPAddress advertiseAsAddress, int advertiseAsPort) Parameters Type Name System.Net.HttpListenerRequest request System.Net.HttpListenerResponse response System.Security.Principal.IPrincipal user System.Boolean logHttpRequests System.Net.IPAddress advertiseAsAddress System.Int32 advertiseAsPort Fields Request Declaration public readonly HttpListenerRequest Request Field Value Type System.Net.HttpListenerRequest RequestedUrl Declaration public readonly Uri RequestedUrl Field Value Type System.Uri ResponseUrl Declaration public readonly Uri ResponseUrl Field Value Type System.Uri User Declaration public readonly IPrincipal User Field Value Type System.Security.Principal.IPrincipal Methods BuildRequestedUrl(Uri, NameValueCollection, IPAddress, Int32, Boolean) Declaration public static Uri BuildRequestedUrl(Uri requestUrl, NameValueCollection requestHeaders, IPAddress advertiseAsAddress, int advertiseAsPort, bool overridePath = false) Parameters Type Name System.Uri requestUrl System.Collections.Specialized.NameValueCollection requestHeaders System.Net.IPAddress advertiseAsAddress System.Int32 advertiseAsPort System.Boolean overridePath Returns Type Description System.Uri CreateManager() Declaration public HttpEntityManager CreateManager() Returns Type Description HttpEntityManager CreateManager(ICodec, ICodec, String[], Action<HttpEntity>) Declaration public HttpEntityManager CreateManager(ICodec requestCodec, ICodec responseCodec, string[] allowedMethods, Action<HttpEntity> onRequestSatisfied) Parameters Type Name ICodec requestCodec ICodec responseCodec System.String [] allowedMethods System.Action < HttpEntity > onRequestSatisfied Returns Type Description HttpEntityManager SetUser(IPrincipal) Declaration public HttpEntity SetUser(IPrincipal user) Parameters Type Name System.Security.Principal.IPrincipal user Returns Type Description HttpEntity Test(IPrincipal) Declaration public static HttpEntity Test(IPrincipal user) Parameters Type Name System.Security.Principal.IPrincipal user Returns Type Description HttpEntity Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Transport.Http.ContentType.html": {
    "href": "dotnet-api/code/EventStore.Transport.Http.ContentType.html",
    "title": "Class ContentType | Event Store",
    "keywords": "Class ContentType Inheritance System.Object ContentType Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Transport.Http Assembly : EventStore.Transport.Http.dll Syntax public static class ContentType Fields Any Declaration public const string Any = \"*/*\" Field Value Type System.String ApplicationXml Declaration public const string ApplicationXml = \"application/xml\" Field Value Type System.String Atom Declaration public const string Atom = \"application/atom+xml\" Field Value Type System.String AtomJson Declaration public const string AtomJson = \"application/vnd.eventstore.atom+json\" Field Value Type System.String AtomServiceDoc Declaration public const string AtomServiceDoc = \"application/atomsvc+xml\" Field Value Type System.String AtomServiceDocJson Declaration public const string AtomServiceDocJson = \"application/vnd.eventstore.atomsvc+json\" Field Value Type System.String Competing Declaration public const string Competing = \"application/vnd.eventstore.competingatom+xml\" Field Value Type System.String CompetingJson Declaration public const string CompetingJson = \"application/vnd.eventstore.competingatom+json\" Field Value Type System.String DescriptionDocJson Declaration public const string DescriptionDocJson = \"application/vnd.eventstore.streamdesc+json\" Field Value Type System.String EventJson Declaration public const string EventJson = \"application/vnd.eventstore.event+json\" Field Value Type System.String EventsJson Declaration public const string EventsJson = \"application/vnd.eventstore.events+json\" Field Value Type System.String EventsXml Declaration public const string EventsXml = \"application/vnd.eventstore.events+xml\" Field Value Type System.String EventXml Declaration public const string EventXml = \"application/vnd.eventstore.event+xml\" Field Value Type System.String Html Declaration public const string Html = \"text/html\" Field Value Type System.String Json Declaration public const string Json = \"application/json\" Field Value Type System.String PlainText Declaration public const string PlainText = \"text/plain\" Field Value Type System.String Raw Declaration public const string Raw = \"application/octet-stream\" Field Value Type System.String Xml Declaration public const string Xml = \"text/xml\" Field Value Type System.String"
  },
  "dotnet-api/code/EventStore.Transport.Http.CompressionAlgorithms.html": {
    "href": "dotnet-api/code/EventStore.Transport.Http.CompressionAlgorithms.html",
    "title": "Class CompressionAlgorithms | Event Store",
    "keywords": "Class CompressionAlgorithms Inheritance System.Object CompressionAlgorithms Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Transport.Http Assembly : EventStore.Transport.Http.dll Syntax public class CompressionAlgorithms Fields Deflate Declaration public const string Deflate = \"deflate\" Field Value Type System.String Gzip Declaration public const string Gzip = \"gzip\" Field Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Transport.Http.Codecs.html": {
    "href": "dotnet-api/code/EventStore.Transport.Http.Codecs.html",
    "title": "Namespace EventStore.Transport.Http.Codecs | Event Store",
    "keywords": "Namespace EventStore.Transport.Http.Codecs Classes Codec CustomCodec JsonCodec ManualEncoding NoCodec TextCodec XmlCodec"
  },
  "dotnet-api/code/EventStore.Transport.Http.Codecs.XmlCodec.html": {
    "href": "dotnet-api/code/EventStore.Transport.Http.Codecs.XmlCodec.html",
    "title": "Class XmlCodec | Event Store",
    "keywords": "Class XmlCodec Inheritance System.Object XmlCodec Implements ICodec Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Transport.Http.Codecs Assembly : EventStore.Transport.Http.dll Syntax public class XmlCodec : ICodec Properties ContentType Declaration public string ContentType { get; } Property Value Type System.String Encoding Declaration public Encoding Encoding { get; } Property Value Type System.Text.Encoding HasEventIds Declaration public bool HasEventIds { get; } Property Value Type System.Boolean HasEventTypes Declaration public bool HasEventTypes { get; } Property Value Type System.Boolean Methods CanParse(MediaType) Declaration public bool CanParse(MediaType format) Parameters Type Name MediaType format Returns Type Description System.Boolean From<T>(String) Declaration public T From<T>(string text) Parameters Type Name System.String text Returns Type Description T Type Parameters Name Description T SuitableForResponse(MediaType) Declaration public bool SuitableForResponse(MediaType component) Parameters Type Name MediaType component Returns Type Description System.Boolean To<T>(T) Declaration public string To<T>(T value) Parameters Type Name T value Returns Type Description System.String Type Parameters Name Description T Implements ICodec Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Transport.Http.Codecs.TextCodec.html": {
    "href": "dotnet-api/code/EventStore.Transport.Http.Codecs.TextCodec.html",
    "title": "Class TextCodec | Event Store",
    "keywords": "Class TextCodec Inheritance System.Object TextCodec Implements ICodec Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Transport.Http.Codecs Assembly : EventStore.Transport.Http.dll Syntax public class TextCodec : ICodec Properties ContentType Declaration public string ContentType { get; } Property Value Type System.String Encoding Declaration public Encoding Encoding { get; } Property Value Type System.Text.Encoding HasEventIds Declaration public bool HasEventIds { get; } Property Value Type System.Boolean HasEventTypes Declaration public bool HasEventTypes { get; } Property Value Type System.Boolean Methods CanParse(MediaType) Declaration public bool CanParse(MediaType format) Parameters Type Name MediaType format Returns Type Description System.Boolean From<T>(String) Declaration public T From<T>(string text) Parameters Type Name System.String text Returns Type Description T Type Parameters Name Description T SuitableForResponse(MediaType) Declaration public bool SuitableForResponse(MediaType component) Parameters Type Name MediaType component Returns Type Description System.Boolean To<T>(T) Declaration public string To<T>(T value) Parameters Type Name T value Returns Type Description System.String Type Parameters Name Description T Implements ICodec Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Transport.Http.Codecs.NoCodec.html": {
    "href": "dotnet-api/code/EventStore.Transport.Http.Codecs.NoCodec.html",
    "title": "Class NoCodec | Event Store",
    "keywords": "Class NoCodec Inheritance System.Object NoCodec Implements ICodec Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Transport.Http.Codecs Assembly : EventStore.Transport.Http.dll Syntax public class NoCodec : ICodec Properties ContentType Declaration public string ContentType { get; } Property Value Type System.String Encoding Declaration public Encoding Encoding { get; } Property Value Type System.Text.Encoding HasEventIds Declaration public bool HasEventIds { get; } Property Value Type System.Boolean HasEventTypes Declaration public bool HasEventTypes { get; } Property Value Type System.Boolean Methods CanParse(MediaType) Declaration public bool CanParse(MediaType format) Parameters Type Name MediaType format Returns Type Description System.Boolean From<T>(String) Declaration public T From<T>(string text) Parameters Type Name System.String text Returns Type Description T Type Parameters Name Description T SuitableForResponse(MediaType) Declaration public bool SuitableForResponse(MediaType component) Parameters Type Name MediaType component Returns Type Description System.Boolean To<T>(T) Declaration public string To<T>(T value) Parameters Type Name T value Returns Type Description System.String Type Parameters Name Description T Implements ICodec Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Transport.Http.Codecs.ManualEncoding.html": {
    "href": "dotnet-api/code/EventStore.Transport.Http.Codecs.ManualEncoding.html",
    "title": "Class ManualEncoding | Event Store",
    "keywords": "Class ManualEncoding Inheritance System.Object ManualEncoding Implements ICodec Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Transport.Http.Codecs Assembly : EventStore.Transport.Http.dll Syntax public class ManualEncoding : ICodec Properties ContentType Declaration public string ContentType { get; } Property Value Type System.String Encoding Declaration public Encoding Encoding { get; } Property Value Type System.Text.Encoding HasEventIds Declaration public bool HasEventIds { get; } Property Value Type System.Boolean HasEventTypes Declaration public bool HasEventTypes { get; } Property Value Type System.Boolean Methods CanParse(MediaType) Declaration public bool CanParse(MediaType format) Parameters Type Name MediaType format Returns Type Description System.Boolean From<T>(String) Declaration public T From<T>(string text) Parameters Type Name System.String text Returns Type Description T Type Parameters Name Description T SuitableForResponse(MediaType) Declaration public bool SuitableForResponse(MediaType component) Parameters Type Name MediaType component Returns Type Description System.Boolean To<T>(T) Declaration public string To<T>(T value) Parameters Type Name T value Returns Type Description System.String Type Parameters Name Description T Implements ICodec Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Transport.Http.Codecs.JsonCodec.html": {
    "href": "dotnet-api/code/EventStore.Transport.Http.Codecs.JsonCodec.html",
    "title": "Class JsonCodec | Event Store",
    "keywords": "Class JsonCodec Inheritance System.Object JsonCodec Implements ICodec Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Transport.Http.Codecs Assembly : EventStore.Transport.Http.dll Syntax public class JsonCodec : ICodec Fields Formatting Declaration public static Formatting Formatting Field Value Type Newtonsoft.Json.Formatting ToSettings Declaration public static readonly JsonSerializerSettings ToSettings Field Value Type Newtonsoft.Json.JsonSerializerSettings Properties ContentType Declaration public string ContentType { get; } Property Value Type System.String Encoding Declaration public Encoding Encoding { get; } Property Value Type System.Text.Encoding HasEventIds Declaration public bool HasEventIds { get; } Property Value Type System.Boolean HasEventTypes Declaration public bool HasEventTypes { get; } Property Value Type System.Boolean Methods CanParse(MediaType) Declaration public bool CanParse(MediaType format) Parameters Type Name MediaType format Returns Type Description System.Boolean From<T>(String) Declaration public T From<T>(string text) Parameters Type Name System.String text Returns Type Description T Type Parameters Name Description T SuitableForResponse(MediaType) Declaration public bool SuitableForResponse(MediaType component) Parameters Type Name MediaType component Returns Type Description System.Boolean To<T>(T) Declaration public string To<T>(T value) Parameters Type Name T value Returns Type Description System.String Type Parameters Name Description T Implements ICodec Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Transport.Http.Codecs.CustomCodec.html": {
    "href": "dotnet-api/code/EventStore.Transport.Http.Codecs.CustomCodec.html",
    "title": "Class CustomCodec | Event Store",
    "keywords": "Class CustomCodec Inheritance System.Object CustomCodec Implements ICodec Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Transport.Http.Codecs Assembly : EventStore.Transport.Http.dll Syntax public class CustomCodec : ICodec Properties BaseCodec Declaration public ICodec BaseCodec { get; } Property Value Type ICodec ContentType Declaration public string ContentType { get; } Property Value Type System.String Encoding Declaration public Encoding Encoding { get; } Property Value Type System.Text.Encoding HasEventIds Declaration public bool HasEventIds { get; } Property Value Type System.Boolean HasEventTypes Declaration public bool HasEventTypes { get; } Property Value Type System.Boolean Methods CanParse(MediaType) Declaration public bool CanParse(MediaType format) Parameters Type Name MediaType format Returns Type Description System.Boolean From<T>(String) Declaration public T From<T>(string text) Parameters Type Name System.String text Returns Type Description T Type Parameters Name Description T SuitableForResponse(MediaType) Declaration public bool SuitableForResponse(MediaType component) Parameters Type Name MediaType component Returns Type Description System.Boolean To<T>(T) Declaration public string To<T>(T value) Parameters Type Name T value Returns Type Description System.String Type Parameters Name Description T Implements ICodec Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Transport.Http.Codecs.Codec.html": {
    "href": "dotnet-api/code/EventStore.Transport.Http.Codecs.Codec.html",
    "title": "Class Codec | Event Store",
    "keywords": "Class Codec Inheritance System.Object Codec Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Transport.Http.Codecs Assembly : EventStore.Transport.Http.dll Syntax public static class Codec Fields ApplicationXml Declaration public static readonly CustomCodec ApplicationXml Field Value Type CustomCodec CompetingJson Declaration public static readonly CustomCodec CompetingJson Field Value Type CustomCodec CompetingXml Declaration public static readonly CustomCodec CompetingXml Field Value Type CustomCodec DescriptionJson Declaration public static readonly CustomCodec DescriptionJson Field Value Type CustomCodec EventJson Declaration public static readonly CustomCodec EventJson Field Value Type CustomCodec EventsJson Declaration public static readonly CustomCodec EventsJson Field Value Type CustomCodec EventStoreJsonCodec Declaration public static readonly ICodec EventStoreJsonCodec Field Value Type ICodec EventStoreXmlCodec Declaration public static readonly ICodec EventStoreXmlCodec Field Value Type ICodec EventsXml Declaration public static readonly CustomCodec EventsXml Field Value Type CustomCodec EventXml Declaration public static readonly CustomCodec EventXml Field Value Type CustomCodec Json Declaration public static readonly JsonCodec Json Field Value Type JsonCodec ManualEncoding Declaration public static readonly ManualEncoding ManualEncoding Field Value Type ManualEncoding NoCodec Declaration public static readonly NoCodec NoCodec Field Value Type NoCodec NoCodecs Declaration public static readonly ICodec[] NoCodecs Field Value Type ICodec [] Raw Declaration public static readonly CustomCodec Raw Field Value Type CustomCodec Text Declaration public static readonly TextCodec Text Field Value Type TextCodec Xml Declaration public static readonly XmlCodec Xml Field Value Type XmlCodec Methods CreateCustom(ICodec, String, Encoding, Boolean, Boolean) Declaration public static ICodec CreateCustom(ICodec codec, string contentType, Encoding encoding, bool hasEventIds, bool hasEventTypes) Parameters Type Name ICodec codec System.String contentType System.Text.Encoding encoding System.Boolean hasEventIds System.Boolean hasEventTypes Returns Type Description ICodec"
  },
  "dotnet-api/code/EventStore.Core.Index.FileType.html": {
    "href": "dotnet-api/code/EventStore.Core.Index.FileType.html",
    "title": "Enum FileType | Event Store",
    "keywords": "Enum FileType Namespace : EventStore.Core.Index Assembly : EventStore.Core.dll Syntax public enum FileType : byte Fields Name Description ChunkFile PTableFile Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<FileType>() ProtobufExtensions.Serialize<FileType>() ProtobufExtensions.SerializeToArray<FileType>()"
  },
  "dotnet-api/code/EventStore.Core.ISubsystem.html": {
    "href": "dotnet-api/code/EventStore.Core.ISubsystem.html",
    "title": "Interface ISubsystem | Event Store",
    "keywords": "Interface ISubsystem Namespace : EventStore.Core Assembly : EventStore.Core.dll Syntax public interface ISubsystem Methods Register(StandardComponents) Declaration void Register(StandardComponents standardComponents) Parameters Type Name StandardComponents standardComponents Start() Declaration IEnumerable<Task> Start() Returns Type Description System.Collections.Generic.IEnumerable < System.Threading.Tasks.Task > Stop() Declaration void Stop() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Exceptions.ReaderCheckpointHigherThanWriterException.html": {
    "href": "dotnet-api/code/EventStore.Core.Exceptions.ReaderCheckpointHigherThanWriterException.html",
    "title": "Class ReaderCheckpointHigherThanWriterException | Event Store",
    "keywords": "Class ReaderCheckpointHigherThanWriterException Inheritance System.Object System.Exception ReaderCheckpointHigherThanWriterException Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Exceptions Assembly : EventStore.Core.dll Syntax public class ReaderCheckpointHigherThanWriterException : Exception, _Exception, ISerializable Constructors ReaderCheckpointHigherThanWriterException(String) Declaration public ReaderCheckpointHigherThanWriterException(string checkpointName) Parameters Type Name System.String checkpointName Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Exceptions.PTableNotFoundException.html": {
    "href": "dotnet-api/code/EventStore.Core.Exceptions.PTableNotFoundException.html",
    "title": "Class PTableNotFoundException | Event Store",
    "keywords": "Class PTableNotFoundException Inheritance System.Object System.Exception PTableNotFoundException Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Exceptions Assembly : EventStore.Core.dll Syntax public class PTableNotFoundException : Exception, _Exception, ISerializable Constructors PTableNotFoundException(String) Declaration public PTableNotFoundException(string ptableName) Parameters Type Name System.String ptableName Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Exceptions.MaybeCorruptIndexException.html": {
    "href": "dotnet-api/code/EventStore.Core.Exceptions.MaybeCorruptIndexException.html",
    "title": "Class MaybeCorruptIndexException | Event Store",
    "keywords": "Class MaybeCorruptIndexException Inheritance System.Object System.Exception MaybeCorruptIndexException Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Exceptions Assembly : EventStore.Core.dll Syntax public class MaybeCorruptIndexException : Exception, _Exception, ISerializable Constructors MaybeCorruptIndexException() Declaration public MaybeCorruptIndexException() MaybeCorruptIndexException(Exception) Declaration public MaybeCorruptIndexException(Exception innerException) Parameters Type Name System.Exception innerException MaybeCorruptIndexException(String) Declaration public MaybeCorruptIndexException(string message) Parameters Type Name System.String message MaybeCorruptIndexException(String, Exception) Declaration public MaybeCorruptIndexException(string message, Exception innerException) Parameters Type Name System.String message System.Exception innerException Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Bus.QueueMonitor.html": {
    "href": "dotnet-api/code/EventStore.Core.Bus.QueueMonitor.html",
    "title": "Class QueueMonitor | Event Store",
    "keywords": "Class QueueMonitor Inheritance System.Object QueueMonitor Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Bus Assembly : EventStore.Core.dll Syntax public class QueueMonitor Fields Default Declaration public static readonly QueueMonitor Default Field Value Type QueueMonitor Methods GetStats() Declaration public QueueStats[] GetStats() Returns Type Description QueueStats [] Register(IMonitoredQueue) Declaration public void Register(IMonitoredQueue monitoredQueue) Parameters Type Name IMonitoredQueue monitoredQueue Unregister(IMonitoredQueue) Declaration public void Unregister(IMonitoredQueue monitoredQueue) Parameters Type Name IMonitoredQueue monitoredQueue Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Bus.IMonitoredQueue.html": {
    "href": "dotnet-api/code/EventStore.Core.Bus.IMonitoredQueue.html",
    "title": "Interface IMonitoredQueue | Event Store",
    "keywords": "Interface IMonitoredQueue Namespace : EventStore.Core.Bus Assembly : EventStore.Core.dll Syntax public interface IMonitoredQueue Properties Name Declaration string Name { get; } Property Value Type System.String Methods GetStatistics() Declaration QueueStats GetStatistics() Returns Type Description QueueStats Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Bus.IHandle-1.html": {
    "href": "dotnet-api/code/EventStore.Core.Bus.IHandle-1.html",
    "title": "Interface IHandle<T> | Event Store",
    "keywords": "Interface IHandle<T> Namespace : EventStore.Core.Bus Assembly : EventStore.Core.dll Syntax public interface IHandle<T> where T : Message Type Parameters Name Description T Methods Handle(T) Declaration void Handle(T message) Parameters Type Name T message Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) HandleExtensions.WidenFrom<TInput, TOutput>(IHandle<TOutput>) HandleExtensions.NarrowTo<TInput, TOutput>(IHandle<TOutput>) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Bus.IBus.html": {
    "href": "dotnet-api/code/EventStore.Core.Bus.IBus.html",
    "title": "Interface IBus | Event Store",
    "keywords": "Interface IBus Inherited Members IPublisher.Publish(Message) ISubscriber.Subscribe<T>(IHandle<T>) ISubscriber.Unsubscribe<T>(IHandle<T>) Namespace : EventStore.Core.Bus Assembly : EventStore.Core.dll Syntax public interface IBus : IPublisher, ISubscriber Properties Name Declaration string Name { get; } Property Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Bus.HandleExtensions.html": {
    "href": "dotnet-api/code/EventStore.Core.Bus.HandleExtensions.html",
    "title": "Class HandleExtensions | Event Store",
    "keywords": "Class HandleExtensions Inheritance System.Object HandleExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Bus Assembly : EventStore.Core.dll Syntax public static class HandleExtensions Methods NarrowTo<TInput, TOutput>(IHandle<TOutput>) Declaration public static IHandle<TInput> NarrowTo<TInput, TOutput>(this IHandle<TOutput> handler) where TInput : Message where TOutput : TInput Parameters Type Name IHandle <TOutput> handler Returns Type Description IHandle <TInput> Type Parameters Name Description TInput TOutput WidenFrom<TInput, TOutput>(IHandle<TOutput>) Declaration public static IHandle<TInput> WidenFrom<TInput, TOutput>(this IHandle<TOutput> handler) where TInput : TOutput where TOutput : Message Parameters Type Name IHandle <TOutput> handler Returns Type Description IHandle <TInput> Type Parameters Name Description TInput TOutput"
  },
  "dotnet-api/code/EventStore.Core.Authentication.InternalAuthenticationProviderFactory.html": {
    "href": "dotnet-api/code/EventStore.Core.Authentication.InternalAuthenticationProviderFactory.html",
    "title": "Class InternalAuthenticationProviderFactory | Event Store",
    "keywords": "Class InternalAuthenticationProviderFactory Inheritance System.Object InternalAuthenticationProviderFactory Implements IAuthenticationProviderFactory Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Authentication Assembly : EventStore.Core.dll Syntax public class InternalAuthenticationProviderFactory : IAuthenticationProviderFactory Methods BuildAuthenticationProvider(IPublisher, ISubscriber, IPublisher, InMemoryBus[]) Declaration public IAuthenticationProvider BuildAuthenticationProvider(IPublisher mainQueue, ISubscriber mainBus, IPublisher workersQueue, InMemoryBus[] workerBusses) Parameters Type Name IPublisher mainQueue ISubscriber mainBus IPublisher workersQueue InMemoryBus [] workerBusses Returns Type Description IAuthenticationProvider RegisterHttpControllers(HttpService, HttpService, HttpSendService, IPublisher, IPublisher) Declaration public void RegisterHttpControllers(HttpService externalHttpService, HttpService internalHttpService, HttpSendService httpSendService, IPublisher mainQueue, IPublisher networkSendQueue) Parameters Type Name HttpService externalHttpService HttpService internalHttpService HttpSendService httpSendService IPublisher mainQueue IPublisher networkSendQueue Implements IAuthenticationProviderFactory Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Authentication.InternalAuthenticationProvider.html": {
    "href": "dotnet-api/code/EventStore.Core.Authentication.InternalAuthenticationProvider.html",
    "title": "Class InternalAuthenticationProvider | Event Store",
    "keywords": "Class InternalAuthenticationProvider Inheritance System.Object InternalAuthenticationProvider Implements IAuthenticationProvider IHandle < InternalAuthenticationProviderMessages.ResetPasswordCache > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Authentication Assembly : EventStore.Core.dll Syntax public class InternalAuthenticationProvider : IAuthenticationProvider, IHandle<InternalAuthenticationProviderMessages.ResetPasswordCache> Constructors InternalAuthenticationProvider(IODispatcher, PasswordHashAlgorithm, Int32) Declaration public InternalAuthenticationProvider(IODispatcher ioDispatcher, PasswordHashAlgorithm passwordHashAlgorithm, int cacheSize) Parameters Type Name IODispatcher ioDispatcher PasswordHashAlgorithm passwordHashAlgorithm System.Int32 cacheSize Methods Authenticate(AuthenticationRequest) Declaration public void Authenticate(AuthenticationRequest authenticationRequest) Parameters Type Name AuthenticationRequest authenticationRequest Handle(InternalAuthenticationProviderMessages.ResetPasswordCache) Declaration public void Handle(InternalAuthenticationProviderMessages.ResetPasswordCache message) Parameters Type Name InternalAuthenticationProviderMessages.ResetPasswordCache message Implements IAuthenticationProvider IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) HandleExtensions.WidenFrom<TInput, TOutput>(IHandle<TOutput>) HandleExtensions.NarrowTo<TInput, TOutput>(IHandle<TOutput>) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Common.Utils.ShellExecutor.html": {
    "href": "dotnet-api/code/EventStore.Common.Utils.ShellExecutor.html",
    "title": "Class ShellExecutor | Event Store",
    "keywords": "Class ShellExecutor Inheritance System.Object ShellExecutor Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Common.Utils Assembly : EventStore.Common.dll Syntax public static class ShellExecutor Methods GetOutput(String, String) Declaration public static string GetOutput(string command, string args = null) Parameters Type Name System.String command System.String args Returns Type Description System.String"
  },
  "dotnet-api/code/EventStore.Common.Utils.Runtime.html": {
    "href": "dotnet-api/code/EventStore.Common.Utils.Runtime.html",
    "title": "Class Runtime | Event Store",
    "keywords": "Class Runtime Inheritance System.Object Runtime Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Common.Utils Assembly : EventStore.Common.Utils.dll Syntax public static class Runtime Fields IsMacOS Declaration public static readonly bool IsMacOS Field Value Type System.Boolean IsMono Declaration public static readonly bool IsMono Field Value Type System.Boolean IsUnixOrMac Declaration public static readonly bool IsUnixOrMac Field Value Type System.Boolean IsWindows Declaration public static readonly bool IsWindows Field Value Type System.Boolean"
  },
  "dotnet-api/code/EventStore.Common.Utils.OsFlavor.html": {
    "href": "dotnet-api/code/EventStore.Common.Utils.OsFlavor.html",
    "title": "Enum OsFlavor | Event Store",
    "keywords": "Enum OsFlavor Namespace : EventStore.Common.Utils Assembly : EventStore.Common.dll Syntax public enum OsFlavor Fields Name Description BSD Linux MacOS Unknown Windows Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<OsFlavor>() ProtobufExtensions.Serialize<OsFlavor>() ProtobufExtensions.SerializeToArray<OsFlavor>()"
  },
  "dotnet-api/code/EventStore.Common.Utils.OS.html": {
    "href": "dotnet-api/code/EventStore.Common.Utils.OS.html",
    "title": "Class OS | Event Store",
    "keywords": "Class OS Inheritance System.Object OS Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Common.Utils Assembly : EventStore.Common.dll Syntax public class OS Fields OsFlavor Declaration public static readonly OsFlavor OsFlavor Field Value Type OsFlavor Properties IsUnix Declaration public static bool IsUnix { get; } Property Value Type System.Boolean Methods GetHomeFolder() Declaration public static string GetHomeFolder() Returns Type Description System.String GetRuntimeVersion() Declaration public static string GetRuntimeVersion() Returns Type Description System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Common.Utils.IPEndPointComparer.html": {
    "href": "dotnet-api/code/EventStore.Common.Utils.IPEndPointComparer.html",
    "title": "Class IPEndPointComparer | Event Store",
    "keywords": "Class IPEndPointComparer Inheritance System.Object IPEndPointComparer Implements System.Collections.Generic.IComparer < System.Net.IPEndPoint > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Common.Utils Assembly : EventStore.Common.dll Syntax public class IPEndPointComparer : IComparer<IPEndPoint> Methods Compare(IPEndPoint, IPEndPoint) Declaration public int Compare(IPEndPoint x, IPEndPoint y) Parameters Type Name System.Net.IPEndPoint x System.Net.IPEndPoint y Returns Type Description System.Int32 Implements System.Collections.Generic.IComparer<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.EventSubscriptionBasedProjectionProcessingPhase.html",
    "title": "Class EventSubscriptionBasedProjectionProcessingPhase | Event Store",
    "keywords": "Class EventSubscriptionBasedProjectionProcessingPhase Inheritance System.Object EventSubscriptionBasedProjectionProcessingPhase EventProcessingProjectionProcessingPhase ParallelQueryMasterProjectionProcessingPhase Implements IProjectionPhaseCompleter IProjectionPhaseCheckpointManager IHandle < EventReaderSubscriptionMessage.ProgressChanged > IHandle < EventReaderSubscriptionMessage.SubscriptionStarted > IHandle < EventReaderSubscriptionMessage.NotAuthorized > IHandle < EventReaderSubscriptionMessage.EofReached > IHandle < EventReaderSubscriptionMessage.CheckpointSuggested > IHandle < EventReaderSubscriptionMessage.ReaderAssignedReader > IHandle < EventReaderSubscriptionMessage.Failed > IProjectionProcessingPhase System.IDisposable IHandle < CoreProjectionManagementMessage.GetState > IHandle < CoreProjectionManagementMessage.GetResult > IHandle < CoreProjectionProcessingMessage.PrerecordedEventsLoaded > IProjectionPhaseStateManager Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public abstract class EventSubscriptionBasedProjectionProcessingPhase : IProjectionPhaseCompleter, IProjectionPhaseCheckpointManager, IHandle<EventReaderSubscriptionMessage.ProgressChanged>, IHandle<EventReaderSubscriptionMessage.SubscriptionStarted>, IHandle<EventReaderSubscriptionMessage.NotAuthorized>, IHandle<EventReaderSubscriptionMessage.EofReached>, IHandle<EventReaderSubscriptionMessage.CheckpointSuggested>, IHandle<EventReaderSubscriptionMessage.ReaderAssignedReader>, IHandle<EventReaderSubscriptionMessage.Failed>, IProjectionProcessingPhase, IDisposable, IHandle<CoreProjectionManagementMessage.GetState>, IHandle<CoreProjectionManagementMessage.GetResult>, IHandle<CoreProjectionProcessingMessage.PrerecordedEventsLoaded>, IProjectionPhaseStateManager Constructors EventSubscriptionBasedProjectionProcessingPhase(IPublisher, IPublisher, ICoreProjectionForProcessingPhase, Guid, ICoreProjectionCheckpointManager, ProjectionConfig, String, ILogger, CheckpointTag, PartitionStateCache, IResultWriter, Action, ReaderSubscriptionDispatcher, IReaderStrategy, Boolean, Boolean, Boolean, Boolean, IEmittedStreamsTracker) Declaration protected EventSubscriptionBasedProjectionProcessingPhase(IPublisher publisher, IPublisher inputQueue, ICoreProjectionForProcessingPhase coreProjection, Guid projectionCorrelationId, ICoreProjectionCheckpointManager checkpointManager, ProjectionConfig projectionConfig, string projectionName, ILogger logger, CheckpointTag zeroCheckpointTag, PartitionStateCache partitionStateCache, IResultWriter resultWriter, Action updateStatistics, ReaderSubscriptionDispatcher subscriptionDispatcher, IReaderStrategy readerStrategy, bool useCheckpoints, bool stopOnEof, bool orderedPartitionProcessing, bool isBiState, IEmittedStreamsTracker emittedStreamsTracker) Parameters Type Name IPublisher publisher IPublisher inputQueue ICoreProjectionForProcessingPhase coreProjection System.Guid projectionCorrelationId ICoreProjectionCheckpointManager checkpointManager ProjectionConfig projectionConfig System.String projectionName ILogger logger CheckpointTag zeroCheckpointTag PartitionStateCache partitionStateCache IResultWriter resultWriter System.Action updateStatistics ReaderSubscriptionDispatcher subscriptionDispatcher IReaderStrategy readerStrategy System.Boolean useCheckpoints System.Boolean stopOnEof System.Boolean orderedPartitionProcessing System.Boolean isBiState IEmittedStreamsTracker emittedStreamsTracker Fields _checkpointManager Declaration protected readonly ICoreProjectionCheckpointManager _checkpointManager Field Value Type ICoreProjectionCheckpointManager _coreProjection Declaration protected readonly ICoreProjectionForProcessingPhase _coreProjection Field Value Type ICoreProjectionForProcessingPhase _currentSubscriptionId Declaration protected Guid _currentSubscriptionId Field Value Type System.Guid _emittedStreamsTracker Declaration protected readonly IEmittedStreamsTracker _emittedStreamsTracker Field Value Type IEmittedStreamsTracker _expectedSubscriptionMessageSequenceNumber Declaration protected long _expectedSubscriptionMessageSequenceNumber Field Value Type System.Int64 _logger Declaration protected readonly ILogger _logger Field Value Type ILogger _partitionStateCache Declaration protected readonly PartitionStateCache _partitionStateCache Field Value Type PartitionStateCache _processingQueue Declaration protected readonly CoreProjectionQueue _processingQueue Field Value Type CoreProjectionQueue _progressResultWriter Declaration protected readonly IProgressResultWriter _progressResultWriter Field Value Type IProgressResultWriter _projectionConfig Declaration protected readonly ProjectionConfig _projectionConfig Field Value Type ProjectionConfig _projectionCorrelationId Declaration protected readonly Guid _projectionCorrelationId Field Value Type System.Guid _projectionName Declaration protected readonly string _projectionName Field Value Type System.String _publisher Declaration protected readonly IPublisher _publisher Field Value Type IPublisher _readerStrategy Declaration protected readonly IReaderStrategy _readerStrategy Field Value Type IReaderStrategy _resultWriter Declaration protected readonly IResultWriter _resultWriter Field Value Type IResultWriter _state Declaration protected PhaseState _state Field Value Type PhaseState _stopOnEof Declaration protected readonly bool _stopOnEof Field Value Type System.Boolean _subscribed Declaration protected bool _subscribed Field Value Type System.Boolean _subscriptionDispatcher Declaration protected readonly ReaderSubscriptionDispatcher _subscriptionDispatcher Field Value Type ReaderSubscriptionDispatcher _subscriptionStartedAtLastCommitPosition Declaration protected long _subscriptionStartedAtLastCommitPosition Field Value Type System.Int64 _useCheckpoints Declaration protected readonly bool _useCheckpoints Field Value Type System.Boolean _zeroCheckpointTag Declaration protected readonly CheckpointTag _zeroCheckpointTag Field Value Type CheckpointTag Properties CheckpointManager Declaration public ICoreProjectionCheckpointManager CheckpointManager { get; } Property Value Type ICoreProjectionCheckpointManager EmittedStreamsTracker Declaration public IEmittedStreamsTracker EmittedStreamsTracker { get; } Property Value Type IEmittedStreamsTracker LastProcessedEventPosition Declaration public CheckpointTag LastProcessedEventPosition { get; } Property Value Type CheckpointTag Methods AdjustTag(CheckpointTag) Declaration public CheckpointTag AdjustTag(CheckpointTag tag) Parameters Type Name CheckpointTag tag Returns Type Description CheckpointTag AssignSlaves(SlaveProjectionCommunicationChannels) Declaration public virtual void AssignSlaves(SlaveProjectionCommunicationChannels slaveProjections) Parameters Type Name SlaveProjectionCommunicationChannels slaveProjections BeginGetPartitionStateAt(String, CheckpointTag, Action<PartitionState>, Boolean) Declaration public void BeginGetPartitionStateAt(string statePartition, CheckpointTag at, Action<PartitionState> loadCompleted, bool lockLoaded) Parameters Type Name System.String statePartition CheckpointTag at System.Action < PartitionState > loadCompleted System.Boolean lockLoaded Complete() Declaration public void Complete() Dispose() Declaration public abstract void Dispose() EmitEofResult(String, String, CheckpointTag, Guid, String) Declaration public void EmitEofResult(string partition, string resultBody, CheckpointTag causedBy, Guid causedByGuid, string correlationId) Parameters Type Name System.String partition System.String resultBody CheckpointTag causedBy System.Guid causedByGuid System.String correlationId EnsureTickPending() Declaration protected void EnsureTickPending() EnsureUnsubscribed() Declaration public void EnsureUnsubscribed() FinalizeEventProcessing(EventProcessedResult, CheckpointTag, Single) Declaration public void FinalizeEventProcessing(EventProcessedResult result, CheckpointTag eventCheckpointTag, float progress) Parameters Type Name EventProcessedResult result CheckpointTag eventCheckpointTag System.Single progress GetBufferedEventCount() Declaration public int GetBufferedEventCount() Returns Type Description System.Int32 GetStatistics(ProjectionStatistics) Declaration public virtual void GetStatistics(ProjectionStatistics info) Parameters Type Name ProjectionStatistics info GetStatus() Declaration public string GetStatus() Returns Type Description System.String GetSubscriptionOptions() Declaration public ReaderSubscriptionOptions GetSubscriptionOptions() Returns Type Description ReaderSubscriptionOptions Handle(CoreProjectionProcessingMessage.PrerecordedEventsLoaded) Declaration public void Handle(CoreProjectionProcessingMessage.PrerecordedEventsLoaded message) Parameters Type Name CoreProjectionProcessingMessage.PrerecordedEventsLoaded message Handle(CoreProjectionManagementMessage.GetResult) Declaration public void Handle(CoreProjectionManagementMessage.GetResult message) Parameters Type Name CoreProjectionManagementMessage.GetResult message Handle(CoreProjectionManagementMessage.GetState) Declaration public void Handle(CoreProjectionManagementMessage.GetState message) Parameters Type Name CoreProjectionManagementMessage.GetState message Handle(EventReaderSubscriptionMessage.CheckpointSuggested) Declaration public void Handle(EventReaderSubscriptionMessage.CheckpointSuggested message) Parameters Type Name EventReaderSubscriptionMessage.CheckpointSuggested message Handle(EventReaderSubscriptionMessage.EofReached) Declaration public void Handle(EventReaderSubscriptionMessage.EofReached message) Parameters Type Name EventReaderSubscriptionMessage.EofReached message Handle(EventReaderSubscriptionMessage.Failed) Declaration public void Handle(EventReaderSubscriptionMessage.Failed message) Parameters Type Name EventReaderSubscriptionMessage.Failed message Handle(EventReaderSubscriptionMessage.NotAuthorized) Declaration public void Handle(EventReaderSubscriptionMessage.NotAuthorized message) Parameters Type Name EventReaderSubscriptionMessage.NotAuthorized message Handle(EventReaderSubscriptionMessage.ProgressChanged) Declaration public void Handle(EventReaderSubscriptionMessage.ProgressChanged message) Parameters Type Name EventReaderSubscriptionMessage.ProgressChanged message Handle(EventReaderSubscriptionMessage.ReaderAssignedReader) Declaration public void Handle(EventReaderSubscriptionMessage.ReaderAssignedReader message) Parameters Type Name EventReaderSubscriptionMessage.ReaderAssignedReader message Handle(EventReaderSubscriptionMessage.SubscriptionStarted) Declaration public void Handle(EventReaderSubscriptionMessage.SubscriptionStarted message) Parameters Type Name EventReaderSubscriptionMessage.SubscriptionStarted message InitializeFromCheckpoint(CheckpointTag) Declaration public void InitializeFromCheckpoint(CheckpointTag checkpointTag) Parameters Type Name CheckpointTag checkpointTag InternalCommittedEventProcessed(String, EventReaderSubscriptionMessage.CommittedEventReceived, EmittedEventEnvelope[], PartitionState, PartitionState) Declaration protected EventProcessedResult InternalCommittedEventProcessed(string partition, EventReaderSubscriptionMessage.CommittedEventReceived message, EmittedEventEnvelope[] emittedEvents, PartitionState newPartitionState, PartitionState newSharedPartitionState) Parameters Type Name System.String partition EventReaderSubscriptionMessage.CommittedEventReceived message EmittedEventEnvelope [] emittedEvents PartitionState newPartitionState PartitionState newSharedPartitionState Returns Type Description EventProcessedResult InternalPartitionDeletedProcessed(String, CheckpointTag, PartitionState) Declaration protected EventProcessedResult InternalPartitionDeletedProcessed(string partition, CheckpointTag deletePosition, PartitionState newPartitionState) Parameters Type Name System.String partition CheckpointTag deletePosition PartitionState newPartitionState Returns Type Description EventProcessedResult IsOutOfOrderSubscriptionMessage(EventReaderSubscriptionMessageBase) Declaration protected bool IsOutOfOrderSubscriptionMessage(EventReaderSubscriptionMessageBase message) Parameters Type Name EventReaderSubscriptionMessageBase message Returns Type Description System.Boolean MakeZeroCheckpointTag() Declaration public CheckpointTag MakeZeroCheckpointTag() Returns Type Description CheckpointTag NewCheckpointStarted(CheckpointTag) Declaration public abstract void NewCheckpointStarted(CheckpointTag at) Parameters Type Name CheckpointTag at ProcessEvent() Declaration public void ProcessEvent() RecordEventOrder(ResolvedEvent, CheckpointTag, Action) Declaration public void RecordEventOrder(ResolvedEvent resolvedEvent, CheckpointTag orderCheckpointTag, Action completed) Parameters Type Name ResolvedEvent resolvedEvent CheckpointTag orderCheckpointTag System.Action completed RegisterSubscriptionMessage(EventReaderSubscriptionMessageBase) Declaration protected void RegisterSubscriptionMessage(EventReaderSubscriptionMessageBase message) Parameters Type Name EventReaderSubscriptionMessageBase message SetCurrentCheckpointSuggestedWorkItem(CheckpointSuggestedWorkItem) Declaration public void SetCurrentCheckpointSuggestedWorkItem(CheckpointSuggestedWorkItem checkpointSuggestedWorkItem) Parameters Type Name CheckpointSuggestedWorkItem checkpointSuggestedWorkItem SetFaulting(String, Exception) Declaration protected void SetFaulting(string faultedReason, Exception ex = null) Parameters Type Name System.String faultedReason System.Exception ex SetProjectionState(PhaseState) Declaration public void SetProjectionState(PhaseState state) Parameters Type Name PhaseState state Subscribe(CheckpointTag, Boolean) Declaration public virtual void Subscribe(CheckpointTag from, bool fromCheckpoint) Parameters Type Name CheckpointTag from System.Boolean fromCheckpoint Subscribed(Guid) Declaration public void Subscribed(Guid subscriptionId) Parameters Type Name System.Guid subscriptionId SubscribeReaders(CheckpointTag) Declaration protected void SubscribeReaders(CheckpointTag checkpointTag) Parameters Type Name CheckpointTag checkpointTag SubscribeToPreRecordedOrderEvents() Declaration public void SubscribeToPreRecordedOrderEvents() UnlockAndForgetBefore(CheckpointTag) Declaration public void UnlockAndForgetBefore(CheckpointTag checkpointTag) Parameters Type Name CheckpointTag checkpointTag Unsubscribed() Declaration public void Unsubscribed() UnsubscribeFromPreRecordedOrderEvents() Declaration protected void UnsubscribeFromPreRecordedOrderEvents() ValidateEmittedEvents(EmittedEventEnvelope[]) Declaration protected bool ValidateEmittedEvents(EmittedEventEnvelope[] emittedEvents) Parameters Type Name EmittedEventEnvelope [] emittedEvents Returns Type Description System.Boolean Implements IProjectionPhaseCompleter IProjectionPhaseCheckpointManager IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IProjectionProcessingPhase System.IDisposable IHandle<T> IHandle<T> IHandle<T> IProjectionPhaseStateManager Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.CheckpointTagExtensions.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.CheckpointTagExtensions.html",
    "title": "Class CheckpointTagExtensions | Event Store",
    "keywords": "Class CheckpointTagExtensions Inheritance System.Object CheckpointTagExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public static class CheckpointTagExtensions Methods ParseCheckpointExtraJson(String) Declaration public static Dictionary<string, JToken> ParseCheckpointExtraJson(this string source) Parameters Type Name System.String source Returns Type Description System.Collections.Generic.Dictionary < System.String , Newtonsoft.Json.Linq.JToken > ParseCheckpointTagCorrelationId(String) Declaration public static string ParseCheckpointTagCorrelationId(this string source) Parameters Type Name System.String source Returns Type Description System.String ParseCheckpointTagJson(Byte[]) Declaration public static CheckpointTag ParseCheckpointTagJson(this byte[] source) Parameters Type Name System.Byte [] source Returns Type Description CheckpointTag ParseCheckpointTagJson(String) Declaration public static CheckpointTag ParseCheckpointTagJson(this string source) Parameters Type Name System.String source Returns Type Description CheckpointTag ParseCheckpointTagVersionExtraJson(Byte[], ProjectionVersion) Declaration public static CheckpointTagVersion ParseCheckpointTagVersionExtraJson(this byte[] source, ProjectionVersion current) Parameters Type Name System.Byte [] source ProjectionVersion current Returns Type Description CheckpointTagVersion ParseCheckpointTagVersionExtraJson(String, ProjectionVersion) Declaration public static CheckpointTagVersion ParseCheckpointTagVersionExtraJson(this string source, ProjectionVersion current) Parameters Type Name System.String source ProjectionVersion current Returns Type Description CheckpointTagVersion"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.CheckpointTag.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.CheckpointTag.html",
    "title": "Class CheckpointTag | Event Store",
    "keywords": "Class CheckpointTag Inheritance System.Object CheckpointTag Implements System.IComparable < CheckpointTag > Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class CheckpointTag : IComparable<CheckpointTag> Fields CatalogPosition Declaration public readonly long CatalogPosition Field Value Type System.Int64 CatalogStream Declaration public readonly string CatalogStream Field Value Type System.String DataPosition Declaration public readonly long DataPosition Field Value Type System.Int64 DataStream Declaration public readonly string DataStream Field Value Type System.String Phase Declaration public readonly int Phase Field Value Type System.Int32 Position Declaration public readonly TFPos Position Field Value Type TFPos Streams Declaration public readonly Dictionary<string, long> Streams Field Value Type System.Collections.Generic.Dictionary < System.String , System.Int64 > Properties CommitPosition Declaration public long? CommitPosition { get; } Property Value Type System.Nullable < System.Int64 > Completed Declaration public bool Completed { get; } Property Value Type System.Boolean Empty Declaration public static CheckpointTag Empty { get; } Property Value Type CheckpointTag PreparePosition Declaration public long? PreparePosition { get; } Property Value Type System.Nullable < System.Int64 > Methods Check(JsonToken, JsonReader) Declaration public static void Check(JsonToken type, JsonReader reader) Parameters Type Name Newtonsoft.Json.JsonToken type Newtonsoft.Json.JsonReader reader Check(Boolean, JsonReader) Declaration public static void Check(bool read, JsonReader reader) Parameters Type Name System.Boolean read Newtonsoft.Json.JsonReader reader CompareTo(CheckpointTag) Declaration public int CompareTo(CheckpointTag other) Parameters Type Name CheckpointTag other Returns Type Description System.Int32 Equals(CheckpointTag) Declaration protected bool Equals(CheckpointTag other) Parameters Type Name CheckpointTag other Returns Type Description System.Boolean Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) FromByStreamPosition(Int32, String, Int64, String, Int64, Int64) Declaration public static CheckpointTag FromByStreamPosition(int phase, string catalogStream, long catalogPosition, string dataStream, long dataPosition, long commitPosition) Parameters Type Name System.Int32 phase System.String catalogStream System.Int64 catalogPosition System.String dataStream System.Int64 dataPosition System.Int64 commitPosition Returns Type Description CheckpointTag FromEventTypeIndexPositions(Int32, TFPos, IDictionary<String, Int64>) Declaration public static CheckpointTag FromEventTypeIndexPositions(int phase, TFPos position, IDictionary<string, long> streams) Parameters Type Name System.Int32 phase TFPos position System.Collections.Generic.IDictionary < System.String , System.Int64 > streams Returns Type Description CheckpointTag FromJson(JsonReader, ProjectionVersion, Boolean) Declaration public static CheckpointTagVersion FromJson(JsonReader reader, ProjectionVersion current, bool skipStartObject = false) Parameters Type Name Newtonsoft.Json.JsonReader reader ProjectionVersion current System.Boolean skipStartObject Returns Type Description CheckpointTagVersion FromPhase(Int32, Boolean) Declaration public static CheckpointTag FromPhase(int phase, bool completed) Parameters Type Name System.Int32 phase System.Boolean completed Returns Type Description CheckpointTag FromPosition(Int32, TFPos) Declaration public static CheckpointTag FromPosition(int phase, TFPos position) Parameters Type Name System.Int32 phase TFPos position Returns Type Description CheckpointTag FromPosition(Int32, Int64, Int64) Declaration public static CheckpointTag FromPosition(int phase, long commitPosition, long preparePosition) Parameters Type Name System.Int32 phase System.Int64 commitPosition System.Int64 preparePosition Returns Type Description CheckpointTag FromPreparePosition(Int32, Int64) Declaration public static CheckpointTag FromPreparePosition(int phase, long preparePosition) Parameters Type Name System.Int32 phase System.Int64 preparePosition Returns Type Description CheckpointTag FromStreamPosition(Int32, String, Int64) Declaration public static CheckpointTag FromStreamPosition(int phase, string stream, long sequenceNumber) Parameters Type Name System.Int32 phase System.String stream System.Int64 sequenceNumber Returns Type Description CheckpointTag FromStreamPositions(Int32, IDictionary<String, Int64>) Declaration public static CheckpointTag FromStreamPositions(int phase, IDictionary<string, long> streams) Parameters Type Name System.Int32 phase System.Collections.Generic.IDictionary < System.String , System.Int64 > streams Returns Type Description CheckpointTag GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() ToJsonBytes(ProjectionVersion, IEnumerable<KeyValuePair<String, JToken>>) Declaration public byte[] ToJsonBytes(ProjectionVersion projectionVersion, IEnumerable<KeyValuePair<string, JToken>> extraMetaData = null) Parameters Type Name ProjectionVersion projectionVersion System.Collections.Generic.IEnumerable < System.Collections.Generic.KeyValuePair < System.String , Newtonsoft.Json.Linq.JToken >> extraMetaData Returns Type Description System.Byte [] ToJsonRaw(IEnumerable<KeyValuePair<String, JToken>>) Declaration public JRaw ToJsonRaw(IEnumerable<KeyValuePair<string, JToken>> extraMetaData = null) Parameters Type Name System.Collections.Generic.IEnumerable < System.Collections.Generic.KeyValuePair < System.String , Newtonsoft.Json.Linq.JToken >> extraMetaData Returns Type Description Newtonsoft.Json.Linq.JRaw ToJsonString(ProjectionVersion, IEnumerable<KeyValuePair<String, JToken>>) Declaration public string ToJsonString(ProjectionVersion projectionVersion, IEnumerable<KeyValuePair<string, JToken>> extraMetaData = null) Parameters Type Name ProjectionVersion projectionVersion System.Collections.Generic.IEnumerable < System.Collections.Generic.KeyValuePair < System.String , Newtonsoft.Json.Linq.JToken >> extraMetaData Returns Type Description System.String ToJsonString(IEnumerable<KeyValuePair<String, JToken>>) Declaration public string ToJsonString(IEnumerable<KeyValuePair<string, JToken>> extraMetaData = null) Parameters Type Name System.Collections.Generic.IEnumerable < System.Collections.Generic.KeyValuePair < System.String , Newtonsoft.Json.Linq.JToken >> extraMetaData Returns Type Description System.String ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() UpdateEventTypeIndexPosition(TFPos) Declaration public CheckpointTag UpdateEventTypeIndexPosition(TFPos position) Parameters Type Name TFPos position Returns Type Description CheckpointTag UpdateEventTypeIndexPosition(TFPos, String, Int64) Declaration public CheckpointTag UpdateEventTypeIndexPosition(TFPos position, string eventType, long eventSequenceNumber) Parameters Type Name TFPos position System.String eventType System.Int64 eventSequenceNumber Returns Type Description CheckpointTag UpdateStreamPosition(String, Int64) Declaration public CheckpointTag UpdateStreamPosition(string streamId, long eventSequenceNumber) Parameters Type Name System.String streamId System.Int64 eventSequenceNumber Returns Type Description CheckpointTag WriteTo(ProjectionVersion, IEnumerable<KeyValuePair<String, JToken>>, JsonWriter) Declaration public void WriteTo(ProjectionVersion projectionVersion, IEnumerable<KeyValuePair<string, JToken>> extraMetaData, JsonWriter jsonWriter) Parameters Type Name ProjectionVersion projectionVersion System.Collections.Generic.IEnumerable < System.Collections.Generic.KeyValuePair < System.String , Newtonsoft.Json.Linq.JToken >> extraMetaData Newtonsoft.Json.JsonWriter jsonWriter Operators Equality(CheckpointTag, CheckpointTag) Declaration public static bool operator ==(CheckpointTag left, CheckpointTag right) Parameters Type Name CheckpointTag left CheckpointTag right Returns Type Description System.Boolean GreaterThan(CheckpointTag, CheckpointTag) Declaration public static bool operator>(CheckpointTag left, CheckpointTag right) Parameters Type Name CheckpointTag left CheckpointTag right Returns Type Description System.Boolean GreaterThanOrEqual(CheckpointTag, CheckpointTag) Declaration public static bool operator >=(CheckpointTag left, CheckpointTag right) Parameters Type Name CheckpointTag left CheckpointTag right Returns Type Description System.Boolean Inequality(CheckpointTag, CheckpointTag) Declaration public static bool operator !=(CheckpointTag left, CheckpointTag right) Parameters Type Name CheckpointTag left CheckpointTag right Returns Type Description System.Boolean LessThan(CheckpointTag, CheckpointTag) Declaration public static bool operator <(CheckpointTag left, CheckpointTag right) Parameters Type Name CheckpointTag left CheckpointTag right Returns Type Description System.Boolean LessThanOrEqual(CheckpointTag, CheckpointTag) Declaration public static bool operator <=(CheckpointTag left, CheckpointTag right) Parameters Type Name CheckpointTag left CheckpointTag right Returns Type Description System.Boolean Implements System.IComparable<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.CheckpointSuggestedWorkItem.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.CheckpointSuggestedWorkItem.html",
    "title": "Class CheckpointSuggestedWorkItem | Event Store",
    "keywords": "Class CheckpointSuggestedWorkItem Inheritance System.Object StagedTask WorkItem CheckpointWorkItemBase CheckpointSuggestedWorkItem Inherited Members WorkItem._requiresRunning WorkItem.Queue WorkItem.Process(Int32, Action<Int32, Object>) WorkItem.RecordEventOrder() WorkItem.GetStatePartition() WorkItem.Load(CheckpointTag) WorkItem.ProcessEvent() WorkItem.NextStage(Object) WorkItem.SetCheckpointTag(CheckpointTag) WorkItem.SetProjectionQueue(CoreProjectionQueue) StagedTask.InitialCorrelationId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class CheckpointSuggestedWorkItem : CheckpointWorkItemBase Constructors CheckpointSuggestedWorkItem(IProjectionPhaseCheckpointManager, EventReaderSubscriptionMessage.CheckpointSuggested, ICoreProjectionCheckpointManager) Declaration public CheckpointSuggestedWorkItem(IProjectionPhaseCheckpointManager projectionPhase, EventReaderSubscriptionMessage.CheckpointSuggested message, ICoreProjectionCheckpointManager checkpointManager) Parameters Type Name IProjectionPhaseCheckpointManager projectionPhase EventReaderSubscriptionMessage.CheckpointSuggested message ICoreProjectionCheckpointManager checkpointManager Methods CompleteItem() Declaration protected override void CompleteItem() Overrides WorkItem.CompleteItem() WriteOutput() Declaration protected override void WriteOutput() Overrides WorkItem.WriteOutput() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy.html": {
    "href": "dotnet-api/code/EventStore.Core.TransactionLog.FileNamingStrategy.VersionedPatternFileNamingStrategy.html",
    "title": "Class VersionedPatternFileNamingStrategy | Event Store",
    "keywords": "Class VersionedPatternFileNamingStrategy Inheritance System.Object VersionedPatternFileNamingStrategy Implements IFileNamingStrategy Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.TransactionLog.FileNamingStrategy Assembly : EventStore.Core.dll Syntax public class VersionedPatternFileNamingStrategy : IFileNamingStrategy Constructors VersionedPatternFileNamingStrategy(String, String) Declaration public VersionedPatternFileNamingStrategy(string path, string prefix) Parameters Type Name System.String path System.String prefix Methods DetermineBestVersionFilenameFor(Int32) Declaration public string DetermineBestVersionFilenameFor(int index) Parameters Type Name System.Int32 index Returns Type Description System.String GetAllPresentFiles() Declaration public string[] GetAllPresentFiles() Returns Type Description System.String [] GetAllTempFiles() Declaration public string[] GetAllTempFiles() Returns Type Description System.String [] GetAllVersionsFor(Int32) Declaration public string[] GetAllVersionsFor(int index) Parameters Type Name System.Int32 index Returns Type Description System.String [] GetFilenameFor(Int32, Int32) Declaration public string GetFilenameFor(int index, int version) Parameters Type Name System.Int32 index System.Int32 version Returns Type Description System.String GetTempFilename() Declaration public string GetTempFilename() Returns Type Description System.String Implements IFileNamingStrategy Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.html": {
    "href": "dotnet-api/code/EventStore.Core.TransactionLog.FileNamingStrategy.IFileNamingStrategy.html",
    "title": "Interface IFileNamingStrategy | Event Store",
    "keywords": "Interface IFileNamingStrategy Namespace : EventStore.Core.TransactionLog.FileNamingStrategy Assembly : EventStore.Core.dll Syntax public interface IFileNamingStrategy Methods DetermineBestVersionFilenameFor(Int32) Declaration string DetermineBestVersionFilenameFor(int index) Parameters Type Name System.Int32 index Returns Type Description System.String GetAllPresentFiles() Declaration string[] GetAllPresentFiles() Returns Type Description System.String [] GetAllTempFiles() Declaration string[] GetAllTempFiles() Returns Type Description System.String [] GetAllVersionsFor(Int32) Declaration string[] GetAllVersionsFor(int index) Parameters Type Name System.Int32 index Returns Type Description System.String [] GetFilenameFor(Int32, Int32) Declaration string GetFilenameFor(int index, int version) Parameters Type Name System.Int32 index System.Int32 version Returns Type Description System.String GetTempFilename() Declaration string GetTempFilename() Returns Type Description System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.TransactionLog.Chunks.html": {
    "href": "dotnet-api/code/EventStore.Core.TransactionLog.Chunks.html",
    "title": "Namespace EventStore.Core.TransactionLog.Chunks | Event Store",
    "keywords": "Namespace EventStore.Core.TransactionLog.Chunks Classes ChunkFooter ChunkHeader TFChunkBulkReader TFChunkChaser TFChunkDb TFChunkDbConfig TFChunkDbTruncator TFChunkManager TFChunkReader TFChunkReaderExistsAtOptimizer TFChunkScavenger TFChunkScavengerLogManager TFChunkWriter TFConsts Interfaces ITFChunkScavengerLog ITFChunkScavengerLogManager Enums ScavengeResult"
  },
  "dotnet-api/code/EventStore.Core.TransactionLog.Chunks.TFConsts.html": {
    "href": "dotnet-api/code/EventStore.Core.TransactionLog.Chunks.TFConsts.html",
    "title": "Class TFConsts | Event Store",
    "keywords": "Class TFConsts Inheritance System.Object TFConsts Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.TransactionLog.Chunks Assembly : EventStore.Core.dll Syntax public static class TFConsts Fields ChunksCacheSize Declaration public const int ChunksCacheSize = 536871424 Field Value Type System.Int32 ChunkSize Declaration public const int ChunkSize = 268435456 Field Value Type System.Int32 MaxLogRecordSize Declaration public const int MaxLogRecordSize = 16777216 Field Value Type System.Int32 MidpointsDepth Declaration public const int MidpointsDepth = 10 Field Value Type System.Int32 MinFlushDelayMs Declaration public static TimeSpan MinFlushDelayMs Field Value Type System.TimeSpan"
  },
  "dotnet-api/code/EventStore.Core.TransactionLog.Chunks.TFChunkWriter.html": {
    "href": "dotnet-api/code/EventStore.Core.TransactionLog.Chunks.TFChunkWriter.html",
    "title": "Class TFChunkWriter | Event Store",
    "keywords": "Class TFChunkWriter Inheritance System.Object TFChunkWriter Implements ITransactionFileWriter System.IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.TransactionLog.Chunks Assembly : EventStore.Core.dll Syntax public class TFChunkWriter : ITransactionFileWriter, IDisposable Constructors TFChunkWriter(TFChunkDb) Declaration public TFChunkWriter(TFChunkDb db) Parameters Type Name TFChunkDb db Properties Checkpoint Declaration public ICheckpoint Checkpoint { get; } Property Value Type ICheckpoint CurrentChunk Declaration public TFChunk CurrentChunk { get; } Property Value Type TFChunk Methods Close() Declaration public void Close() CompleteChunk() Declaration public void CompleteChunk() CompleteReplicatedRawChunk(TFChunk) Declaration public void CompleteReplicatedRawChunk(TFChunk rawChunk) Parameters Type Name TFChunk rawChunk Dispose() Declaration public void Dispose() Flush() Declaration public void Flush() Open() Declaration public void Open() Write(LogRecord, out Int64) Declaration public bool Write(LogRecord record, out long newPos) Parameters Type Name LogRecord record System.Int64 newPos Returns Type Description System.Boolean Implements ITransactionFileWriter System.IDisposable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.TransactionLog.Chunks.TFChunkScavengerLogManager.html": {
    "href": "dotnet-api/code/EventStore.Core.TransactionLog.Chunks.TFChunkScavengerLogManager.html",
    "title": "Class TFChunkScavengerLogManager | Event Store",
    "keywords": "Class TFChunkScavengerLogManager Inheritance System.Object TFChunkScavengerLogManager Implements ITFChunkScavengerLogManager Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.TransactionLog.Chunks Assembly : EventStore.Core.dll Syntax public class TFChunkScavengerLogManager : ITFChunkScavengerLogManager Constructors TFChunkScavengerLogManager(String, TimeSpan, IODispatcher) Declaration public TFChunkScavengerLogManager(string nodeEndpoint, TimeSpan scavengeHistoryMaxAge, IODispatcher ioDispatcher) Parameters Type Name System.String nodeEndpoint System.TimeSpan scavengeHistoryMaxAge IODispatcher ioDispatcher Methods CreateLog() Declaration public ITFChunkScavengerLog CreateLog() Returns Type Description ITFChunkScavengerLog Initialise() Declaration public void Initialise() Implements ITFChunkScavengerLogManager Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.TransactionLog.Chunks.TFChunkScavenger.html": {
    "href": "dotnet-api/code/EventStore.Core.TransactionLog.Chunks.TFChunkScavenger.html",
    "title": "Class TFChunkScavenger | Event Store",
    "keywords": "Class TFChunkScavenger Inheritance System.Object TFChunkScavenger Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.TransactionLog.Chunks Assembly : EventStore.Core.dll Syntax public class TFChunkScavenger Constructors TFChunkScavenger(TFChunkDb, ITFChunkScavengerLog, ITableIndex, IReadIndex, Nullable<Int64>, Boolean, Int32) Declaration public TFChunkScavenger(TFChunkDb db, ITFChunkScavengerLog scavengerLog, ITableIndex tableIndex, IReadIndex readIndex, long? maxChunkDataSize = default(long? ), bool unsafeIgnoreHardDeletes = false, int threads = 1) Parameters Type Name TFChunkDb db ITFChunkScavengerLog scavengerLog ITableIndex tableIndex IReadIndex readIndex System.Nullable < System.Int64 > maxChunkDataSize System.Boolean unsafeIgnoreHardDeletes System.Int32 threads Properties ScavengeId Declaration public string ScavengeId { get; } Property Value Type System.String Methods Scavenge(Boolean, Boolean, Int32, CancellationToken) Declaration public Task Scavenge(bool alwaysKeepScavenged, bool mergeChunks, int startFromChunk = 0, CancellationToken ct = default(CancellationToken)) Parameters Type Name System.Boolean alwaysKeepScavenged System.Boolean mergeChunks System.Int32 startFromChunk System.Threading.CancellationToken ct Returns Type Description System.Threading.Tasks.Task Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.TransactionLog.Chunks.TFChunkReaderExistsAtOptimizer.html": {
    "href": "dotnet-api/code/EventStore.Core.TransactionLog.Chunks.TFChunkReaderExistsAtOptimizer.html",
    "title": "Class TFChunkReaderExistsAtOptimizer | Event Store",
    "keywords": "Class TFChunkReaderExistsAtOptimizer Inheritance System.Object TFChunkReaderExistsAtOptimizer Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.TransactionLog.Chunks Assembly : EventStore.Core.dll Syntax public class TFChunkReaderExistsAtOptimizer Constructors TFChunkReaderExistsAtOptimizer(Int32) Declaration public TFChunkReaderExistsAtOptimizer(int maxCached) Parameters Type Name System.Int32 maxCached Properties Instance Declaration public static TFChunkReaderExistsAtOptimizer Instance { get; } Property Value Type TFChunkReaderExistsAtOptimizer Methods DeOptimizeAll() Declaration public void DeOptimizeAll() IsOptimized(TFChunk) Declaration public bool IsOptimized(TFChunk chunk) Parameters Type Name TFChunk chunk Returns Type Description System.Boolean Optimize(TFChunk) Declaration public void Optimize(TFChunk chunk) Parameters Type Name TFChunk chunk Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.TransactionLog.Chunks.TFChunkReader.html": {
    "href": "dotnet-api/code/EventStore.Core.TransactionLog.Chunks.TFChunkReader.html",
    "title": "Class TFChunkReader | Event Store",
    "keywords": "Class TFChunkReader Inheritance System.Object TFChunkReader Implements ITransactionFileReader Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.TransactionLog.Chunks Assembly : EventStore.Core.dll Syntax public class TFChunkReader : ITransactionFileReader Constructors TFChunkReader(TFChunkDb, ICheckpoint, Int64, Boolean) Declaration public TFChunkReader(TFChunkDb db, ICheckpoint writerCheckpoint, long initialPosition = 0L, bool optimizeReadSideCache = false) Parameters Type Name TFChunkDb db ICheckpoint writerCheckpoint System.Int64 initialPosition System.Boolean optimizeReadSideCache Fields MaxRetries Declaration public const int MaxRetries = 20 Field Value Type System.Int32 Properties CurrentPosition Declaration public long CurrentPosition { get; } Property Value Type System.Int64 Methods ExistsAt(Int64) Declaration public bool ExistsAt(long position) Parameters Type Name System.Int64 position Returns Type Description System.Boolean Reposition(Int64) Declaration public void Reposition(long position) Parameters Type Name System.Int64 position TryReadAt(Int64) Declaration public RecordReadResult TryReadAt(long position) Parameters Type Name System.Int64 position Returns Type Description RecordReadResult TryReadNext() Declaration public SeqReadResult TryReadNext() Returns Type Description SeqReadResult TryReadPrev() Declaration public SeqReadResult TryReadPrev() Returns Type Description SeqReadResult Implements ITransactionFileReader Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.TransactionLog.Chunks.TFChunkManager.html": {
    "href": "dotnet-api/code/EventStore.Core.TransactionLog.Chunks.TFChunkManager.html",
    "title": "Class TFChunkManager | Event Store",
    "keywords": "Class TFChunkManager Inheritance System.Object TFChunkManager Implements System.IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.TransactionLog.Chunks Assembly : EventStore.Core.dll Syntax public class TFChunkManager : IDisposable Constructors TFChunkManager(TFChunkDbConfig) Declaration public TFChunkManager(TFChunkDbConfig config) Parameters Type Name TFChunkDbConfig config Fields MaxChunksCount Declaration public const int MaxChunksCount = 100000 Field Value Type System.Int32 Properties ChunksCount Declaration public int ChunksCount { get; } Property Value Type System.Int32 Methods AddChunk(TFChunk) Declaration public void AddChunk(TFChunk chunk) Parameters Type Name TFChunk chunk AddNewChunk() Declaration public TFChunk AddNewChunk() Returns Type Description TFChunk AddNewChunk(ChunkHeader, Int32) Declaration public TFChunk AddNewChunk(ChunkHeader chunkHeader, int fileSize) Parameters Type Name ChunkHeader chunkHeader System.Int32 fileSize Returns Type Description TFChunk CreateTempChunk(ChunkHeader, Int32) Declaration public TFChunk CreateTempChunk(ChunkHeader chunkHeader, int fileSize) Parameters Type Name ChunkHeader chunkHeader System.Int32 fileSize Returns Type Description TFChunk Dispose() Declaration public void Dispose() EnableCaching() Declaration public void EnableCaching() GetChunk(Int32) Declaration public TFChunk GetChunk(int chunkNum) Parameters Type Name System.Int32 chunkNum Returns Type Description TFChunk GetChunkFor(Int64) Declaration public TFChunk GetChunkFor(long logPosition) Parameters Type Name System.Int64 logPosition Returns Type Description TFChunk GetChunkForOrDefault(String) Declaration public TFChunk GetChunkForOrDefault(string path) Parameters Type Name System.String path Returns Type Description TFChunk SwitchChunk(TFChunk, Boolean, Boolean) Declaration public TFChunk SwitchChunk(TFChunk chunk, bool verifyHash, bool removeChunksWithGreaterNumbers) Parameters Type Name TFChunk chunk System.Boolean verifyHash System.Boolean removeChunksWithGreaterNumbers Returns Type Description TFChunk Implements System.IDisposable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.AwakeReaderService.AwakeServiceMessage.SubscribeAwake.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.AwakeReaderService.AwakeServiceMessage.SubscribeAwake.html",
    "title": "Class AwakeServiceMessage.SubscribeAwake | Event Store",
    "keywords": "Class AwakeServiceMessage.SubscribeAwake Inheritance System.Object Message AwakeServiceMessage.SubscribeAwake Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.AwakeReaderService Assembly : EventStore.Core.dll Syntax public sealed class SubscribeAwake : Message Constructors SubscribeAwake(IEnvelope, Guid, String, TFPos, Message) Declaration public SubscribeAwake(IEnvelope envelope, Guid correlationId, string streamId, TFPos from, Message replyWithMessage) Parameters Type Name IEnvelope envelope System.Guid correlationId System.String streamId TFPos from Message replyWithMessage Fields CorrelationId Declaration public readonly Guid CorrelationId Field Value Type System.Guid Envelope Declaration public readonly IEnvelope Envelope Field Value Type IEnvelope From Declaration public readonly TFPos From Field Value Type TFPos ReplyWithMessage Declaration public readonly Message ReplyWithMessage Field Value Type Message StreamId Declaration public readonly string StreamId Field Value Type System.String Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.AwakeReaderService.AwakeService.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.AwakeReaderService.AwakeService.html",
    "title": "Class AwakeService | Event Store",
    "keywords": "Class AwakeService Inheritance System.Object AwakeService Implements IHandle < AwakeServiceMessage.SubscribeAwake > IHandle < AwakeServiceMessage.UnsubscribeAwake > IHandle < StorageMessage.EventCommitted > IHandle < StorageMessage.TfEofAtNonCommitRecord > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.AwakeReaderService Assembly : EventStore.Core.dll Syntax public class AwakeService : IHandle<AwakeServiceMessage.SubscribeAwake>, IHandle<AwakeServiceMessage.UnsubscribeAwake>, IHandle<StorageMessage.EventCommitted>, IHandle<StorageMessage.TfEofAtNonCommitRecord> Methods Handle(StorageMessage.EventCommitted) Declaration public void Handle(StorageMessage.EventCommitted message) Parameters Type Name StorageMessage.EventCommitted message Handle(StorageMessage.TfEofAtNonCommitRecord) Declaration public void Handle(StorageMessage.TfEofAtNonCommitRecord message) Parameters Type Name StorageMessage.TfEofAtNonCommitRecord message Handle(AwakeServiceMessage.SubscribeAwake) Declaration public void Handle(AwakeServiceMessage.SubscribeAwake message) Parameters Type Name AwakeServiceMessage.SubscribeAwake message Handle(AwakeServiceMessage.UnsubscribeAwake) Declaration public void Handle(AwakeServiceMessage.UnsubscribeAwake message) Parameters Type Name AwakeServiceMessage.UnsubscribeAwake message Implements IHandle<T> IHandle<T> IHandle<T> IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.UserManagementMessage.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.UserManagementMessage.html",
    "title": "Class UserManagementMessage | Event Store",
    "keywords": "Class UserManagementMessage Inheritance System.Object UserManagementMessage Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public static class UserManagementMessage"
  },
  "dotnet-api/code/EventStore.Core.Messages.UserManagementMessage.UserManagementServiceInitialized.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.UserManagementMessage.UserManagementServiceInitialized.html",
    "title": "Class UserManagementMessage.UserManagementServiceInitialized | Event Store",
    "keywords": "Class UserManagementMessage.UserManagementServiceInitialized Inheritance System.Object Message UserManagementMessage.UserManagementServiceInitialized Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public sealed class UserManagementServiceInitialized : Message Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.UserManagementMessage.UserManagementRequestMessage.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.UserManagementMessage.UserManagementRequestMessage.html",
    "title": "Class UserManagementMessage.UserManagementRequestMessage | Event Store",
    "keywords": "Class UserManagementMessage.UserManagementRequestMessage Inheritance System.Object Message UserManagementMessage.RequestMessage UserManagementMessage.UserManagementRequestMessage UserManagementMessage.ChangePassword UserManagementMessage.Create UserManagementMessage.Delete UserManagementMessage.Disable UserManagementMessage.Enable UserManagementMessage.Get UserManagementMessage.ResetPassword UserManagementMessage.Update Inherited Members UserManagementMessage.RequestMessage.Envelope UserManagementMessage.RequestMessage.Principal Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class UserManagementRequestMessage : UserManagementMessage.RequestMessage Constructors UserManagementRequestMessage(IEnvelope, IPrincipal, String) Declaration protected UserManagementRequestMessage(IEnvelope envelope, IPrincipal principal, string loginName) Parameters Type Name IEnvelope envelope System.Security.Principal.IPrincipal principal System.String loginName Fields LoginName Declaration public readonly string LoginName Field Value Type System.String Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides UserManagementMessage.RequestMessage.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.SystemMessage.WriteEpoch.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.SystemMessage.WriteEpoch.html",
    "title": "Class SystemMessage.WriteEpoch | Event Store",
    "keywords": "Class SystemMessage.WriteEpoch Inheritance System.Object Message SystemMessage.WriteEpoch Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class WriteEpoch : Message Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.SystemMessage.ChaserCaughtUp.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.SystemMessage.ChaserCaughtUp.html",
    "title": "Class SystemMessage.ChaserCaughtUp | Event Store",
    "keywords": "Class SystemMessage.ChaserCaughtUp Inheritance System.Object Message SystemMessage.ChaserCaughtUp Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class ChaserCaughtUp : Message Constructors ChaserCaughtUp(Guid) Declaration public ChaserCaughtUp(Guid correlationId) Parameters Type Name System.Guid correlationId Fields CorrelationId Declaration public readonly Guid CorrelationId Field Value Type System.Guid Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.SystemMessage.BecomeUnknown.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.SystemMessage.BecomeUnknown.html",
    "title": "Class SystemMessage.BecomeUnknown | Event Store",
    "keywords": "Class SystemMessage.BecomeUnknown Inheritance System.Object Message SystemMessage.StateChangeMessage SystemMessage.BecomeUnknown Inherited Members SystemMessage.StateChangeMessage.CorrelationId SystemMessage.StateChangeMessage.State Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class BecomeUnknown : SystemMessage.StateChangeMessage Constructors BecomeUnknown(Guid) Declaration public BecomeUnknown(Guid correlationId) Parameters Type Name System.Guid correlationId Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides SystemMessage.StateChangeMessage.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.SystemMessage.BecomeSlave.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.SystemMessage.BecomeSlave.html",
    "title": "Class SystemMessage.BecomeSlave | Event Store",
    "keywords": "Class SystemMessage.BecomeSlave Inheritance System.Object Message SystemMessage.StateChangeMessage SystemMessage.ReplicaStateMessage SystemMessage.BecomeSlave Inherited Members SystemMessage.ReplicaStateMessage.Master SystemMessage.StateChangeMessage.CorrelationId SystemMessage.StateChangeMessage.State Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class BecomeSlave : SystemMessage.ReplicaStateMessage Constructors BecomeSlave(Guid, VNodeInfo) Declaration public BecomeSlave(Guid correlationId, VNodeInfo master) Parameters Type Name System.Guid correlationId VNodeInfo master Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides SystemMessage.ReplicaStateMessage.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ReplicationMessageDto.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ReplicationMessageDto.html",
    "title": "Class ReplicationMessageDto | Event Store",
    "keywords": "Class ReplicationMessageDto Inheritance System.Object ReplicationMessageDto Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public static class ReplicationMessageDto"
  },
  "dotnet-api/code/EventStore.Core.Messages.ReplicationMessage.GetReplicationStatsCompleted.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ReplicationMessage.GetReplicationStatsCompleted.html",
    "title": "Class ReplicationMessage.GetReplicationStatsCompleted | Event Store",
    "keywords": "Class ReplicationMessage.GetReplicationStatsCompleted Inheritance System.Object Message ReplicationMessage.GetReplicationStatsCompleted Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class GetReplicationStatsCompleted : Message Constructors GetReplicationStatsCompleted(List<ReplicationMessage.ReplicationStats>) Declaration public GetReplicationStatsCompleted(List<ReplicationMessage.ReplicationStats> replicationStats) Parameters Type Name System.Collections.Generic.List < ReplicationMessage.ReplicationStats > replicationStats Fields ReplicationStats Declaration public List<ReplicationMessage.ReplicationStats> ReplicationStats Field Value Type System.Collections.Generic.List < ReplicationMessage.ReplicationStats > Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ReplicationMessage.GetReplicationStats.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ReplicationMessage.GetReplicationStats.html",
    "title": "Class ReplicationMessage.GetReplicationStats | Event Store",
    "keywords": "Class ReplicationMessage.GetReplicationStats Inheritance System.Object Message ReplicationMessage.GetReplicationStats Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class GetReplicationStats : Message Constructors GetReplicationStats(IEnvelope) Declaration public GetReplicationStats(IEnvelope envelope) Parameters Type Name IEnvelope envelope Fields Envelope Declaration public IEnvelope Envelope Field Value Type IEnvelope Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ReplicationMessage.DataChunkBulk.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ReplicationMessage.DataChunkBulk.html",
    "title": "Class ReplicationMessage.DataChunkBulk | Event Store",
    "keywords": "Class ReplicationMessage.DataChunkBulk Inheritance System.Object Message ReplicationMessage.DataChunkBulk Implements ReplicationMessage.IReplicationMessage StorageMessage.IFlushableMessage Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class DataChunkBulk : Message, ReplicationMessage.IReplicationMessage, StorageMessage.IFlushableMessage Constructors DataChunkBulk(Guid, Guid, Int32, Int32, Int64, Byte[], Boolean) Declaration public DataChunkBulk(Guid masterId, Guid subscriptionId, int chunkStartNumber, int chunkEndNumber, long subscriptionPosition, byte[] dataBytes, bool completeChunk) Parameters Type Name System.Guid masterId System.Guid subscriptionId System.Int32 chunkStartNumber System.Int32 chunkEndNumber System.Int64 subscriptionPosition System.Byte [] dataBytes System.Boolean completeChunk Fields ChunkEndNumber Declaration public readonly int ChunkEndNumber Field Value Type System.Int32 ChunkStartNumber Declaration public readonly int ChunkStartNumber Field Value Type System.Int32 CompleteChunk Declaration public readonly bool CompleteChunk Field Value Type System.Boolean DataBytes Declaration public readonly byte[] DataBytes Field Value Type System.Byte [] MasterId Declaration public readonly Guid MasterId Field Value Type System.Guid SubscriptionId Declaration public readonly Guid SubscriptionId Field Value Type System.Guid SubscriptionPosition Declaration public readonly long SubscriptionPosition Field Value Type System.Int64 Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Methods ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Explicit Interface Implementations ReplicationMessage.IReplicationMessage.MasterId Declaration Guid ReplicationMessage.IReplicationMessage.MasterId { get; } Returns Type Description System.Guid ReplicationMessage.IReplicationMessage.SubscriptionId Declaration Guid ReplicationMessage.IReplicationMessage.SubscriptionId { get; } Returns Type Description System.Guid Implements ReplicationMessage.IReplicationMessage StorageMessage.IFlushableMessage Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.HttpMessage.HttpCompleted.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.HttpMessage.HttpCompleted.html",
    "title": "Class HttpMessage.HttpCompleted | Event Store",
    "keywords": "Class HttpMessage.HttpCompleted Inheritance System.Object Message HttpMessage.HttpCompleted Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class HttpCompleted : Message Constructors HttpCompleted(Guid, HttpEntityManager) Declaration public HttpCompleted(Guid correlationId, HttpEntityManager httpEntityManager) Parameters Type Name System.Guid correlationId HttpEntityManager httpEntityManager Fields CorrelationId Declaration public readonly Guid CorrelationId Field Value Type System.Guid HttpEntityManager Declaration public readonly HttpEntityManager HttpEntityManager Field Value Type HttpEntityManager Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.HttpMessage.HttpBeginSend.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.HttpMessage.HttpBeginSend.html",
    "title": "Class HttpMessage.HttpBeginSend | Event Store",
    "keywords": "Class HttpMessage.HttpBeginSend Inheritance System.Object Message HttpMessage.HttpSendMessage HttpMessage.HttpBeginSend Implements IQueueAffineMessage Inherited Members HttpMessage.HttpSendMessage.QueueId HttpMessage.HttpSendMessage.Envelope HttpMessage.HttpSendMessage.CorrelationId HttpMessage.HttpSendMessage.HttpEntityManager Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class HttpBeginSend : HttpMessage.HttpSendMessage, IQueueAffineMessage Constructors HttpBeginSend(Guid, IEnvelope, HttpEntityManager, ResponseConfiguration) Declaration public HttpBeginSend(Guid correlationId, IEnvelope envelope, HttpEntityManager httpEntityManager, ResponseConfiguration configuration) Parameters Type Name System.Guid correlationId IEnvelope envelope HttpEntityManager httpEntityManager ResponseConfiguration configuration Fields Configuration Declaration public readonly ResponseConfiguration Configuration Field Value Type ResponseConfiguration Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides HttpMessage.HttpSendMessage.MsgTypeId Implements IQueueAffineMessage Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.HttpMessage.DeniedToHandle.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.HttpMessage.DeniedToHandle.html",
    "title": "Class HttpMessage.DeniedToHandle | Event Store",
    "keywords": "Class HttpMessage.DeniedToHandle Inheritance System.Object Message HttpMessage.DeniedToHandle Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class DeniedToHandle : Message Constructors DeniedToHandle(DenialReason, String) Declaration public DeniedToHandle(DenialReason reason, string details) Parameters Type Name DenialReason reason System.String details Fields Details Declaration public readonly string Details Field Value Type System.String Reason Declaration public readonly DenialReason Reason Field Value Type DenialReason Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.HttpClientMessageDto.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.HttpClientMessageDto.html",
    "title": "Class HttpClientMessageDto | Event Store",
    "keywords": "Class HttpClientMessageDto Inheritance System.Object HttpClientMessageDto Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public static class HttpClientMessageDto"
  },
  "dotnet-api/code/EventStore.Core.Messages.ElectionMessage.ElectionsDone.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ElectionMessage.ElectionsDone.html",
    "title": "Class ElectionMessage.ElectionsDone | Event Store",
    "keywords": "Class ElectionMessage.ElectionsDone Inheritance System.Object Message ElectionMessage.ElectionsDone Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class ElectionsDone : Message Constructors ElectionsDone(Int32, MemberInfo) Declaration public ElectionsDone(int installedView, MemberInfo master) Parameters Type Name System.Int32 installedView MemberInfo master Fields InstalledView Declaration public readonly int InstalledView Field Value Type System.Int32 Master Declaration public readonly MemberInfo Master Field Value Type MemberInfo Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Methods ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ElectionMessage.Accept.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ElectionMessage.Accept.html",
    "title": "Class ElectionMessage.Accept | Event Store",
    "keywords": "Class ElectionMessage.Accept Inheritance System.Object Message ElectionMessage.Accept Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class Accept : Message Constructors Accept(ElectionMessageDto.AcceptDto) Declaration public Accept(ElectionMessageDto.AcceptDto dto) Parameters Type Name ElectionMessageDto.AcceptDto dto Accept(Guid, IPEndPoint, Guid, IPEndPoint, Int32) Declaration public Accept(Guid serverId, IPEndPoint serverInternalHttp, Guid masterId, IPEndPoint masterInternalHttp, int view) Parameters Type Name System.Guid serverId System.Net.IPEndPoint serverInternalHttp System.Guid masterId System.Net.IPEndPoint masterInternalHttp System.Int32 view Fields MasterId Declaration public readonly Guid MasterId Field Value Type System.Guid MasterInternalHttp Declaration public readonly IPEndPoint MasterInternalHttp Field Value Type System.Net.IPEndPoint ServerId Declaration public readonly Guid ServerId Field Value Type System.Guid ServerInternalHttp Declaration public readonly IPEndPoint ServerInternalHttp Field Value Type System.Net.IPEndPoint View Declaration public readonly int View Field Value Type System.Int32 Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Methods ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ClientMessage.ScavengeDatabaseResponse.html",
    "title": "Class ClientMessage.ScavengeDatabaseResponse | Event Store",
    "keywords": "Class ClientMessage.ScavengeDatabaseResponse Inheritance System.Object Message ClientMessage.ScavengeDatabaseResponse Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class ScavengeDatabaseResponse : Message Constructors ScavengeDatabaseResponse(Guid, ClientMessage.ScavengeDatabaseResponse.ScavengeResult, String) Declaration public ScavengeDatabaseResponse(Guid correlationId, ClientMessage.ScavengeDatabaseResponse.ScavengeResult result, string scavengeId) Parameters Type Name System.Guid correlationId ClientMessage.ScavengeDatabaseResponse.ScavengeResult result System.String scavengeId Fields CorrelationId Declaration public readonly Guid CorrelationId Field Value Type System.Guid Result Declaration public readonly ClientMessage.ScavengeDatabaseResponse.ScavengeResult Result Field Value Type ClientMessage.ScavengeDatabaseResponse.ScavengeResult ScavengeId Declaration public readonly string ScavengeId Field Value Type System.String Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Methods ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ClientMessage.ReadStreamEventsForward.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ClientMessage.ReadStreamEventsForward.html",
    "title": "Class ClientMessage.ReadStreamEventsForward | Event Store",
    "keywords": "Class ClientMessage.ReadStreamEventsForward Inheritance System.Object Message ClientMessage.ReadRequestMessage ClientMessage.ReadStreamEventsForward Inherited Members ClientMessage.ReadRequestMessage.InternalCorrId ClientMessage.ReadRequestMessage.CorrelationId ClientMessage.ReadRequestMessage.Envelope ClientMessage.ReadRequestMessage.User ClientMessage.ReadRequestMessage.Expires Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class ReadStreamEventsForward : ClientMessage.ReadRequestMessage Constructors ReadStreamEventsForward(Guid, Guid, IEnvelope, String, Int64, Int32, Boolean, Boolean, Nullable<Int64>, IPrincipal, Nullable<TimeSpan>) Declaration public ReadStreamEventsForward(Guid internalCorrId, Guid correlationId, IEnvelope envelope, string eventStreamId, long fromEventNumber, int maxCount, bool resolveLinkTos, bool requireMaster, long? validationStreamVersion, IPrincipal user, TimeSpan? longPollTimeout = default(TimeSpan? )) Parameters Type Name System.Guid internalCorrId System.Guid correlationId IEnvelope envelope System.String eventStreamId System.Int64 fromEventNumber System.Int32 maxCount System.Boolean resolveLinkTos System.Boolean requireMaster System.Nullable < System.Int64 > validationStreamVersion System.Security.Principal.IPrincipal user System.Nullable < System.TimeSpan > longPollTimeout Fields EventStreamId Declaration public readonly string EventStreamId Field Value Type System.String FromEventNumber Declaration public readonly long FromEventNumber Field Value Type System.Int64 LongPollTimeout Declaration public readonly TimeSpan? LongPollTimeout Field Value Type System.Nullable < System.TimeSpan > MaxCount Declaration public readonly int MaxCount Field Value Type System.Int32 RequireMaster Declaration public readonly bool RequireMaster Field Value Type System.Boolean ResolveLinkTos Declaration public readonly bool ResolveLinkTos Field Value Type System.Boolean ValidationStreamVersion Declaration public readonly long? ValidationStreamVersion Field Value Type System.Nullable < System.Int64 > Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides ClientMessage.ReadRequestMessage.MsgTypeId Methods ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ProcessingStrategySelector.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ProcessingStrategySelector.html",
    "title": "Class ProcessingStrategySelector | Event Store",
    "keywords": "Class ProcessingStrategySelector Inheritance System.Object ProcessingStrategySelector Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class ProcessingStrategySelector Constructors ProcessingStrategySelector(ReaderSubscriptionDispatcher, SpooledStreamReadingDispatcher) Declaration public ProcessingStrategySelector(ReaderSubscriptionDispatcher subscriptionDispatcher, SpooledStreamReadingDispatcher spoolProcessingResponseDispatcher) Parameters Type Name ReaderSubscriptionDispatcher subscriptionDispatcher SpooledStreamReadingDispatcher spoolProcessingResponseDispatcher Methods CreateProjectionProcessingStrategy(String, ProjectionVersion, ProjectionNamesBuilder, IQuerySources, ProjectionConfig, IProjectionStateHandler, String, String) Declaration public ProjectionProcessingStrategy CreateProjectionProcessingStrategy(string name, ProjectionVersion projectionVersion, ProjectionNamesBuilder namesBuilder, IQuerySources sourceDefinition, ProjectionConfig projectionConfig, IProjectionStateHandler stateHandler, string handlerType, string query) Parameters Type Name System.String name ProjectionVersion projectionVersion ProjectionNamesBuilder namesBuilder IQuerySources sourceDefinition ProjectionConfig projectionConfig IProjectionStateHandler stateHandler System.String handlerType System.String query Returns Type Description ProjectionProcessingStrategy CreateSlaveProjectionProcessingStrategy(String, ProjectionVersion, IQuerySources, ProjectionConfig, IProjectionStateHandler, Guid, IPublisher, Guid, ProjectionCoreService) Declaration public ProjectionProcessingStrategy CreateSlaveProjectionProcessingStrategy(string name, ProjectionVersion projectionVersion, IQuerySources sourceDefinition, ProjectionConfig projectionConfig, IProjectionStateHandler stateHandler, Guid workerId, IPublisher publisher, Guid masterCoreProjectionId, ProjectionCoreService projectionCoreService) Parameters Type Name System.String name ProjectionVersion projectionVersion IQuerySources sourceDefinition ProjectionConfig projectionConfig IProjectionStateHandler stateHandler System.Guid workerId IPublisher publisher System.Guid masterCoreProjectionId ProjectionCoreService projectionCoreService Returns Type Description ProjectionProcessingStrategy Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.PreparePositionTagger.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.PreparePositionTagger.html",
    "title": "Class PreparePositionTagger | Event Store",
    "keywords": "Class PreparePositionTagger Inheritance System.Object PositionTagger PreparePositionTagger Inherited Members PositionTagger.Phase System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class PreparePositionTagger : PositionTagger Constructors PreparePositionTagger(Int32) Declaration public PreparePositionTagger(int phase) Parameters Type Name System.Int32 phase Methods AdjustTag(CheckpointTag) Declaration public override CheckpointTag AdjustTag(CheckpointTag tag) Parameters Type Name CheckpointTag tag Returns Type Description CheckpointTag Overrides PositionTagger.AdjustTag(CheckpointTag) IsCompatible(CheckpointTag) Declaration public override bool IsCompatible(CheckpointTag checkpointTag) Parameters Type Name CheckpointTag checkpointTag Returns Type Description System.Boolean Overrides PositionTagger.IsCompatible(CheckpointTag) IsMessageAfterCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.CommittedEventDistributed) Declaration public override bool IsMessageAfterCheckpointTag(CheckpointTag previous, ReaderSubscriptionMessage.CommittedEventDistributed committedEvent) Parameters Type Name CheckpointTag previous ReaderSubscriptionMessage.CommittedEventDistributed committedEvent Returns Type Description System.Boolean Overrides PositionTagger.IsMessageAfterCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.CommittedEventDistributed) MakeCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.CommittedEventDistributed) Declaration public override CheckpointTag MakeCheckpointTag(CheckpointTag previous, ReaderSubscriptionMessage.CommittedEventDistributed committedEvent) Parameters Type Name CheckpointTag previous ReaderSubscriptionMessage.CommittedEventDistributed committedEvent Returns Type Description CheckpointTag Overrides PositionTagger.MakeCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.CommittedEventDistributed) MakeCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.EventReaderPartitionDeleted) Declaration public override CheckpointTag MakeCheckpointTag(CheckpointTag previous, ReaderSubscriptionMessage.EventReaderPartitionDeleted partitionDeleted) Parameters Type Name CheckpointTag previous ReaderSubscriptionMessage.EventReaderPartitionDeleted partitionDeleted Returns Type Description CheckpointTag Overrides PositionTagger.MakeCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.EventReaderPartitionDeleted) MakeCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.EventReaderPartitionEof) Declaration public override CheckpointTag MakeCheckpointTag(CheckpointTag previous, ReaderSubscriptionMessage.EventReaderPartitionEof partitionEof) Parameters Type Name CheckpointTag previous ReaderSubscriptionMessage.EventReaderPartitionEof partitionEof Returns Type Description CheckpointTag Overrides PositionTagger.MakeCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.EventReaderPartitionEof) MakeZeroCheckpointTag() Declaration public override CheckpointTag MakeZeroCheckpointTag() Returns Type Description CheckpointTag Overrides PositionTagger.MakeZeroCheckpointTag() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.PreTaggedPositionTagger.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.PreTaggedPositionTagger.html",
    "title": "Class PreTaggedPositionTagger | Event Store",
    "keywords": "Class PreTaggedPositionTagger Inheritance System.Object PositionTagger PreTaggedPositionTagger Inherited Members PositionTagger.Phase System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class PreTaggedPositionTagger : PositionTagger Constructors PreTaggedPositionTagger(Int32, CheckpointTag) Declaration public PreTaggedPositionTagger(int phase, CheckpointTag zeroCheckpointTag) Parameters Type Name System.Int32 phase CheckpointTag zeroCheckpointTag Methods AdjustTag(CheckpointTag) Declaration public override CheckpointTag AdjustTag(CheckpointTag tag) Parameters Type Name CheckpointTag tag Returns Type Description CheckpointTag Overrides PositionTagger.AdjustTag(CheckpointTag) IsCompatible(CheckpointTag) Declaration public override bool IsCompatible(CheckpointTag checkpointTag) Parameters Type Name CheckpointTag checkpointTag Returns Type Description System.Boolean Overrides PositionTagger.IsCompatible(CheckpointTag) IsMessageAfterCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.CommittedEventDistributed) Declaration public override bool IsMessageAfterCheckpointTag(CheckpointTag previous, ReaderSubscriptionMessage.CommittedEventDistributed committedEvent) Parameters Type Name CheckpointTag previous ReaderSubscriptionMessage.CommittedEventDistributed committedEvent Returns Type Description System.Boolean Overrides PositionTagger.IsMessageAfterCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.CommittedEventDistributed) MakeCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.CommittedEventDistributed) Declaration public override CheckpointTag MakeCheckpointTag(CheckpointTag previous, ReaderSubscriptionMessage.CommittedEventDistributed committedEvent) Parameters Type Name CheckpointTag previous ReaderSubscriptionMessage.CommittedEventDistributed committedEvent Returns Type Description CheckpointTag Overrides PositionTagger.MakeCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.CommittedEventDistributed) MakeCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.EventReaderPartitionDeleted) Declaration public override CheckpointTag MakeCheckpointTag(CheckpointTag previous, ReaderSubscriptionMessage.EventReaderPartitionDeleted partitionDeleted) Parameters Type Name CheckpointTag previous ReaderSubscriptionMessage.EventReaderPartitionDeleted partitionDeleted Returns Type Description CheckpointTag Overrides PositionTagger.MakeCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.EventReaderPartitionDeleted) MakeCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.EventReaderPartitionEof) Declaration public override CheckpointTag MakeCheckpointTag(CheckpointTag previous, ReaderSubscriptionMessage.EventReaderPartitionEof partitionEof) Parameters Type Name CheckpointTag previous ReaderSubscriptionMessage.EventReaderPartitionEof partitionEof Returns Type Description CheckpointTag Overrides PositionTagger.MakeCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.EventReaderPartitionEof) MakeZeroCheckpointTag() Declaration public override CheckpointTag MakeZeroCheckpointTag() Returns Type Description CheckpointTag Overrides PositionTagger.MakeZeroCheckpointTag() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.PositionTracker.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.PositionTracker.html",
    "title": "Class PositionTracker | Event Store",
    "keywords": "Class PositionTracker Inheritance System.Object PositionTracker Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class PositionTracker Constructors PositionTracker(PositionTagger) Declaration public PositionTracker(PositionTagger positionTagger) Parameters Type Name PositionTagger positionTagger Properties LastTag Declaration public CheckpointTag LastTag { get; } Property Value Type CheckpointTag Methods Initialize() Declaration public void Initialize() UpdateByCheckpointTagForward(CheckpointTag) Declaration public void UpdateByCheckpointTagForward(CheckpointTag newTag) Parameters Type Name CheckpointTag newTag UpdateByCheckpointTagInitial(CheckpointTag) Declaration public void UpdateByCheckpointTagInitial(CheckpointTag checkpointTag) Parameters Type Name CheckpointTag checkpointTag Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.PositionTagger.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.PositionTagger.html",
    "title": "Class PositionTagger | Event Store",
    "keywords": "Class PositionTagger Inheritance System.Object PositionTagger CatalogStreamPositionTagger EventByTypeIndexPositionTagger MultiStreamPositionTagger PhasePositionTagger PreparePositionTagger PreTaggedPositionTagger StreamPositionTagger TransactionFilePositionTagger Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public abstract class PositionTagger Constructors PositionTagger(Int32) Declaration public PositionTagger(int phase) Parameters Type Name System.Int32 phase Fields Phase Declaration public readonly int Phase Field Value Type System.Int32 Methods AdjustTag(CheckpointTag) Declaration public abstract CheckpointTag AdjustTag(CheckpointTag tag) Parameters Type Name CheckpointTag tag Returns Type Description CheckpointTag IsCompatible(CheckpointTag) Declaration public abstract bool IsCompatible(CheckpointTag checkpointTag) Parameters Type Name CheckpointTag checkpointTag Returns Type Description System.Boolean IsMessageAfterCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.CommittedEventDistributed) Declaration public abstract bool IsMessageAfterCheckpointTag(CheckpointTag previous, ReaderSubscriptionMessage.CommittedEventDistributed committedEvent) Parameters Type Name CheckpointTag previous ReaderSubscriptionMessage.CommittedEventDistributed committedEvent Returns Type Description System.Boolean MakeCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.CommittedEventDistributed) Declaration public abstract CheckpointTag MakeCheckpointTag(CheckpointTag previous, ReaderSubscriptionMessage.CommittedEventDistributed committedEvent) Parameters Type Name CheckpointTag previous ReaderSubscriptionMessage.CommittedEventDistributed committedEvent Returns Type Description CheckpointTag MakeCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.EventReaderPartitionDeleted) Declaration public abstract CheckpointTag MakeCheckpointTag(CheckpointTag previous, ReaderSubscriptionMessage.EventReaderPartitionDeleted partitionDeleted) Parameters Type Name CheckpointTag previous ReaderSubscriptionMessage.EventReaderPartitionDeleted partitionDeleted Returns Type Description CheckpointTag MakeCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.EventReaderPartitionEof) Declaration public abstract CheckpointTag MakeCheckpointTag(CheckpointTag previous, ReaderSubscriptionMessage.EventReaderPartitionEof partitionEof) Parameters Type Name CheckpointTag previous ReaderSubscriptionMessage.EventReaderPartitionEof partitionEof Returns Type Description CheckpointTag MakeZeroCheckpointTag() Declaration public abstract CheckpointTag MakeZeroCheckpointTag() Returns Type Description CheckpointTag Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.PhaseState.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.PhaseState.html",
    "title": "Enum PhaseState | Event Store",
    "keywords": "Enum PhaseState Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public enum PhaseState Fields Name Description Running Starting Stopped Unknown Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<PhaseState>() ProtobufExtensions.Serialize<PhaseState>() ProtobufExtensions.SerializeToArray<PhaseState>()"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.html",
    "title": "Namespace EventStore.Projections.Core.Messages | Event Store",
    "keywords": "Namespace EventStore.Projections.Core.Messages Classes CoreProjectionCheckpointWriterMessage CoreProjectionCheckpointWriterMessage.CheckpointWritten CoreProjectionCheckpointWriterMessage.RestartRequested CoreProjectionManagementControlMessage CoreProjectionManagementMessage CoreProjectionManagementMessage.CreateAndPrepare CoreProjectionManagementMessage.CreateAndPrepareSlave CoreProjectionManagementMessage.CreatePrepared CoreProjectionManagementMessage.Dispose CoreProjectionManagementMessage.GetResult CoreProjectionManagementMessage.GetState CoreProjectionManagementMessage.Kill CoreProjectionManagementMessage.LoadStopped CoreProjectionManagementMessage.SlaveProjectionReaderAssigned CoreProjectionManagementMessage.Start CoreProjectionManagementMessage.Stop CoreProjectionManagementMessageBase CoreProjectionStatusMessage CoreProjectionStatusMessage.CoreProjectionStatusMessageBase CoreProjectionStatusMessage.DataReportBase CoreProjectionStatusMessage.Faulted CoreProjectionStatusMessage.Prepared CoreProjectionStatusMessage.ProjectionWorkerStarted CoreProjectionStatusMessage.ResultReport CoreProjectionStatusMessage.Started CoreProjectionStatusMessage.StateReport CoreProjectionStatusMessage.StatisticsReport CoreProjectionStatusMessage.Stopped EventReaderSubscriptionMessage EventReaderSubscriptionMessage.CheckpointSuggested A CheckpointSuggested message is sent to core projection to allow bookmarking a position that can be used to restore the projection processing (typically an event at this position does not satisfy projection filter) EventReaderSubscriptionMessage.CommittedEventReceived EventReaderSubscriptionMessage.EofReached EventReaderSubscriptionMessage.Failed EventReaderSubscriptionMessage.NotAuthorized EventReaderSubscriptionMessage.PartitionDeleted NOTEL the PartitionDeleted may appear out-of-order and is not guaranteed to appear at the same sequence position in a recovery EventReaderSubscriptionMessage.PartitionEofReached EventReaderSubscriptionMessage.PartitionMeasured EventReaderSubscriptionMessage.ProgressChanged EventReaderSubscriptionMessage.ReaderAssignedReader EventReaderSubscriptionMessage.SubscriptionStarted EventReaderSubscriptionMessageBase ProjectionCoreServiceMessage ProjectionCoreServiceMessage.Connected ProjectionCoreServiceMessage.CoreTick ProjectionCoreServiceMessage.StartCore ProjectionCoreServiceMessage.StopCore ProjectionCoreServiceMessage.SubComponentStarted ProjectionCoreServiceMessage.SubComponentStopped ProjectionManagementMessage ProjectionManagementMessage.Command ProjectionManagementMessage.Command.Abort ProjectionManagementMessage.Command.ControlMessage ProjectionManagementMessage.Command.Delete ProjectionManagementMessage.Command.Disable ProjectionManagementMessage.Command.Enable ProjectionManagementMessage.Command.GetConfig ProjectionManagementMessage.Command.GetQuery ProjectionManagementMessage.Command.GetResult ProjectionManagementMessage.Command.GetState ProjectionManagementMessage.Command.GetStatistics ProjectionManagementMessage.Command.Post ProjectionManagementMessage.Command.Reset ProjectionManagementMessage.Command.SetRunAs ProjectionManagementMessage.Command.StartSlaveProjections ProjectionManagementMessage.Command.UpdateConfig ProjectionManagementMessage.Command.UpdateQuery ProjectionManagementMessage.Conflict ProjectionManagementMessage.Internal ProjectionManagementMessage.Internal.CleanupExpired ProjectionManagementMessage.Internal.Deleted ProjectionManagementMessage.Internal.ReadTimeout ProjectionManagementMessage.Internal.RegularTimeout ProjectionManagementMessage.NotAuthorized ProjectionManagementMessage.NotFound ProjectionManagementMessage.OperationFailed ProjectionManagementMessage.ProjectionConfig ProjectionManagementMessage.ProjectionDataBase ProjectionManagementMessage.ProjectionQuery ProjectionManagementMessage.ProjectionResult ProjectionManagementMessage.ProjectionState ProjectionManagementMessage.ReaderReady ProjectionManagementMessage.RegisterSystemProjection ProjectionManagementMessage.RequestSystemProjections ProjectionManagementMessage.RunAs ProjectionManagementMessage.SlaveProjectionsStarted ProjectionManagementMessage.Starting ProjectionManagementMessage.Statistics ProjectionManagementMessage.Updated QuerySourcesDefinition QuerySourcesDefinitionOptions QuerySourcesExtensions ReaderCoreServiceMessage ReaderCoreServiceMessage.ReaderTick ReaderCoreServiceMessage.StartReader ReaderCoreServiceMessage.StopReader ReaderSubscriptionManagement ReaderSubscriptionManagement.CompleteSpooledStreamReading ReaderSubscriptionManagement.Pause ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage ReaderSubscriptionManagement.Resume ReaderSubscriptionManagement.SpoolStreamReading ReaderSubscriptionManagement.SpoolStreamReadingCore ReaderSubscriptionManagement.Subscribe ReaderSubscriptionManagement.Unsubscribe ReaderSubscriptionMessage ReaderSubscriptionMessage.CommittedEventDistributed ReaderSubscriptionMessage.EventReaderEof ReaderSubscriptionMessage.EventReaderIdle ReaderSubscriptionMessage.EventReaderNotAuthorized ReaderSubscriptionMessage.EventReaderPartitionDeleted ReaderSubscriptionMessage.EventReaderPartitionEof ReaderSubscriptionMessage.EventReaderPartitionMeasured ReaderSubscriptionMessage.EventReaderStarting ReaderSubscriptionMessage.Faulted ReaderSubscriptionMessage.SubscriptionMessage SlaveProjectionCommunicationChannel SlaveProjectionCommunicationChannels SlaveProjectionDefinitions SlaveProjectionDefinitions.Definition Interfaces ICoreProjection IEmittedStreamContainer IProjectionCheckpointManager IQuerySources Enums ProjectionManagementMessage.Command.SetRunAs.SetRemove SlaveProjectionDefinitions.SlaveProjectionRequestedNumber"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.SlaveProjectionDefinitions.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.SlaveProjectionDefinitions.html",
    "title": "Class SlaveProjectionDefinitions | Event Store",
    "keywords": "Class SlaveProjectionDefinitions Inheritance System.Object SlaveProjectionDefinitions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public sealed class SlaveProjectionDefinitions Constructors SlaveProjectionDefinitions(SlaveProjectionDefinitions.Definition[]) Declaration public SlaveProjectionDefinitions(params SlaveProjectionDefinitions.Definition[] definitions) Parameters Type Name SlaveProjectionDefinitions.Definition [] definitions Fields Definitions Declaration public SlaveProjectionDefinitions.Definition[] Definitions Field Value Type SlaveProjectionDefinitions.Definition [] Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.SlaveProjectionDefinitions.SlaveProjectionRequestedNumber.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.SlaveProjectionDefinitions.SlaveProjectionRequestedNumber.html",
    "title": "Enum SlaveProjectionDefinitions.SlaveProjectionRequestedNumber | Event Store",
    "keywords": "Enum SlaveProjectionDefinitions.SlaveProjectionRequestedNumber Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public enum SlaveProjectionRequestedNumber Fields Name Description One OnePerNode OnePerThread Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<SlaveProjectionDefinitions.SlaveProjectionRequestedNumber>() ProtobufExtensions.Serialize<SlaveProjectionDefinitions.SlaveProjectionRequestedNumber>() ProtobufExtensions.SerializeToArray<SlaveProjectionDefinitions.SlaveProjectionRequestedNumber>()"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.SlaveProjectionDefinitions.Definition.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.SlaveProjectionDefinitions.Definition.html",
    "title": "Class SlaveProjectionDefinitions.Definition | Event Store",
    "keywords": "Class SlaveProjectionDefinitions.Definition Inheritance System.Object SlaveProjectionDefinitions.Definition Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class Definition Constructors Definition(String, String, String, SlaveProjectionDefinitions.SlaveProjectionRequestedNumber, ProjectionMode, Boolean, Boolean, Boolean, Boolean, SerializedRunAs) Declaration public Definition(string name, string handlerType, string query, SlaveProjectionDefinitions.SlaveProjectionRequestedNumber requestedNumber, ProjectionMode mode, bool emitEnabled, bool checkpointsEnabled, bool enableRunAs, bool trackEmittedStreams, SerializedRunAs runAs1) Parameters Type Name System.String name System.String handlerType System.String query SlaveProjectionDefinitions.SlaveProjectionRequestedNumber requestedNumber ProjectionMode mode System.Boolean emitEnabled System.Boolean checkpointsEnabled System.Boolean enableRunAs System.Boolean trackEmittedStreams SerializedRunAs runAs1 Fields CheckpointsEnabled Declaration public bool CheckpointsEnabled Field Value Type System.Boolean EmitEnabled Declaration public bool EmitEnabled Field Value Type System.Boolean EnableRunAs Declaration public bool EnableRunAs Field Value Type System.Boolean HandlerType Declaration public string HandlerType Field Value Type System.String Mode Declaration public ProjectionMode Mode Field Value Type ProjectionMode Name Declaration public string Name Field Value Type System.String Query Declaration public string Query Field Value Type System.String RequestedNumber Declaration public SlaveProjectionDefinitions.SlaveProjectionRequestedNumber RequestedNumber Field Value Type SlaveProjectionDefinitions.SlaveProjectionRequestedNumber RunAs1 Declaration public SerializedRunAs RunAs1 Field Value Type SerializedRunAs TrackEmittedStreams Declaration public bool TrackEmittedStreams Field Value Type System.Boolean Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannels.html",
    "title": "Class SlaveProjectionCommunicationChannels | Event Store",
    "keywords": "Class SlaveProjectionCommunicationChannels Inheritance System.Object SlaveProjectionCommunicationChannels Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public sealed class SlaveProjectionCommunicationChannels Constructors SlaveProjectionCommunicationChannels(Dictionary<String, SlaveProjectionCommunicationChannel[]>) Declaration public SlaveProjectionCommunicationChannels(Dictionary<string, SlaveProjectionCommunicationChannel[]> channels) Parameters Type Name System.Collections.Generic.Dictionary < System.String , SlaveProjectionCommunicationChannel []> channels Properties Channels Declaration public Dictionary<string, SlaveProjectionCommunicationChannel[]> Channels { get; } Property Value Type System.Collections.Generic.Dictionary < System.String , SlaveProjectionCommunicationChannel []> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.SlaveProjectionCommunicationChannel.html",
    "title": "Class SlaveProjectionCommunicationChannel | Event Store",
    "keywords": "Class SlaveProjectionCommunicationChannel Inheritance System.Object SlaveProjectionCommunicationChannel Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public sealed class SlaveProjectionCommunicationChannel Constructors SlaveProjectionCommunicationChannel(String, Guid, Guid) Declaration public SlaveProjectionCommunicationChannel(string managedProjectionName, Guid workerId, Guid subscriptionId) Parameters Type Name System.String managedProjectionName System.Guid workerId System.Guid subscriptionId Properties ManagedProjectionName Declaration public string ManagedProjectionName { get; } Property Value Type System.String SubscriptionId Declaration public Guid SubscriptionId { get; } Property Value Type System.Guid WorkerId Declaration public Guid WorkerId { get; } Property Value Type System.Guid Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.TcpMessage.NotAuthenticated.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.TcpMessage.NotAuthenticated.html",
    "title": "Class TcpMessage.NotAuthenticated | Event Store",
    "keywords": "Class TcpMessage.NotAuthenticated Inheritance System.Object Message TcpMessage.NotAuthenticated Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class NotAuthenticated : Message Constructors NotAuthenticated(Guid, String) Declaration public NotAuthenticated(Guid correlationId, string reason) Parameters Type Name System.Guid correlationId System.String reason Fields CorrelationId Declaration public readonly Guid CorrelationId Field Value Type System.Guid Reason Declaration public readonly string Reason Field Value Type System.String Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.TcpMessage.HeartbeatTimeout.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.TcpMessage.HeartbeatTimeout.html",
    "title": "Class TcpMessage.HeartbeatTimeout | Event Store",
    "keywords": "Class TcpMessage.HeartbeatTimeout Inheritance System.Object Message TcpMessage.HeartbeatTimeout Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class HeartbeatTimeout : Message Constructors HeartbeatTimeout(Int32) Declaration public HeartbeatTimeout(int messageNumber) Parameters Type Name System.Int32 messageNumber Fields MessageNumber Declaration public readonly int MessageNumber Field Value Type System.Int32 Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.TcpMessage.Heartbeat.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.TcpMessage.Heartbeat.html",
    "title": "Class TcpMessage.Heartbeat | Event Store",
    "keywords": "Class TcpMessage.Heartbeat Inheritance System.Object Message TcpMessage.Heartbeat Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class Heartbeat : Message Constructors Heartbeat(Int32) Declaration public Heartbeat(int messageNumber) Parameters Type Name System.Int32 messageNumber Fields MessageNumber Declaration public readonly int MessageNumber Field Value Type System.Int32 Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.TcpMessage.ConnectionEstablished.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.TcpMessage.ConnectionEstablished.html",
    "title": "Class TcpMessage.ConnectionEstablished | Event Store",
    "keywords": "Class TcpMessage.ConnectionEstablished Inheritance System.Object Message TcpMessage.ConnectionEstablished Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class ConnectionEstablished : Message Constructors ConnectionEstablished(TcpConnectionManager) Declaration public ConnectionEstablished(TcpConnectionManager connection) Parameters Type Name TcpConnectionManager connection Fields Connection Declaration public readonly TcpConnectionManager Connection Field Value Type TcpConnectionManager Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.TcpMessage.ConnectionClosed.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.TcpMessage.ConnectionClosed.html",
    "title": "Class TcpMessage.ConnectionClosed | Event Store",
    "keywords": "Class TcpMessage.ConnectionClosed Inheritance System.Object Message TcpMessage.ConnectionClosed Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class ConnectionClosed : Message Constructors ConnectionClosed(TcpConnectionManager, SocketError) Declaration public ConnectionClosed(TcpConnectionManager connection, SocketError socketError) Parameters Type Name TcpConnectionManager connection System.Net.Sockets.SocketError socketError Fields Connection Declaration public readonly TcpConnectionManager Connection Field Value Type TcpConnectionManager SocketError Declaration public readonly SocketError SocketError Field Value Type System.Net.Sockets.SocketError Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.TcpMessage.Authenticated.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.TcpMessage.Authenticated.html",
    "title": "Class TcpMessage.Authenticated | Event Store",
    "keywords": "Class TcpMessage.Authenticated Inheritance System.Object Message TcpMessage.Authenticated Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class Authenticated : Message Constructors Authenticated(Guid) Declaration public Authenticated(Guid correlationId) Parameters Type Name System.Guid correlationId Fields CorrelationId Declaration public readonly Guid CorrelationId Field Value Type System.Guid Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionStreamEventAppeared.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionStreamEventAppeared.html",
    "title": "Class TcpClientMessageDto.PersistentSubscriptionStreamEventAppeared | Event Store",
    "keywords": "Class TcpClientMessageDto.PersistentSubscriptionStreamEventAppeared Inheritance System.Object TcpClientMessageDto.PersistentSubscriptionStreamEventAppeared Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax [Serializable] [ProtoContract(Name = \"PersistentSubscriptionStreamEventAppeared\")] public class PersistentSubscriptionStreamEventAppeared Constructors PersistentSubscriptionStreamEventAppeared(TcpClientMessageDto.ResolvedIndexedEvent, Nullable<Int32>) Declaration public PersistentSubscriptionStreamEventAppeared(TcpClientMessageDto.ResolvedIndexedEvent event, int? retryCount) Parameters Type Name TcpClientMessageDto.ResolvedIndexedEvent event System.Nullable < System.Int32 > retryCount Fields Event Declaration [ProtoMember(1, IsRequired = true, Name = \"event\", DataFormat = DataFormat.Default)] public readonly TcpClientMessageDto.ResolvedIndexedEvent Event Field Value Type TcpClientMessageDto.ResolvedIndexedEvent RetryCount Declaration [ProtoMember(2, IsRequired = false, Name = \"retryCount\", DataFormat = DataFormat.TwosComplement)] public readonly int? RetryCount Field Value Type System.Nullable < System.Int32 > Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionNakEvents.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionNakEvents.html",
    "title": "Class TcpClientMessageDto.PersistentSubscriptionNakEvents | Event Store",
    "keywords": "Class TcpClientMessageDto.PersistentSubscriptionNakEvents Inheritance System.Object TcpClientMessageDto.PersistentSubscriptionNakEvents Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax [Serializable] [ProtoContract(Name = \"PersistentSubscriptionNakEvents\")] public class PersistentSubscriptionNakEvents Constructors PersistentSubscriptionNakEvents(String, Byte[][], String, TcpClientMessageDto.PersistentSubscriptionNakEvents.NakAction) Declaration public PersistentSubscriptionNakEvents(string subscriptionId, byte[][] processedEventIds, string message, TcpClientMessageDto.PersistentSubscriptionNakEvents.NakAction action) Parameters Type Name System.String subscriptionId System.Byte [][] processedEventIds System.String message TcpClientMessageDto.PersistentSubscriptionNakEvents.NakAction action Fields Action Declaration [ProtoMember(4, IsRequired = true, Name = \"action\", DataFormat = DataFormat.TwosComplement)] public readonly TcpClientMessageDto.PersistentSubscriptionNakEvents.NakAction Action Field Value Type TcpClientMessageDto.PersistentSubscriptionNakEvents.NakAction Message Declaration [ProtoMember(3, IsRequired = false, Name = \"message\", DataFormat = DataFormat.Default)] public readonly string Message Field Value Type System.String ProcessedEventIds Declaration [ProtoMember(2, Name = \"processed_event_ids\", DataFormat = DataFormat.Default)] public readonly byte[][] ProcessedEventIds Field Value Type System.Byte [][] SubscriptionId Declaration [ProtoMember(1, IsRequired = true, Name = \"subscription_id\", DataFormat = DataFormat.Default)] public readonly string SubscriptionId Field Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionNakEvents.NakAction.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionNakEvents.NakAction.html",
    "title": "Enum TcpClientMessageDto.PersistentSubscriptionNakEvents.NakAction | Event Store",
    "keywords": "Enum TcpClientMessageDto.PersistentSubscriptionNakEvents.NakAction Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax [ProtoContract(Name = \"NakAction\")] public enum NakAction Fields Name Description Park Retry Skip Stop Unknown Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<TcpClientMessageDto.PersistentSubscriptionNakEvents.NakAction>() ProtobufExtensions.Serialize<TcpClientMessageDto.PersistentSubscriptionNakEvents.NakAction>() ProtobufExtensions.SerializeToArray<TcpClientMessageDto.PersistentSubscriptionNakEvents.NakAction>()"
  },
  "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionConfirmation.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionConfirmation.html",
    "title": "Class TcpClientMessageDto.PersistentSubscriptionConfirmation | Event Store",
    "keywords": "Class TcpClientMessageDto.PersistentSubscriptionConfirmation Inheritance System.Object TcpClientMessageDto.PersistentSubscriptionConfirmation Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax [Serializable] [ProtoContract(Name = \"PersistentSubscriptionConfirmation\")] public class PersistentSubscriptionConfirmation Constructors PersistentSubscriptionConfirmation(Int64, String, Nullable<Int64>) Declaration public PersistentSubscriptionConfirmation(long lastCommitPosition, string subscriptionId, long? lastEventNumber) Parameters Type Name System.Int64 lastCommitPosition System.String subscriptionId System.Nullable < System.Int64 > lastEventNumber Fields LastCommitPosition Declaration [ProtoMember(1, IsRequired = true, Name = \"last_commit_position\", DataFormat = DataFormat.TwosComplement)] public readonly long LastCommitPosition Field Value Type System.Int64 LastEventNumber Declaration [ProtoMember(3, IsRequired = false, Name = \"last_event_number\", DataFormat = DataFormat.TwosComplement)] public readonly long? LastEventNumber Field Value Type System.Nullable < System.Int64 > SubscriptionId Declaration [ProtoMember(2, IsRequired = true, Name = \"subscription_id\", DataFormat = DataFormat.Default)] public readonly string SubscriptionId Field Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionStreamReader.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionStreamReader.html",
    "title": "Class PersistentSubscriptionStreamReader | Event Store",
    "keywords": "Class PersistentSubscriptionStreamReader Inheritance System.Object PersistentSubscriptionStreamReader Implements IPersistentSubscriptionStreamReader Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.PersistentSubscription Assembly : EventStore.Core.dll Syntax public class PersistentSubscriptionStreamReader : IPersistentSubscriptionStreamReader Constructors PersistentSubscriptionStreamReader(IODispatcher, Int32) Declaration public PersistentSubscriptionStreamReader(IODispatcher ioDispatcher, int maxPullBatchSize) Parameters Type Name IODispatcher ioDispatcher System.Int32 maxPullBatchSize Fields MaxPullBatchSize Declaration public const int MaxPullBatchSize = 500 Field Value Type System.Int32 Methods BeginReadEvents(String, Int64, Int32, Int32, Boolean, Action<ResolvedEvent[], Int64, Boolean>) Declaration public void BeginReadEvents(string stream, long startEventNumber, int countToLoad, int batchSize, bool resolveLinkTos, Action<ResolvedEvent[], long, bool> onEventsFound) Parameters Type Name System.String stream System.Int64 startEventNumber System.Int32 countToLoad System.Int32 batchSize System.Boolean resolveLinkTos System.Action < ResolvedEvent [], System.Int64 , System.Boolean > onEventsFound Implements IPersistentSubscriptionStreamReader Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionStats.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionStats.html",
    "title": "Class PersistentSubscriptionStats | Event Store",
    "keywords": "Class PersistentSubscriptionStats Inheritance System.Object PersistentSubscriptionStats Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.PersistentSubscription Assembly : EventStore.Core.dll Syntax public class PersistentSubscriptionStats Constructors PersistentSubscriptionStats(PersistentSubscription, PersistentSubscriptionParams, Stopwatch) Declaration public PersistentSubscriptionStats(PersistentSubscription parent, PersistentSubscriptionParams settings, Stopwatch totalTimeWatch) Parameters Type Name PersistentSubscription parent PersistentSubscriptionParams settings System.Diagnostics.Stopwatch totalTimeWatch Methods GetStatistics() Declaration public MonitoringMessage.SubscriptionInfo GetStatistics() Returns Type Description MonitoringMessage.SubscriptionInfo IncrementProcessed() Declaration public void IncrementProcessed() SetLastCheckPoint(Int64) Declaration public void SetLastCheckPoint(long lastEventNumber) Parameters Type Name System.Int64 lastEventNumber SetLastKnownEventNumber(Int64) Declaration public void SetLastKnownEventNumber(long knownEventNumber) Parameters Type Name System.Int64 knownEventNumber Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionState.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionState.html",
    "title": "Enum PersistentSubscriptionState | Event Store",
    "keywords": "Enum PersistentSubscriptionState Namespace : EventStore.Core.Services.PersistentSubscription Assembly : EventStore.Core.dll Syntax [Flags] public enum PersistentSubscriptionState Fields Name Description Behind Live NotReady OutstandingPageRequest ReplayingParkedMessages Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<PersistentSubscriptionState>() ProtobufExtensions.Serialize<PersistentSubscriptionState>() ProtobufExtensions.SerializeToArray<PersistentSubscriptionState>()"
  },
  "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionService.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.PersistentSubscriptionService.html",
    "title": "Class PersistentSubscriptionService | Event Store",
    "keywords": "Class PersistentSubscriptionService Inheritance System.Object PersistentSubscriptionService Implements IHandle < SystemMessage.BecomeShuttingDown > IHandle < TcpMessage.ConnectionClosed > IHandle < SystemMessage.BecomeMaster > IHandle < SubscriptionMessage.PersistentSubscriptionTimerTick > IHandle < ClientMessage.ReplayAllParkedMessages > IHandle < ClientMessage.ReplayParkedMessage > IHandle < SystemMessage.StateChangeMessage > IHandle < ClientMessage.ConnectToPersistentSubscription > IHandle < StorageMessage.EventCommitted > IHandle < ClientMessage.UnsubscribeFromStream > IHandle < ClientMessage.PersistentSubscriptionAckEvents > IHandle < ClientMessage.PersistentSubscriptionNackEvents > IHandle < ClientMessage.CreatePersistentSubscription > IHandle < ClientMessage.UpdatePersistentSubscription > IHandle < ClientMessage.DeletePersistentSubscription > IHandle < ClientMessage.ReadNextNPersistentMessages > IHandle < MonitoringMessage.GetAllPersistentSubscriptionStats > IHandle < MonitoringMessage.GetPersistentSubscriptionStats > IHandle < MonitoringMessage.GetStreamPersistentSubscriptionStats > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.PersistentSubscription Assembly : EventStore.Core.dll Syntax public class PersistentSubscriptionService : IHandle<SystemMessage.BecomeShuttingDown>, IHandle<TcpMessage.ConnectionClosed>, IHandle<SystemMessage.BecomeMaster>, IHandle<SubscriptionMessage.PersistentSubscriptionTimerTick>, IHandle<ClientMessage.ReplayAllParkedMessages>, IHandle<ClientMessage.ReplayParkedMessage>, IHandle<SystemMessage.StateChangeMessage>, IHandle<ClientMessage.ConnectToPersistentSubscription>, IHandle<StorageMessage.EventCommitted>, IHandle<ClientMessage.UnsubscribeFromStream>, IHandle<ClientMessage.PersistentSubscriptionAckEvents>, IHandle<ClientMessage.PersistentSubscriptionNackEvents>, IHandle<ClientMessage.CreatePersistentSubscription>, IHandle<ClientMessage.UpdatePersistentSubscription>, IHandle<ClientMessage.DeletePersistentSubscription>, IHandle<ClientMessage.ReadNextNPersistentMessages>, IHandle<MonitoringMessage.GetAllPersistentSubscriptionStats>, IHandle<MonitoringMessage.GetPersistentSubscriptionStats>, IHandle<MonitoringMessage.GetStreamPersistentSubscriptionStats> Methods Handle(ClientMessage.ConnectToPersistentSubscription) Declaration public void Handle(ClientMessage.ConnectToPersistentSubscription message) Parameters Type Name ClientMessage.ConnectToPersistentSubscription message Handle(ClientMessage.CreatePersistentSubscription) Declaration public void Handle(ClientMessage.CreatePersistentSubscription message) Parameters Type Name ClientMessage.CreatePersistentSubscription message Handle(ClientMessage.DeletePersistentSubscription) Declaration public void Handle(ClientMessage.DeletePersistentSubscription message) Parameters Type Name ClientMessage.DeletePersistentSubscription message Handle(ClientMessage.PersistentSubscriptionAckEvents) Declaration public void Handle(ClientMessage.PersistentSubscriptionAckEvents message) Parameters Type Name ClientMessage.PersistentSubscriptionAckEvents message Handle(ClientMessage.PersistentSubscriptionNackEvents) Declaration public void Handle(ClientMessage.PersistentSubscriptionNackEvents message) Parameters Type Name ClientMessage.PersistentSubscriptionNackEvents message Handle(ClientMessage.ReadNextNPersistentMessages) Declaration public void Handle(ClientMessage.ReadNextNPersistentMessages message) Parameters Type Name ClientMessage.ReadNextNPersistentMessages message Handle(ClientMessage.ReplayAllParkedMessages) Declaration public void Handle(ClientMessage.ReplayAllParkedMessages message) Parameters Type Name ClientMessage.ReplayAllParkedMessages message Handle(ClientMessage.ReplayParkedMessage) Declaration public void Handle(ClientMessage.ReplayParkedMessage message) Parameters Type Name ClientMessage.ReplayParkedMessage message Handle(ClientMessage.UnsubscribeFromStream) Declaration public void Handle(ClientMessage.UnsubscribeFromStream message) Parameters Type Name ClientMessage.UnsubscribeFromStream message Handle(ClientMessage.UpdatePersistentSubscription) Declaration public void Handle(ClientMessage.UpdatePersistentSubscription message) Parameters Type Name ClientMessage.UpdatePersistentSubscription message Handle(MonitoringMessage.GetAllPersistentSubscriptionStats) Declaration public void Handle(MonitoringMessage.GetAllPersistentSubscriptionStats message) Parameters Type Name MonitoringMessage.GetAllPersistentSubscriptionStats message Handle(MonitoringMessage.GetPersistentSubscriptionStats) Declaration public void Handle(MonitoringMessage.GetPersistentSubscriptionStats message) Parameters Type Name MonitoringMessage.GetPersistentSubscriptionStats message Handle(MonitoringMessage.GetStreamPersistentSubscriptionStats) Declaration public void Handle(MonitoringMessage.GetStreamPersistentSubscriptionStats message) Parameters Type Name MonitoringMessage.GetStreamPersistentSubscriptionStats message Handle(StorageMessage.EventCommitted) Declaration public void Handle(StorageMessage.EventCommitted message) Parameters Type Name StorageMessage.EventCommitted message Handle(SubscriptionMessage.PersistentSubscriptionTimerTick) Declaration public void Handle(SubscriptionMessage.PersistentSubscriptionTimerTick message) Parameters Type Name SubscriptionMessage.PersistentSubscriptionTimerTick message Handle(SystemMessage.BecomeMaster) Declaration public void Handle(SystemMessage.BecomeMaster message) Parameters Type Name SystemMessage.BecomeMaster message Handle(SystemMessage.BecomeShuttingDown) Declaration public void Handle(SystemMessage.BecomeShuttingDown message) Parameters Type Name SystemMessage.BecomeShuttingDown message Handle(SystemMessage.StateChangeMessage) Declaration public void Handle(SystemMessage.StateChangeMessage message) Parameters Type Name SystemMessage.StateChangeMessage message Handle(TcpMessage.ConnectionClosed) Declaration public void Handle(TcpMessage.ConnectionClosed message) Parameters Type Name TcpMessage.ConnectionClosed message InitToEmpty() Declaration public void InitToEmpty() Implements IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Transport.Http.HttpStatusCode.html": {
    "href": "dotnet-api/code/EventStore.Transport.Http.HttpStatusCode.html",
    "title": "Class HttpStatusCode | Event Store",
    "keywords": "Class HttpStatusCode Inheritance System.Object HttpStatusCode Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Transport.Http Assembly : EventStore.Transport.Http.dll Syntax public static class HttpStatusCode Fields Accepted Declaration public const int Accepted = 202 Field Value Type System.Int32 Ambiguous Declaration public const int Ambiguous = 300 Field Value Type System.Int32 BadGateway Declaration public const int BadGateway = 502 Field Value Type System.Int32 BadRequest Declaration public const int BadRequest = 400 Field Value Type System.Int32 Conflict Declaration public const int Conflict = 409 Field Value Type System.Int32 Continue Declaration public const int Continue = 100 Field Value Type System.Int32 Created Declaration public const int Created = 201 Field Value Type System.Int32 ExpectationFailed Declaration public const int ExpectationFailed = 417 Field Value Type System.Int32 Forbidden Declaration public const int Forbidden = 403 Field Value Type System.Int32 Found Declaration public const int Found = 302 Field Value Type System.Int32 GatewayTimeout Declaration public const int GatewayTimeout = 504 Field Value Type System.Int32 Gone Declaration public const int Gone = 410 Field Value Type System.Int32 HttpVersionNotSupported Declaration public const int HttpVersionNotSupported = 505 Field Value Type System.Int32 InternalServerError Declaration public const int InternalServerError = 500 Field Value Type System.Int32 LengthRequired Declaration public const int LengthRequired = 411 Field Value Type System.Int32 MethodNotAllowed Declaration public const int MethodNotAllowed = 405 Field Value Type System.Int32 Moved Declaration public const int Moved = 301 Field Value Type System.Int32 MovedPermanently Declaration public const int MovedPermanently = 301 Field Value Type System.Int32 MultipleChoices Declaration public const int MultipleChoices = 300 Field Value Type System.Int32 NoContent Declaration public const int NoContent = 204 Field Value Type System.Int32 NonAuthoritativeInformation Declaration public const int NonAuthoritativeInformation = 203 Field Value Type System.Int32 NotAcceptable Declaration public const int NotAcceptable = 406 Field Value Type System.Int32 NotFound Declaration public const int NotFound = 404 Field Value Type System.Int32 NotImplemented Declaration public const int NotImplemented = 501 Field Value Type System.Int32 NotModified Declaration public const int NotModified = 304 Field Value Type System.Int32 OK Declaration public const int OK = 200 Field Value Type System.Int32 PartialContent Declaration public const int PartialContent = 206 Field Value Type System.Int32 PaymentRequired Declaration public const int PaymentRequired = 402 Field Value Type System.Int32 PreconditionFailed Declaration public const int PreconditionFailed = 412 Field Value Type System.Int32 ProxyAuthenticationRequired Declaration public const int ProxyAuthenticationRequired = 407 Field Value Type System.Int32 Redirect Declaration public const int Redirect = 302 Field Value Type System.Int32 RedirectKeepVerb Declaration public const int RedirectKeepVerb = 307 Field Value Type System.Int32 RedirectMethod Declaration public const int RedirectMethod = 303 Field Value Type System.Int32 RequestedRangeNotSatisfiable Declaration public const int RequestedRangeNotSatisfiable = 416 Field Value Type System.Int32 RequestEntityTooLarge Declaration public const int RequestEntityTooLarge = 413 Field Value Type System.Int32 RequestTimeout Declaration public const int RequestTimeout = 408 Field Value Type System.Int32 RequestUriTooLong Declaration public const int RequestUriTooLong = 414 Field Value Type System.Int32 ResetContent Declaration public const int ResetContent = 205 Field Value Type System.Int32 SeeOther Declaration public const int SeeOther = 303 Field Value Type System.Int32 ServiceUnavailable Declaration public const int ServiceUnavailable = 503 Field Value Type System.Int32 SwitchingProtocols Declaration public const int SwitchingProtocols = 101 Field Value Type System.Int32 TemporaryRedirect Declaration public const int TemporaryRedirect = 307 Field Value Type System.Int32 Unauthorized Declaration public const int Unauthorized = 401 Field Value Type System.Int32 UnsupportedMediaType Declaration public const int UnsupportedMediaType = 415 Field Value Type System.Int32 Unused Declaration public const int Unused = 306 Field Value Type System.Int32 UseProxy Declaration public const int UseProxy = 305 Field Value Type System.Int32"
  },
  "dotnet-api/code/EventStore.Transport.Http.HttpResponse.html": {
    "href": "dotnet-api/code/EventStore.Transport.Http.HttpResponse.html",
    "title": "Class HttpResponse | Event Store",
    "keywords": "Class HttpResponse Inheritance System.Object HttpResponse Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Transport.Http Assembly : EventStore.Transport.Http.dll Syntax public class HttpResponse Constructors HttpResponse(HttpResponseMessage) Declaration public HttpResponse(HttpResponseMessage responseMessage) Parameters Type Name System.Net.Http.HttpResponseMessage responseMessage Properties Body Declaration public string Body { get; } Property Value Type System.String CharacterSet Declaration public string CharacterSet { get; } Property Value Type System.String ContentEncoding Declaration public string ContentEncoding { get; } Property Value Type System.String ContentLength Declaration public long ContentLength { get; } Property Value Type System.Int64 ContentType Declaration public string ContentType { get; } Property Value Type System.String Headers Declaration public HttpResponseHeaders Headers { get; } Property Value Type System.Net.Http.Headers.HttpResponseHeaders HttpStatusCode Declaration public int HttpStatusCode { get; } Property Value Type System.Int32 Method Declaration public string Method { get; } Property Value Type System.String StatusDescription Declaration public string StatusDescription { get; } Property Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Transport.Http.HttpMethod.html": {
    "href": "dotnet-api/code/EventStore.Transport.Http.HttpMethod.html",
    "title": "Class HttpMethod | Event Store",
    "keywords": "Class HttpMethod Inheritance System.Object HttpMethod Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Transport.Http Assembly : EventStore.Transport.Http.dll Syntax public static class HttpMethod Fields Delete Declaration public const string Delete = \"DELETE\" Field Value Type System.String Get Declaration public const string Get = \"GET\" Field Value Type System.String Head Declaration public const string Head = \"HEAD\" Field Value Type System.String Options Declaration public const string Options = \"OPTIONS\" Field Value Type System.String Patch Declaration public const string Patch = \"PATCH\" Field Value Type System.String Post Declaration public const string Post = \"POST\" Field Value Type System.String Put Declaration public const string Put = \"PUT\" Field Value Type System.String"
  },
  "dotnet-api/code/EventStore.Transport.Http.EntityManagement.html": {
    "href": "dotnet-api/code/EventStore.Transport.Http.EntityManagement.html",
    "title": "Namespace EventStore.Transport.Http.EntityManagement | Event Store",
    "keywords": "Namespace EventStore.Transport.Http.EntityManagement Classes HttpEntity HttpEntityManager HttpEntityManagerExtensions"
  },
  "dotnet-api/code/EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.html": {
    "href": "dotnet-api/code/EventStore.Transport.Http.EntityManagement.HttpEntityManagerExtensions.html",
    "title": "Class HttpEntityManagerExtensions | Event Store",
    "keywords": "Class HttpEntityManagerExtensions Inheritance System.Object HttpEntityManagerExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Transport.Http.EntityManagement Assembly : EventStore.Transport.Http.dll Syntax public static class HttpEntityManagerExtensions Methods ContinueReplyTextContent(HttpEntityManager, String, Action<Exception>, Action) Declaration public static void ContinueReplyTextContent(this HttpEntityManager self, string response, Action<Exception> onError, Action completed) Parameters Type Name HttpEntityManager self System.String response System.Action < System.Exception > onError System.Action completed ReadTextRequestAsync(HttpEntityManager, Action<HttpEntityManager, String>, Action<Exception>) Declaration public static void ReadTextRequestAsync(this HttpEntityManager self, Action<HttpEntityManager, string> onSuccess, Action<Exception> onError) Parameters Type Name HttpEntityManager self System.Action < HttpEntityManager , System.String > onSuccess System.Action < System.Exception > onError ReplyContent(HttpEntityManager, Byte[], Int32, String, String, IEnumerable<KeyValuePair<String, String>>, Action<Exception>) Declaration public static void ReplyContent(this HttpEntityManager self, byte[] response, int code, string description, string type, IEnumerable<KeyValuePair<string, string>> headers, Action<Exception> onError) Parameters Type Name HttpEntityManager self System.Byte [] response System.Int32 code System.String description System.String type System.Collections.Generic.IEnumerable < System.Collections.Generic.KeyValuePair < System.String , System.String >> headers System.Action < System.Exception > onError ReplyStatus(HttpEntityManager, Int32, String, Action<Exception>, IEnumerable<KeyValuePair<String, String>>) Declaration public static void ReplyStatus(this HttpEntityManager self, int code, string description, Action<Exception> onError, IEnumerable<KeyValuePair<string, string>> headers = null) Parameters Type Name HttpEntityManager self System.Int32 code System.String description System.Action < System.Exception > onError System.Collections.Generic.IEnumerable < System.Collections.Generic.KeyValuePair < System.String , System.String >> headers ReplyTextContent(HttpEntityManager, String, Int32, String, String, IEnumerable<KeyValuePair<String, String>>, Action<Exception>) Declaration public static void ReplyTextContent(this HttpEntityManager self, string response, int code, string description, string type, IEnumerable<KeyValuePair<string, string>> headers, Action<Exception> onError) Parameters Type Name HttpEntityManager self System.String response System.Int32 code System.String description System.String type System.Collections.Generic.IEnumerable < System.Collections.Generic.KeyValuePair < System.String , System.String >> headers System.Action < System.Exception > onError"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.ReadWrite.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.ReadWrite.html",
    "title": "Enum ReadWrite | Event Store",
    "keywords": "Enum ReadWrite Namespace : EventStore.Projections.Core.Services Assembly : EventStore.Projections.Core.dll Syntax public enum ReadWrite Fields Name Description Read Write Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<ReadWrite>() ProtobufExtensions.Serialize<ReadWrite>() ProtobufExtensions.SerializeToArray<ReadWrite>()"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.PublishSubscribeDispatcher-4.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.PublishSubscribeDispatcher-4.html",
    "title": "Class PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase> | Event Store",
    "keywords": "Class PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase> Inheritance System.Object PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase> ReaderSubscriptionDispatcher SpooledStreamReadingDispatcher Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services Assembly : EventStore.Projections.Core.dll Syntax public class PublishSubscribeDispatcher<TGuid, TSubscribeRequest, TControlMessageBase, TResponseBase> where TSubscribeRequest : Message where TControlMessageBase : Message where TResponseBase : Message Type Parameters Name Description TGuid TSubscribeRequest TControlMessageBase TResponseBase Constructors PublishSubscribeDispatcher(IPublisher, Func<TSubscribeRequest, TGuid>, Func<TResponseBase, TGuid>) Declaration public PublishSubscribeDispatcher(IPublisher publisher, Func<TSubscribeRequest, TGuid> getRequestCorrelationId, Func<TResponseBase, TGuid> getResponseCorrelationId) Parameters Type Name IPublisher publisher System.Func <TSubscribeRequest, TGuid> getRequestCorrelationId System.Func <TResponseBase, TGuid> getResponseCorrelationId Methods Cancel(TGuid) Declaration public void Cancel(TGuid requestId) Parameters Type Name TGuid requestId CancelAll() Declaration public void CancelAll() CreateSubscriber<T>() Declaration public IHandle<T> CreateSubscriber<T>() where T : TResponseBase Returns Type Description IHandle <T> Type Parameters Name Description T Handle<T>(T) Declaration public bool Handle<T>(T message) where T : TResponseBase Parameters Type Name T message Returns Type Description System.Boolean Type Parameters Name Description T Publish(TControlMessageBase) Declaration public void Publish(TControlMessageBase request) Parameters Type Name TControlMessageBase request Publish(IPublisher, TControlMessageBase) Declaration public void Publish(IPublisher publisher, TControlMessageBase request) Parameters Type Name IPublisher publisher TControlMessageBase request PublishSubscribe(TSubscribeRequest, Object) Declaration public TGuid PublishSubscribe(TSubscribeRequest request, object subscriber) Parameters Type Name TSubscribeRequest request System.Object subscriber Returns Type Description TGuid PublishSubscribe(IPublisher, TSubscribeRequest, Object) Declaration public TGuid PublishSubscribe(IPublisher publisher, TSubscribeRequest request, object subscriber) Parameters Type Name IPublisher publisher TSubscribeRequest request System.Object subscriber Returns Type Description TGuid Subscribed(TGuid, Object) Declaration public void Subscribed(TGuid correlationId, object subscriber) Parameters Type Name TGuid correlationId System.Object subscriber Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.ProjectionStatistics.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.ProjectionStatistics.html",
    "title": "Class ProjectionStatistics | Event Store",
    "keywords": "Class ProjectionStatistics Inheritance System.Object ProjectionStatistics Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services Assembly : EventStore.Projections.Core.dll Syntax public class ProjectionStatistics Properties BufferedEvents Declaration public int BufferedEvents { get; set; } Property Value Type System.Int32 CheckpointStatus Declaration public string CheckpointStatus { get; set; } Property Value Type System.String CoreProcessingTime Declaration public long CoreProcessingTime { get; set; } Property Value Type System.Int64 EffectiveName Declaration public string EffectiveName { get; set; } Property Value Type System.String Enabled Declaration public bool Enabled { get; set; } Property Value Type System.Boolean Epoch Declaration public long Epoch { get; set; } Property Value Type System.Int64 EventsProcessedAfterRestart Declaration public int EventsProcessedAfterRestart { get; set; } Property Value Type System.Int32 LastCheckpoint Declaration public string LastCheckpoint { get; set; } Property Value Type System.String MasterStatus Declaration public ManagedProjectionState MasterStatus { get; set; } Property Value Type ManagedProjectionState Mode Declaration public ProjectionMode Mode { get; set; } Property Value Type ProjectionMode Name Declaration public string Name { get; set; } Property Value Type System.String PartitionsCached Declaration public int PartitionsCached { get; set; } Property Value Type System.Int32 Position Declaration public string Position { get; set; } Property Value Type System.String Progress Declaration public float Progress { get; set; } Property Value Type System.Single ProjectionId Declaration public long ProjectionId { get; set; } Property Value Type System.Int64 ReadsInProgress Declaration public int ReadsInProgress { get; set; } Property Value Type System.Int32 ResultStreamName Declaration public string ResultStreamName { get; set; } Property Value Type System.String StateReason Declaration public string StateReason { get; set; } Property Value Type System.String Status Declaration public string Status { get; set; } Property Value Type System.String Version Declaration public long Version { get; set; } Property Value Type System.Int64 WritePendingEventsAfterCheckpoint Declaration public int WritePendingEventsAfterCheckpoint { get; set; } Property Value Type System.Int32 WritePendingEventsBeforeCheckpoint Declaration public int WritePendingEventsBeforeCheckpoint { get; set; } Property Value Type System.Int32 WritesInProgress Declaration public int WritesInProgress { get; set; } Property Value Type System.Int32 Methods Clone() Declaration public ProjectionStatistics Clone() Returns Type Description ProjectionStatistics Equals(ProjectionStatistics) Declaration protected bool Equals(ProjectionStatistics other) Parameters Type Name ProjectionStatistics other Returns Type Description System.Boolean Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.ProjectionStateHandlerTestExtensions.html",
    "title": "Class ProjectionStateHandlerTestExtensions | Event Store",
    "keywords": "Class ProjectionStateHandlerTestExtensions Inheritance System.Object ProjectionStateHandlerTestExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services Assembly : EventStore.Projections.Core.dll Syntax public static class ProjectionStateHandlerTestExtensions Methods GetNativeHandlerName(Type) Declaration public static string GetNativeHandlerName(this Type handlerType) Parameters Type Name System.Type handlerType Returns Type Description System.String ProcessEvent(IProjectionStateHandler, String, CheckpointTag, String, String, String, Guid, Int64, String, String, out String, out EmittedEventEnvelope[], Boolean) Declaration public static bool ProcessEvent(this IProjectionStateHandler self, string partition, CheckpointTag eventPosition, string streamId, string eventType, string category, Guid eventId, long eventSequenceNumber, string metadata, string data, out string state, out EmittedEventEnvelope[] emittedEvents, bool isJson = true) Parameters Type Name IProjectionStateHandler self System.String partition CheckpointTag eventPosition System.String streamId System.String eventType System.String category System.Guid eventId System.Int64 eventSequenceNumber System.String metadata System.String data System.String state EmittedEventEnvelope [] emittedEvents System.Boolean isJson Returns Type Description System.Boolean ProcessEvent(IProjectionStateHandler, String, CheckpointTag, String, String, String, Guid, Int64, String, String, out String, out String, out EmittedEventEnvelope[], Boolean) Declaration public static bool ProcessEvent(this IProjectionStateHandler self, string partition, CheckpointTag eventPosition, string streamId, string eventType, string category, Guid eventId, long eventSequenceNumber, string metadata, string data, out string state, out string sharedState, out EmittedEventEnvelope[] emittedEvents, bool isJson = true) Parameters Type Name IProjectionStateHandler self System.String partition CheckpointTag eventPosition System.String streamId System.String eventType System.String category System.Guid eventId System.Int64 eventSequenceNumber System.String metadata System.String data System.String state System.String sharedState EmittedEventEnvelope [] emittedEvents System.Boolean isJson Returns Type Description System.Boolean"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.ProjectionMode.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.ProjectionMode.html",
    "title": "Enum ProjectionMode | Event Store",
    "keywords": "Enum ProjectionMode Namespace : EventStore.Projections.Core.Services Assembly : EventStore.Projections.Core.dll Syntax public enum ProjectionMode Fields Name Description AllNonTransient Continuous OneTime Transient Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<ProjectionMode>() ProtobufExtensions.Serialize<ProjectionMode>() ProtobufExtensions.SerializeToArray<ProjectionMode>()"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.ProjectionEventTypes.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.ProjectionEventTypes.html",
    "title": "Class ProjectionEventTypes | Event Store",
    "keywords": "Class ProjectionEventTypes Inheritance System.Object ProjectionEventTypes Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services Assembly : EventStore.Projections.Core.dll Syntax public static class ProjectionEventTypes Fields PartitionCheckpoint Declaration public const string PartitionCheckpoint = \"$Checkpoint\" Field Value Type System.String ProjectionCheckpoint Declaration public const string ProjectionCheckpoint = \"$ProjectionCheckpoint\" Field Value Type System.String ProjectionCreated Declaration public const string ProjectionCreated = \"$ProjectionCreated\" Field Value Type System.String ProjectionDeleted Declaration public const string ProjectionDeleted = \"$ProjectionDeleted\" Field Value Type System.String ProjectionsInitialized Declaration public const string ProjectionsInitialized = \"$ProjectionsInitialized\" Field Value Type System.String ProjectionUpdated Declaration public const string ProjectionUpdated = \"$ProjectionUpdated\" Field Value Type System.String StreamTracked Declaration public const string StreamTracked = \"$StreamTracked\" Field Value Type System.String"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.ProjectionConfig.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.ProjectionConfig.html",
    "title": "Class ProjectionConfig | Event Store",
    "keywords": "Class ProjectionConfig Inheritance System.Object ProjectionConfig Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services Assembly : EventStore.Projections.Core.dll Syntax public class ProjectionConfig Constructors ProjectionConfig(IPrincipal, Int32, Int32, Int32, Int32, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Int32, Int32) Declaration public ProjectionConfig(IPrincipal runAs, int checkpointHandledThreshold, int checkpointUnhandledBytesThreshold, int pendingEventsThreshold, int maxWriteBatchLength, bool emitEventEnabled, bool checkpointsEnabled, bool createTempStreams, bool stopOnEof, bool isSlaveProjection, bool trackEmittedStreams, int checkpointAfterMs, int maximumAllowedWritesInFlight) Parameters Type Name System.Security.Principal.IPrincipal runAs System.Int32 checkpointHandledThreshold System.Int32 checkpointUnhandledBytesThreshold System.Int32 pendingEventsThreshold System.Int32 maxWriteBatchLength System.Boolean emitEventEnabled System.Boolean checkpointsEnabled System.Boolean createTempStreams System.Boolean stopOnEof System.Boolean isSlaveProjection System.Boolean trackEmittedStreams System.Int32 checkpointAfterMs System.Int32 maximumAllowedWritesInFlight Properties CheckpointAfterMs Declaration public int CheckpointAfterMs { get; } Property Value Type System.Int32 CheckpointHandledThreshold Declaration public int CheckpointHandledThreshold { get; } Property Value Type System.Int32 CheckpointsEnabled Declaration public bool CheckpointsEnabled { get; } Property Value Type System.Boolean CheckpointUnhandledBytesThreshold Declaration public int CheckpointUnhandledBytesThreshold { get; } Property Value Type System.Int32 CreateTempStreams Declaration public bool CreateTempStreams { get; } Property Value Type System.Boolean EmitEventEnabled Declaration public bool EmitEventEnabled { get; } Property Value Type System.Boolean IsSlaveProjection Declaration public bool IsSlaveProjection { get; } Property Value Type System.Boolean MaximumAllowedWritesInFlight Declaration public int MaximumAllowedWritesInFlight { get; } Property Value Type System.Int32 MaxWriteBatchLength Declaration public int MaxWriteBatchLength { get; } Property Value Type System.Int32 PendingEventsThreshold Declaration public int PendingEventsThreshold { get; } Property Value Type System.Int32 RunAs Declaration public IPrincipal RunAs { get; } Property Value Type System.Security.Principal.IPrincipal StopOnEof Declaration public bool StopOnEof { get; } Property Value Type System.Boolean TrackEmittedStreams Declaration public bool TrackEmittedStreams { get; } Property Value Type System.Boolean Methods GetTest() Declaration public static ProjectionConfig GetTest() Returns Type Description ProjectionConfig SetIsSlave() Declaration public ProjectionConfig SetIsSlave() Returns Type Description ProjectionConfig Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.html",
    "title": "Namespace EventStore.Projections.Core.Services.Processing | Event Store",
    "keywords": "Namespace EventStore.Projections.Core.Services.Processing Classes AllStreamsCatalogEventReader ByHandleStatePartitionSelector BypassingEventFilter ByPositionStreamStatePartitionSelector ByStreamCatalogEventReader ByStreamStatePartitionSelector CatalogStreamPositionTagger CategoryEventFilter CheckpointSuggestedWorkItem CheckpointTag CheckpointTagExtensions CheckpointTagJsonConverter CheckpointWorkItemBase ContinuousProjectionProcessingStrategy CoreProjection CoreProjectionCheckpointManager CoreProjectionCheckpointReader CoreProjectionCheckpointWriter CoreProjectionQueue DefaultCheckpointManager DefaultProjectionProcessingStrategy EmittedDataEvent EmittedEvent EmittedEventEnvelope EmittedLinkTo EmittedLinkToWithRecategorization EmittedStream EmittedStream.WriterConfiguration EmittedStream.WriterConfiguration.StreamMetadata EmittedStreamsDeleter EmittedStreamsTracker EmittedStreamsWriter EventByTypeIndexEventFilter EventByTypeIndexEventReader EventByTypeIndexPositionTagger EventFilter EventProcessedResult EventProcessingProjectionProcessingPhase EventReader EventReaderBasedProjectionProcessingStrategy EventReaderCoreService EventReorderingReaderSubscription EventSubscriptionBasedProjectionProcessingPhase ExternallyFedByStreamEventReader ExternallyFedReaderStrategy ExtraMetaData HeadingEventReader MultiStreamEventFilter MultiStreamEventReader MultiStreamMultiOutputCheckpointManager MultiStreamPositionTagger NoopCheckpointManager NoopResultEventEmitter NoopStatePartitionSelector ParallelProcessingLoadBalancer ParallelProcessingLoadBalancer.TaskState ParallelProcessingLoadBalancer.WorkerState ParallelQueryAllStreamsMasterReaderStrategy ParallelQueryMasterProjectionProcessingPhase ParallelQueryMasterReaderStrategy ParallelQueryProcessingStrategy PartitionState PartitionStateCache PartitionStateUpdateManager PhasePositionTagger PositionTagger PositionTracker PreparePositionTagger PreTaggedPositionTagger ProcessingStrategySelector ProjectionCheckpoint ProjectionCoreService ProjectionCoreServiceCommandReader ProjectionNamesBuilder ProjectionNamesBuilder.StandardProjections ProjectionOutputConfig ProjectionProcessingStrategy ProjectionSourceDefinition QueryProcessingStrategy QuerySourceOptions QueuedEmittedStreamsWriter ReaderStrategy ReaderSubscription ReaderSubscriptionBase ReaderSubscriptionOptions RequestResponseQueueForwarder ResolvedEvent ResultEventEmitter ResultWriter SlaveQueryProcessingStrategy SlaveResultWriter SourceDefinitionBuilder SpoolStreamProcessingWorkItem StagedProcessingQueue Staged processing queue allows queued processing of multi-step tasks. The processing order allows multiple tasks to be processed at the same time with a constraint a) ordered stage: all preceding tasks in the queue has already started processing at the given stage. b) unordered stage: no items with the same correlation_id are in the queue before current item For instance: multiple foreach sub-projections can request state to be loaded, then they can process it and store. But no subprojection can process events prior to preceding projections has completed processing. StagedTask StatePartitionSelector StreamEventFilter StreamEventReader StreamPositionTagger TaggedResolvedEvent TransactionFileEventFilter TransactionFileEventReader TransactionFilePositionTagger WorkItem WorkLoadEstimationStrategy WriteQueryEofProjectionProcessingPhase WriteQueryResultProjectionProcessingPhase WriteQueryResultProjectionProcessingPhaseBase Structs CheckpointTagVersion ProjectionVersion Interfaces ICoreProjectionCheckpointManager ICoreProjectionCheckpointReader ICoreProjectionForProcessingPhase IEmittedEventWriter IEmittedStreamsDeleter IEmittedStreamsTracker IEmittedStreamsWriter IEventProcessingProjectionPhase IEventReader IEventWriter IProgressResultWriter IProjectionPhaseCheckpointManager IProjectionPhaseCompleter IProjectionPhaseStateManager IProjectionProcessingPhase IReaderStrategy IReaderSubscription IResultEventEmitter IResultWriter ISpoolStreamWorkItemContainer Enums PhaseState"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhaseBase.html",
    "title": "Class WriteQueryResultProjectionProcessingPhaseBase | Event Store",
    "keywords": "Class WriteQueryResultProjectionProcessingPhaseBase Inheritance System.Object WriteQueryResultProjectionProcessingPhaseBase WriteQueryEofProjectionProcessingPhase WriteQueryResultProjectionProcessingPhase Implements IProjectionProcessingPhase System.IDisposable IHandle < CoreProjectionManagementMessage.GetState > IHandle < CoreProjectionManagementMessage.GetResult > IHandle < CoreProjectionProcessingMessage.PrerecordedEventsLoaded > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public abstract class WriteQueryResultProjectionProcessingPhaseBase : IProjectionProcessingPhase, IDisposable, IHandle<CoreProjectionManagementMessage.GetState>, IHandle<CoreProjectionManagementMessage.GetResult>, IHandle<CoreProjectionProcessingMessage.PrerecordedEventsLoaded> Constructors WriteQueryResultProjectionProcessingPhaseBase(IPublisher, Int32, String, ICoreProjectionForProcessingPhase, PartitionStateCache, ICoreProjectionCheckpointManager, IEmittedEventWriter, IEmittedStreamsTracker) Declaration public WriteQueryResultProjectionProcessingPhaseBase(IPublisher publisher, int phase, string resultStream, ICoreProjectionForProcessingPhase coreProjection, PartitionStateCache stateCache, ICoreProjectionCheckpointManager checkpointManager, IEmittedEventWriter emittedEventWriter, IEmittedStreamsTracker emittedStreamsTracker) Parameters Type Name IPublisher publisher System.Int32 phase System.String resultStream ICoreProjectionForProcessingPhase coreProjection PartitionStateCache stateCache ICoreProjectionCheckpointManager checkpointManager IEmittedEventWriter emittedEventWriter IEmittedStreamsTracker emittedStreamsTracker Fields _checkpointManager Declaration protected readonly ICoreProjectionCheckpointManager _checkpointManager Field Value Type ICoreProjectionCheckpointManager _emittedEventWriter Declaration protected readonly IEmittedEventWriter _emittedEventWriter Field Value Type IEmittedEventWriter _emittedStreamsTracker Declaration protected readonly IEmittedStreamsTracker _emittedStreamsTracker Field Value Type IEmittedStreamsTracker _resultStream Declaration protected readonly string _resultStream Field Value Type System.String _stateCache Declaration protected readonly PartitionStateCache _stateCache Field Value Type PartitionStateCache Properties CheckpointManager Declaration public ICoreProjectionCheckpointManager CheckpointManager { get; } Property Value Type ICoreProjectionCheckpointManager EmittedStreamsTracker Declaration public IEmittedStreamsTracker EmittedStreamsTracker { get; } Property Value Type IEmittedStreamsTracker Methods AdjustTag(CheckpointTag) Declaration public CheckpointTag AdjustTag(CheckpointTag tag) Parameters Type Name CheckpointTag tag Returns Type Description CheckpointTag AssignSlaves(SlaveProjectionCommunicationChannels) Declaration public void AssignSlaves(SlaveProjectionCommunicationChannels slaveProjections) Parameters Type Name SlaveProjectionCommunicationChannels slaveProjections Dispose() Declaration public void Dispose() EnsureUnsubscribed() Declaration public void EnsureUnsubscribed() GetStatistics(ProjectionStatistics) Declaration public void GetStatistics(ProjectionStatistics info) Parameters Type Name ProjectionStatistics info Handle(CoreProjectionProcessingMessage.PrerecordedEventsLoaded) Declaration public void Handle(CoreProjectionProcessingMessage.PrerecordedEventsLoaded message) Parameters Type Name CoreProjectionProcessingMessage.PrerecordedEventsLoaded message Handle(CoreProjectionManagementMessage.GetResult) Declaration public void Handle(CoreProjectionManagementMessage.GetResult message) Parameters Type Name CoreProjectionManagementMessage.GetResult message Handle(CoreProjectionManagementMessage.GetState) Declaration public void Handle(CoreProjectionManagementMessage.GetState message) Parameters Type Name CoreProjectionManagementMessage.GetState message InitializeFromCheckpoint(CheckpointTag) Declaration public void InitializeFromCheckpoint(CheckpointTag checkpointTag) Parameters Type Name CheckpointTag checkpointTag MakeZeroCheckpointTag() Declaration public CheckpointTag MakeZeroCheckpointTag() Returns Type Description CheckpointTag ProcessEvent() Declaration public void ProcessEvent() SetProjectionState(PhaseState) Declaration public void SetProjectionState(PhaseState state) Parameters Type Name PhaseState state Subscribe(CheckpointTag, Boolean) Declaration public void Subscribe(CheckpointTag from, bool fromCheckpoint) Parameters Type Name CheckpointTag from System.Boolean fromCheckpoint WriteResults(CheckpointTag) Declaration protected abstract IEnumerable<EmittedEventEnvelope> WriteResults(CheckpointTag phaseCheckpointTag) Parameters Type Name CheckpointTag phaseCheckpointTag Returns Type Description System.Collections.Generic.IEnumerable < EmittedEventEnvelope > Implements IProjectionProcessingPhase System.IDisposable IHandle<T> IHandle<T> IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhase.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.WriteQueryResultProjectionProcessingPhase.html",
    "title": "Class WriteQueryResultProjectionProcessingPhase | Event Store",
    "keywords": "Class WriteQueryResultProjectionProcessingPhase Inheritance System.Object WriteQueryResultProjectionProcessingPhaseBase WriteQueryResultProjectionProcessingPhase Implements IProjectionProcessingPhase System.IDisposable IHandle < CoreProjectionManagementMessage.GetState > IHandle < CoreProjectionManagementMessage.GetResult > IHandle < CoreProjectionProcessingMessage.PrerecordedEventsLoaded > Inherited Members WriteQueryResultProjectionProcessingPhaseBase._resultStream WriteQueryResultProjectionProcessingPhaseBase._stateCache WriteQueryResultProjectionProcessingPhaseBase._checkpointManager WriteQueryResultProjectionProcessingPhaseBase._emittedEventWriter WriteQueryResultProjectionProcessingPhaseBase._emittedStreamsTracker WriteQueryResultProjectionProcessingPhaseBase.CheckpointManager WriteQueryResultProjectionProcessingPhaseBase.EmittedStreamsTracker WriteQueryResultProjectionProcessingPhaseBase.Dispose() WriteQueryResultProjectionProcessingPhaseBase.Handle(CoreProjectionManagementMessage.GetState) WriteQueryResultProjectionProcessingPhaseBase.Handle(CoreProjectionManagementMessage.GetResult) WriteQueryResultProjectionProcessingPhaseBase.Handle(CoreProjectionProcessingMessage.PrerecordedEventsLoaded) WriteQueryResultProjectionProcessingPhaseBase.AdjustTag(CheckpointTag) WriteQueryResultProjectionProcessingPhaseBase.InitializeFromCheckpoint(CheckpointTag) WriteQueryResultProjectionProcessingPhaseBase.AssignSlaves(SlaveProjectionCommunicationChannels) WriteQueryResultProjectionProcessingPhaseBase.ProcessEvent() WriteQueryResultProjectionProcessingPhaseBase.Subscribe(CheckpointTag, Boolean) WriteQueryResultProjectionProcessingPhaseBase.SetProjectionState(PhaseState) WriteQueryResultProjectionProcessingPhaseBase.GetStatistics(ProjectionStatistics) WriteQueryResultProjectionProcessingPhaseBase.MakeZeroCheckpointTag() WriteQueryResultProjectionProcessingPhaseBase.EnsureUnsubscribed() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public sealed class WriteQueryResultProjectionProcessingPhase : WriteQueryResultProjectionProcessingPhaseBase, IProjectionProcessingPhase, IDisposable, IHandle<CoreProjectionManagementMessage.GetState>, IHandle<CoreProjectionManagementMessage.GetResult>, IHandle<CoreProjectionProcessingMessage.PrerecordedEventsLoaded> Constructors WriteQueryResultProjectionProcessingPhase(IPublisher, Int32, String, ICoreProjectionForProcessingPhase, PartitionStateCache, ICoreProjectionCheckpointManager, IEmittedEventWriter, IEmittedStreamsTracker) Declaration public WriteQueryResultProjectionProcessingPhase(IPublisher publisher, int phase, string resultStream, ICoreProjectionForProcessingPhase coreProjection, PartitionStateCache stateCache, ICoreProjectionCheckpointManager checkpointManager, IEmittedEventWriter emittedEventWriter, IEmittedStreamsTracker emittedStreamsTracker) Parameters Type Name IPublisher publisher System.Int32 phase System.String resultStream ICoreProjectionForProcessingPhase coreProjection PartitionStateCache stateCache ICoreProjectionCheckpointManager checkpointManager IEmittedEventWriter emittedEventWriter IEmittedStreamsTracker emittedStreamsTracker Methods WriteResults(CheckpointTag) Declaration protected override IEnumerable<EmittedEventEnvelope> WriteResults(CheckpointTag phaseCheckpointTag) Parameters Type Name CheckpointTag phaseCheckpointTag Returns Type Description System.Collections.Generic.IEnumerable < EmittedEventEnvelope > Overrides WriteQueryResultProjectionProcessingPhaseBase.WriteResults(CheckpointTag) Implements IProjectionProcessingPhase System.IDisposable IHandle<T> IHandle<T> IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.WriteQueryEofProjectionProcessingPhase.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.WriteQueryEofProjectionProcessingPhase.html",
    "title": "Class WriteQueryEofProjectionProcessingPhase | Event Store",
    "keywords": "Class WriteQueryEofProjectionProcessingPhase Inheritance System.Object WriteQueryResultProjectionProcessingPhaseBase WriteQueryEofProjectionProcessingPhase Implements IProjectionProcessingPhase System.IDisposable IHandle < CoreProjectionManagementMessage.GetState > IHandle < CoreProjectionManagementMessage.GetResult > IHandle < CoreProjectionProcessingMessage.PrerecordedEventsLoaded > Inherited Members WriteQueryResultProjectionProcessingPhaseBase._resultStream WriteQueryResultProjectionProcessingPhaseBase._stateCache WriteQueryResultProjectionProcessingPhaseBase._checkpointManager WriteQueryResultProjectionProcessingPhaseBase._emittedEventWriter WriteQueryResultProjectionProcessingPhaseBase._emittedStreamsTracker WriteQueryResultProjectionProcessingPhaseBase.CheckpointManager WriteQueryResultProjectionProcessingPhaseBase.EmittedStreamsTracker WriteQueryResultProjectionProcessingPhaseBase.Dispose() WriteQueryResultProjectionProcessingPhaseBase.Handle(CoreProjectionManagementMessage.GetState) WriteQueryResultProjectionProcessingPhaseBase.Handle(CoreProjectionManagementMessage.GetResult) WriteQueryResultProjectionProcessingPhaseBase.Handle(CoreProjectionProcessingMessage.PrerecordedEventsLoaded) WriteQueryResultProjectionProcessingPhaseBase.AdjustTag(CheckpointTag) WriteQueryResultProjectionProcessingPhaseBase.InitializeFromCheckpoint(CheckpointTag) WriteQueryResultProjectionProcessingPhaseBase.AssignSlaves(SlaveProjectionCommunicationChannels) WriteQueryResultProjectionProcessingPhaseBase.ProcessEvent() WriteQueryResultProjectionProcessingPhaseBase.Subscribe(CheckpointTag, Boolean) WriteQueryResultProjectionProcessingPhaseBase.SetProjectionState(PhaseState) WriteQueryResultProjectionProcessingPhaseBase.GetStatistics(ProjectionStatistics) WriteQueryResultProjectionProcessingPhaseBase.MakeZeroCheckpointTag() WriteQueryResultProjectionProcessingPhaseBase.EnsureUnsubscribed() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public sealed class WriteQueryEofProjectionProcessingPhase : WriteQueryResultProjectionProcessingPhaseBase, IProjectionProcessingPhase, IDisposable, IHandle<CoreProjectionManagementMessage.GetState>, IHandle<CoreProjectionManagementMessage.GetResult>, IHandle<CoreProjectionProcessingMessage.PrerecordedEventsLoaded> Constructors WriteQueryEofProjectionProcessingPhase(IPublisher, Int32, String, ICoreProjectionForProcessingPhase, PartitionStateCache, ICoreProjectionCheckpointManager, IEmittedEventWriter, IEmittedStreamsTracker) Declaration public WriteQueryEofProjectionProcessingPhase(IPublisher publisher, int phase, string resultStream, ICoreProjectionForProcessingPhase coreProjection, PartitionStateCache stateCache, ICoreProjectionCheckpointManager checkpointManager, IEmittedEventWriter emittedEventWriter, IEmittedStreamsTracker emittedStreamsTracker) Parameters Type Name IPublisher publisher System.Int32 phase System.String resultStream ICoreProjectionForProcessingPhase coreProjection PartitionStateCache stateCache ICoreProjectionCheckpointManager checkpointManager IEmittedEventWriter emittedEventWriter IEmittedStreamsTracker emittedStreamsTracker Methods WriteResults(CheckpointTag) Declaration protected override IEnumerable<EmittedEventEnvelope> WriteResults(CheckpointTag phaseCheckpointTag) Parameters Type Name CheckpointTag phaseCheckpointTag Returns Type Description System.Collections.Generic.IEnumerable < EmittedEventEnvelope > Overrides WriteQueryResultProjectionProcessingPhaseBase.WriteResults(CheckpointTag) Implements IProjectionProcessingPhase System.IDisposable IHandle<T> IHandle<T> IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.WorkLoadEstimationStrategy.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.WorkLoadEstimationStrategy.html",
    "title": "Class WorkLoadEstimationStrategy | Event Store",
    "keywords": "Class WorkLoadEstimationStrategy Inheritance System.Object WorkLoadEstimationStrategy Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class WorkLoadEstimationStrategy Constructors WorkLoadEstimationStrategy(Int64, Int32) Declaration public WorkLoadEstimationStrategy(long maxScheduledSizePerWorker, int maxUnmeasuredTasksPerWorker) Parameters Type Name System.Int64 maxScheduledSizePerWorker System.Int32 maxUnmeasuredTasksPerWorker Methods AddTaskLoad(ParallelProcessingLoadBalancer.WorkerState, ParallelProcessingLoadBalancer.TaskState) Declaration public void AddTaskLoad(ParallelProcessingLoadBalancer.WorkerState worker, ParallelProcessingLoadBalancer.TaskState task) Parameters Type Name ParallelProcessingLoadBalancer.WorkerState worker ParallelProcessingLoadBalancer.TaskState task EstimateWorkerLoad(ParallelProcessingLoadBalancer.WorkerState) Declaration public long EstimateWorkerLoad(ParallelProcessingLoadBalancer.WorkerState workerState) Parameters Type Name ParallelProcessingLoadBalancer.WorkerState workerState Returns Type Description System.Int64 MayScheduleOn(ParallelProcessingLoadBalancer.WorkerState) Declaration public bool MayScheduleOn(ParallelProcessingLoadBalancer.WorkerState leastLoadedWorkerState) Parameters Type Name ParallelProcessingLoadBalancer.WorkerState leastLoadedWorkerState Returns Type Description System.Boolean RemoveTaskLoad(ParallelProcessingLoadBalancer.WorkerState, ParallelProcessingLoadBalancer.TaskState) Declaration public void RemoveTaskLoad(ParallelProcessingLoadBalancer.WorkerState workerState, ParallelProcessingLoadBalancer.TaskState taskState) Parameters Type Name ParallelProcessingLoadBalancer.WorkerState workerState ParallelProcessingLoadBalancer.TaskState taskState Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.WorkItem.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.WorkItem.html",
    "title": "Class WorkItem | Event Store",
    "keywords": "Class WorkItem Inheritance System.Object StagedTask WorkItem CheckpointWorkItemBase SpoolStreamProcessingWorkItem Inherited Members StagedTask.InitialCorrelationId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public abstract class WorkItem : StagedTask Constructors WorkItem(Object) Declaration protected WorkItem(object initialCorrelationId) Parameters Type Name System.Object initialCorrelationId Fields _requiresRunning Declaration protected bool _requiresRunning Field Value Type System.Boolean Properties Queue Declaration protected CoreProjectionQueue Queue { get; } Property Value Type CoreProjectionQueue Methods CompleteItem() Declaration protected virtual void CompleteItem() GetStatePartition() Declaration protected virtual void GetStatePartition() Load(CheckpointTag) Declaration protected virtual void Load(CheckpointTag checkpointTag) Parameters Type Name CheckpointTag checkpointTag NextStage(Object) Declaration protected void NextStage(object newCorrelationId = null) Parameters Type Name System.Object newCorrelationId Process(Int32, Action<Int32, Object>) Declaration public override void Process(int onStage, Action<int, object> readyForStage) Parameters Type Name System.Int32 onStage System.Action < System.Int32 , System.Object > readyForStage Overrides StagedTask.Process(Int32, Action<Int32, Object>) ProcessEvent() Declaration protected virtual void ProcessEvent() RecordEventOrder() Declaration protected virtual void RecordEventOrder() SetCheckpointTag(CheckpointTag) Declaration public void SetCheckpointTag(CheckpointTag checkpointTag) Parameters Type Name CheckpointTag checkpointTag SetProjectionQueue(CoreProjectionQueue) Declaration public void SetProjectionQueue(CoreProjectionQueue coreProjectionQueue) Parameters Type Name CoreProjectionQueue coreProjectionQueue WriteOutput() Declaration protected virtual void WriteOutput() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.TransactionFilePositionTagger.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.TransactionFilePositionTagger.html",
    "title": "Class TransactionFilePositionTagger | Event Store",
    "keywords": "Class TransactionFilePositionTagger Inheritance System.Object PositionTagger TransactionFilePositionTagger Inherited Members PositionTagger.Phase System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class TransactionFilePositionTagger : PositionTagger Constructors TransactionFilePositionTagger(Int32) Declaration public TransactionFilePositionTagger(int phase) Parameters Type Name System.Int32 phase Methods AdjustTag(CheckpointTag) Declaration public override CheckpointTag AdjustTag(CheckpointTag tag) Parameters Type Name CheckpointTag tag Returns Type Description CheckpointTag Overrides PositionTagger.AdjustTag(CheckpointTag) IsCompatible(CheckpointTag) Declaration public override bool IsCompatible(CheckpointTag checkpointTag) Parameters Type Name CheckpointTag checkpointTag Returns Type Description System.Boolean Overrides PositionTagger.IsCompatible(CheckpointTag) IsMessageAfterCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.CommittedEventDistributed) Declaration public override bool IsMessageAfterCheckpointTag(CheckpointTag previous, ReaderSubscriptionMessage.CommittedEventDistributed committedEvent) Parameters Type Name CheckpointTag previous ReaderSubscriptionMessage.CommittedEventDistributed committedEvent Returns Type Description System.Boolean Overrides PositionTagger.IsMessageAfterCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.CommittedEventDistributed) MakeCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.CommittedEventDistributed) Declaration public override CheckpointTag MakeCheckpointTag(CheckpointTag previous, ReaderSubscriptionMessage.CommittedEventDistributed committedEvent) Parameters Type Name CheckpointTag previous ReaderSubscriptionMessage.CommittedEventDistributed committedEvent Returns Type Description CheckpointTag Overrides PositionTagger.MakeCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.CommittedEventDistributed) MakeCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.EventReaderPartitionDeleted) Declaration public override CheckpointTag MakeCheckpointTag(CheckpointTag previous, ReaderSubscriptionMessage.EventReaderPartitionDeleted partitionDeleted) Parameters Type Name CheckpointTag previous ReaderSubscriptionMessage.EventReaderPartitionDeleted partitionDeleted Returns Type Description CheckpointTag Overrides PositionTagger.MakeCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.EventReaderPartitionDeleted) MakeCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.EventReaderPartitionEof) Declaration public override CheckpointTag MakeCheckpointTag(CheckpointTag previous, ReaderSubscriptionMessage.EventReaderPartitionEof partitionEof) Parameters Type Name CheckpointTag previous ReaderSubscriptionMessage.EventReaderPartitionEof partitionEof Returns Type Description CheckpointTag Overrides PositionTagger.MakeCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.EventReaderPartitionEof) MakeZeroCheckpointTag() Declaration public override CheckpointTag MakeZeroCheckpointTag() Returns Type Description CheckpointTag Overrides PositionTagger.MakeZeroCheckpointTag() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.TransactionFileEventReader.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.TransactionFileEventReader.html",
    "title": "Class TransactionFileEventReader | Event Store",
    "keywords": "Class TransactionFileEventReader Inheritance System.Object EventReader TransactionFileEventReader Implements IEventReader System.IDisposable IHandle < ClientMessage.ReadAllEventsForwardCompleted > IHandle < ProjectionManagementMessage.Internal.ReadTimeout > Inherited Members EventReader.EventReaderCorrelationId EventReader._publisher EventReader._stopOnEof EventReader._disposed EventReader.PauseRequested EventReader.Paused EventReader.ReadAs EventReader.Resume() EventReader.Pause() EventReader.Dispose() EventReader.SendEof() EventReader.SendPartitionEof(String, CheckpointTag) EventReader.SendPartitionDeleted_WhenReadingDataStream(String, Nullable<Int64>, Nullable<TFPos>, Nullable<TFPos>, String, Nullable<Int32>, CheckpointTag) EventReader.SendNotAuthorized() EventReader.GetLastCommitPositionFrom(ClientMessage.ReadStreamEventsForwardCompleted) EventReader.PauseOrContinueProcessing() EventReader.NotifyIfStarting(Int64) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class TransactionFileEventReader : EventReader, IEventReader, IDisposable, IHandle<ClientMessage.ReadAllEventsForwardCompleted>, IHandle<ProjectionManagementMessage.Internal.ReadTimeout> Constructors TransactionFileEventReader(IPublisher, Guid, IPrincipal, TFPos, ITimeProvider, Boolean, Boolean, Boolean) Declaration public TransactionFileEventReader(IPublisher publisher, Guid eventReaderCorrelationId, IPrincipal readAs, TFPos from, ITimeProvider timeProvider, bool stopOnEof = false, bool deliverEndOfTFPosition = true, bool resolveLinkTos = true) Parameters Type Name IPublisher publisher System.Guid eventReaderCorrelationId System.Security.Principal.IPrincipal readAs TFPos from ITimeProvider timeProvider System.Boolean stopOnEof System.Boolean deliverEndOfTFPosition System.Boolean resolveLinkTos Methods AreEventsRequested() Declaration protected override bool AreEventsRequested() Returns Type Description System.Boolean Overrides EventReader.AreEventsRequested() Handle(ClientMessage.ReadAllEventsForwardCompleted) Declaration public void Handle(ClientMessage.ReadAllEventsForwardCompleted message) Parameters Type Name ClientMessage.ReadAllEventsForwardCompleted message Handle(ProjectionManagementMessage.Internal.ReadTimeout) Declaration public void Handle(ProjectionManagementMessage.Internal.ReadTimeout message) Parameters Type Name ProjectionManagementMessage.Internal.ReadTimeout message RequestEvents() Declaration protected override void RequestEvents() Overrides EventReader.RequestEvents() Implements IEventReader System.IDisposable IHandle<T> IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.TransactionFileEventFilter.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.TransactionFileEventFilter.html",
    "title": "Class TransactionFileEventFilter | Event Store",
    "keywords": "Class TransactionFileEventFilter Inheritance System.Object EventFilter TransactionFileEventFilter Inherited Members EventFilter.Passes(Boolean, String, String, Boolean) EventFilter.PassesDeleteNotification(String) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class TransactionFileEventFilter : EventFilter Constructors TransactionFileEventFilter(Boolean, Boolean, HashSet<String>, Boolean) Declaration public TransactionFileEventFilter(bool allEvents, bool includeDeletedStreamEvents, HashSet<string> events, bool includeLinks = false) Parameters Type Name System.Boolean allEvents System.Boolean includeDeletedStreamEvents System.Collections.Generic.HashSet < System.String > events System.Boolean includeLinks Methods DeletedNotificationPasses(String) Declaration protected override bool DeletedNotificationPasses(string positionStreamId) Parameters Type Name System.String positionStreamId Returns Type Description System.Boolean Overrides EventFilter.DeletedNotificationPasses(String) GetCategory(String) Declaration public override string GetCategory(string positionStreamId) Parameters Type Name System.String positionStreamId Returns Type Description System.String Overrides EventFilter.GetCategory(String) PassesSource(Boolean, String, String) Declaration public override bool PassesSource(bool resolvedFromLinkTo, string positionStreamId, string eventType) Parameters Type Name System.Boolean resolvedFromLinkTo System.String positionStreamId System.String eventType Returns Type Description System.Boolean Overrides EventFilter.PassesSource(Boolean, String, String) Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.TaggedResolvedEvent.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.TaggedResolvedEvent.html",
    "title": "Class TaggedResolvedEvent | Event Store",
    "keywords": "Class TaggedResolvedEvent Inheritance System.Object TaggedResolvedEvent Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public sealed class TaggedResolvedEvent Constructors TaggedResolvedEvent(ResolvedEvent, String, CheckpointTag) Declaration public TaggedResolvedEvent(ResolvedEvent resolvedEvent, string eventCategory, CheckpointTag readerPosition) Parameters Type Name ResolvedEvent resolvedEvent System.String eventCategory CheckpointTag readerPosition Fields EventCategory Declaration public readonly string EventCategory Field Value Type System.String ReaderPosition Declaration public readonly CheckpointTag ReaderPosition Field Value Type CheckpointTag ResolvedEvent Declaration public readonly ResolvedEvent ResolvedEvent Field Value Type ResolvedEvent Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.StreamPositionTagger.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.StreamPositionTagger.html",
    "title": "Class StreamPositionTagger | Event Store",
    "keywords": "Class StreamPositionTagger Inheritance System.Object PositionTagger StreamPositionTagger Inherited Members PositionTagger.Phase System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class StreamPositionTagger : PositionTagger Constructors StreamPositionTagger(Int32, String) Declaration public StreamPositionTagger(int phase, string stream) Parameters Type Name System.Int32 phase System.String stream Methods AdjustTag(CheckpointTag) Declaration public override CheckpointTag AdjustTag(CheckpointTag tag) Parameters Type Name CheckpointTag tag Returns Type Description CheckpointTag Overrides PositionTagger.AdjustTag(CheckpointTag) IsCompatible(CheckpointTag) Declaration public override bool IsCompatible(CheckpointTag checkpointTag) Parameters Type Name CheckpointTag checkpointTag Returns Type Description System.Boolean Overrides PositionTagger.IsCompatible(CheckpointTag) IsMessageAfterCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.CommittedEventDistributed) Declaration public override bool IsMessageAfterCheckpointTag(CheckpointTag previous, ReaderSubscriptionMessage.CommittedEventDistributed committedEvent) Parameters Type Name CheckpointTag previous ReaderSubscriptionMessage.CommittedEventDistributed committedEvent Returns Type Description System.Boolean Overrides PositionTagger.IsMessageAfterCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.CommittedEventDistributed) MakeCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.CommittedEventDistributed) Declaration public override CheckpointTag MakeCheckpointTag(CheckpointTag previous, ReaderSubscriptionMessage.CommittedEventDistributed committedEvent) Parameters Type Name CheckpointTag previous ReaderSubscriptionMessage.CommittedEventDistributed committedEvent Returns Type Description CheckpointTag Overrides PositionTagger.MakeCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.CommittedEventDistributed) MakeCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.EventReaderPartitionDeleted) Declaration public override CheckpointTag MakeCheckpointTag(CheckpointTag previous, ReaderSubscriptionMessage.EventReaderPartitionDeleted partitionDeleted) Parameters Type Name CheckpointTag previous ReaderSubscriptionMessage.EventReaderPartitionDeleted partitionDeleted Returns Type Description CheckpointTag Overrides PositionTagger.MakeCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.EventReaderPartitionDeleted) MakeCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.EventReaderPartitionEof) Declaration public override CheckpointTag MakeCheckpointTag(CheckpointTag previous, ReaderSubscriptionMessage.EventReaderPartitionEof partitionEof) Parameters Type Name CheckpointTag previous ReaderSubscriptionMessage.EventReaderPartitionEof partitionEof Returns Type Description CheckpointTag Overrides PositionTagger.MakeCheckpointTag(CheckpointTag, ReaderSubscriptionMessage.EventReaderPartitionEof) MakeZeroCheckpointTag() Declaration public override CheckpointTag MakeZeroCheckpointTag() Returns Type Description CheckpointTag Overrides PositionTagger.MakeZeroCheckpointTag() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.StreamEventReader.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.StreamEventReader.html",
    "title": "Class StreamEventReader | Event Store",
    "keywords": "Class StreamEventReader Inheritance System.Object EventReader StreamEventReader Implements IEventReader System.IDisposable IHandle < ClientMessage.ReadStreamEventsForwardCompleted > IHandle < ProjectionManagementMessage.Internal.ReadTimeout > Inherited Members EventReader.EventReaderCorrelationId EventReader._publisher EventReader._stopOnEof EventReader._disposed EventReader.PauseRequested EventReader.Paused EventReader.ReadAs EventReader.Resume() EventReader.Pause() EventReader.Dispose() EventReader.SendEof() EventReader.SendPartitionEof(String, CheckpointTag) EventReader.SendPartitionDeleted_WhenReadingDataStream(String, Nullable<Int64>, Nullable<TFPos>, Nullable<TFPos>, String, Nullable<Int32>, CheckpointTag) EventReader.SendNotAuthorized() EventReader.GetLastCommitPositionFrom(ClientMessage.ReadStreamEventsForwardCompleted) EventReader.PauseOrContinueProcessing() EventReader.NotifyIfStarting(Int64) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class StreamEventReader : EventReader, IEventReader, IDisposable, IHandle<ClientMessage.ReadStreamEventsForwardCompleted>, IHandle<ProjectionManagementMessage.Internal.ReadTimeout> Constructors StreamEventReader(IPublisher, Guid, IPrincipal, String, Int64, ITimeProvider, Boolean, Boolean, Boolean) Declaration public StreamEventReader(IPublisher publisher, Guid eventReaderCorrelationId, IPrincipal readAs, string streamName, long fromSequenceNumber, ITimeProvider timeProvider, bool resolveLinkTos, bool produceStreamDeletes, bool stopOnEof = false) Parameters Type Name IPublisher publisher System.Guid eventReaderCorrelationId System.Security.Principal.IPrincipal readAs System.String streamName System.Int64 fromSequenceNumber ITimeProvider timeProvider System.Boolean resolveLinkTos System.Boolean produceStreamDeletes System.Boolean stopOnEof Methods AreEventsRequested() Declaration protected override bool AreEventsRequested() Returns Type Description System.Boolean Overrides EventReader.AreEventsRequested() Handle(ClientMessage.ReadStreamEventsForwardCompleted) Declaration public void Handle(ClientMessage.ReadStreamEventsForwardCompleted message) Parameters Type Name ClientMessage.ReadStreamEventsForwardCompleted message Handle(ProjectionManagementMessage.Internal.ReadTimeout) Declaration public void Handle(ProjectionManagementMessage.Internal.ReadTimeout message) Parameters Type Name ProjectionManagementMessage.Internal.ReadTimeout message RequestEvents() Declaration protected override void RequestEvents() Overrides EventReader.RequestEvents() Implements IEventReader System.IDisposable IHandle<T> IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.StreamEventFilter.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.StreamEventFilter.html",
    "title": "Class StreamEventFilter | Event Store",
    "keywords": "Class StreamEventFilter Inheritance System.Object EventFilter StreamEventFilter Inherited Members EventFilter.Passes(Boolean, String, String, Boolean) EventFilter.PassesDeleteNotification(String) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class StreamEventFilter : EventFilter Constructors StreamEventFilter(String, Boolean, HashSet<String>) Declaration public StreamEventFilter(string streamId, bool allEvents, HashSet<string> events) Parameters Type Name System.String streamId System.Boolean allEvents System.Collections.Generic.HashSet < System.String > events Methods DeletedNotificationPasses(String) Declaration protected override bool DeletedNotificationPasses(string positionStreamId) Parameters Type Name System.String positionStreamId Returns Type Description System.Boolean Overrides EventFilter.DeletedNotificationPasses(String) GetCategory(String) Declaration public override string GetCategory(string positionStreamId) Parameters Type Name System.String positionStreamId Returns Type Description System.String Overrides EventFilter.GetCategory(String) PassesSource(Boolean, String, String) Declaration public override bool PassesSource(bool resolvedFromLinkTo, string positionStreamId, string eventType) Parameters Type Name System.Boolean resolvedFromLinkTo System.String positionStreamId System.String eventType Returns Type Description System.Boolean Overrides EventFilter.PassesSource(Boolean, String, String) ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.StatePartitionSelector.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.StatePartitionSelector.html",
    "title": "Class StatePartitionSelector | Event Store",
    "keywords": "Class StatePartitionSelector Inheritance System.Object StatePartitionSelector ByHandleStatePartitionSelector ByPositionStreamStatePartitionSelector ByStreamStatePartitionSelector NoopStatePartitionSelector Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public abstract class StatePartitionSelector Methods EventReaderBasePartitionDeletedIsSupported() Declaration public abstract bool EventReaderBasePartitionDeletedIsSupported() Returns Type Description System.Boolean GetStatePartition(EventReaderSubscriptionMessage.CommittedEventReceived) Declaration public abstract string GetStatePartition(EventReaderSubscriptionMessage.CommittedEventReceived event) Parameters Type Name EventReaderSubscriptionMessage.CommittedEventReceived event Returns Type Description System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.StagedTask.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.StagedTask.html",
    "title": "Class StagedTask | Event Store",
    "keywords": "Class StagedTask Inheritance System.Object StagedTask WorkItem Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public abstract class StagedTask Constructors StagedTask(Object) Declaration protected StagedTask(object initialCorrelationId) Parameters Type Name System.Object initialCorrelationId Fields InitialCorrelationId Declaration public readonly object InitialCorrelationId Field Value Type System.Object Methods Process(Int32, Action<Int32, Object>) Declaration public abstract void Process(int onStage, Action<int, object> readyForStage) Parameters Type Name System.Int32 onStage System.Action < System.Int32 , System.Object > readyForStage Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.StagedProcessingQueue.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.StagedProcessingQueue.html",
    "title": "Class StagedProcessingQueue | Event Store",
    "keywords": "Class StagedProcessingQueue Staged processing queue allows queued processing of multi-step tasks. The processing order allows multiple tasks to be processed at the same time with a constraint a) ordered stage: all preceding tasks in the queue has already started processing at the given stage. b) unordered stage: no items with the same correlation_id are in the queue before current item For instance: multiple foreach sub-projections can request state to be loaded, then they can process it and store. But no subprojection can process events prior to preceding projections has completed processing. Inheritance System.Object StagedProcessingQueue Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class StagedProcessingQueue Constructors StagedProcessingQueue(Boolean[]) Declaration public StagedProcessingQueue(bool[] orderedStage) Parameters Type Name System.Boolean [] orderedStage Properties Count Declaration public int Count { get; } Property Value Type System.Int32 IsEmpty Declaration public bool IsEmpty { get; } Property Value Type System.Boolean Methods Enqueue(StagedTask) Declaration public void Enqueue(StagedTask stagedTask) Parameters Type Name StagedTask stagedTask Initialize() Declaration public void Initialize() Process(Int32) Declaration public bool Process(int max = 1) Parameters Type Name System.Int32 max Returns Type Description System.Boolean Events EnsureTickPending Declaration public event Action EnsureTickPending Event Type Type System.Action Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.SpoolStreamProcessingWorkItem.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.SpoolStreamProcessingWorkItem.html",
    "title": "Class SpoolStreamProcessingWorkItem | Event Store",
    "keywords": "Class SpoolStreamProcessingWorkItem Inheritance System.Object StagedTask WorkItem SpoolStreamProcessingWorkItem Implements IHandle < PartitionProcessingResult > IHandle < PartitionMeasured > IHandle < PartitionProcessingProgress > Inherited Members WorkItem._requiresRunning WorkItem.Queue WorkItem.Process(Int32, Action<Int32, Object>) WorkItem.RecordEventOrder() WorkItem.GetStatePartition() WorkItem.Load(CheckpointTag) WorkItem.CompleteItem() WorkItem.NextStage(Object) WorkItem.SetCheckpointTag(CheckpointTag) WorkItem.SetProjectionQueue(CoreProjectionQueue) StagedTask.InitialCorrelationId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class SpoolStreamProcessingWorkItem : WorkItem, IHandle<PartitionProcessingResult>, IHandle<PartitionMeasured>, IHandle<PartitionProcessingProgress> Constructors SpoolStreamProcessingWorkItem(ISpoolStreamWorkItemContainer, IPublisher, IResultWriter, ParallelProcessingLoadBalancer, EventReaderSubscriptionMessage.CommittedEventReceived, SlaveProjectionCommunicationChannels, SpooledStreamReadingDispatcher, Int64, Guid, Boolean) Declaration public SpoolStreamProcessingWorkItem(ISpoolStreamWorkItemContainer container, IPublisher publisher, IResultWriter resultWriter, ParallelProcessingLoadBalancer loadBalancer, EventReaderSubscriptionMessage.CommittedEventReceived message, SlaveProjectionCommunicationChannels slaves, SpooledStreamReadingDispatcher spoolProcessingResponseDispatcher, long limitingCommitPosition, Guid subscriptionId, bool definesCatalogTransform) Parameters Type Name ISpoolStreamWorkItemContainer container IPublisher publisher IResultWriter resultWriter ParallelProcessingLoadBalancer loadBalancer EventReaderSubscriptionMessage.CommittedEventReceived message SlaveProjectionCommunicationChannels slaves SpooledStreamReadingDispatcher spoolProcessingResponseDispatcher System.Int64 limitingCommitPosition System.Guid subscriptionId System.Boolean definesCatalogTransform Methods Handle(PartitionMeasured) Declaration public void Handle(PartitionMeasured message) Parameters Type Name PartitionMeasured message Handle(PartitionProcessingProgress) Declaration public void Handle(PartitionProcessingProgress message) Parameters Type Name PartitionProcessingProgress message Handle(PartitionProcessingResult) Declaration public void Handle(PartitionProcessingResult message) Parameters Type Name PartitionProcessingResult message ProcessEvent() Declaration protected override void ProcessEvent() Overrides WorkItem.ProcessEvent() WriteOutput() Declaration protected override void WriteOutput() Overrides WorkItem.WriteOutput() Implements IHandle<T> IHandle<T> IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.SourceDefinitionBuilder.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.SourceDefinitionBuilder.html",
    "title": "Class SourceDefinitionBuilder | Event Store",
    "keywords": "Class SourceDefinitionBuilder Inheritance System.Object SourceDefinitionBuilder Implements IQuerySources Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public sealed class SourceDefinitionBuilder : IQuerySources Constructors SourceDefinitionBuilder() Declaration public SourceDefinitionBuilder() Properties AllStreams Declaration public bool AllStreams { get; } Property Value Type System.Boolean ByCustomPartitions Declaration public bool ByCustomPartitions { get; } Property Value Type System.Boolean ByStreams Declaration public bool ByStreams { get; } Property Value Type System.Boolean CatalogStream Declaration public string CatalogStream { get; } Property Value Type System.String Categories Declaration public string[] Categories { get; } Property Value Type System.String [] DefinesCatalogTransform Declaration public bool DefinesCatalogTransform { get; } Property Value Type System.Boolean DefinesFold Declaration public bool DefinesFold { get; } Property Value Type System.Boolean DefinesStateTransform Declaration public bool DefinesStateTransform { get; } Property Value Type System.Boolean DisableParallelismOption Declaration public bool DisableParallelismOption { get; } Property Value Type System.Boolean Events Declaration public string[] Events { get; } Property Value Type System.String [] HandlesDeletedNotifications Declaration public bool HandlesDeletedNotifications { get; } Property Value Type System.Boolean IncludeLinksOption Declaration public bool IncludeLinksOption { get; } Property Value Type System.Boolean IsBiState Declaration public bool IsBiState { get; } Property Value Type System.Boolean LimitingCommitPosition Declaration public long? LimitingCommitPosition { get; } Property Value Type System.Nullable < System.Int64 > PartitionResultStreamNamePatternOption Declaration public string PartitionResultStreamNamePatternOption { get; } Property Value Type System.String ProcessingLagOption Declaration public int? ProcessingLagOption { get; } Property Value Type System.Nullable < System.Int32 > ProducesResults Declaration public bool ProducesResults { get; } Property Value Type System.Boolean ReorderEventsOption Declaration public bool ReorderEventsOption { get; } Property Value Type System.Boolean ResultStreamNameOption Declaration public string ResultStreamNameOption { get; } Property Value Type System.String Streams Declaration public string[] Streams { get; } Property Value Type System.String [] Methods AllEvents() Declaration public void AllEvents() Build() Declaration public IQuerySources Build() Returns Type Description IQuerySources From(Action<SourceDefinitionBuilder>) Declaration public static IQuerySources From(Action<SourceDefinitionBuilder> configure) Parameters Type Name System.Action < SourceDefinitionBuilder > configure Returns Type Description IQuerySources FromAll() Declaration public void FromAll() FromCatalogStream(String) Declaration public void FromCatalogStream(string catalogStream) Parameters Type Name System.String catalogStream FromCategory(String) Declaration public void FromCategory(string categoryName) Parameters Type Name System.String categoryName FromStream(String) Declaration public void FromStream(string streamName) Parameters Type Name System.String streamName IncludeEvent(String) Declaration public void IncludeEvent(string eventName) Parameters Type Name System.String eventName NoWhen() Declaration public void NoWhen() SetByCustomPartitions() Declaration public void SetByCustomPartitions() SetByStream() Declaration public void SetByStream() SetDefinesStateTransform() Declaration public void SetDefinesStateTransform() SetDisableParallelism(Boolean) Declaration public void SetDisableParallelism(bool disableParallelism = true) Parameters Type Name System.Boolean disableParallelism SetHandlesStreamDeletedNotifications(Boolean) Declaration public void SetHandlesStreamDeletedNotifications(bool value = true) Parameters Type Name System.Boolean value SetIncludeLinks(Boolean) Declaration public void SetIncludeLinks(bool includeLinks = true) Parameters Type Name System.Boolean includeLinks SetIsBiState(Boolean) Declaration public void SetIsBiState(bool isBiState) Parameters Type Name System.Boolean isBiState SetLimitingCommitPosition(Int64) Declaration public void SetLimitingCommitPosition(long limitingCommitPosition) Parameters Type Name System.Int64 limitingCommitPosition SetOutputState() Declaration public void SetOutputState() SetPartitionResultStreamNamePatternOption(String) Declaration public void SetPartitionResultStreamNamePatternOption(string partitionResultStreamNamePattern) Parameters Type Name System.String partitionResultStreamNamePattern SetProcessingLag(Int32) Declaration public void SetProcessingLag(int processingLag) Parameters Type Name System.Int32 processingLag SetReorderEvents(Boolean) Declaration public void SetReorderEvents(bool reorderEvents) Parameters Type Name System.Boolean reorderEvents SetResultStreamNameOption(String) Declaration public void SetResultStreamNameOption(string resultStreamName) Parameters Type Name System.String resultStreamName Explicit Interface Implementations IQuerySources.AllEvents Declaration bool IQuerySources.AllEvents { get; } Returns Type Description System.Boolean Implements IQuerySources Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) QuerySourcesExtensions.HasStreams(IQuerySources) QuerySourcesExtensions.HasCategories(IQuerySources) QuerySourcesExtensions.HasEvents(IQuerySources) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.SlaveResultWriter.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.SlaveResultWriter.html",
    "title": "Class SlaveResultWriter | Event Store",
    "keywords": "Class SlaveResultWriter Inheritance System.Object SlaveResultWriter Implements IResultWriter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class SlaveResultWriter : IResultWriter Constructors SlaveResultWriter(Guid, IPublisher, Guid) Declaration public SlaveResultWriter(Guid workerId, IPublisher publisher, Guid masterCoreProjectionId) Parameters Type Name System.Guid workerId IPublisher publisher System.Guid masterCoreProjectionId Methods AccountPartition(EventProcessedResult) Declaration public void AccountPartition(EventProcessedResult result) Parameters Type Name EventProcessedResult result EventsEmitted(EmittedEventEnvelope[], Guid, String) Declaration public void EventsEmitted(EmittedEventEnvelope[] scheduledWrites, Guid causedBy, string correlationId) Parameters Type Name EmittedEventEnvelope [] scheduledWrites System.Guid causedBy System.String correlationId WriteEofResult(Guid, String, String, CheckpointTag, Guid, String) Declaration public void WriteEofResult(Guid subscriptionId, string partition, string resultBody, CheckpointTag causedBy, Guid causedByGuid, string correlationId) Parameters Type Name System.Guid subscriptionId System.String partition System.String resultBody CheckpointTag causedBy System.Guid causedByGuid System.String correlationId WritePartitionMeasured(Guid, String, Int64) Declaration public void WritePartitionMeasured(Guid subscriptionId, string partition, long size) Parameters Type Name System.Guid subscriptionId System.String partition System.Int64 size WriteProgress(Guid, Single) Declaration public void WriteProgress(Guid subscriptionId, float progress) Parameters Type Name System.Guid subscriptionId System.Single progress WriteRunningResult(EventProcessedResult) Declaration public void WriteRunningResult(EventProcessedResult result) Parameters Type Name EventProcessedResult result Implements IResultWriter Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.SlaveQueryProcessingStrategy.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.SlaveQueryProcessingStrategy.html",
    "title": "Class SlaveQueryProcessingStrategy | Event Store",
    "keywords": "Class SlaveQueryProcessingStrategy Inheritance System.Object ProjectionProcessingStrategy EventReaderBasedProjectionProcessingStrategy DefaultProjectionProcessingStrategy SlaveQueryProcessingStrategy Inherited Members DefaultProjectionProcessingStrategy.CreateFirstProcessingPhase(IPublisher, IPublisher, Guid, PartitionStateCache, Action, CoreProjection, ReaderSubscriptionDispatcher, CheckpointTag, ICoreProjectionCheckpointManager, IReaderStrategy, IResultWriter, IEmittedStreamsTracker) EventReaderBasedProjectionProcessingStrategy._projectionConfig EventReaderBasedProjectionProcessingStrategy._sourceDefinition EventReaderBasedProjectionProcessingStrategy.CreateProcessingPhases(IPublisher, IPublisher, Guid, PartitionStateCache, Action, CoreProjection, ProjectionNamesBuilder, ITimeProvider, IODispatcher, CoreProjectionCheckpointWriter) EventReaderBasedProjectionProcessingStrategy.GetSourceDefinition() EventReaderBasedProjectionProcessingStrategy.GetRequiresRootPartition() EventReaderBasedProjectionProcessingStrategy.EnrichStatistics(ProjectionStatistics) ProjectionProcessingStrategy._name ProjectionProcessingStrategy._projectionVersion ProjectionProcessingStrategy._logger ProjectionProcessingStrategy.Create(Guid, IPublisher, Guid, IPrincipal, IPublisher, IODispatcher, ReaderSubscriptionDispatcher, ITimeProvider) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class SlaveQueryProcessingStrategy : DefaultProjectionProcessingStrategy Constructors SlaveQueryProcessingStrategy(String, ProjectionVersion, IProjectionStateHandler, ProjectionConfig, IQuerySources, ILogger, Guid, IPublisher, Guid, ReaderSubscriptionDispatcher) Declaration public SlaveQueryProcessingStrategy(string name, ProjectionVersion projectionVersion, IProjectionStateHandler stateHandler, ProjectionConfig projectionConfig, IQuerySources sourceDefinition, ILogger logger, Guid workerId, IPublisher publisher, Guid masterCoreProjectionId, ReaderSubscriptionDispatcher subscriptionDispatcher) Parameters Type Name System.String name ProjectionVersion projectionVersion IProjectionStateHandler stateHandler ProjectionConfig projectionConfig IQuerySources sourceDefinition ILogger logger System.Guid workerId IPublisher publisher System.Guid masterCoreProjectionId ReaderSubscriptionDispatcher subscriptionDispatcher Methods CreateCheckpointManager(Guid, IPublisher, IODispatcher, ProjectionNamesBuilder, CoreProjectionCheckpointWriter, Boolean, IReaderStrategy) Declaration protected override ICoreProjectionCheckpointManager CreateCheckpointManager(Guid projectionCorrelationId, IPublisher publisher, IODispatcher ioDispatcher, ProjectionNamesBuilder namingBuilder, CoreProjectionCheckpointWriter coreProjectionCheckpointWriter, bool definesFold, IReaderStrategy readerStrategy) Parameters Type Name System.Guid projectionCorrelationId IPublisher publisher IODispatcher ioDispatcher ProjectionNamesBuilder namingBuilder CoreProjectionCheckpointWriter coreProjectionCheckpointWriter System.Boolean definesFold IReaderStrategy readerStrategy Returns Type Description ICoreProjectionCheckpointManager Overrides EventReaderBasedProjectionProcessingStrategy.CreateCheckpointManager(Guid, IPublisher, IODispatcher, ProjectionNamesBuilder, CoreProjectionCheckpointWriter, Boolean, IReaderStrategy) CreateFirstPhaseResultEmitter(ProjectionNamesBuilder) Declaration protected override IResultEventEmitter CreateFirstPhaseResultEmitter(ProjectionNamesBuilder namingBuilder) Parameters Type Name ProjectionNamesBuilder namingBuilder Returns Type Description IResultEventEmitter Overrides EventReaderBasedProjectionProcessingStrategy.CreateFirstPhaseResultEmitter(ProjectionNamesBuilder) CreateFirstPhaseResultWriter(IEmittedEventWriter, CheckpointTag, ProjectionNamesBuilder) Declaration protected override IResultWriter CreateFirstPhaseResultWriter(IEmittedEventWriter emittedEventWriter, CheckpointTag zeroCheckpointTag, ProjectionNamesBuilder namingBuilder) Parameters Type Name IEmittedEventWriter emittedEventWriter CheckpointTag zeroCheckpointTag ProjectionNamesBuilder namingBuilder Returns Type Description IResultWriter Overrides EventReaderBasedProjectionProcessingStrategy.CreateFirstPhaseResultWriter(IEmittedEventWriter, CheckpointTag, ProjectionNamesBuilder) CreateProjectionProcessingPhases(IPublisher, IPublisher, Guid, ProjectionNamesBuilder, PartitionStateCache, CoreProjection, IODispatcher, IProjectionProcessingPhase) Declaration protected override IProjectionProcessingPhase[] CreateProjectionProcessingPhases(IPublisher publisher, IPublisher inputQueue, Guid projectionCorrelationId, ProjectionNamesBuilder namingBuilder, PartitionStateCache partitionStateCache, CoreProjection coreProjection, IODispatcher ioDispatcher, IProjectionProcessingPhase firstPhase) Parameters Type Name IPublisher publisher IPublisher inputQueue System.Guid projectionCorrelationId ProjectionNamesBuilder namingBuilder PartitionStateCache partitionStateCache CoreProjection coreProjection IODispatcher ioDispatcher IProjectionProcessingPhase firstPhase Returns Type Description IProjectionProcessingPhase [] Overrides EventReaderBasedProjectionProcessingStrategy.CreateProjectionProcessingPhases(IPublisher, IPublisher, Guid, ProjectionNamesBuilder, PartitionStateCache, CoreProjection, IODispatcher, IProjectionProcessingPhase) CreateReaderStrategy(ITimeProvider) Declaration protected override IReaderStrategy CreateReaderStrategy(ITimeProvider timeProvider) Parameters Type Name ITimeProvider timeProvider Returns Type Description IReaderStrategy Overrides EventReaderBasedProjectionProcessingStrategy.CreateReaderStrategy(ITimeProvider) CreateStatePartitionSelector() Declaration protected override StatePartitionSelector CreateStatePartitionSelector() Returns Type Description StatePartitionSelector Overrides DefaultProjectionProcessingStrategy.CreateStatePartitionSelector() GetIsSlaveProjection() Declaration public override bool GetIsSlaveProjection() Returns Type Description System.Boolean Overrides ProjectionProcessingStrategy.GetIsSlaveProjection() GetProducesRunningResults() Declaration public override bool GetProducesRunningResults() Returns Type Description System.Boolean Overrides ProjectionProcessingStrategy.GetProducesRunningResults() GetSlaveProjections() Declaration public override SlaveProjectionDefinitions GetSlaveProjections() Returns Type Description SlaveProjectionDefinitions Overrides ProjectionProcessingStrategy.GetSlaveProjections() GetStopOnEof() Declaration public override bool GetStopOnEof() Returns Type Description System.Boolean Overrides ProjectionProcessingStrategy.GetStopOnEof() GetUseCheckpoints() Declaration public override bool GetUseCheckpoints() Returns Type Description System.Boolean Overrides ProjectionProcessingStrategy.GetUseCheckpoints() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.ProjectionWorkerNode.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.ProjectionWorkerNode.html",
    "title": "Class ProjectionWorkerNode | Event Store",
    "keywords": "Class ProjectionWorkerNode Inheritance System.Object ProjectionWorkerNode Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core Assembly : EventStore.Projections.Core.dll Syntax public class ProjectionWorkerNode Constructors ProjectionWorkerNode(Guid, TFChunkDb, IQueuedHandler, ITimeProvider, ISingletonTimeoutScheduler, ProjectionType, Boolean) Declaration public ProjectionWorkerNode(Guid workerId, TFChunkDb db, IQueuedHandler inputQueue, ITimeProvider timeProvider, ISingletonTimeoutScheduler timeoutScheduler, ProjectionType runProjections, bool faultOutOfOrderProjections) Parameters Type Name System.Guid workerId TFChunkDb db IQueuedHandler inputQueue ITimeProvider timeProvider ISingletonTimeoutScheduler timeoutScheduler ProjectionType runProjections System.Boolean faultOutOfOrderProjections Properties CoreOutput Declaration public InMemoryBus CoreOutput { get; } Property Value Type InMemoryBus SlaveProjectionResponseWriter Declaration public SlaveProjectionResponseWriter SlaveProjectionResponseWriter { get; } Property Value Type SlaveProjectionResponseWriter Methods SetupMessaging(IBus) Declaration public void SetupMessaging(IBus coreInputBus) Parameters Type Name IBus coreInputBus Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.ProjectionManagerNode.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.ProjectionManagerNode.html",
    "title": "Class ProjectionManagerNode | Event Store",
    "keywords": "Class ProjectionManagerNode Inheritance System.Object ProjectionManagerNode Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core Assembly : EventStore.Projections.Core.dll Syntax public class ProjectionManagerNode Methods CreateManagerService(StandardComponents, ProjectionsStandardComponents, IDictionary<Guid, IPublisher>, TimeSpan) Declaration public static void CreateManagerService(StandardComponents standardComponents, ProjectionsStandardComponents projectionsStandardComponents, IDictionary<Guid, IPublisher> queues, TimeSpan projectionQueryExpiry) Parameters Type Name StandardComponents standardComponents ProjectionsStandardComponents projectionsStandardComponents System.Collections.Generic.IDictionary < System.Guid , IPublisher > queues System.TimeSpan projectionQueryExpiry Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.UpdatePersistentSubscriptionCompleted.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.UpdatePersistentSubscriptionCompleted.html",
    "title": "Class TcpClientMessageDto.UpdatePersistentSubscriptionCompleted | Event Store",
    "keywords": "Class TcpClientMessageDto.UpdatePersistentSubscriptionCompleted Inheritance System.Object TcpClientMessageDto.UpdatePersistentSubscriptionCompleted Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax [Serializable] [ProtoContract(Name = \"UpdatePersistentSubscriptionCompleted\")] public class UpdatePersistentSubscriptionCompleted Constructors UpdatePersistentSubscriptionCompleted(TcpClientMessageDto.UpdatePersistentSubscriptionCompleted.UpdatePersistentSubscriptionResult, String) Declaration public UpdatePersistentSubscriptionCompleted(TcpClientMessageDto.UpdatePersistentSubscriptionCompleted.UpdatePersistentSubscriptionResult result, string reason) Parameters Type Name TcpClientMessageDto.UpdatePersistentSubscriptionCompleted.UpdatePersistentSubscriptionResult result System.String reason Fields Reason Declaration [ProtoMember(2, IsRequired = false, Name = \"reason\", DataFormat = DataFormat.Default)] public readonly string Reason Field Value Type System.String Result Declaration [ProtoMember(1, IsRequired = true, Name = \"result\", DataFormat = DataFormat.TwosComplement)] public readonly TcpClientMessageDto.UpdatePersistentSubscriptionCompleted.UpdatePersistentSubscriptionResult Result Field Value Type TcpClientMessageDto.UpdatePersistentSubscriptionCompleted.UpdatePersistentSubscriptionResult Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.UpdatePersistentSubscriptionCompleted.UpdatePersistentSubscriptionResult.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.UpdatePersistentSubscriptionCompleted.UpdatePersistentSubscriptionResult.html",
    "title": "Enum TcpClientMessageDto.UpdatePersistentSubscriptionCompleted.UpdatePersistentSubscriptionResult | Event Store",
    "keywords": "Enum TcpClientMessageDto.UpdatePersistentSubscriptionCompleted.UpdatePersistentSubscriptionResult Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax [ProtoContract(Name = \"UpdatePersistentSubscriptionResult\")] public enum UpdatePersistentSubscriptionResult Fields Name Description AccessDenied DoesNotExist Fail Success Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<TcpClientMessageDto.UpdatePersistentSubscriptionCompleted.UpdatePersistentSubscriptionResult>() ProtobufExtensions.Serialize<TcpClientMessageDto.UpdatePersistentSubscriptionCompleted.UpdatePersistentSubscriptionResult>() ProtobufExtensions.SerializeToArray<TcpClientMessageDto.UpdatePersistentSubscriptionCompleted.UpdatePersistentSubscriptionResult>()"
  },
  "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.UpdatePersistentSubscription.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.UpdatePersistentSubscription.html",
    "title": "Class TcpClientMessageDto.UpdatePersistentSubscription | Event Store",
    "keywords": "Class TcpClientMessageDto.UpdatePersistentSubscription Inheritance System.Object TcpClientMessageDto.UpdatePersistentSubscription Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax [Serializable] [ProtoContract(Name = \"UpdatePersistentSubscription\")] public class UpdatePersistentSubscription Constructors UpdatePersistentSubscription(String, String, Boolean, Int64, Int32, Boolean, Int32, Int32, Int32, Int32, Boolean, Int32, Int32, Int32, Int32, String) Declaration public UpdatePersistentSubscription(string subscriptionGroupName, string eventStreamId, bool resolveLinkTos, long startFrom, int messageTimeoutMilliseconds, bool recordStatistics, int liveBufferSize, int readBatchSize, int bufferSize, int maxRetryCount, bool preferRoundRobin, int checkpointAfterTime, int checkpointMaxCount, int checkpointMinCount, int subscriberMaxCount, string namedConsumerStrategy) Parameters Type Name System.String subscriptionGroupName System.String eventStreamId System.Boolean resolveLinkTos System.Int64 startFrom System.Int32 messageTimeoutMilliseconds System.Boolean recordStatistics System.Int32 liveBufferSize System.Int32 readBatchSize System.Int32 bufferSize System.Int32 maxRetryCount System.Boolean preferRoundRobin System.Int32 checkpointAfterTime System.Int32 checkpointMaxCount System.Int32 checkpointMinCount System.Int32 subscriberMaxCount System.String namedConsumerStrategy Fields BufferSize Declaration [ProtoMember(9, IsRequired = true, Name = \"buffer_size\", DataFormat = DataFormat.TwosComplement)] public readonly int BufferSize Field Value Type System.Int32 CheckpointAfterTime Declaration [ProtoMember(12, IsRequired = true, Name = \"checkpoint_after_time\", DataFormat = DataFormat.TwosComplement)] public readonly int CheckpointAfterTime Field Value Type System.Int32 CheckpointMaxCount Declaration [ProtoMember(13, IsRequired = true, Name = \"checkpoint_max_count\", DataFormat = DataFormat.TwosComplement)] public readonly int CheckpointMaxCount Field Value Type System.Int32 CheckpointMinCount Declaration [ProtoMember(14, IsRequired = true, Name = \"checkpoint_min_count\", DataFormat = DataFormat.TwosComplement)] public readonly int CheckpointMinCount Field Value Type System.Int32 EventStreamId Declaration [ProtoMember(2, IsRequired = true, Name = \"event_stream_id\", DataFormat = DataFormat.Default)] public readonly string EventStreamId Field Value Type System.String LiveBufferSize Declaration [ProtoMember(7, IsRequired = true, Name = \"live_buffer_size\", DataFormat = DataFormat.TwosComplement)] public readonly int LiveBufferSize Field Value Type System.Int32 MaxRetryCount Declaration [ProtoMember(10, IsRequired = true, Name = \"max_retry_count\", DataFormat = DataFormat.TwosComplement)] public readonly int MaxRetryCount Field Value Type System.Int32 MessageTimeoutMilliseconds Declaration [ProtoMember(5, IsRequired = true, Name = \"message_timeout_milliseconds\", DataFormat = DataFormat.TwosComplement)] public readonly int MessageTimeoutMilliseconds Field Value Type System.Int32 NamedConsumerStrategy Declaration [ProtoMember(16, IsRequired = false, Name = \"named_consumer_strategy\", DataFormat = DataFormat.Default)] public readonly string NamedConsumerStrategy Field Value Type System.String PreferRoundRobin Declaration [ProtoMember(11, IsRequired = true, Name = \"prefer_round_robin\", DataFormat = DataFormat.Default)] public readonly bool PreferRoundRobin Field Value Type System.Boolean ReadBatchSize Declaration [ProtoMember(8, IsRequired = true, Name = \"read_batch_size\", DataFormat = DataFormat.TwosComplement)] public readonly int ReadBatchSize Field Value Type System.Int32 RecordStatistics Declaration [ProtoMember(6, IsRequired = true, Name = \"record_statistics\", DataFormat = DataFormat.Default)] public readonly bool RecordStatistics Field Value Type System.Boolean ResolveLinkTos Declaration [ProtoMember(3, IsRequired = true, Name = \"resolve_link_tos\", DataFormat = DataFormat.Default)] public readonly bool ResolveLinkTos Field Value Type System.Boolean StartFrom Declaration [ProtoMember(4, IsRequired = true, Name = \"start_from\", DataFormat = DataFormat.TwosComplement)] public readonly long StartFrom Field Value Type System.Int64 SubscriberMaxCount Declaration [ProtoMember(15, IsRequired = true, Name = \"subscriber_max_count\", DataFormat = DataFormat.TwosComplement)] public readonly int SubscriberMaxCount Field Value Type System.Int32 SubscriptionGroupName Declaration [ProtoMember(1, IsRequired = true, Name = \"subscription_group_name\", DataFormat = DataFormat.Default)] public readonly string SubscriptionGroupName Field Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.UnsubscribeFromStream.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.UnsubscribeFromStream.html",
    "title": "Class TcpClientMessageDto.UnsubscribeFromStream | Event Store",
    "keywords": "Class TcpClientMessageDto.UnsubscribeFromStream Inheritance System.Object TcpClientMessageDto.UnsubscribeFromStream Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax [Serializable] [ProtoContract(Name = \"UnsubscribeFromStream\")] public class UnsubscribeFromStream Constructors UnsubscribeFromStream() Declaration public UnsubscribeFromStream() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.TransactionWriteCompleted.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.TransactionWriteCompleted.html",
    "title": "Class TcpClientMessageDto.TransactionWriteCompleted | Event Store",
    "keywords": "Class TcpClientMessageDto.TransactionWriteCompleted Inheritance System.Object TcpClientMessageDto.TransactionWriteCompleted Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax [Serializable] [ProtoContract(Name = \"TransactionWriteCompleted\")] public class TransactionWriteCompleted Constructors TransactionWriteCompleted(Int64, TcpClientMessageDto.OperationResult, String) Declaration public TransactionWriteCompleted(long transactionId, TcpClientMessageDto.OperationResult result, string message) Parameters Type Name System.Int64 transactionId TcpClientMessageDto.OperationResult result System.String message Fields Message Declaration [ProtoMember(3, IsRequired = false, Name = \"message\", DataFormat = DataFormat.Default)] public readonly string Message Field Value Type System.String Result Declaration [ProtoMember(2, IsRequired = true, Name = \"result\", DataFormat = DataFormat.TwosComplement)] public readonly TcpClientMessageDto.OperationResult Result Field Value Type TcpClientMessageDto.OperationResult TransactionId Declaration [ProtoMember(1, IsRequired = true, Name = \"transaction_id\", DataFormat = DataFormat.TwosComplement)] public readonly long TransactionId Field Value Type System.Int64 Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.TransactionWrite.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.TransactionWrite.html",
    "title": "Class TcpClientMessageDto.TransactionWrite | Event Store",
    "keywords": "Class TcpClientMessageDto.TransactionWrite Inheritance System.Object TcpClientMessageDto.TransactionWrite Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax [Serializable] [ProtoContract(Name = \"TransactionWrite\")] public class TransactionWrite Constructors TransactionWrite(Int64, TcpClientMessageDto.NewEvent[], Boolean) Declaration public TransactionWrite(long transactionId, TcpClientMessageDto.NewEvent[] events, bool requireMaster) Parameters Type Name System.Int64 transactionId TcpClientMessageDto.NewEvent [] events System.Boolean requireMaster Fields Events Declaration [ProtoMember(2, Name = \"events\", DataFormat = DataFormat.Default)] public readonly TcpClientMessageDto.NewEvent[] Events Field Value Type TcpClientMessageDto.NewEvent [] RequireMaster Declaration [ProtoMember(3, IsRequired = true, Name = \"require_master\", DataFormat = DataFormat.Default)] public readonly bool RequireMaster Field Value Type System.Boolean TransactionId Declaration [ProtoMember(1, IsRequired = true, Name = \"transaction_id\", DataFormat = DataFormat.TwosComplement)] public readonly long TransactionId Field Value Type System.Int64 Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.TransactionStartCompleted.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.TransactionStartCompleted.html",
    "title": "Class TcpClientMessageDto.TransactionStartCompleted | Event Store",
    "keywords": "Class TcpClientMessageDto.TransactionStartCompleted Inheritance System.Object TcpClientMessageDto.TransactionStartCompleted Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax [Serializable] [ProtoContract(Name = \"TransactionStartCompleted\")] public class TransactionStartCompleted Constructors TransactionStartCompleted(Int64, TcpClientMessageDto.OperationResult, String) Declaration public TransactionStartCompleted(long transactionId, TcpClientMessageDto.OperationResult result, string message) Parameters Type Name System.Int64 transactionId TcpClientMessageDto.OperationResult result System.String message Fields Message Declaration [ProtoMember(3, IsRequired = false, Name = \"message\", DataFormat = DataFormat.Default)] public readonly string Message Field Value Type System.String Result Declaration [ProtoMember(2, IsRequired = true, Name = \"result\", DataFormat = DataFormat.TwosComplement)] public readonly TcpClientMessageDto.OperationResult Result Field Value Type TcpClientMessageDto.OperationResult TransactionId Declaration [ProtoMember(1, IsRequired = true, Name = \"transaction_id\", DataFormat = DataFormat.TwosComplement)] public readonly long TransactionId Field Value Type System.Int64 Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.TransactionStart.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.TransactionStart.html",
    "title": "Class TcpClientMessageDto.TransactionStart | Event Store",
    "keywords": "Class TcpClientMessageDto.TransactionStart Inheritance System.Object TcpClientMessageDto.TransactionStart Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax [Serializable] [ProtoContract(Name = \"TransactionStart\")] public class TransactionStart Constructors TransactionStart(String, Int64, Boolean) Declaration public TransactionStart(string eventStreamId, long expectedVersion, bool requireMaster) Parameters Type Name System.String eventStreamId System.Int64 expectedVersion System.Boolean requireMaster Fields EventStreamId Declaration [ProtoMember(1, IsRequired = true, Name = \"event_stream_id\", DataFormat = DataFormat.Default)] public readonly string EventStreamId Field Value Type System.String ExpectedVersion Declaration [ProtoMember(2, IsRequired = true, Name = \"expected_version\", DataFormat = DataFormat.TwosComplement)] public readonly long ExpectedVersion Field Value Type System.Int64 RequireMaster Declaration [ProtoMember(3, IsRequired = true, Name = \"require_master\", DataFormat = DataFormat.Default)] public readonly bool RequireMaster Field Value Type System.Boolean Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Exceptions.InvalidFileException.html": {
    "href": "dotnet-api/code/EventStore.Core.Exceptions.InvalidFileException.html",
    "title": "Class InvalidFileException | Event Store",
    "keywords": "Class InvalidFileException Inheritance System.Object System.Exception InvalidFileException Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Exceptions Assembly : EventStore.Core.dll Syntax public class InvalidFileException : Exception, _Exception, ISerializable Constructors InvalidFileException() Declaration public InvalidFileException() InvalidFileException(String) Declaration public InvalidFileException(string message) Parameters Type Name System.String message InvalidFileException(String, Exception) Declaration public InvalidFileException(string message, Exception innerException) Parameters Type Name System.String message System.Exception innerException Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.DataStructures.ObjectPool-1.html": {
    "href": "dotnet-api/code/EventStore.Core.DataStructures.ObjectPool-1.html",
    "title": "Class ObjectPool<T> | Event Store",
    "keywords": "Class ObjectPool<T> Inheritance System.Object ObjectPool<T> Implements System.IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.DataStructures Assembly : EventStore.Core.dll Syntax public class ObjectPool<T> : IDisposable Type Parameters Name Description T Constructors ObjectPool(String, Int32, Int32, Func<T>, Action<T>, Action<ObjectPool<T>>) Declaration public ObjectPool(string objectPoolName, int initialCount, int maxCount, Func<T> factory, Action<T> dispose = null, Action<ObjectPool<T>> onPoolDisposed = null) Parameters Type Name System.String objectPoolName System.Int32 initialCount System.Int32 maxCount System.Func <T> factory System.Action <T> dispose System.Action < ObjectPool <T>> onPoolDisposed Fields ObjectPoolName Declaration public readonly string ObjectPoolName Field Value Type System.String Methods Dispose() Declaration public void Dispose() Get() Declaration public T Get() Returns Type Description T MarkForDisposal() Declaration public void MarkForDisposal() Return(T) Declaration public void Return(T item) Parameters Type Name T item Implements System.IDisposable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Rags.ArgumentUsageInfo.html": {
    "href": "dotnet-api/code/EventStore.Rags.ArgumentUsageInfo.html",
    "title": "Class ArgumentUsageInfo | Event Store",
    "keywords": "Class ArgumentUsageInfo Inheritance System.Object ArgumentUsageInfo Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Rags Assembly : EventStore.Rags.dll Syntax public class ArgumentUsageInfo Constructors ArgumentUsageInfo(PropertyInfo) Declaration public ArgumentUsageInfo(PropertyInfo toAutoGen) Parameters Type Name System.Reflection.PropertyInfo toAutoGen Properties Aliases Declaration public List<string> Aliases { get; } Property Value Type System.Collections.Generic.List < System.String > Description Declaration public string Description { get; set; } Property Value Type System.String Group Declaration public string Group { get; set; } Property Value Type System.String Name Declaration public string Name { get; set; } Property Value Type System.String PossibleValues Declaration public List<string> PossibleValues { get; } Property Value Type System.Collections.Generic.List < System.String > Property Declaration public PropertyInfo Property { get; set; } Property Value Type System.Reflection.PropertyInfo Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Rags.ArgUsage.html": {
    "href": "dotnet-api/code/EventStore.Rags.ArgUsage.html",
    "title": "Class ArgUsage | Event Store",
    "keywords": "Class ArgUsage Inheritance System.Object ArgUsage Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Rags Assembly : EventStore.Rags.dll Syntax public static class ArgUsage Methods GetStyledUsage<T>(String) Declaration public static ConsoleString GetStyledUsage<T>(string exeName = null) Parameters Type Name System.String exeName Returns Type Description ConsoleString Type Parameters Name Description T GetUsage<T>(String) Declaration public static string GetUsage<T>(string exeName = null) Parameters Type Name System.String exeName Returns Type Description System.String Type Parameters Name Description T"
  },
  "dotnet-api/code/EventStore.Rags.ArgShortcutPolicy.html": {
    "href": "dotnet-api/code/EventStore.Rags.ArgShortcutPolicy.html",
    "title": "Enum ArgShortcutPolicy | Event Store",
    "keywords": "Enum ArgShortcutPolicy An enum to represent argument shortcut policies. Namespace : EventStore.Rags Assembly : EventStore.Rags.dll Syntax public enum ArgShortcutPolicy Fields Name Description Default No special behavior. NoShortcut Pass this value to the ArgShortcut attribute's constructor to indicate that the given property does not support a shortcut. ShortcutsOnly This indicates that the .NET property named should not be used as an indicator. Instead, only the values in the other ArgShortcut attributes should be used. Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<ArgShortcutPolicy>() ProtobufExtensions.Serialize<ArgShortcutPolicy>() ProtobufExtensions.SerializeToArray<ArgShortcutPolicy>()"
  },
  "dotnet-api/code/EventStore.Rags.ArgShortcut.html": {
    "href": "dotnet-api/code/EventStore.Rags.ArgShortcut.html",
    "title": "Class ArgShortcut | Event Store",
    "keywords": "Class ArgShortcut Use this attribute to override the shortcut that PowerArgs automatically assigns to each property. Inheritance System.Object System.Attribute ArgShortcut Implements System.Runtime.InteropServices._Attribute Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32) System.Attribute.System.Runtime.InteropServices._Attribute.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Rags Assembly : EventStore.Rags.dll Syntax [AttributeUsage(AttributeTargets.Field | AttributeTargets.Method | AttributeTargets.Property, AllowMultiple = true)] public class ArgShortcut : Attribute, _Attribute Constructors ArgShortcut(ArgShortcutPolicy) Creates a new ArgShortcut using the given policy. Declaration public ArgShortcut(ArgShortcutPolicy policy) Parameters Type Name ArgShortcutPolicy policy ArgShortcut(String) Creates a new ArgShortcut attribute with a specified value. Declaration public ArgShortcut(string shortcut) Parameters Type Name System.String shortcut Properties Policy Get the ShortcutPolicy for this attribute. Declaration public ArgShortcutPolicy Policy { get; } Property Value Type ArgShortcutPolicy Shortcut The shortcut for the given property. Declaration public string Shortcut { get; } Property Value Type System.String Implements System.Runtime.InteropServices._Attribute Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Rags.ArgReviverAttribute.html": {
    "href": "dotnet-api/code/EventStore.Rags.ArgReviverAttribute.html",
    "title": "Class ArgReviverAttribute | Event Store",
    "keywords": "Class ArgReviverAttribute The attribute used when you want to create an arg reviver. You add this to public static methods that take 2 string parameters (the first represents the name of the property, the second represents the string value and the return type is the type that you are reviving (or converting) the string into. Inheritance System.Object System.Attribute ArgReviverAttribute Implements System.Runtime.InteropServices._Attribute Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32) System.Attribute.System.Runtime.InteropServices._Attribute.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Rags Assembly : EventStore.Rags.dll Syntax [AttributeUsage(AttributeTargets.Method)] public class ArgReviverAttribute : Attribute, _Attribute Implements System.Runtime.InteropServices._Attribute Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Rags.ArgException.html": {
    "href": "dotnet-api/code/EventStore.Rags.ArgException.html",
    "title": "Class ArgException | Event Store",
    "keywords": "Class ArgException An exception that should be thrown when the error condition is caused because of bad user input. Inheritance System.Object System.Exception ArgException DuplicateArgException MissingArgException QueryInvalidArgException UnexpectedArgException UnknownActionArgException ValidationArgException Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Rags Assembly : EventStore.Rags.dll Syntax public class ArgException : Exception, _Exception, ISerializable Constructors ArgException(String) Creates a new ArgException given a user friendly message Declaration public ArgException(string msg) Parameters Type Name System.String msg ArgException(String, Exception) Creates a new ArgException given a user friendly message Declaration public ArgException(string msg, Exception inner) Parameters Type Name System.String msg System.Exception inner Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Rags.ArgDescriptionAttribute.html": {
    "href": "dotnet-api/code/EventStore.Rags.ArgDescriptionAttribute.html",
    "title": "Class ArgDescriptionAttribute | Event Store",
    "keywords": "Class ArgDescriptionAttribute Inheritance System.Object System.Attribute ArgDescriptionAttribute Implements System.Runtime.InteropServices._Attribute Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32) System.Attribute.System.Runtime.InteropServices._Attribute.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Rags Assembly : EventStore.Rags.dll Syntax public class ArgDescriptionAttribute : Attribute, _Attribute Constructors ArgDescriptionAttribute(String) Declaration public ArgDescriptionAttribute(string description) Parameters Type Name System.String description ArgDescriptionAttribute(String, String) Declaration public ArgDescriptionAttribute(string description, string group) Parameters Type Name System.String description System.String group Properties Description Declaration public string Description { get; } Property Value Type System.String Group Declaration public string Group { get; } Property Value Type System.String Implements System.Runtime.InteropServices._Attribute Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Rags.ArgAliasAttribute.html": {
    "href": "dotnet-api/code/EventStore.Rags.ArgAliasAttribute.html",
    "title": "Class ArgAliasAttribute | Event Store",
    "keywords": "Class ArgAliasAttribute Set an alias or aliases for an argument. Inheritance System.Object System.Attribute ArgAliasAttribute Implements System.Runtime.InteropServices._Attribute Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32) System.Attribute.System.Runtime.InteropServices._Attribute.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Rags Assembly : EventStore.Rags.dll Syntax [AttributeUsage(AttributeTargets.Property)] public class ArgAliasAttribute : Attribute, _Attribute Constructors ArgAliasAttribute(String[]) Declaration public ArgAliasAttribute(params string[] aliases) Parameters Type Name System.String [] aliases Properties Aliases Declaration public string[] Aliases { get; } Property Value Type System.String [] Implements System.Runtime.InteropServices._Attribute Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.html",
    "title": "Namespace EventStore.Projections.Core | Event Store",
    "keywords": "Namespace EventStore.Projections.Core Classes ProjectionCoreWorkersNode ProjectionManagerNode ProjectionsStandardComponents ProjectionsSubsystem ProjectionWorkerNode"
  },
  "dotnet-api/code/EventStore.Projections.Core.v8.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.v8.html",
    "title": "Namespace EventStore.Projections.Core.v8 | Event Store",
    "keywords": "Namespace EventStore.Projections.Core.v8 Classes Js1 Js1Exception PreludeScript QueryScript Delegates Js1.CommandHandlerRegisteredDelegate Js1.EnterCancellableRegionDelegate Js1.ExitCancellableRegionDelegate Js1.LoadModuleDelegate Js1.LogDelegate Js1.ReportErrorDelegate Js1.ReverseCommandHandlerDelegate"
  },
  "dotnet-api/code/EventStore.Projections.Core.v8.QueryScript.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.v8.QueryScript.html",
    "title": "Class QueryScript | Event Store",
    "keywords": "Class QueryScript Inheritance System.Object QueryScript Implements System.IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.v8 Assembly : EventStore.Projections.Core.dll Syntax public class QueryScript : IDisposable Constructors QueryScript(PreludeScript, String, String) Declaration public QueryScript(PreludeScript prelude, string script, string fileName) Parameters Type Name PreludeScript prelude System.String script System.String fileName Methods Dispose() Declaration public void Dispose() GetPartition(String, String[]) Declaration public string GetPartition(string json, string[] other) Parameters Type Name System.String json System.String [] other Returns Type Description System.String GetSourcesDefintion() Declaration public QuerySourcesDefinition GetSourcesDefintion() Returns Type Description QuerySourcesDefinition Initialize() Declaration public void Initialize() InitializeShared() Declaration public void InitializeShared() NotifyCreated(String, String[]) Declaration public string NotifyCreated(string json, string[] other) Parameters Type Name System.String json System.String [] other Returns Type Description System.String NotifyDeleted(String, String[]) Declaration public string NotifyDeleted(string json, string[] other) Parameters Type Name System.String json System.String [] other Returns Type Description System.String Push(String, String[]) Declaration public Tuple<string, string> Push(string json, string[] other) Parameters Type Name System.String json System.String [] other Returns Type Description System.Tuple < System.String , System.String > SetSharedState(String) Declaration public void SetSharedState(string state) Parameters Type Name System.String state SetState(String) Declaration public void SetState(string state) Parameters Type Name System.String state TransformCatalogEvent(String, String[]) Declaration public string TransformCatalogEvent(string json, string[] other) Parameters Type Name System.String json System.String [] other Returns Type Description System.String TransformStateToResult() Declaration public string TransformStateToResult() Returns Type Description System.String Events Emit Declaration public event Action<string> Emit Event Type Type System.Action < System.String > Implements System.IDisposable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.NoopStatePartitionSelector.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.NoopStatePartitionSelector.html",
    "title": "Class NoopStatePartitionSelector | Event Store",
    "keywords": "Class NoopStatePartitionSelector Inheritance System.Object StatePartitionSelector NoopStatePartitionSelector Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class NoopStatePartitionSelector : StatePartitionSelector Methods EventReaderBasePartitionDeletedIsSupported() Declaration public override bool EventReaderBasePartitionDeletedIsSupported() Returns Type Description System.Boolean Overrides StatePartitionSelector.EventReaderBasePartitionDeletedIsSupported() GetStatePartition(EventReaderSubscriptionMessage.CommittedEventReceived) Declaration public override string GetStatePartition(EventReaderSubscriptionMessage.CommittedEventReceived event) Parameters Type Name EventReaderSubscriptionMessage.CommittedEventReceived event Returns Type Description System.String Overrides StatePartitionSelector.GetStatePartition(EventReaderSubscriptionMessage.CommittedEventReceived) Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.NoopResultEventEmitter.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.NoopResultEventEmitter.html",
    "title": "Class NoopResultEventEmitter | Event Store",
    "keywords": "Class NoopResultEventEmitter Inheritance System.Object NoopResultEventEmitter Implements IResultEventEmitter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class NoopResultEventEmitter : IResultEventEmitter Methods ResultUpdated(String, String, CheckpointTag) Declaration public EmittedEventEnvelope[] ResultUpdated(string partition, string result, CheckpointTag at) Parameters Type Name System.String partition System.String result CheckpointTag at Returns Type Description EmittedEventEnvelope [] Implements IResultEventEmitter Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.NoopCheckpointManager.html",
    "title": "Class NoopCheckpointManager | Event Store",
    "keywords": "Class NoopCheckpointManager Inheritance System.Object NoopCheckpointManager Implements ICoreProjectionCheckpointManager Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public sealed class NoopCheckpointManager : ICoreProjectionCheckpointManager Constructors NoopCheckpointManager(IPublisher, Guid, ProjectionConfig, String, PositionTagger, ProjectionNamesBuilder) Declaration public NoopCheckpointManager(IPublisher publisher, Guid projectionCorrelationId, ProjectionConfig projectionConfig, string name, PositionTagger positionTagger, ProjectionNamesBuilder namingBuilder) Parameters Type Name IPublisher publisher System.Guid projectionCorrelationId ProjectionConfig projectionConfig System.String name PositionTagger positionTagger ProjectionNamesBuilder namingBuilder Properties LastProcessedEventPosition Declaration public CheckpointTag LastProcessedEventPosition { get; } Property Value Type CheckpointTag Methods BeginLoadPartitionStateAt(String, CheckpointTag, Action<PartitionState>) Declaration public void BeginLoadPartitionStateAt(string statePartition, CheckpointTag requestedStateCheckpointTag, Action<PartitionState> loadCompleted) Parameters Type Name System.String statePartition CheckpointTag requestedStateCheckpointTag System.Action < PartitionState > loadCompleted BeginLoadPrerecordedEvents(CheckpointTag) Declaration public void BeginLoadPrerecordedEvents(CheckpointTag checkpointTag) Parameters Type Name CheckpointTag checkpointTag CheckpointSuggested(CheckpointTag, Single) Declaration public bool CheckpointSuggested(CheckpointTag checkpointTag, float progress) Parameters Type Name CheckpointTag checkpointTag System.Single progress Returns Type Description System.Boolean EventProcessed(CheckpointTag, Single) Declaration public void EventProcessed(CheckpointTag checkpointTag, float progress) Parameters Type Name CheckpointTag checkpointTag System.Single progress GetStatistics(ProjectionStatistics) Declaration public void GetStatistics(ProjectionStatistics info) Parameters Type Name ProjectionStatistics info Initialize() Declaration public void Initialize() PartitionCompleted(String) Declaration public void PartitionCompleted(string partition) Parameters Type Name System.String partition Progress(Single) Declaration public void Progress(float progress) Parameters Type Name System.Single progress RecordEventOrder(ResolvedEvent, CheckpointTag, Action) Declaration public void RecordEventOrder(ResolvedEvent resolvedEvent, CheckpointTag orderCheckpointTag, Action committed) Parameters Type Name ResolvedEvent resolvedEvent CheckpointTag orderCheckpointTag System.Action committed Start(CheckpointTag, PartitionState) Declaration public void Start(CheckpointTag checkpointTag, PartitionState rootPartitionState) Parameters Type Name CheckpointTag checkpointTag PartitionState rootPartitionState StateUpdated(String, PartitionState, PartitionState) Declaration public void StateUpdated(string partition, PartitionState oldState, PartitionState newState) Parameters Type Name System.String partition PartitionState oldState PartitionState newState Stopped() Declaration public void Stopped() Stopping() Declaration public void Stopping() Implements ICoreProjectionCheckpointManager Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.html",
    "title": "Class ProjectionManagementMessage.Internal | Event Store",
    "keywords": "Class ProjectionManagementMessage.Internal Inheritance System.Object ProjectionManagementMessage.Internal Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public static class Internal"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.RegularTimeout.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.RegularTimeout.html",
    "title": "Class ProjectionManagementMessage.Internal.RegularTimeout | Event Store",
    "keywords": "Class ProjectionManagementMessage.Internal.RegularTimeout Inheritance System.Object Message ProjectionManagementMessage.Internal.RegularTimeout Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class RegularTimeout : Message Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.ReadTimeout.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.ReadTimeout.html",
    "title": "Class ProjectionManagementMessage.Internal.ReadTimeout | Event Store",
    "keywords": "Class ProjectionManagementMessage.Internal.ReadTimeout Inheritance System.Object Message ProjectionManagementMessage.Internal.ReadTimeout Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class ReadTimeout : Message Constructors ReadTimeout(Guid, String) Declaration public ReadTimeout(Guid correlationId, string streamId) Parameters Type Name System.Guid correlationId System.String streamId ReadTimeout(Guid, String, Dictionary<String, Object>) Declaration public ReadTimeout(Guid correlationId, string streamId, Dictionary<string, object> parameters) Parameters Type Name System.Guid correlationId System.String streamId System.Collections.Generic.Dictionary < System.String , System.Object > parameters Properties CorrelationId Declaration public Guid CorrelationId { get; } Property Value Type System.Guid MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Parameters Declaration public Dictionary<string, object> Parameters { get; } Property Value Type System.Collections.Generic.Dictionary < System.String , System.Object > StreamId Declaration public string StreamId { get; } Property Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.Deleted.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.Deleted.html",
    "title": "Class ProjectionManagementMessage.Internal.Deleted | Event Store",
    "keywords": "Class ProjectionManagementMessage.Internal.Deleted Inheritance System.Object Message ProjectionManagementMessage.Internal.Deleted Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class Deleted : Message Constructors Deleted(String, Guid) Declaration public Deleted(string name, Guid id) Parameters Type Name System.String name System.Guid id Properties Id Declaration public Guid Id { get; } Property Value Type System.Guid MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Name Declaration public string Name { get; } Property Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.CleanupExpired.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.Internal.CleanupExpired.html",
    "title": "Class ProjectionManagementMessage.Internal.CleanupExpired | Event Store",
    "keywords": "Class ProjectionManagementMessage.Internal.CleanupExpired Inheritance System.Object Message ProjectionManagementMessage.Internal.CleanupExpired Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class CleanupExpired : Message Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.Conflict.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.Conflict.html",
    "title": "Class ProjectionManagementMessage.Conflict | Event Store",
    "keywords": "Class ProjectionManagementMessage.Conflict Inheritance System.Object Message ProjectionManagementMessage.OperationFailed ProjectionManagementMessage.Conflict Inherited Members ProjectionManagementMessage.OperationFailed.Reason Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class Conflict : ProjectionManagementMessage.OperationFailed Constructors Conflict(String) Declaration public Conflict(string reason) Parameters Type Name System.String reason Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides ProjectionManagementMessage.OperationFailed.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.html",
    "title": "Class ProjectionManagementMessage.Command | Event Store",
    "keywords": "Class ProjectionManagementMessage.Command Inheritance System.Object ProjectionManagementMessage.Command Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public static class Command"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateQuery.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateQuery.html",
    "title": "Class ProjectionManagementMessage.Command.UpdateQuery | Event Store",
    "keywords": "Class ProjectionManagementMessage.Command.UpdateQuery Inheritance System.Object Message ProjectionManagementMessage.Command.ControlMessage ProjectionManagementMessage.Command.UpdateQuery Inherited Members ProjectionManagementMessage.Command.ControlMessage.RunAs ProjectionManagementMessage.Command.ControlMessage.Envelope Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class UpdateQuery : ProjectionManagementMessage.Command.ControlMessage Constructors UpdateQuery(IEnvelope, String, ProjectionManagementMessage.RunAs, String, String, Nullable<Boolean>) Declaration public UpdateQuery(IEnvelope envelope, string name, ProjectionManagementMessage.RunAs runAs, string handlerType, string query, bool? emitEnabled) Parameters Type Name IEnvelope envelope System.String name ProjectionManagementMessage.RunAs runAs System.String handlerType System.String query System.Nullable < System.Boolean > emitEnabled Properties EmitEnabled Declaration public bool? EmitEnabled { get; } Property Value Type System.Nullable < System.Boolean > HandlerType Declaration public string HandlerType { get; } Property Value Type System.String MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides ProjectionManagementMessage.Command.ControlMessage.MsgTypeId Name Declaration public string Name { get; } Property Value Type System.String Query Declaration public string Query { get; } Property Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.UpdateConfig.html",
    "title": "Class ProjectionManagementMessage.Command.UpdateConfig | Event Store",
    "keywords": "Class ProjectionManagementMessage.Command.UpdateConfig Inheritance System.Object Message ProjectionManagementMessage.Command.ControlMessage ProjectionManagementMessage.Command.UpdateConfig Inherited Members ProjectionManagementMessage.Command.ControlMessage.RunAs ProjectionManagementMessage.Command.ControlMessage.Envelope Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class UpdateConfig : ProjectionManagementMessage.Command.ControlMessage Constructors UpdateConfig(IEnvelope, String, Boolean, Boolean, Int32, Int32, Int32, Int32, Int32, Int32, ProjectionManagementMessage.RunAs) Declaration public UpdateConfig(IEnvelope envelope, string name, bool emitEnabled, bool trackEmittedStreams, int checkpointAfterMs, int checkpointHandledThreshold, int checkpointUnhandledBytesThreshold, int pendingEventsThreshold, int maxWriteBatchLength, int maxAllowedWritesInFlight, ProjectionManagementMessage.RunAs runAs) Parameters Type Name IEnvelope envelope System.String name System.Boolean emitEnabled System.Boolean trackEmittedStreams System.Int32 checkpointAfterMs System.Int32 checkpointHandledThreshold System.Int32 checkpointUnhandledBytesThreshold System.Int32 pendingEventsThreshold System.Int32 maxWriteBatchLength System.Int32 maxAllowedWritesInFlight ProjectionManagementMessage.RunAs runAs Properties CheckpointAfterMs Declaration public int CheckpointAfterMs { get; } Property Value Type System.Int32 CheckpointHandledThreshold Declaration public int CheckpointHandledThreshold { get; } Property Value Type System.Int32 CheckpointUnhandledBytesThreshold Declaration public int CheckpointUnhandledBytesThreshold { get; } Property Value Type System.Int32 EmitEnabled Declaration public bool EmitEnabled { get; } Property Value Type System.Boolean MaxAllowedWritesInFlight Declaration public int MaxAllowedWritesInFlight { get; } Property Value Type System.Int32 MaxWriteBatchLength Declaration public int MaxWriteBatchLength { get; } Property Value Type System.Int32 MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides ProjectionManagementMessage.Command.ControlMessage.MsgTypeId Name Declaration public string Name { get; } Property Value Type System.String PendingEventsThreshold Declaration public int PendingEventsThreshold { get; } Property Value Type System.Int32 TrackEmittedStreams Declaration public bool TrackEmittedStreams { get; } Property Value Type System.Boolean Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.StartSlaveProjections.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.StartSlaveProjections.html",
    "title": "Class ProjectionManagementMessage.Command.StartSlaveProjections | Event Store",
    "keywords": "Class ProjectionManagementMessage.Command.StartSlaveProjections Inheritance System.Object Message ProjectionManagementMessage.Command.ControlMessage ProjectionManagementMessage.Command.StartSlaveProjections Inherited Members ProjectionManagementMessage.Command.ControlMessage.RunAs ProjectionManagementMessage.Command.ControlMessage.Envelope Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class StartSlaveProjections : ProjectionManagementMessage.Command.ControlMessage Constructors StartSlaveProjections(IEnvelope, ProjectionManagementMessage.RunAs, String, SlaveProjectionDefinitions, Guid, Guid) Declaration public StartSlaveProjections(IEnvelope envelope, ProjectionManagementMessage.RunAs runAs, string name, SlaveProjectionDefinitions slaveProjections, Guid masterWorkerId, Guid masterCorrelationId) Parameters Type Name IEnvelope envelope ProjectionManagementMessage.RunAs runAs System.String name SlaveProjectionDefinitions slaveProjections System.Guid masterWorkerId System.Guid masterCorrelationId Properties MasterCorrelationId Declaration public Guid MasterCorrelationId { get; } Property Value Type System.Guid MasterWorkerId Declaration public Guid MasterWorkerId { get; } Property Value Type System.Guid MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides ProjectionManagementMessage.Command.ControlMessage.MsgTypeId Name Declaration public string Name { get; } Property Value Type System.String SlaveProjections Declaration public SlaveProjectionDefinitions SlaveProjections { get; } Property Value Type SlaveProjectionDefinitions Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.SetRunAs.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.SetRunAs.html",
    "title": "Class ProjectionManagementMessage.Command.SetRunAs | Event Store",
    "keywords": "Class ProjectionManagementMessage.Command.SetRunAs Inheritance System.Object Message ProjectionManagementMessage.Command.ControlMessage ProjectionManagementMessage.Command.SetRunAs Inherited Members ProjectionManagementMessage.Command.ControlMessage.RunAs ProjectionManagementMessage.Command.ControlMessage.Envelope Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class SetRunAs : ProjectionManagementMessage.Command.ControlMessage Constructors SetRunAs(IEnvelope, String, ProjectionManagementMessage.RunAs, ProjectionManagementMessage.Command.SetRunAs.SetRemove) Declaration public SetRunAs(IEnvelope envelope, string name, ProjectionManagementMessage.RunAs runAs, ProjectionManagementMessage.Command.SetRunAs.SetRemove action) Parameters Type Name IEnvelope envelope System.String name ProjectionManagementMessage.RunAs runAs ProjectionManagementMessage.Command.SetRunAs.SetRemove action Properties Action Declaration public ProjectionManagementMessage.Command.SetRunAs.SetRemove Action { get; } Property Value Type ProjectionManagementMessage.Command.SetRunAs.SetRemove MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides ProjectionManagementMessage.Command.ControlMessage.MsgTypeId Name Declaration public string Name { get; } Property Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.SetRunAs.SetRemove.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.SetRunAs.SetRemove.html",
    "title": "Enum ProjectionManagementMessage.Command.SetRunAs.SetRemove | Event Store",
    "keywords": "Enum ProjectionManagementMessage.Command.SetRunAs.SetRemove Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public enum SetRemove Fields Name Description Remove Set Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<ProjectionManagementMessage.Command.SetRunAs.SetRemove>() ProtobufExtensions.Serialize<ProjectionManagementMessage.Command.SetRunAs.SetRemove>() ProtobufExtensions.SerializeToArray<ProjectionManagementMessage.Command.SetRunAs.SetRemove>()"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Reset.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Reset.html",
    "title": "Class ProjectionManagementMessage.Command.Reset | Event Store",
    "keywords": "Class ProjectionManagementMessage.Command.Reset Inheritance System.Object Message ProjectionManagementMessage.Command.ControlMessage ProjectionManagementMessage.Command.Reset Inherited Members ProjectionManagementMessage.Command.ControlMessage.RunAs ProjectionManagementMessage.Command.ControlMessage.Envelope Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class Reset : ProjectionManagementMessage.Command.ControlMessage Constructors Reset(IEnvelope, String, ProjectionManagementMessage.RunAs) Declaration public Reset(IEnvelope envelope, string name, ProjectionManagementMessage.RunAs runAs) Parameters Type Name IEnvelope envelope System.String name ProjectionManagementMessage.RunAs runAs Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides ProjectionManagementMessage.Command.ControlMessage.MsgTypeId Name Declaration public string Name { get; } Property Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Commands.SpoolStreamReadingCommand.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Commands.SpoolStreamReadingCommand.html",
    "title": "Class SpoolStreamReadingCommand | Event Store",
    "keywords": "Class SpoolStreamReadingCommand Inheritance System.Object SpoolStreamReadingCommand Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages.Persisted.Commands Assembly : EventStore.Projections.Core.dll Syntax public class SpoolStreamReadingCommand Properties CatalogSequenceNumber Declaration public long CatalogSequenceNumber { get; set; } Property Value Type System.Int64 LimitingCommitPosition Declaration public long LimitingCommitPosition { get; set; } Property Value Type System.Int64 StreamId Declaration public string StreamId { get; set; } Property Value Type System.String SubscriptionId Declaration public string SubscriptionId { get; set; } Property Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Commands.SlaveProjectionsStartedResponse.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Commands.SlaveProjectionsStartedResponse.html",
    "title": "Class SlaveProjectionsStartedResponse | Event Store",
    "keywords": "Class SlaveProjectionsStartedResponse Inheritance System.Object SlaveProjectionsStartedResponse Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages.Persisted.Commands Assembly : EventStore.Projections.Core.dll Syntax public sealed class SlaveProjectionsStartedResponse Fields CorrelationId Declaration public string CorrelationId Field Value Type System.String SlaveProjections Declaration public SlaveProjectionCommunicationChannels SlaveProjections Field Value Type SlaveProjectionCommunicationChannels Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Commands.PersistedProjectionVersion.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Commands.PersistedProjectionVersion.html",
    "title": "Struct PersistedProjectionVersion | Event Store",
    "keywords": "Struct PersistedProjectionVersion Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Projections.Core.Messages.Persisted.Commands Assembly : EventStore.Projections.Core.dll Syntax public struct PersistedProjectionVersion Fields Epoch Declaration public long Epoch Field Value Type System.Int64 Id Declaration public long Id Field Value Type System.Int64 Version Declaration public long Version Field Value Type System.Int64 Operators Implicit(PersistedProjectionVersion to ProjectionVersion) Declaration public static implicit operator ProjectionVersion(PersistedProjectionVersion source) Parameters Type Name PersistedProjectionVersion source Returns Type Description ProjectionVersion Implicit(ProjectionVersion to PersistedProjectionVersion) Declaration public static implicit operator PersistedProjectionVersion(ProjectionVersion source) Parameters Type Name ProjectionVersion source Returns Type Description PersistedProjectionVersion Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) EnumExtensions.EnumValueName<T>(T) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Common.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Common.html",
    "title": "Namespace EventStore.Projections.Core.Common | Event Store",
    "keywords": "Namespace EventStore.Projections.Core.Common Classes AllowedWritesInFlight ProjectionConsts"
  },
  "dotnet-api/code/EventStore.Projections.Core.Common.ProjectionConsts.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Common.ProjectionConsts.html",
    "title": "Class ProjectionConsts | Event Store",
    "keywords": "Class ProjectionConsts Inheritance System.Object ProjectionConsts Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Common Assembly : EventStore.Projections.Core.dll Syntax public static class ProjectionConsts Fields CheckpointAfterMs Declaration public static TimeSpan CheckpointAfterMs Field Value Type System.TimeSpan CheckpointHandledThreshold Declaration public const int CheckpointHandledThreshold = 4000 Field Value Type System.Int32 CheckpointUnhandledBytesThreshold Declaration public const int CheckpointUnhandledBytesThreshold = 10000000 Field Value Type System.Int32 MaxAllowedWritesInFlight Declaration public const int MaxAllowedWritesInFlight = 0 Field Value Type System.Int32 MaxWriteBatchLength Declaration public const int MaxWriteBatchLength = 500 Field Value Type System.Int32 PendingEventsThreshold Declaration public const int PendingEventsThreshold = 5000 Field Value Type System.Int32"
  },
  "dotnet-api/code/EventStore.Projections.Core.Common.AllowedWritesInFlight.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Common.AllowedWritesInFlight.html",
    "title": "Class AllowedWritesInFlight | Event Store",
    "keywords": "Class AllowedWritesInFlight Inheritance System.Object AllowedWritesInFlight Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Common Assembly : EventStore.Projections.Core.dll Syntax public static class AllowedWritesInFlight Fields Unbounded Declaration public const int Unbounded = 0 Field Value Type System.Int32"
  },
  "dotnet-api/code/EventStore.Core.html": {
    "href": "dotnet-api/code/EventStore.Core.html",
    "title": "Namespace EventStore.Core | Event Store",
    "keywords": "Namespace EventStore.Core Classes ClusterNodeMutex ClusterVNode ExclusiveDbLock ProgramBase<TOptions> StandardComponents VNodeBuilder Allows a client to build a ClusterVNode for use with the Embedded client API by specifying high level options rather than using the constructor of ClusterVNode directly. VNodeStatusChangeArgs Structs IndexEntryV2 Interfaces ISubsystem Enums NodeSubsystems"
  },
  "dotnet-api/code/EventStore.Core.VNodeStatusChangeArgs.html": {
    "href": "dotnet-api/code/EventStore.Core.VNodeStatusChangeArgs.html",
    "title": "Class VNodeStatusChangeArgs | Event Store",
    "keywords": "Class VNodeStatusChangeArgs Inheritance System.Object System.EventArgs VNodeStatusChangeArgs Inherited Members System.EventArgs.Empty System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core Assembly : EventStore.Core.dll Syntax public class VNodeStatusChangeArgs : EventArgs Constructors VNodeStatusChangeArgs(VNodeState) Declaration public VNodeStatusChangeArgs(VNodeState newVNodeState) Parameters Type Name VNodeState newVNodeState Fields NewVNodeState Declaration public readonly VNodeState NewVNodeState Field Value Type VNodeState Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.TransactionLog.ITransactionFileReader.html": {
    "href": "dotnet-api/code/EventStore.Core.TransactionLog.ITransactionFileReader.html",
    "title": "Interface ITransactionFileReader | Event Store",
    "keywords": "Interface ITransactionFileReader Namespace : EventStore.Core.TransactionLog Assembly : EventStore.Core.dll Syntax public interface ITransactionFileReader Methods ExistsAt(Int64) Declaration bool ExistsAt(long position) Parameters Type Name System.Int64 position Returns Type Description System.Boolean Reposition(Int64) Declaration void Reposition(long position) Parameters Type Name System.Int64 position TryReadAt(Int64) Declaration RecordReadResult TryReadAt(long position) Parameters Type Name System.Int64 position Returns Type Description RecordReadResult TryReadNext() Declaration SeqReadResult TryReadNext() Returns Type Description SeqReadResult TryReadPrev() Declaration SeqReadResult TryReadPrev() Returns Type Description SeqReadResult Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.TransactionLog.ITransactionFileChaser.html": {
    "href": "dotnet-api/code/EventStore.Core.TransactionLog.ITransactionFileChaser.html",
    "title": "Interface ITransactionFileChaser | Event Store",
    "keywords": "Interface ITransactionFileChaser Inherited Members System.IDisposable.Dispose() Namespace : EventStore.Core.TransactionLog Assembly : EventStore.Core.dll Syntax public interface ITransactionFileChaser : IDisposable Properties Checkpoint Declaration ICheckpoint Checkpoint { get; } Property Value Type ICheckpoint Methods Close() Declaration void Close() Flush() Declaration void Flush() Open() Declaration void Open() TryReadNext() Declaration SeqReadResult TryReadNext() Returns Type Description SeqReadResult TryReadNext(out LogRecord) Declaration bool TryReadNext(out LogRecord record) Parameters Type Name LogRecord record Returns Type Description System.Boolean Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.TransactionLog.FileNamingStrategy.html": {
    "href": "dotnet-api/code/EventStore.Core.TransactionLog.FileNamingStrategy.html",
    "title": "Namespace EventStore.Core.TransactionLog.FileNamingStrategy | Event Store",
    "keywords": "Namespace EventStore.Core.TransactionLog.FileNamingStrategy Classes VersionedPatternFileNamingStrategy Interfaces IFileNamingStrategy"
  },
  "index.html": {
    "href": "index.html",
    "title": "Welcome to Event Store | Event Store",
    "keywords": "Welcome to Event Store The team and community behind Event Store welcomes you and hopes we can help you find what you're looking for. New to Event Sourcing? If the concept of event sourcing, and why it's useful, is new to you, we recommend you read our guide to event sourcing first. New to Event Store? If you're familiar with event sourcing and want to know how to test Event Store, read the Introduction section. Already using Event Store? If you're already using Event Store, then welcome back and hopefully you can find what you need under the other sub-sections you can see in the left hand navigation menu, you can also try using the search box in the top navigation bar. If there's still something missing, then create an issue on GitHub , use the 'Improve this Doc' link on the top right on any documentation page to make a pull request, or contact docs@eventstore.org ."
  },
  "projections/debugging/index.html": {
    "href": "projections/debugging/index.html",
    "title": "Debugging | Event Store",
    "keywords": "Debugging User projections you create in JavaScript have a bonus that debugging is easier via any browser that ships with debugging capabilities. The screenshots in this document show the use of Chrome, but we have tested debugging with all major browsers including Firefox, Edge and Safari. Logging from within a Projection For debugging purposes, projections includes a log method which, when called, sends messages to the configured Event Store logger (the default is NLog , to a file, and stdout ). You might find printing out the structure of the event body for inspection useful. For example: fromStream('$stats-127.0.0.1:2113') .when({ $any: function(s,e){ log(JSON.stringify(e)); } }) Creating a sample projection for debugging purposes Filename: stats-counter.json Contents: fromStream('$stats-127.0.0.1:2113') .when({ $init: function(){ return { count: 0 } }, $any: function(s,e){ s.count += 1; } }) You create the projection by making a call to the API and providing it with the definition of the projection. curl -i -d@stats-counter.json http://localhost:2113/projections/continuous?name=stats-counter%26type=js%26enabled=true%26emit=true%26trackemittedstreams=true -u admin:changeit Debugging your first projection Once the projection is running, open your browser and enable the developer tools. Once you have the developer tools open, visit your projection URL and you should see a button labelled Debug . After clicking the projection \"Debug\" button, you see the debugging interface with the definition of the projection and information about the events the projection is processing on the right hand side. At the top there are couple of buttons to take note of, specifically the Run Step and Update buttons. You use Run Step to step through the event waiting in the queue, placing you in projection debugging mode. The Update button provides you with a way to update the projection definition without having to go back to the projection itself and leave the context of the debugger. If the Run Step button is not greyed out and you click it, the browser has hit a breakpoint. You are now able to step through the projection, the important method to step into is the handler(state, eventEnvelope) method."
  },
  "projections/api/index.html": {
    "href": "projections/api/index.html",
    "title": "API | Event Store",
    "keywords": "API <!-- TODO: Do Something better with this? Or just link? --> URI Description HTTP Verb /projections/any Returns all known projections. GET /projections/all-non-transient Returns all known non ad-hoc projections. GET /projections/transient Returns all known ad-hoc projections. GET /projections/onetime Returns all known one-time projections. GET /projections/continuous Returns all known continuous projections. GET /projections/transient?name={name}&type={type}&enabled={enabled} Create an ad-hoc projection. This type of projection runs until completion and automatically deleted afterwards. POST Parameters name: Name of the projection type: JS or Native. (JavaScript or native. At this time, Event Store only supports JavaScript) enabled: Enable the projection (true/false) /projections/onetime?name={name}&type={type}&enabled={enabled}&checkpoints={checkpoints}&emit={emit}&trackemittedstreams={trackemittedstreams} Create a one-time projection. This type of projection runs until completion and then stops. POST Parameters name: Name of the projection type: JS or Native. (JavaScript or native. At this time, Event Store only supports JavaScript) enabled: Enable the projection (true/false) checkpoints: Enable checkpoints (true/false) emit: Enable the ability for the projection to write to streams (true/false) trackemittedstreams: Write the name of the streams the projection is managing to a separate stream. $projections-{projection-name}-emittedstreams (true/false) /projections/continuous?name={name}&type={type}&enabled={enabled}&emit={emit}&trackemittedstreams={trackemittedstreams} Create a continuous projection. This type of projection will, if enabled will continuously run unless disabled or an unrecoverable error is encountered. POST Parameters name: Name of the projection type: JS or Native. (JavaScript or native. At this time, Event Store only supports JavaScript) enabled: Enable the projection (true/false) emit: Allow the projection to write to streams (true/false) trackemittedstreams: Write the name of the streams the projection is managing to a separate stream. $projections-{projection-name}-emittedstreams (true/false) /projection/{name}/query?config={config} Returns the definition query and if config is set to true, will return the configuration. GET Parameters name: Name of the projection config: Return the definition of the projection (true/false) /projection/{name}/query?type={type}&emit={emit} Update a projection's query. PUT Parameters name: Name of the projection type: JS or Native. (JavaScript or native. At this time, Event Store only supports JavaScript) emit: Allow the projection to write to streams (true/false) trackemittedstreams: Write the name of the streams the projection is managing to a separate stream. $projections-{projection-name}-emittedstreams (true/false) /projection/{name} Returns information for a projection. GET /projection/{name}?deleteStateStream={deleteStateStream}&deleteCheckpointStream={deleteCheckpointStream}&deleteEmittedStreams={deleteEmittedStreams} Delete a projection, optionally delete the streams that were created as part of the projection. DELETE Parameters name: Name of the projection deleteStateStream: Delete the state stream (true/false) deleteCheckpointStream: Delete the checkpoint stream (true/false) deleteEmittedStreams: Delete the emitted streams stream (true/false) /projection/{name}/statistics Returns detailed information for a projection. GET Parameters name: Name of the projection /projection/{name}/state?partition={partition} Query for the state of a projection. GET Parameters name: Name of the projection partition: The partition /projection/{name}/result?partition={partition} Query for the result of a projection. GET Parameters name: Name of the projection partition: The partition /projection/{name}/command/disable?enableRunAs={enableRunAs} Disable a projection. POST Parameters name: Name of the projection enableRunAs: Enables the projection to run as the user who issued the request. /projection/{name}/command/enable?enableRunAs={enableRunAs} Enable a projection. POST Parameters name: Name of the projection enableRunAs: Enables the projection to run as the user who issued the request. /projection/{name}/command/reset?enableRunAs={enableRunAs} Reset a projection. (This will re-emit events, streams that are written to from the projection will also be soft deleted). POST Parameters name: Name of the projection enableRunAs: Enables the projection to run as the user who issued the request. /projection/{name}/command/abort?enableRunAs={enableRunAs} Abort a projection. POST Parameters name: Name of the projection enableRunAs: Enables the projection to run as the user who issued the request."
  },
  "getting-started/which-api-sdk/index.html": {
    "href": "getting-started/which-api-sdk/index.html",
    "title": "Step 4 - Which API or SDK to use | Event Store",
    "keywords": "Step 4 - Which API or SDK to use This getting started guide shows you how to get started with Event Store using the Atom publishing protocol as the primary interface. This final step covers the different APIs, and client SDKs Event Store has available with the aim of helping you choose which one suits your use case. TCP Event Store offers a low-level protocol in the form of an asynchronous TCP protocol that exchanges protobuf objects. At present this protocol has adapters for .NET and the JVM. Event Store Supported Clients .NET Client JVM Client Community Developed Clients .NET Core Node.js Node.js Node.js Haskell Erlang F# Elixir Java 8 Maven plugin Rust Go HTTP Event Store also offers an HTTP-based interface, based specifically on the AtomPub protocol . As it operates over HTTP, this is less efficient, but nearly every environment supports it. Event Store Supported Clients HTTP API Community Developed Clients PHP Python Ruby Go If you have a client to add, click the 'Improve this Doc' link on the top right of the page to submit a pull request. Which to use? Many factors go into the choice of which of the protocols (TCP vs. HTTP) to use. Both have their strengths and weaknesses. TCP is faster This speed especially applies to subscribers as events pushed to the subscriber, whereas with Atom the subscribers poll the head of the atom feed to check if new events are available. The difference can be as high as 2–3 times higher (sub 10ms for TCP, vs. seconds for Atom). Also, the number of writes per second supported is often dramatically higher when using TCP. At the time of writing, standard Event Store appliances can service around 2000 writes/second over HTTP compared to 15,000-20,000/second over TCP. This increase might be a deciding factor if you are in a high-performance environment. AtomPub is more scalable for large numbers of subscribers This scalability is due to the ability to use intermediary caching with Atom feeds. Most URIs returned by Event Store point to immutable data and are infinitely cachable. Therefore on a replay of a projection, much of the data required is likely available on a local or intermediary cache. This can also lead to lower network traffic. Atom tends to operate better in a large heterogeneous environment where you have callers from different platforms. This is especially true if you have to integrate with different teams or external vendors. Atom is an industry standard and well-documented protocol whereas the TCP protocol is a custom protocol they would need to understand. Most platforms have good existing tooling for Atom including feed readers. None of this tooling exists for analyzing traffic with the TCP protocol. Note Our recommendation would be to use AtomPub as your primary protocol unless you have low subscriber SLAs or need higher throughput on reads and writes than Atom can offer. This is due to the open nature and ease of use of the Atom protocol. Often in integration scenarios, these are more important than raw performance. Next Step Congratulations! You've reached the end of our getting started guide, what's next? Want to use the .NET client? Find more here . Want to use the HTTP API? Find out more here ."
  },
  "getting-started/projections/index.html": {
    "href": "getting-started/projections/index.html",
    "title": "Step 3 - Projections | Event Store",
    "keywords": "Step 3 - Projections This getting started guide shows you how to get started with Event Store using the Atom publishing protocol as the primary interface. Note The described is for development and evaluation of Event Store. It does not describe a production setup. The HTTP examples use cURL, but you can read Atom feeds with a wide variety of applications and languages. When running a projection, you can choose whether the query should run and give you all results present or whether the query should continue running into the future finding new results as they happen and updating its result set. Setting up Projections You enable projections with the command line argument --run-projections . For example, the command below enables all projection modes (system and user-defined): Tip read this guide for all the possible parameter values. Windows Linux Docker macOS EventStore.ClusterNode.exe --run-projections=all --start-standard-projections=true To disable them again, run: EventStore.ClusterNode.exe --run-projections=none Add EVENTSTORE_RUN_PROJECTIONS=All and EVENTSTORE_START_STANDARD_PROJECTIONS=true to your environment variables, or the /etc/eventstore/eventstore.conf configuration file and start Event Store: sudo systemctl start eventstore To disable them again, change the values to EVENTSTORE_RUN_PROJECTIONS=none . The Event Store Docker image has projections enabled by default, but you need to enable standard projections: docker run --name eventstore-node -it -p 2113:2113 -p 1113:1113 -e EVENTSTORE_RUN_PROJECTIONS=All -e EVENTSTORE_START_STANDARD_PROJECTIONS=true eventstore/eventstore To disable them again: docker run --name eventstore-node -it -p 2113:2113 -p 1113:1113 -e EVENTSTORE_RUN_PROJECTIONS=None eventstore/eventstore eventstore --run-projections=all --start-standard-projections=true To disable them again, run: eventstore --run-projections=none Note To use the default database location on macOS you need to use sudo , or you can change the location with the --db parameter. You then see new tabs enabled in the Admin UI with the 4 system projections in a Stopped state: You can also query the state of all projections using the HTTP API. Request Response curl -i http://localhost:2113/projections/any -H \"accept:application/json\" | grep -E 'effectiveName|status' The response is a list of all known projections and useful information about them. \"effectiveName\": \"$streams\" \"status\": \"Stopped\" \"statusUrl\": \"http://localhost:2113/projection/$streams\" \"effectiveName\": \"$stream_by_category\" \"status\": \"Stopped\" \"statusUrl\": \"http://localhost:2113/projection/$stream_by_category\" \"effectiveName\": \"$by_category\" \"status\": \"Stopped\" \"statusUrl\": \"http://localhost:2113/projection/$by_category\" \"effectiveName\": \"$by_event_type\" \"status\": \"Stopped\" \"statusUrl\": \"http://localhost:2113/projection/$by_event_type\" Add Sample Data Download the following files that contain sample data used throughout this step of the getting started guide. shoppingCart-b989fe21-9469-4017-8d71-9820b8dd1164.json shoppingCart-b989fe21-9469-4017-8d71-9820b8dd1165.json shoppingCart-b989fe21-9469-4017-8d71-9820b8dd1166.json shoppingCart-b989fe21-9469-4017-8d71-9820b8dd1167.json Add the sample data to four different streams: HTTP API .NET API JVM Client curl -i -d \"@shoppingCart-b989fe21-9469-4017-8d71-9820b8dd1164.json\" \"http://127.0.0.1:2113/streams/shoppingCart-b989fe21-9469-4017-8d71-9820b8dd1164\" -H \"Content-Type:application/vnd.eventstore.events+json\" curl -i -d \"@shoppingCart-b989fe21-9469-4017-8d71-9820b8dd1165.json\" \"http://127.0.0.1:2113/streams/shoppingCart-b989fe21-9469-4017-8d71-9820b8dd1165\" -H \"Content-Type:application/vnd.eventstore.events+json\" curl -i -d \"@shoppingCart-b989fe21-9469-4017-8d71-9820b8dd1166.json\" \"http://127.0.0.1:2113/streams/shoppingCart-b989fe21-9469-4017-8d71-9820b8dd1166\" -H \"Content-Type:application/vnd.eventstore.events+json\" curl -i -d \"@shoppingCart-b989fe21-9469-4017-8d71-9820b8dd1167.json\" \"http://127.0.0.1:2113/streams/shoppingCart-b989fe21-9469-4017-8d71-9820b8dd1167\" -H \"Content-Type:application/vnd.eventstore.events+json\" foreach (string f in Directory.GetFiles(\"../\", \"shoppingCart-*\")) { var streamName = Path.GetFileNameWithoutExtension(f); conn.AppendToStreamAsync(streamName, ExpectedVersion.Any, eventData).Wait(); } final Collection fileList = getAllFilesThatMatchFilenameExtension(\"/Users/chrisward/Workspace/EventStore/docs.geteventstore.com/code-examples/getting-started\", \"shoppingCart-*\"); for (Object file : fileList) { String streamName = FilenameUtils.getBaseName(removeExtension(file.toString())); System.out.println(\"value= \" + streamName); JSONParser parser = new JSONParser(); try { JSONArray events = (JSONArray) parser.parse(new FileReader(file.toString())); for (Object e : events) { JSONObject event = (JSONObject) e; final EventData json = new EventDataBuilder(\"json\") .eventId(UUID.fromString((String) event.get(\"eventId\"))) .jsonData((event.get(\"data\")).toString()) .jsonMetadata(event.get(\"metadata\").toString()) .build(); final WriteEvents writeEvents = new WriteEventsBuilder(\"newstream\") .addEvent(json) .expectAnyVersion() .build(); connection.tell(writeEvents, writeResult); } } catch (FileNotFoundException e) { e.printStackTrace(); } catch (IOException e) { e.printStackTrace(); } catch (ParseException e) { e.printStackTrace(); } } Note While it's not the fastest method, you can also use the Admin UI for creating the streams, and all the tasks in this step, as we saw in step 1 . Writing your first projection Tip Read this guide to find out more about the user defined projection's API. The projection counts the number of 'XBox One S's that customers added to their shopping carts. A Projection starts with a selector, in this case fromAll() . Another possibility is fromCategory({category}) which this step discusses later, but for now, fromAll should do. The second part of a projection is a set of filters. There is a special filter called $init that sets up an initial state. You want to start a counter from 0 and each time Event Store observes an ItemAdded event for an 'Xbox One S,' increment the counter. Here is the projection, you can download it as a file here : fromAll() .when({ $init: function(){ return { count: 0 } }, ItemAdded: function(s,e){ if(e.body.Description.indexOf(\"Xbox One S\") >= 0){ s.count += 1; } } }) You create a projection by calling the projection API and providing it with the definition of the projection. Here you decide how to run the projection, declaring that you want the projection to start from the beginning and keep running. You can create a projection using the Admin UI by opening the Projections tab, clicking the New Projection button and filling in the details of your projection. And to use the HTTP or .NET API: HTTP API .NET API curl -i --data-binary \"@xbox-one-s-counter.json\" http://localhost:2113/projections/continuous?name=xbox-one-s-counter%26type=js%26enabled=true%26emit=true%26trackemittedstreams=true -u admin:changeit Next Steps read here for more information on creating projections with the HTTP API and the parameters available, or our projections section for details on projection syntax. public static readonly ProjectionsManager Projection = new ProjectionsManager(new ConsoleLogger(), new IPEndPoint(IPAddress.Parse(\"127.0.0.1\"), 2113), TimeSpan.FromMilliseconds(5000)); projection.CreateContinuousAsync(\"xbox-one-s-counter\", countItemsProjection, adminCredentials).Wait(); Next Steps read here for more information on creating projections with the .NET API and the parameters available, or our projections section for details on projection syntax. Querying for the state of the projection Now the projection is running, you can query the state of the projection. As this projection has a single state, query it with the following request: HTTP API .NET API Response curl -i http://localhost:2113/projection/xbox-one-s-counter/state var projectionState = projection.GetStateAsync(\"xbox-one-s-counter\", Globals.AdminCredentials); Console.WriteLine(projectionState.Result); { \"count\": 3 } Writing to Streams from Projections The above gives you the correct result but requires you to poll for the state of a projection. What if you wanted Event Store to notify you about state updates via subscriptions? Output State Update the projection to output the state to a stream by calling the outputState() method on the projection which by default produces a $projections-{projection-name}-result stream. Below is the updated projection, you can download it as a file here : fromAll() .when({ $init: function(){ return { count: 0 } }, ItemAdded: function(s,e){ if(e.body.Description.indexOf(\"Xbox One S\") >= 0){ s.count += 1; } } }).outputState() To update the projection, edit the projection definition in the Admin UI, or issue the following request: HTTP API .NET API curl -i -X PUT --data-binary @\"xbox-one-s-counter-outputState.json\" http://localhost:2113/projection/xbox-one-s-counter/query?emit=yes -u admin:changeit projection.UpdateQueryAsync(\"xbox-one-s-counter\", countItemsProjectionUpdate, adminCredentials).Wait(); Then reset the projection you created above: HTTP API .NET API Response curl -i -X POST \"http://localhost:2113/projection/xbox-one-s-counter/command/reset\" -H \"accept:application/json\" -H \"Content-Length:0\" -u admin:changeit projection.ResetAsynsc(\"xbox-one-s-counter\", countItemsProjectionUpdate, adminCredentials).Wait(); { \"msgTypeId\": 293, \"name\": \"xbox-one-s-counter\" } You can now read the events in the result stream by issuing a read request. HTTP API .NET API Response curl -i \"http://localhost:2113/streams/\\$projections-xbox-one-s-counter-result?embed=body\" -H \"accept:application/json\" -u admin:changeit | grep data var readEvents = conn.ReadStreamEventsForwardAsync(\"$projections-xbox-one-s-counter-result\", 0, 10, true) .Result; foreach (var evt in readEvents.Events) Console.WriteLine(Encoding.UTF8.GetString(evt.Event.Data)); \"data\": \"{\\\"count\\\":3}\", \"data\": \"{\\\"count\\\":2}\", \"data\": \"{\\\"count\\\":1}\", Configure Projection Properties You can configure properties of the projection by updating values of the options object. For example, the following projection changes the name of the results stream, you can download it as a file here : options({ resultStreamName: \"xboxes\" }) fromAll() .when({ $init: function(){ return { count: 0 } }, ItemAdded: function(s,e){ if(e.body.Description.indexOf(\"Xbox One S\") >= 0){ s.count += 1; } } }).outputState() Then send the update to the projection: HTTP API .NET API curl -i -X PUT -d \"@update-projection-options.json\" http://localhost:2113/projection/xbox-one-s-counter/query?emit=yes -u admin:changeit projection.UpdateQueryAsync(\"xbox-one-s-counter\", optionsProjectionOptionsUpdate,adminCredentials).Wait(); Tip You can find all the options available in the user defined projections guide . Now you can read the result as above, but use the new stream name: HTTP API .NET API curl -i \"http://localhost:2113/streams/xboxes?embed=body\" -H \"accept:application/json\" -u admin:changeit | grep data readEvents = conn.ReadStreamEventsForwardAsync(\"xboxes\", 0, 10, true).Result; foreach (var evt in readEvents.Events) Console.WriteLine(Encoding.UTF8.GetString(evt.Event.Data)); } The Number of items per shopping cart The example in this step so far relied on a global state for the projection, but what if you wanted a count of the number of items in the shopping cart per shopping cart. Event Store has a built-in $by_category projection that lets you select events from a particular list of streams. Enable this projection with the following command. HTTP API .NET API curl -i -d{} http://localhost:2113/projection/%24by_category/command/enable -u admin:changeit projection.EnableAsync(\"$by_category\", adminCredentials).Wait(); The projection links events from existing streams to new streams by splitting the stream name by a separator. You can configure the projection to specify the position of where to split the stream id and provide a separator. By default, the category splits the stream id by a dash. The category is the first string. Stream Name Category shoppingCart-54 shoppingCart shoppingCart-v1-54 shoppingCart shoppingCart No category as there is no separator You want to define a projection that produces a count per stream for a category, but the state needs to be per stream. To do so, use $by_category and it's fromCategory API method. Below is the projection, you can download the file here : fromCategory('shoppingCart') .foreachStream() .when({ $init: function(){ return { count: 0 } }, ItemAdded: function(s,e){ s.count += 1; } }) Create the projection with the following request: HTTP API .NET API curl -i --data-binary \"@shopping-cart-counter.json\" http://localhost:2113/projections/continuous?name=shopping-cart-item-counter%26type=js%26enabled=true%26emit=true%26trackemittedstreams=true -u admin:changeit projection.CreateContinuousAsync(\"shopping-cart-item-counter\", itemCounterProjection, true, adminCredentials).Wait(); Querying for the state of the projection by partition Querying for the state of the projection is different due to the partitioning of the projection. You have to specify the partition and the name of the stream. HTTP API .NET API Response curl -i http://localhost:2113/projection/shopping-cart-item-counter/state?partition=shoppingCart-b989fe21-9469-4017-8d71-9820b8dd1164 var projectionState = projection.GetPartitionStateAsync(\"shopping-cart-item-counter\", \"shoppingCart-b989fe21-9469-4017-8d71-9820b8dd1164\", adminCredentials); Console.WriteLine(projectionState.Result); { \"count\": 2 } Next Step In this third part of our getting started guide you learned about projections. The next, and final part covers which API or SDK to use, and when. Step 4 - Which API or SDK"
  },
  "getting-started/reading-subscribing-events/index.html": {
    "href": "getting-started/reading-subscribing-events/index.html",
    "title": "Step 2 - Read events from a stream and subscribe to changes | Event Store",
    "keywords": "Step 2 - Read events from a stream and subscribe to changes This getting started guide shows you how to get started with Event Store using the Atom publishing protocol as the primary interface. Note The described is for development and evaluation of Event Store. It does not describe a production setup. The HTTP examples use cURL, but you can read Atom feeds with a wide variety of applications and languages. This second step covers reading events from a stream and subscribing to changes to events in a stream. Read a Stream of Events Event Store exposes all streams as atom feeds , and you can read data from the stream by navigating to the head URI of the stream http://127.0.0.1:2113/streams/<STREAM_ID > with cURL, or click the Stream Browser tab in the Admin UI and you see the stream you created in step 1. Request Response curl -i -H \"Accept:application/vnd.eventstore.atom+json\" \"http://127.0.0.1:2113/streams/newstream\" Note This returns the feed in JSON format, you can also use Accept:application/atom+xml if you prefer XML. HTTP/1.1 200 OK Access-Control-Allow-Methods: POST, DELETE, GET, OPTIONS Access-Control-Allow-Headers: Content-Type, X-Requested-With, X-Forwarded-Host, X-Forwarded-Prefix, X-PINGOTHER, Authorization, ES-LongPoll, ES-ExpectedVersion, ES-EventId, ES-EventType, ES-RequiresMaster, ES-HardDelete, ES-ResolveLinkTos Access-Control-Allow-Origin: * Access-Control-Expose-Headers: Location, ES-Position, ES-CurrentVersion Cache-Control: max-age=0, no-cache, must-revalidate Vary: Accept ETag: \"0;-2060438500\" Content-Type: application/vnd.eventstore.atom+json; charset=utf-8 Server: Mono-HTTPAPI/1.0 Date: Fri, 15 Dec 2017 12:23:23 GMT Content-Length: 1262 Keep-Alive: timeout=15,max=100 { \"title\": \"Event stream 'newstream'\", \"id\": \"http://127.0.0.1:2113/streams/newstream\", \"updated\": \"2017-12-15T12:19:32.021776Z\", \"streamId\": \"newstream\", \"author\": { \"name\": \"EventStore\" }, \"headOfStream\": true, \"selfUrl\": \"http://127.0.0.1:2113/streams/newstream\", \"eTag\": \"0;-2060438500\", \"links\": [ { \"uri\": \"http://127.0.0.1:2113/streams/newstream\", \"relation\": \"self\" }, { \"uri\": \"http://127.0.0.1:2113/streams/newstream/head/backward/20\", \"relation\": \"first\" }, { \"uri\": \"http://127.0.0.1:2113/streams/newstream/1/forward/20\", \"relation\": \"previous\" }, { \"uri\": \"http://127.0.0.1:2113/streams/newstream/metadata\", \"relation\": \"metadata\" } ], \"entries\": [ { \"title\": \"0@newstream\", \"id\": \"http://127.0.0.1:2113/streams/newstream/0\", \"updated\": \"2017-12-15T12:19:32.021776Z\", \"author\": { \"name\": \"EventStore\" }, \"summary\": \"event-type\", \"links\": [ { \"uri\": \"http://127.0.0.1:2113/streams/newstream/0\", \"relation\": \"edit\" }, { \"uri\": \"http://127.0.0.1:2113/streams/newstream/0\", \"relation\": \"alternate\" } ] } ] } .NET Client API JVM Client To use the .NET API, use the following method passing the stream name, the start point in the stream, the number of events to read and whether to follow links to the event data: var readEvents = conn.ReadStreamEventsForwardAsync(streamName, 0, 10, true).Result; foreach (var evt in readEvents.Events) Console.WriteLine(Encoding.UTF8.GetString(evt.Event.Data)); Next Steps read this guide for more information on how to read events with the .NET API. To use the JVM client, use the following method passing the stream name, the start point in the stream, and whether to follow links to the event data: final ActorRef readResult = system.actorOf(Props.create(ReadResult.class)); //TODO: How to read ten events? final ReadEvent readEvent = new ReadEventBuilder(\"newstream\") .first() .resolveLinkTos(false) .build(); connection.tell(readEvent, readResult); Read a Single Event The feed has a single item inside of it, the one you posted in part 1 . You can see details of the event in the Stream Browser tab in the Admin UI by clicking a stream to see its events, and then clicking an event. Or with cURL, issue a GET to the alternate URI value from the response above. Request Response curl -i http://127.0.0.1:2113/streams/newstream/0 -H \"Accept: application/json\" Note You can also use Accept: text/xml if you prefer XML. HTTP/1.1 200 OK Access-Control-Allow-Methods: GET, OPTIONS Access-Control-Allow-Headers: Content-Type, X-Requested-With, X-PINGOTHER Access-Control-Allow-Origin: * Cache-Control: max-age=31536000, public Vary: Accept Content-Type: application/json; charset: utf-8 Server: Mono-HTTPAPI/1.0 Date: Wed, 03 Jul 2013 11:09:12 GMT Content-Length: 14 Keep-Alive: timeout=15,max=100 { \"a\": \"1\" } .NET Client API JVM Client To use the .NET API, use the following method passing the stream name, the event you want to read and wether to return the event data: var readResult = conn.ReadEventAsync(streamName, 0, true).Result; Console.WriteLine(Encoding.UTF8.GetString(readResult.Event.Value.Event.Data)); To use the Java client, use the following method passing the stream name, the event you want to read and if you want to also return the event data: final ActorRef readResult = system.actorOf(Props.create(ReadResult.class)); //TODO: How to read ten events? final ReadEvent readEvent = new ReadEventBuilder(\"newstream\") .first() .resolveLinkTos(false) .build(); connection.tell(readEvent, readResult); Paginating through Events For longer feeds of events than this example, you need to paginate through the feed, reading a certain number of events at a time. You can use the HTTP API to paginate through the feed using previous and next links within the stream. Or you can use a read method of the .NET API (and JVM client), to loop through events a certain number at a time. Subscribing to Receive Stream Updates A common operation is to subscribe to a stream and receive notifications for changes. As new events arrive, you continue following them. You can create subscriptions and watch events as they arrive under the Persistent Subscriptions tab, or use an API method: HTTP API .NET API JVM Client API curl -i -X PUT -d $'{\"startFrom\": 0,\"resolveLinktos\": false}' http://localhost:2113/subscriptions/newstream/examplegroup -u admin:changeit -H \"Content-Type: application/json\" PersistentSubscriptionSettings settings = PersistentSubscriptionSettings.Create() .DoNotResolveLinkTos() .StartFromCurrent(); conn.CreatePersistentSubscriptionAsync(streamName, \"examplegroup\", settings, adminCredentials).Wait(); conn.ConnectToPersistentSubscription(streamName, \"examplegroup\", (_, x) => { var data = Encoding.ASCII.GetString(x.Event.Data); Console.WriteLine(\"Received: \" + x.Event.EventStreamId + \":\" + x.Event.EventNumber); Console.WriteLine(data); }, (sub, reason, ex) => { }, adminCredentials); Console.WriteLine(\"waiting for events. press enter to exit\"); Console.ReadLine(); Next Steps Find more details on the parameters used in the example above, read the API documentation for PersistentSubscriptionSettings , CreatePersistentSubscriptionAsync and ConnectToPersistentSubscription final Closeable closeable = connection.subscribeToStream(\"newstream\", new SubscriptionObserver<Event>() { @Override public void onLiveProcessingStart(Closeable subscription) { system.log().info(\"live processing started\"); } @Override public void onEvent(Event event, Closeable subscription) { system.log().info(event.toString()); } @Override public void onError(Throwable e) { system.log().error(e.toString()); } @Override public void onClose() { system.log().error(\"subscription closed\"); } }, false, null); <!-- TODO: The dotnet example has reading events as they are added to subscription, HTTP does not, expand? --> <!-- TODO: And write more events, then what etc --> There are three types of subscription patterns, useful in different situations. Volatile Subscriptions This subscription calls a given function for events written after establishing the subscription. They are useful when you need notification of new events with minimal latency, but where it's not necessary to process every event. <!-- TODO: Example needed? --> For example, if a stream has 100 events in it when a subscriber connects, the subscriber can expect to see event number 101 onwards until the time the subscription is closed or dropped. Catch-Up Subscriptions This subscription specifies a starting point, in the form of an event number or transaction file position. You call the function for events from the starting point until the end of the stream, and then for subsequently written events. <!-- TODO: Example needed? --> For example, if you specify a starting point of 50 when a stream has 100 events, the subscriber can expect to see events 51 through 100, and then any events are subsequently written until you drop or close the subscription. Persistent Subscriptions Note Persistent subscriptions exist in version 3.2.0 and above of Event Store. This subscription supports the \" competing consumers \" messaging pattern and are useful when you need to distribute messages to many workers. Event Store saves the subscription state server-side and allows for at-least-once delivery guarantees across multiple consumers on the same stream. It is possible to have many groups of consumers compete on the same stream, with each group getting an at-least-once guarantee. <!-- TODO: Example needed? --> Next Step In this second part of our getting started guide you learned how to read events from a stream and subscribe to changes. The next part covers projections, used to give you continuous queries of your data. Step 3 - Projections"
  },
  "getting-started/index.html": {
    "href": "getting-started/index.html",
    "title": "Step 1 - Install, run, and write your first event | Event Store",
    "keywords": "Step 1 - Install, run, and write your first event This getting started guide shows you how to get started with Event Store using the Atom publishing protocol as the primary interface. Note The described is for development and evaluation of Event Store. It does not describe a production setup. The HTTP examples use cURL, but you can read Atom feeds with a wide variety of applications and languages. This first step covers installation and running Event Store, and writing your first event. Install and run Event Store Note Unless you pass a database option with --db , Event Store writes to a new database created in the host system's temporary files path each time it is started. For more information on Command Line Arguments read this guide . Windows Linux Docker Kubernetes macOS The prerequisites for Installing on Windows are: NET Framework 4.0+ Windows platform SDK with compilers (v7.1) or Visual C++ installed (Only required for a full build) Event Store has Chocolatey packages available that you can install with the following command: choco install eventstore-oss You can also download a binary, unzip the archive and run from the folder location with an administrator console: EventStore.ClusterNode.exe --db ./db --log ./logs This command starts Event Store with the database stored at the path ./db and the logs in ./logs . You can view further command line arguments in the server docs . Event Store runs in an administration context because it starts an HTTP server through http.sys . For permanent or production instances you need to provide an ACL such as: netsh http add urlacl url=http://+:2113/ user=DOMAIN\\username The prerequisites for Installing on Linux are: We recommend Mono 5.16.0 , but other versions may also work. Event Store has pre-built packages available for Debian-based distributions , manual instructions for distributions that use RPM , or you can build from source . The final package name to install is eventstore-oss . If you installed from a pre-built package, start Event Store with: sudo systemctl start eventstore When you install the Event Store package, the service doesn't start by default. This is to allow you to change the configuration, located at /etc/eventstore/eventstore.conf and to prevent creating a default database. In all other cases you can run the Event Store binary or use our run-node.sh shell script which exports the environment variable LD_LIBRARY_PATH to include the installation path of Event Store, which is necessary if you are planning to use projections. ./run-node.sh --db ./ESData Note We recommend that when using Linux you set the 'open file limit' to a high number. The precise value depends on your use case, but at least between 30,000 and 60,000 . Event Store has a Docker image available for any platform that supports Docker: docker run --name eventstore-node -it -p 2113:2113 -p 1113:1113 eventstore/eventstore Event Store has a Helm chart available for installing Event Store on Kubernetes clusters: helm repo add eventstore https://eventstore.github.io/EventStore.Charts helm repo update helm install -n eventstore eventstore/eventstore Note Read this guide for more details on how to use the helm chart. Read this guide for more details on using Kubernetes with AKS and this guide for more details on using Kubernetes with GKE. Event Store has a macOS package you can download and install, and we maintain a Homebrew Cask formula you can install: brew cask install eventstore In each case you can run Event Store with the eventstore command, and stop it with Ctrl+c . To use the default database location you need to use sudo , or you can change the location with the --db parameter. Interacting with an Event Store Server There are three ways to interact with Event Store: With the Admin UI . With the HTTP API . With a Client API, which you need to install first. Our documentation covers the .NET Core client API and the JVM client but others are available. .NET Client JVM Client Install the .NET Core client API using your preferred method, add it to your project: dotnet add package EventStore.Client And require it in your code: using EventStore.ClientAPI; Add the JVM client using Maven: <dependency> <groupId>com.geteventstore</groupId> <artifactId>eventstore-client_2.12</artifactId> <version>5.0.8</version> </dependency> And require it in your code: import eventstore.*; Connecting to Event Store If you want to use the Admin UI or the HTTP API, then you use port 2113 . For example, http://127.0.0.1:2113/ in your web browser, or curl -i http://127.0.0.1:2113 for the HTTP API. Tip The default username and password is admin:changeit To use a client API, you use port 1113 and create a connection: .NET Client JVM Client When using the .NET client, you also need to give the connection a name. var conn = EventStoreConnection.Create(new Uri(\"tcp://admin:changeit@localhost:1113\"), \"InputFromFileConsoleApp\"); Next Steps In this example we used the EventStoreConnection.Create() overloaded method but others are available . final ActorSystem system = ActorSystem.create(); final Settings settings = new SettingsBuilder() .address(new InetSocketAddress(\"127.0.0.1\", 1113)) .defaultCredentials(\"admin\", \"changeit\") .build(); final ActorRef connection = system.actorOf(ConnectionActor.getProps(settings)); Note For our JVM examples we use akka , a toolkit for building highly concurrent and distributed JVM applications. Writing Events to an Event Stream Event Store operates on a concept of Event Streams, and the first operation we look at is how to write to a stream. If you are Event Sourcing a domain model, a stream equates to an aggregate function. Event Store can handle hundreds of millions of streams, so create as many as you need. If you post to a stream that doesn't exist, Event Store creates it before adding the events. You can write events using the Admin UI by clicking the Stream Browser tab, the Add Event button, filling in the form with relevant values and clicking the Add button at the bottom of the page. Open a text editor, copy and paste the following event definition, and save it as event.json . [ { \"eventId\": \"fbf4a1a1-b4a3-4dfe-a01f-ec52c34e16e4\", \"eventType\": \"event-type\", \"data\": { \"a\": \"1\" } } ] HTTP API .NET API JVM Client Use the following cURL command, passing the name of the stream and the events to write: curl -i -d \"@event.json\" \"http://127.0.0.1:2113/streams/newstream\" -H \"Content-Type:application/vnd.eventstore.events+json\" Next Steps Read this guide for more information on how to write events with the HTTP API. Note You can also post events to the HTTP API as XML, by changing the Content-Type header to XML . To use the .NET API, use the following method, passing the name of the stream, the version, and the events to write: conn.AppendToStreamAsync(streamName, ExpectedVersion.Any, eventData).Wait(); Next Steps Read this guide for more information on how to write events with the .NET API. We don't cover version checking in this guide, but you can read more in the optimistic concurrency guide . To use the JVM Client, use the following method, passing the name of the stream, the version, and the events to write: final ActorRef writeResult = system.actorOf(Props.create(WriteResult.class)); final EventData event = new EventDataBuilder(\"event-type\") .eventId(UUID.randomUUID()) .jsonData(\"{\\\"a\\\": \\\"1\\\"}\") .build(); final WriteEvents writeEvents = new WriteEventsBuilder(\"newstream\") .addEvent(event) .expectAnyVersion() .build(); connection.tell(writeEvents, writeResult); } Next Step In this first part of our getting started guide you learned how to install and run Event Store and write your first event. The next part covers reading events from a stream. Step 2 - Read events from a stream and subscribe to changes"
  },
  "http-api/optional-http-headers/trusted-intermediary/index.html": {
    "href": "http-api/optional-http-headers/trusted-intermediary/index.html",
    "title": "Optional HTTP Headers: Trusted Intermediary | Event Store",
    "keywords": "Optional HTTP Headers: Trusted Intermediary The trusted intermediary header helps Event Store support a common security architecture. There are thousands of possible methods for handling authentication and it is impossible for us to support them all. The header allows you to configure a trusted intermediary to handle the authentication instead of Event Store. A sample configuration is to enable OAuth2 with the following steps: Configure Event Store to run on the local loopback. Configure nginx to handle OAuth2 authentication. After authenticating the user, nginx rewrites the request and forwards it to the loopback to the Event Store that serves the request. The header has the form of {user}; group, group1 and the Event Store ACLs use the information to handle security. ES-TrustedAuth: \"root; admin, other\" Note This feature is DISABLED by default. You must specifically opt into this feature by running Event Store with the Enable Trusted Intermediary configuration or command line option ."
  },
  "http-api/optional-http-headers/resolve-linkto/index.html": {
    "href": "http-api/optional-http-headers/resolve-linkto/index.html",
    "title": "Optional HTTP Headers: Resolve LinkTo | Event Store",
    "keywords": "Optional HTTP Headers: Resolve LinkTo When using projections you can have links placed into another stream. By default Event Store always resolve linkTo s for you returning the event that points to the link. You can use the ES-ResolveLinkTos: false HTTP header to tell Event Store to return you the actual link and to not resolve it. You can see the differences in behaviour in the following cURL commands. Request Response curl -i http://127.0.0.1:2113/streams/shoppingCart-b989fe21-9469-4017-8d71-9820b8dd1167/0 -H \"accept:application/vnd.eventstore.atom+json\" -H \"ES-ResolveLinkTos: true\" HTTP/1.1 200 OK Access-Control-Allow-Methods: GET, OPTIONS Access-Control-Allow-Headers: Content-Type, X-Requested-With, X-Forwarded-Host, X-Forwarded-Prefix, X-PINGOTHER, Authorization, ES-LongPoll, ES-ExpectedVersion, ES-EventId, ES-EventType, ES-RequiresMaster, ES-HardDelete, ES-ResolveLinkTos Access-Control-Allow-Origin: * Access-Control-Expose-Headers: Location, ES-Position, ES-CurrentVersion Cache-Control: max-age=31536000, public Vary: Accept Content-Type: application/vnd.eventstore.atom+json; charset=utf-8 Server: Mono-HTTPAPI/1.0 Date: Tue, 28 Aug 2018 13:13:49 GMT Content-Length: 918 Keep-Alive: timeout=15,max=100 { \"title\": \"0@shoppingCart-b989fe21-9469-4017-8d71-9820b8dd1167\", \"id\": \"http://127.0.0.1:2113/streams/shoppingCart-b989fe21-9469-4017-8d71-9820b8dd1167/0\", \"updated\": \"2018-08-28T12:56:15.263731Z\", \"author\": { \"name\": \"EventStore\" }, \"summary\": \"ItemAdded\", \"content\": { \"eventStreamId\": \"shoppingCart-b989fe21-9469-4017-8d71-9820b8dd1167\", \"eventNumber\": 0, \"eventType\": \"ItemAdded\", \"eventId\": \"b989fe21-9469-4017-8d71-9820b8dd1167\", \"data\": { \"Description\": \"Xbox One Elite (Console)\" }, \"metadata\": { \"TimeStamp\": \"2016-12-23T10:00:00.9225401+01:00\" } }, \"links\": [ { \"uri\": \"http://127.0.0.1:2113/streams/shoppingCart-b989fe21-9469-4017-8d71-9820b8dd1167/0\", \"relation\": \"edit\" }, { \"uri\": \"http://127.0.0.1:2113/streams/shoppingCart-b989fe21-9469-4017-8d71-9820b8dd1167/0\", \"relation\": \"alternate\" } ] } Note The content links are pointing to the original projection stream. The linked events are resolved back to where they point. With the header set the links (or embedded content) instead point back to the actual linkTo events. Request Response curl -i http://127.0.0.1:2113/streams/shoppingCart-b989fe21-9469-4017-8d71-9820b8dd1167/0 -H \"accept:application/vnd.eventstore.atom+json\" -H \"ES-ResolveLinkTos: false\" HTTP/1.1 200 OK Access-Control-Allow-Methods: GET, OPTIONS Access-Control-Allow-Headers: Content-Type, X-Requested-With, X-Forwarded-Host, X-Forwarded-Prefix, X-PINGOTHER, Authorization, ES-LongPoll, ES-ExpectedVersion, ES-EventId, ES-EventType, ES-RequiresMaster, ES-HardDelete, ES-ResolveLinkTos Access-Control-Allow-Origin: * Access-Control-Expose-Headers: Location, ES-Position, ES-CurrentVersion Cache-Control: max-age=31536000, public Vary: Accept Content-Type: application/vnd.eventstore.atom+json; charset=utf-8 Server: Mono-HTTPAPI/1.0 Date: Tue, 28 Aug 2018 13:22:09 GMT Content-Length: 918 Keep-Alive: timeout=15,max=100 { \"title\": \"0@shoppingCart-b989fe21-9469-4017-8d71-9820b8dd1167\", \"id\": \"http://127.0.0.1:2113/streams/shoppingCart-b989fe21-9469-4017-8d71-9820b8dd1167/0\", \"updated\": \"2018-08-28T12:56:15.263731Z\", \"author\": { \"name\": \"EventStore\" }, \"summary\": \"ItemAdded\", \"content\": { \"eventStreamId\": \"shoppingCart-b989fe21-9469-4017-8d71-9820b8dd1167\", \"eventNumber\": 0, \"eventType\": \"ItemAdded\", \"eventId\": \"b989fe21-9469-4017-8d71-9820b8dd1167\", \"data\": { \"Description\": \"Xbox One Elite (Console)\" }, \"metadata\": { \"TimeStamp\": \"2016-12-23T10:00:00.9225401+01:00\" } }, \"links\": [ { \"uri\": \"http://127.0.0.1:2113/streams/shoppingCart-b989fe21-9469-4017-8d71-9820b8dd1167/0\", \"relation\": \"edit\" }, { \"uri\": \"http://127.0.0.1:2113/streams/shoppingCart-b989fe21-9469-4017-8d71-9820b8dd1167/0\", \"relation\": \"alternate\" } ] }"
  },
  "http-api/optional-http-headers/expected-version/index.html": {
    "href": "http-api/optional-http-headers/expected-version/index.html",
    "title": "Optional HTTP Headers: Expected Version | Event Store",
    "keywords": "Optional HTTP Headers: Expected Version When you write to a stream you often want to use Expected Version to allow for optimistic concurrency with a stream. You commonly use this for a domain object projection. i.e., \"A write can succeed if I have seen everyone else's writes.\" You set ExpectedVersion with the syntax ES-ExpectedVersion: # , where # is an integer version number. There are other special values available: 0 , the stream should exist but be empty when writing. -1 , the stream should not exist when writing. -2 , the write should not conflict with anything and should always succeed. -4 , the stream or a metadata stream should exist when writing. If the ExpectedVersion does not match the version of the stream, Event Store returns an HTTP 400 Wrong expected EventNumber response. This response contains the current version of the stream in an ES-CurrentVersion header. In the following cURL command ExpectedVersion is not set, and it appends or create/append to the stream. Request Response curl -i -d \"@event.json\" \"http://127.0.0.1:2113/streams/newstream\" -H \"Content-Type:application/json\" -H \"ES-EventType: SomeEvent\" -H \"ES-EventId: C322E299-CB73-4B47-97C5-5054F920746E\" HTTP/1.1 201 Created Access-Control-Allow-Methods: POST, DELETE, GET, OPTIONS Access-Control-Allow-Headers: Content-Type, X-Requested-With, X-PINGOTHER Access-Control-Allow-Origin: * Location: http://127.0.0.1:2113/streams/newstream/0 Content-Type: text/plain; charset: utf-8 Server: Mono-HTTPAPI/1.0 Date: Fri, 28 Jun 2013 12:17:59 GMT Content-Length: 0 Keep-Alive: timeout=15,max=100 The stream 'newstream' has one event. If you append with an expected version of '3', you receive an error. Request Response curl -i -d @event-version.json \"http://127.0.0.1:2113/streams/newstream\" -H \"Content-Type:application/vnd.eventstore.events+json\" -H \"ES-ExpectedVersion: 3\" HTTP/1.1 400 Wrong expected EventNumber Access-Control-Allow-Methods: POST, DELETE, GET, OPTIONS Access-Control-Allow-Headers: Content-Type, X-Requested-With, X-Forwarded-Host, X-Forwarded-Prefix, X-PINGOTHER, Authorization, ES-LongPoll, ES-ExpectedVersion, ES-EventId, ES-EventType, ES-RequiresMaster, ES-HardDelete, ES-ResolveLinkTos Access-Control-Allow-Origin: * Access-Control-Expose-Headers: Location, ES-Position, ES-CurrentVersion ES-CurrentVersion: 0 Content-Type: text/plain; charset=utf-8 Server: Mono-HTTPAPI/1.0 Date: Tue, 14 Aug 2018 14:08:44 GMT Content-Length: 0 Connection: close You can see from the ES-CurrentVersion header above that the stream is at version 0. Appending with an expected version of 0 works. The expected version is always the version of the last event known in the stream. Request Response curl -i -d @event-version.json \"http://127.0.0.1:2113/streams/newstream\" -H \"Content-Type:application/vnd.eventstore.events+json\" -H \"ES-CurrentVersion: 0\" HTTP/1.1 201 Created Access-Control-Allow-Methods: POST, DELETE, GET, OPTIONS Access-Control-Allow-Headers: Content-Type, X-Requested-With, X-Forwarded-Host, X-Forwarded-Prefix, X-PINGOTHER, Authorization, ES-LongPoll, ES-ExpectedVersion, ES-EventId, ES-EventType, ES-RequiresMaster, ES-HardDelete, ES-ResolveLinkTos Access-Control-Allow-Origin: * Access-Control-Expose-Headers: Location, ES-Position, ES-CurrentVersion Location: http://127.0.0.1:2113/streams/newstream/2 Content-Type: text/plain; charset=utf-8 Server: Mono-HTTPAPI/1.0 Date: Tue, 14 Aug 2018 10:02:08 GMT Content-Length: 0 Keep-Alive: timeout=15,max=100"
  },
  "http-api/optional-http-headers/eventtype/index.html": {
    "href": "http-api/optional-http-headers/eventtype/index.html",
    "title": "Optional HTTP Headers: EventType | Event Store",
    "keywords": "Optional HTTP Headers: EventType When you write to a stream and don't the application/vnd.eventstore.events+json/+xml media type you must specify an event type with the event that you are posting. This isn't required with the custom media type as it's specified within the format itself. You use the ES-EventType header as follows. Request Response curl -i -d \"@event.json\" \"http://127.0.0.1:2113/streams/newstream\" -H \"Content-Type:application/json\" -H \"ES-EventType: SomeEvent\" -H \"ES-EventId: C322E299-CB73-4B47-97C5-5054F920746E\" HTTP/1.1 201 Created Access-Control-Allow-Methods: POST, DELETE, GET, OPTIONS Access-Control-Allow-Headers: Content-Type, X-Requested-With, X-PINGOTHER Access-Control-Allow-Origin: * Location: http://127.0.0.1:2113/streams/newstream/0 Content-Type: text/plain; charset: utf-8 Server: Mono-HTTPAPI/1.0 Date: Fri, 28 Jun 2013 12:17:59 GMT Content-Length: 0 Keep-Alive: timeout=15,max=100 If you view the event in the UI or with cURL it has the EventType of SomeEvent : <!-- TODO: Does this make sense? If I can't use the custom medi type --> Request Response curl -i http://127.0.0.1:2113/streams/newstream/0 -H \"accept:application/vnd.eventstore.atom+json\" { \"title\": \"0@newstream\", \"id\": \"http://127.0.0.1:2113/streams/newstream/0\", \"updated\": \"2018-08-27T08:27:58.986756Z\", \"author\": { \"name\": \"EventStore\" }, \"summary\": \"SomeEvent\", \"content\": { \"eventStreamId\": \"newstream\", \"eventNumber\": 0, \"eventType\": \"SomeEvent\", \"eventId\": \"c322e299-cb73-4b47-97c5-5054f920746e\", \"data\": { \"a\": \"1\" }, \"metadata\": \"\" }, \"links\": [ { \"uri\": \"http://127.0.0.1:2113/streams/newstream/0\", \"relation\": \"edit\" }, { \"uri\": \"http://127.0.0.1:2113/streams/newstream/0\", \"relation\": \"alternate\" } ] }"
  },
  "http-api/optional-http-headers/eventid/index.html": {
    "href": "http-api/optional-http-headers/eventid/index.html",
    "title": "Optional HTTP Headers: EventID | Event Store",
    "keywords": "Optional HTTP Headers: EventID When you write to a stream and don't use the application/vnd.eventstore.events+json/+xml media type, you need to specify an event ID with the event you post. This is not required with the custom media type as it is specified within the format (there is an EventId on each entry in the format). Event Store uses EventId for impotency. You can include an event ID on an event by specifying this header. Request Response curl -i -d \"@event.json\" \"http://127.0.0.1:2113/streams/newstream\" -H \"Content-Type:application/json\" -H \"ES-EventType: SomeEvent\" -H \"ES-EventId: C322E299-CB73-4B47-97C5-5054F920746E\" HTTP/1.1 201 Created Access-Control-Allow-Methods: POST, DELETE, GET, OPTIONS Access-Control-Allow-Headers: Content-Type, X-Requested-With, X-PINGOTHER Access-Control-Allow-Origin: * Location: http://127.0.0.1:2113/streams/newstream/0 Content-Type: text/plain; charset: utf-8 Server: Mono-HTTPAPI/1.0 Date: Fri, 28 Jun 2013 12:17:59 GMT Content-Length: 0 Keep-Alive: timeout=15,max=100 If you don't add an ES-EventId header on an append where the body is considered the actual event (e.g., not using application/vnd.eventstore.events+json/+xml ) Event Store generates a unique identifier for you and redirects you to an idempotent URI where you can post your event. If you can create a UUID then you shouldn't use this feature, but it's useful when you cannot create a UUID. Request Response curl -i -d \"@event.json\" \"http://127.0.0.1:2113/streams/newstream\" -H \"Content-Type:application/json\" -H \"ES-EventType: SomeEvent\" HTTP/1.1 307 Temporary Redirect Access-Control-Allow-Methods: POST, DELETE, GET, OPTIONS Access-Control-Allow-Headers: Content-Type, X-Requested-With, X-Forwarded-Host, X-Forwarded-Prefix, X-PINGOTHER, Authorization, ES-LongPoll, ES-ExpectedVersion, ES-EventId, ES-EventType, ES-RequiresMaster, ES-HardDelete, ES-ResolveLinkTos Access-Control-Allow-Origin: * Access-Control-Expose-Headers: Location, ES-Position, ES-CurrentVersion Location: http://127.0.0.1:2113/streams/newstream/incoming/8a00e469-3a99-4517-a0b0-8dc662ffad9b Content-Type: text/plain; charset=utf-8 Server: Mono-HTTPAPI/1.0 Date: Tue, 24 Jul 2018 14:42:44 GMT Content-Length: 28 Keep-Alive: timeout=15,max=100 Forwarding to idempotent URI% Event Store returned a 307 Temporary Redirect with a location header that points to a generated URI that is idempotent for purposes of retrying the post."
  },
  "http-api/creating-writing-a-stream/index.html": {
    "href": "http-api/creating-writing-a-stream/index.html",
    "title": "Creating and writing to a stream | Event Store",
    "keywords": "Creating and writing to a stream You write to a stream over HTTP using a POST request to the resource of the stream. If the stream does not exist then the stream is implicitly created. Event Store media types Event Store supports a custom media type for posting events, application/vnd.eventstore.events+json or application/vnd.eventstore.events+xml . This format allows for extra functionality that posting events as application/json or application/xml does not. For example it allows you to post multiple events in a single batch. <!-- TODO: And more? Why not use it? And why are these examples not using it? --> The format represents data with the following jschema ( eventId must be a UUID). [ { \"eventId\" : \"string\", \"eventType\" : \"string\", \"data\" : \"object\", \"metadata\" : \"object\" } ] Writing a single event If you issue a POST request with data to a stream and the correct content type set it writes the event to the stream, and generates a 201 response from the server, giving you the location of the event. Using the following event, which you can also download as a file : { \"a\": \"1\" } POST the following request to create a stream and add an event to it: Request Response curl -i -d \"@event.json\" \"http://127.0.0.1:2113/streams/newstream\" -H \"Content-Type:application/json\" -H \"ES-EventType: SomeEvent\" -H \"ES-EventId: C322E299-CB73-4B47-97C5-5054F920746E\" HTTP/1.1 201 Created Access-Control-Allow-Methods: POST, DELETE, GET, OPTIONS Access-Control-Allow-Headers: Content-Type, X-Requested-With, X-PINGOTHER Access-Control-Allow-Origin: * Location: http://127.0.0.1:2113/streams/newstream/0 Content-Type: text/plain; charset: utf-8 Server: Mono-HTTPAPI/1.0 Date: Fri, 28 Jun 2013 12:17:59 GMT Content-Length: 0 Keep-Alive: timeout=15,max=100 Some clients may not be able to generate a unique identifier (or may not want to) for the event ID. You need this ID for idempotence purposes and Event Store can generate it for you. If you leave off the ES-EventId header you see different behavior: Request Response curl -i -d \"@event.json\" \"http://127.0.0.1:2113/streams/newstream\" -H \"Content-Type:application/json\" -H \"ES-EventType: SomeEvent\" HTTP/1.1 307 Temporary Redirect Access-Control-Allow-Methods: POST, DELETE, GET, OPTIONS Access-Control-Allow-Headers: Content-Type, X-Requested-With, X-Forwarded-Host, X-Forwarded-Prefix, X-PINGOTHER, Authorization, ES-LongPoll, ES-ExpectedVersion, ES-EventId, ES-EventType, ES-RequiresMaster, ES-HardDelete, ES-ResolveLinkTos Access-Control-Allow-Origin: * Access-Control-Expose-Headers: Location, ES-Position, ES-CurrentVersion Location: http://127.0.0.1:2113/streams/newstream/incoming/8a00e469-3a99-4517-a0b0-8dc662ffad9b Content-Type: text/plain; charset=utf-8 Server: Mono-HTTPAPI/1.0 Date: Tue, 24 Jul 2018 14:42:44 GMT Content-Length: 28 Keep-Alive: timeout=15,max=100 Forwarding to idempotent URI% In this case Event Store has responded with a 307 Temporary Redirect . The location points to another URI that you can post the event to. This new URI is idempotent for posting, even without an event ID. Request Response curl -i -d \"@event.json\" \"http://127.0.0.1:2113/streams/newstream/incoming/8a00e469-3a99-4517-a0b0-8dc662ffad9b\" -H \"Content-Type: application/json\" -H \"ES-EventType: SomeEvent\" HTTP/1.1 201 Created Access-Control-Allow-Methods: GET, POST, OPTIONS Access-Control-Allow-Headers: Content-Type, X-Requested-With, X-Forwarded-Host, X-Forwarded-Prefix, X-PINGOTHER, Authorization, ES-LongPoll, ES-ExpectedVersion, ES-EventId, ES-EventType, ES-RequiresMaster, ES-HardDelete, ES-ResolveLinkTos Access-Control-Allow-Origin: * Access-Control-Expose-Headers: Location, ES-Position, ES-CurrentVersion Location: http://127.0.0.1:2113/streams/newstream/0 Content-Type: text/plain; charset=utf-8 Server: Mono-HTTPAPI/1.0 Date: Tue, 24 Jul 2018 14:46:10 GMT Content-Length: 0 Keep-Alive: timeout=15,max=100 It's generally recommended to include an event ID if possible as it results in fewer round trips between the client and the server. When posting to either the stream or to the returned redirect, clients must include the EventType header. If you forget to include the header you receive an error. Request Response curl -i -d \"@event.json\" \"http://127.0.0.1:2113/streams/newstream\" -H \"Content-Type:application/json\" HTTP/1.1 400 Must include an event type with the request either in body or as ES-EventType header. Access-Control-Allow-Methods: POST, DELETE, GET, OPTIONS Access-Control-Allow-Headers: Content-Type, X-Requested-With, X-Forwarded-Host, X-Forwarded-Prefix, X-PINGOTHER, Authorization, ES-LongPoll, ES-ExpectedVersion, ES-EventId, ES-EventType, ES-RequiresMaster, ES-HardDelete, ES-ResolveLinkTos Access-Control-Allow-Origin: * Access-Control-Expose-Headers: Location, ES-Position, ES-CurrentVersion Content-Type: Server: Mono-HTTPAPI/1.0 Date: Tue, 24 Jul 2018 14:50:59 GMT Content-Length: 0 Connection: close Batch writes You can include more than one write in a single post by placing multiple events inside of the array representing the events, including metadata. For example, the below has two events: [ { \"eventId\": \"fbf4b1a1-b4a3-4dfe-a01f-ec52c34e16e4\", \"eventType\": \"event-type\", \"data\": { \"a\": \"1\" } }, { \"eventId\": \"0f9fad5b-d9cb-469f-a165-70867728951e\", \"eventType\": \"event-type\", \"data\": { \"b\": \"2\" } } ] When you write multiple events in a single post, Event Store treats them transactionally, it writes all events together or fails. Request Response curl -i -d \"@multiple-events.json\" \"http://127.0.0.1:2113/streams/newstream\" -H \"Content-Type:application/vnd.eventstore.events+json\" HTTP/1.1 201 Created Access-Control-Allow-Methods: POST, DELETE, GET, OPTIONS Access-Control-Allow-Headers: Content-Type, X-Requested-With, X-PINGOTHER Access-Control-Allow-Origin: * Location: http://127.0.0.1:2113/streams/newstream/1 Content-Type: text/plain; charset: utf-8 Server: Mono-HTTPAPI/1.0 Date: Fri, 28 Jun 2013 12:32:18 GMT Content-Length: 0 Keep-Alive: timeout=15,max=100 Appending events To append events, issue a POST request to the same resource again and edit the eventId : [ { \"eventId\": \"fbf4a1a1-b4a3-4dfe-a01f-ec52c34e16e5\", \"eventType\": \"event-type\", \"data\": { \"b\": \"2\" } } ] Request Response curl -i -d \"@event-append.json\" \"http://127.0.0.1:2113/streams/newstream\" -H \"Content-Type:application/vnd.eventstore.events+json\" HTTP/1.1 201 Created Access-Control-Allow-Methods: POST, DELETE, GET, OPTIONS Access-Control-Allow-Headers: Content-Type, X-Requested-With, X-PINGOTHER Access-Control-Allow-Origin: * Location: http://127.0.0.1:2113/streams/newstream/1 Content-Type: text/plain; charset: utf-8 Server: Mono-HTTPAPI/1.0 Date: Fri, 28 Jun 2013 12:32:18 GMT Content-Length: 0 Keep-Alive: timeout=15,max=100 Data-only events Version 3.7.0 of Event Store added support for the application/octet-stream content type to support data-only binary events. When creating these events, you need to provide the ES-EventType and ES-EventId headers and cannot have metadata associated with the event. In the example below SGVsbG8gV29ybGQ= is the data you POST to the stream: Request Response curl -i -d \"SGVsbG8gV29ybGQ=\" \"http://127.0.0.1:2113/streams/newstream\" -H \"Content-Type:application/octet-stream\" -H \"ES-EventType:rawDataType\" -H \"ES-EventId:eeccf3ce-4f54-409d-8870-b35dd836cca6\" HTTP/1.1 201 Created Access-Control-Allow-Methods: POST, DELETE, GET, OPTIONS Access-Control-Allow-Headers: Content-Type, X-Requested-With, X-Forwarded-Host, X-PINGOTHER, Authorization, ES-LongPoll, ES-ExpectedVersion, ES-EventId, ES-EventType, ES-RequiresMaster, ES-HardDelete, ES-ResolveLinkTo, ES-ExpectedVersion Access-Control-Allow-Origin: * Access-Control-Expose-Headers: Location, ES-Position Location: http://127.0.0.1:2113/streams/newstream/0 Content-Type: text/plain; charset=utf-8 Server: Mono-HTTPAPI/1.0 Date: Mon, 27 Jun 2016 13:15:27 GMT Content-Length: 0 Keep-Alive: timeout=15,max=100 Expected version header The expected version header represents the version of the stream you expect. For example if you write to a stream at version 1, then you expect it to be at version 1 next time you write. This can allow for optimistic locking when multiple applications are reading/writing to streams. If your expected version is not the current version you receive an HTTP status code of 400. Warning See the idempotency section below, if you post the same event twice it is idempotent and won't return a version error. First write an event to a stream, setting a version: [ { \"eventId\": \"fbf4b1a1-b4a3-4dfe-a01f-ec52c34e16e4\", \"eventType\": \"event-type\", \"data\": { \"a\": \"1\" } } ] Download Request Response curl -i -d @event-version.json \"http://127.0.0.1:2113/streams/newstream\" -H \"Content-Type:application/vnd.eventstore.events+json\" -H \"ES-CurrentVersion: 0\" HTTP/1.1 201 Created Access-Control-Allow-Methods: POST, DELETE, GET, OPTIONS Access-Control-Allow-Headers: Content-Type, X-Requested-With, X-Forwarded-Host, X-Forwarded-Prefix, X-PINGOTHER, Authorization, ES-LongPoll, ES-ExpectedVersion, ES-EventId, ES-EventType, ES-RequiresMaster, ES-HardDelete, ES-ResolveLinkTos Access-Control-Allow-Origin: * Access-Control-Expose-Headers: Location, ES-Position, ES-CurrentVersion Location: http://127.0.0.1:2113/streams/newstream/2 Content-Type: text/plain; charset=utf-8 Server: Mono-HTTPAPI/1.0 Date: Tue, 14 Aug 2018 10:02:08 GMT Content-Length: 0 Keep-Alive: timeout=15,max=100 If you now write to the stream with the incorrect version, you receive an HTTP status code 400 error. Request Response curl -i -d @event-version.json \"http://127.0.0.1:2113/streams/newstream\" -H \"Content-Type:application/vnd.eventstore.events+json\" -H \"ES-ExpectedVersion: 3\" HTTP/1.1 400 Wrong expected EventNumber Access-Control-Allow-Methods: POST, DELETE, GET, OPTIONS Access-Control-Allow-Headers: Content-Type, X-Requested-With, X-Forwarded-Host, X-Forwarded-Prefix, X-PINGOTHER, Authorization, ES-LongPoll, ES-ExpectedVersion, ES-EventId, ES-EventType, ES-RequiresMaster, ES-HardDelete, ES-ResolveLinkTos Access-Control-Allow-Origin: * Access-Control-Expose-Headers: Location, ES-Position, ES-CurrentVersion ES-CurrentVersion: 0 Content-Type: text/plain; charset=utf-8 Server: Mono-HTTPAPI/1.0 Date: Tue, 14 Aug 2018 14:08:44 GMT Content-Length: 0 Connection: close There are special values you can use in the expected version header: -2 states that this write should never conflict and should always succeed. -1 states that the stream should not exist at the time of the writing (this write creates it). 0 states that the stream should exist but should be empty. Idempotency Appends to streams are idempotent based upon the EventId assigned in your post. If you were to re-run the last command it returns the same value again. This is important behaviour as it's how you implement error handling. If you receive a timeout, broken connection, no answer, etc from your HTTP POST then it's your responsibility to retry the post. You must also keep the same UUID that you assigned to the event in the first POST . If you are using the expected version parameter with your post, then Event Store is 100% idempotent. If you use -2 as your expected version value, Event Store does its best to keep events idempotent but cannot assure that everything is fully idempotent and you end up in 'at-least-once' messaging. Read this guide for more details on idempotency."
  },
  "http-api/index.html": {
    "href": "http-api/index.html",
    "title": "Overview | Event Store",
    "keywords": "Overview Event Store provides a native interface of AtomPub over HTTP. AtomPub is a RESTful protocol that can reuse many existing components, for example reverse proxies and a client's native HTTP caching. Since events stored in Event Store are immutable, cache expiration can be infinite. Event Store leverages content type negotiation and you can access appropriately serialised events can as JSON or XML according to the request headers. Compatibility with AtomPub Event Store is fully compatible with the 1.0 version of the Atom Protocol . Event Store adds extensions to the protocol, such as headers for control and custom rel links. Existing Implementations Many environments have already implemented the AtomPub protocol, which simplifies the process. Library Description NET (BCL) System.ServiceModel.SyndicationServices JVM http://java-source.net/open-source/rss-rdf-tools PHP http://simplepie.org/ or https://github.com/fguillot/picoFeed Ruby https://github.com/cardmagic/simple-rss Clojure https://github.com/scsibug/feedparser-clj Go https://github.com/jteeuwen/go-pkg-rss Python http://code.google.com/p/feedparser/ node.js https://github.com/danmactough/node-feedparser Objective-C https://geekli.st/darvin/repos/MWFeedParser Note These are not officially supported by Event Store. Content Types The preferred way of determining which content type responses Event Store serves is to set the Accept header on the request. As some clients do not deal well with HTTP headers when caching, appending a format parameter to the URL is also supported, e.g., ?format=xml . The accepted content types for POST requests are: application/xml application/vnd.eventstore.events+xml application/json application/vnd.eventstore.events+json text/xml The accepted content types for GET requests are: application/xml application/atom+xml application/json application/vnd.eventstore.atom+json text/xml text/html application/vnd.eventstore.streamdesc+json"
  },
  "http-api/description-document/index.html": {
    "href": "http-api/description-document/index.html",
    "title": "Description Document | Event Store",
    "keywords": "Description Document <!-- TODO: Combine with CC pages? --> With the addition of Competing Consumers, which is another way of reading streams, the need arose to expose these different methods to consumers. The introduction of the description document has some benefits: Clients can rely on the keys (streams, streamSubscription) in the description document to remain unchanged across versions of Event Store and you can rely on it as a lookup for the particular method of reading a stream. Allows the restructuring of URIs underneath without breaking clients. e.g., /streams/newstream -> /streams/newstream/atom . Fetching the description document There are 3 ways in which Event Store returns the description document. Attempting to read a stream with an unsupported media type. Attempting to read a stream with no accept header. Requesting the description document explicitly. The client is able to request the description document by passing application/vnd.eventstore.streamdesc+json in the accept header, for example: Request Response curl -i http://localhost:2113/streams/newstream -H \"accept:application/vnd.eventstore.streamdesc+json\" HTTP/1.1 200 Description Document Access-Control-Allow-Methods: POST, DELETE, GET, OPTIONS Access-Control-Allow-Headers: Content-Type, X-Requested-With, X-Forwarded-Host, X-Forwarded-Prefix, X-PINGOTHER, Authorization, ES-LongPoll, ES-ExpectedVersion, ES-EventId, ES-EventType, ES-RequiresMaster, ES-HardDelete, ES-ResolveLinkTos Access-Control-Allow-Origin: * Access-Control-Expose-Headers: Location, ES-Position, ES-CurrentVersion Content-Type: application/vnd.eventstore.streamdesc+json; charset=utf-8 Server: Mono-HTTPAPI/1.0 Date: Thu, 23 Aug 2018 12:37:18 GMT Content-Length: 517 Keep-Alive: timeout=15,max=100 { \"title\": \"Description document for 'newstream'\", \"description\": \"The description document will be presented when no accept header is present or it was requested\", \"_links\": { \"self\": { \"href\": \"/streams/newstream\", \"supportedContentTypes\": [ \"application/vnd.eventstore.streamdesc+json\" ] }, \"stream\": { \"href\": \"/streams/newstream\", \"supportedContentTypes\": [ \"application/atom+xml\", \"application/vnd.eventstore.atom+json\" ] } } } In the example above, the client requested the description document for the stream called newstream which has a set of links describing the supported methods and content types. The document also includes additional methods available such as the streamSubscription . If there are no subscriptions to the newstream , the streamSubscription key is absent."
  },
  "http-api/deleting-a-stream/index.html": {
    "href": "http-api/deleting-a-stream/index.html",
    "title": "Deleting a Stream | Event Store",
    "keywords": "Deleting a Stream Soft deleting To delete a stream over the Atom interface, issue a DELETE request to the resource. Request Response curl -X DELETE \"http://127.0.0.1:2113/streams/newstream\" HTTP/1.1 204 Stream deleted Access-Control-Allow-Methods: POST, DELETE, GET, OPTIONS Access-Control-Allow-Headers: Content-Type, X-Requested-With, X-Forwarded-Host, X-Forwarded-Prefix, X-PINGOTHER, Authorization, ES-LongPoll, ES-ExpectedVersion, ES-EventId, ES-EventType, ES-RequiresMaster, ES-HardDelete, ES-ResolveLinkTos Access-Control-Allow-Origin: * Access-Control-Expose-Headers: Location, ES-Position, ES-CurrentVersion Content-Type: text/plain; charset=utf-8 Server: Mono-HTTPAPI/1.0 Date: Fri, 27 Jul 2018 11:51:02 GMT Content-Length: 0 Connection: close By default when you delete a stream, Event Store soft deletes it. This means you can recreate it later by setting the $tb metadata section in the stream. If you try to GET a soft deleted stream you receive a 404 response: Request Response curl -X GET \"http://127.0.0.1:2113/streams/newstream\" -H 'Accept: application/vnd.eventstore.events+json' HTTP/1.1 404 Not Found Access-Control-Allow-Methods: POST, DELETE, GET, OPTIONS Access-Control-Allow-Headers: Content-Type, X-Requested-With, X-Forwarded-Host, X-Forwarded-Prefix, X-PINGOTHER, Authorization, ES-LongPoll, ES-ExpectedVersion, ES-EventId, ES-EventType, ES-RequiresMaster, ES-HardDelete, ES-ResolveLinkTos Access-Control-Allow-Origin: * Access-Control-Expose-Headers: Location, ES-Position, ES-CurrentVersion Content-Type: text/plain; charset=utf-8 Server: Mono-HTTPAPI/1.0 Date: Fri, 27 Jul 2018 12:04:10 GMT Content-Length: 0 Connection: close You can recreate the stream by appending new events to it (like creating a new stream): Request Response curl -i -d \"@event-append.json\" \"http://127.0.0.1:2113/streams/newstream\" -H \"Content-Type:application/vnd.eventstore.events+json\" HTTP/1.1 201 Created Access-Control-Allow-Methods: POST, DELETE, GET, OPTIONS Access-Control-Allow-Headers: Content-Type, X-Requested-With, X-PINGOTHER Access-Control-Allow-Origin: * Location: http://127.0.0.1:2113/streams/newstream/1 Content-Type: text/plain; charset: utf-8 Server: Mono-HTTPAPI/1.0 Date: Fri, 28 Jun 2013 12:32:18 GMT Content-Length: 0 Keep-Alive: timeout=15,max=100 The version numbers do not start at zero but at where you soft deleted the stream from Hard deleting You can hard delete a stream. To issue a permanent delete use the ES-HardDelete header. Warning A hard delete is permanent and the stream is not removed during a scavenge. If you hard delete a stream, you cannot recreate the stream. Issue the DELETE as before but with the permanent delete header: Request Response curl -X DELETE http://127.0.0.1:2113/streams/newstream -H \"ES-HardDelete:true\" HTTP/1.1 204 Stream deleted Content-Length: 0 Content-Type: text/plain; charset=utf-8 Server: Microsoft-HTTPAPI/2.0 Access-Control-Allow-Methods: POST, DELETE, GET, OPTIONS Access-Control-Allow-Headers: Content-Type, X-Requested-With, X-PINGOTHER, Authorization Access-Control-Allow-Origin: * Access-Control-Expose-Headers: Location Date: Thu, 13 Mar 2014 20:56:55 GMT The stream is now permanently deleted, and now the response is a 410 . Request Response curl -X GET \"http://127.0.0.1:2113/streams/newstream\" -H 'Accept: application/vnd.eventstore.events+json' HTTP/1.1 404 Not Found Access-Control-Allow-Methods: POST, DELETE, GET, OPTIONS Access-Control-Allow-Headers: Content-Type, X-Requested-With, X-Forwarded-Host, X-Forwarded-Prefix, X-PINGOTHER, Authorization, ES-LongPoll, ES-ExpectedVersion, ES-EventId, ES-EventType, ES-RequiresMaster, ES-HardDelete, ES-ResolveLinkTos Access-Control-Allow-Origin: * Access-Control-Expose-Headers: Location, ES-Position, ES-CurrentVersion Content-Type: text/plain; charset=utf-8 Server: Mono-HTTPAPI/1.0 Date: Fri, 27 Jul 2018 12:04:10 GMT Content-Length: 0 Connection: close If you try to recreate the stream as in the above example you also receive a 410 response. Request Response curl -i -d \"@event-append.json\" \"http://127.0.0.1:2113/streams/newstream\" -H \"Content-Type:application/vnd.eventstore.events+json\" HTTP/1.1 201 Created Access-Control-Allow-Methods: POST, DELETE, GET, OPTIONS Access-Control-Allow-Headers: Content-Type, X-Requested-With, X-PINGOTHER Access-Control-Allow-Origin: * Location: http://127.0.0.1:2113/streams/newstream/1 Content-Type: text/plain; charset: utf-8 Server: Mono-HTTPAPI/1.0 Date: Fri, 28 Jun 2013 12:32:18 GMT Content-Length: 0 Keep-Alive: timeout=15,max=100"
  },
  "http-api/competing-consumers/index.html": {
    "href": "http-api/competing-consumers/index.html",
    "title": "Competing Consumers | Event Store",
    "keywords": "Competing Consumers This document explains how to use HTTP API for setting up and consuming competing consumer subscription groups. For an overview on competing consumers and how they relate to other subscription types please see our getting started guide . Note The Administration UI includes a Competing Consumers section where you are able to create, update, delete and view subscriptions and their statuses. Creating a Persistent Subscription Before interacting with a subscription group, you need to create one. You receive an error if you try to create a subscription group more than once. This requires admin permissions . <!-- TODO: File inclusion for the below? --> URI Supported Content Types Method /subscriptions/{stream}/{subscription_name} application/json PUT Query Parameters Parameter Description stream The stream the persistent subscription is on. subscription_name The name of the subscription group. Body Parameter Description resolveLinktos Tells the subscription to resolve link events. startFrom Start the subscription from the position-of the event in the stream. extraStatistics Tells the backend to measure timings on the clients so statistics will contain histograms of them. checkPointAfterMilliseconds The amount of time the system should try to checkpoint after. liveBufferSize The size of the live buffer (in memory) before resorting to paging. readBatchSize The size of the read batch when in paging mode. bufferSize The number of messages that should be buffered when in paging mode. maxCheckPointCount The maximum number of messages not checkpointed before forcing a checkpoint. maxRetryCount Sets the number of times a message should be retried before considered a bad message. maxSubscriberCount Sets the maximum number of allowed subscribers. messageTimeoutMilliseconds Sets the timeout for a client before the message will be retried. minCheckPointCount The minimum number of messages to write a checkpoint for. namedConsumerStrategy RoundRobin/DispatchToSingle/Pinned Updating a Persistent Subscription You can edit the settings of an existing subscription while it is running. This drops the current subscribers and resets the subscription internally. This requires admin permissions. URI Supported Content Types Method /subscriptions/{stream}/{subscription_name} application/json POST Query Parameters Parameter Description stream The stream to the persistent subscription is on. subscription_name The name of the subscription group. Body Same parameters as \"Creating a Persistent Subscription\" Deleting a Persistent Subscription URI Supported Content Types Method /subscriptions/{stream}/{subscription_name} application/json DELETE Query Parameters Parameter Description stream The stream to the persistent subscription is on. subscription_name The name of the subscription group. Reading a stream via a Persistent Subscription By default, reading a stream via a persistent subscription returns a single event per request and does not embed the event properties as part of the response. URI Supported Content Types Method /subscriptions/{stream}/{subscription_name} /subscriptions/{stream}/{subscription_name}?embed={embed} /subscriptions/{stream}/{subscription}/{count}?embed={embed} application/vnd.eventstore.competingatom+xml application/vnd.eventstore.competingatom+json GET Query Parameters Parameter Description stream The stream the persistent subscription is on. subscription_name The name of the subscription group. count How many events to return for the request. embed None , Content , Rich , Body , PrettyBody , TryHarder Read Reading Streams for information on the different embed levels. Response { \"title\": \"All Events Persistent Subscription\", \"id\": \"http://localhost:2113/subscriptions/newstream/competing_consumers_group1\", \"updated\": \"2015-12-02T09:17:48.556545Z\", \"author\": { \"name\": \"EventStore\" }, \"headOfStream\": false, \"links\": [ { \"uri\": \"http://localhost:2113/subscriptions/newstream/competing_consumers_group1/ack%3Fids=c322e299-cb73-4b47-97c5-5054f920746f\", \"relation\": \"ackAll\" }, { \"uri\": \"http://localhost:2113/subscriptions/newstream/competing_consumers_group1/nack%3Fids=c322e299-cb73-4b47-97c5-5054f920746f\", \"relation\": \"nackAll\" }, { \"uri\": \"http://localhost:2113/subscriptions/newstream/competing_consumers_group1/1%3Fembed=None\", \"relation\": \"previous\" }, { \"uri\": \"http://localhost:2113/subscriptions/newstream/competing_consumers_group1\", \"relation\": \"self\" } ], \"entries\": [ { \"title\": \"1@newstream\", \"id\": \"http://localhost:2113/streams/newstream/1\", \"updated\": \"2015-12-02T09:17:48.556545Z\", \"author\": { \"name\": \"EventStore\" }, \"summary\": \"SomeEvent\", \"links\": [ { \"uri\": \"http://localhost:2113/streams/newstream/1\", \"relation\": \"edit\" }, { \"uri\": \"http://localhost:2113/streams/newstream/1\", \"relation\": \"alternate\" }, { \"uri\": \"http://localhost:2113/subscriptions/newstream/competing_consumers_group1/ack/c322e299-cb73-4b47-97c5-5054f920746f\", \"relation\": \"ack\" }, { \"uri\": \"http://localhost:2113/subscriptions/newstream/competing_consumers_group1/nack/c322e299-cb73-4b47-97c5-5054f920746f\", \"relation\": \"nack\" } ] } ] } Acknowledgements Clients must acknowledge (or not acknowledge) messages in the competing consumer model. If the client fails to respond in the given timeout period, the message is retried. You should use the rel links in the feed for acknowledgements not bookmark URIs as they are subject to change in future versions. For example: { \"uri\": \"http://localhost:2113/subscriptions/newstream/competing_consumers_group1/ack/c322e299-cb73-4b47-97c5-5054f920746f\", \"relation\": \"ack\" } Ack multiple messages URI Supported Content Types Method /subscriptions/{stream}/{subscription_name}/ack?ids={messageids} application/json POST Query Parameters Parameter Description stream The stream the persistent subscription is on. subscription_name The name of the subscription group. messageids The ids of the messages that needs to be acked Ack a single message URI Supported Content Types Method /subscriptions/{stream}/{subscription_name}/ack/{messageid} application/json POST Query Parameters Parameter Description stream The stream to the persistent subscription is on. subscription_name The name of the subscription group. messageid The id of the message that needs to be acked <!-- Has this been explained? --> Nack multiple messages URI Supported Content Types Method /subscriptions/{stream}/{subscription_name}/nack?ids={messageids}?action={action} application/json POST Query Parameters Parameter Description stream The stream to the persistent subscription is on. subscription_name The name of the subscription group. action Park : Don't retry the message, park it until a request is sent to reply the parked messages Retry : Retry the message Skip : Discard the message Stop : Stop the subscription messageid The id of the message that needs to be acked Nack a single message URI Supported Content Types Method /subscriptions/{stream}/{subscription_name}/nack/{messageid}?action={action} application/json POST Replaying parked messages URI Supported Content Types Method /subscriptions/{stream}/{subscription_name}/replayParked application/json POST Getting information for all subscriptions URI Method /subscriptions GET Response [ { \"links\": [ { \"href\": \"http://localhost:2113/subscriptions/newstream/competing_consumers_group1/info\", \"rel\": \"detail\" } ], \"eventStreamId\": \"newstream\", \"groupName\": \"competing_consumers_group1\", \"parkedMessageUri\": \"http://localhost:2113/streams/$persistentsubscription-newstream::competing_consumers_group1-parked\", \"getMessagesUri\": \"http://localhost:2113/subscriptions/newstream/competing_consumers_group1/1\", \"status\": \"Live\", \"averageItemsPerSecond\": 0.0, \"totalItemsProcessed\": 0, \"lastProcessedEventNumber\": -1, \"lastKnownEventNumber\": 5, \"connectionCount\": 0, \"totalInFlightMessages\": 0 }, { \"links\": [ { \"href\": \"http://localhost:2113/subscriptions/another_newstream/competing_consumers_group1/info\", \"rel\": \"detail\" } ], \"eventStreamId\": \"another_newstream\", \"groupName\": \"competing_consumers_group1\", \"parkedMessageUri\": \"http://localhost:2113/streams/$persistentsubscription-another_newstream::competing_consumers_group1-parked\", \"getMessagesUri\": \"http://localhost:2113/subscriptions/another_newstream/competing_consumers_group1/1\", \"status\": \"Live\", \"averageItemsPerSecond\": 0.0, \"totalItemsProcessed\": 0, \"lastProcessedEventNumber\": -1, \"lastKnownEventNumber\": -1, \"connectionCount\": 0, \"totalInFlightMessages\": 0 } ] Getting information about the subscriptions for a stream URI Supported Content Types Method /subscriptions/{stream} application/json GET Response [ { \"links\": [ { \"href\": \"http://localhost:2113/subscriptions/newstream/competing_consumers_group1/info\", \"rel\": \"detail\" } ], \"eventStreamId\": \"newstream\", \"groupName\": \"competing_consumers_group1\", \"parkedMessageUri\": \"http://localhost:2113/streams/$persistentsubscription-newstream::competing_consumers_group1-parked\", \"getMessagesUri\": \"http://localhost:2113/subscriptions/newstream/competing_consumers_group1/1\", \"status\": \"Live\", \"averageItemsPerSecond\": 0.0, \"totalItemsProcessed\": 0, \"lastProcessedEventNumber\": -1, \"lastKnownEventNumber\": 5, \"connectionCount\": 0, \"totalInFlightMessages\": 0 } ] Getting information about a specific subscription URI Supported Content Types Method /subscriptions/{stream}/{subscription_name}/info application/json GET Response { \"links\": [ { \"href\": \"http://localhost:2113/subscriptions/newstream/competing_consumers_group1/info\", \"rel\": \"detail\" }, { \"href\": \"http://localhost:2113/subscriptions/newstream/competing_consumers_group1/replayParked\", \"rel\": \"replayParked\" } ], \"config\": { \"resolveLinktos\": false, \"startFrom\": 0, \"messageTimeoutMilliseconds\": 10000, \"extraStatistics\": false, \"maxRetryCount\": 10, \"liveBufferSize\": 500, \"bufferSize\": 500, \"readBatchSize\": 20, \"preferRoundRobin\": true, \"checkPointAfterMilliseconds\": 1000, \"minCheckPointCount\": 10, \"maxCheckPointCount\": 500, \"maxSubscriberCount\": 10, \"namedConsumerStrategy\": \"RoundRobin\" }, \"eventStreamId\": \"newstream\", \"groupName\": \"competing_consumers_group1\", \"status\": \"Live\", \"averageItemsPerSecond\": 0.0, \"parkedMessageUri\": \"http://localhost:2113/streams/$persistentsubscription-newstream::competing_consumers_group1-parked\", \"getMessagesUri\": \"http://localhost:2113/subscriptions/newstream/competing_consumers_group1/1\", \"totalItemsProcessed\": 0, \"countSinceLastMeasurement\": 0, \"lastProcessedEventNumber\": -1, \"lastKnownEventNumber\": 5, \"readBufferCount\": 6, \"liveBufferCount\": 5, \"retryBufferCount\": 0, \"totalInFlightMessages\": 0, \"connections\": [] } <!-- TODO: Is this better as a general subscriptions page? --> <!-- TODO: Somehow get this better integrated with API docs --> <!-- TODO: Still to do -->"
  },
  "dotnet-api/users/index.html": {
    "href": "dotnet-api/users/index.html",
    "title": "User Management | Event Store",
    "keywords": "User Management The Event Store Client API includes helper methods that use the HTTP API to allow for the management of users. This document describes the methods found in the UsersManager class. All methods in this class are asynchronous. Methods Create a User Creates a user, the credentials for this operation must be a member of the $admins group. public Task CreateUserAsync(string login, string fullName, string[] groups, string password, UserCredentials userCredentials = null) Disable a User Disables a user, the credentials for this operation must be a member of the $admins group. public Task DisableAsync(string login, UserCredentials userCredentials = null) Enable a User Enables a user, the credentials for this operation must be a member of the $admins group. public Task EnableAsync(string login, UserCredentials userCredentials = null) Delete a User Deletes (non-recoverable) a user, the credentials for this operation must be a member of the $admins group. If you prefer this action to be recoverable, disable the user as opposed to deleting the user. public Task DeleteUserAsync(string login, UserCredentials userCredentials = null) List all Users Lists all users. public Task<List<UserDetails>> ListAllAsync(UserCredentials userCredentials = null) Get Details of User Return the details of the user supplied in user credentials (e.g. the user making the request). public Task<UserDetails> GetCurrentUserAsync(UserCredentials userCredentials) Get Details of Logged in User public Task<UserDetails> GetUserAsync(string login, UserCredentials userCredentials) Update User Details public Task UpdateUserAsync(string login, string fullName, string[] groups, UserCredentials userCredentials = null) Reset User Password Resets the password of a user. The credentials doing this operation must be part of the $admins group. public Task ResetPasswordAsync(string login, string newPassword, UserCredentials userCredentials = null)"
  },
  "dotnet-api/stream-metadata/index.html": {
    "href": "dotnet-api/stream-metadata/index.html",
    "title": "Stream Metadata | Event Store",
    "keywords": "Stream Metadata Every stream in Event Store has metadata associated with it. Internally, the metadata includes information such as the ACL of the stream and the maximum count and age for the events in the stream. Client code can also put information into stream metadata for use with projections or through the client API. This information is not part of the actual event but is metadata associated with the event. Event Store stores stream metadata as JSON, and you can access it over the HTTP APIs. Methods Read Stream Metadata <!-- TODO: Link or embed to ref docs --> Task<StreamMetadataResult> GetStreamMetadataAsync(string stream, UserCredentials userCredentials = null) Task<RawStreamMetadataResult> GetStreamMetadataAsRawBytesAsync(string stream, UserCredentials userCredentials = null) Write Stream Metadata <!-- TODO: Link or embed to ref docs --> Task<WriteResult> SetStreamMetadataAsync(string stream, long expectedMetastreamVersion, StreamMetadata metadata, UserCredentials userCredentials = null) Task<WriteResult> SetStreamMetadataAsync(string stream, long expectedMetastreamVersion, byte[] metadata, UserCredentials userCredentials = null) Read Stream Metadata To read stream metadata over the .NET API you can use methods found on the EventStoreConnection . You can use the GetStreamMetadata methods in two ways. The first is to return a fluent interface over the stream metadata, and the second is to return you the raw JSON of the stream metadata. Task<StreamMetadataResult> GetStreamMetadataAsync(string stream, UserCredentials userCredentials = null) This returns a StreamMetadataResult . The fields on this result are: Member Description string Stream The name of the stream bool IsStreamDeleted true is the stream is deleted, false otherwise. long MetastreamVersion The version of the metastream format StreamMetadata Metadata A StreamMetadata object representing the metadata JSON You can then access the StreamMetadata via the StreamMetadata object. It contains typed fields for well known stream metadata entries. Member Description long? MaxAge The maximum age of events in the stream. Items older than this will be automatically removed. long? MaxCount The maximum count of events in the stream. When you have more than count the oldest will be removed. long? TruncateBefore When set says that items prior to event 'E' can be truncated and will be removed. TimeSpan? CacheControl The head of a feed in the atom api is not cacheable. This allows you to specify a period of time you want it to be cacheable. Low numbers are best here (say 30-60 seconds) and introducing values here will introduce latency over the atom protocol if caching is occuring. StreamAcl Acl The access control list for this stream. If instead you want to work with raw JSON you can use the raw methods for stream metadata. Task<RawStreamMetadataResult> GetStreamMetadataAsRawBytesAsync(string stream, UserCredentials userCredentials = null) This returns a RawStreamMetadataResult . The fields on this result are: Member Description string Stream The name of the stream bool IsStreamDeleted True is the stream is deleted, false otherwise. long MetastreamVersion The version of the metastream (see Expected Version ) byte[] Metadata The raw data of the metadata JSON Note If you enabled enabled security , reading metadata may require that you pass credentials. By default it is only allowed for admins though you can change this via default ACLs. If you do not pass credentials and they are required you will receive an AccessedDeniedException . Writing Metadata You can write metadata in both a typed and a raw mechanism. When writing it is generally easier to use the typed mechanism. Both writing mechanisms support an expectedVersion which works the same as on any stream and you can use to control concurrency, read Expected Version for further details. Task<WriteResult> SetStreamMetadataAsync(string stream, long expectedMetastreamVersion, StreamMetadata metadata, UserCredentials userCredentials = null) The StreamMetadata passed above has a builder that you can access via the StreamMetadata.Create() method. The options available on the builder are: Method Description SetMaxCount(long count) Sets the maximum count of events in the stream. SetMaxAge(TimeSpan age) Sets the maximum age of events in the stream. SetTruncateBefore(long seq) Sets the event number from which previous events can be scavenged.< SetCacheControl(TimeSpan cacheControl) The amount of time the stream head is cachable. SetReadRoles(string[] roles) Sets the roles allowed to read the underlying stream. SetWriteRoles(string[] roles) Sets the roles allowed to write to the underlying stream. SetDeleteRoles(string[] roles) Sets the roles allowed to delete the underlying stream. SetMetadataReadRoles(string[] roles) Sets the roles allowed to read the metadata stream. SetMetadataWriteRoles(string[] roles) Sets the roles allowed to write the metadata stream. Be careful with this privilege as it gives all the privileges for a stream as that use can assign themselves any other privilege. SetCustomMetadata(string key, string value) The SetCustomMetadata method and overloads allow the setting of arbitrary custom fields into the stream metadata. You can add user-specified metadata via the SetCustomMetadata overloads. Some examples of good uses of user-specified metadata are: which adapter is responsible for populating a stream. which projection caused a stream to be created. a correlation ID of some business process. Task<WriteResult> SetStreamMetadataAsync(string stream, long expectedMetastreamVersion, byte[] metadata, UserCredentials userCredentials = null) This method will put the data that is in metadata as the stream metadata. Metadata in this case can be anything in a vector of bytes. The server only understands JSON. Read Access Control Lists for more information on the format in JSON for access control lists. Note Writing metadata may require that you pass credentials if you have security enabled by default it is only allowed for admins though you can change this via default ACLs. If you do not pass credentials and they are required you will receive an AccessedDeniedException ."
  },
  "dotnet-api/persistent-subscriptions/index.html": {
    "href": "dotnet-api/persistent-subscriptions/index.html",
    "title": "Persistent Subscriptions Management | Event Store",
    "keywords": "Persistent Subscriptions Management The Client API includes helper methods that use the HTTP API to allow you to manage persistent subscriptions. This document describes the methods found in the PersistentSubscriptions class. All methods in this class are asynchronous. Methods Get information for all persistent subscriptions from all streams Returns information about all persistent subscriptions from all streams. public Task List(UserCredentials userCredentials = null) Get information about the persistent subscriptions for a stream Returns information about the persistent subscription for a stream you specify with stream . You must have access to the stream. public Task List(string stream, UserCredentials userCredentials = null) Get information for a persistent subscription for a stream Gets the details of the persistent subscription subscriptionName on stream . You must have access to the persistent subscription and the stream. public Task Describe(string stream, string subscriptionName, UserCredentials userCredentials = null) Replay parked messages Replays all parked messages for a particular persistent subscription subscriptionName on a stream that were parked by a negative acknowledgement action. public Task ReplayParkedMessages(string stream, string subscriptionName, UserCredentials userCredentials = null)"
  },
  "dotnet-api/reading-events/index.html": {
    "href": "dotnet-api/reading-events/index.html",
    "title": "Reading Events | Event Store",
    "keywords": "Reading Events You can use the client API to read events from a stream starting from either end of the stream. There is a method for each direction and one for reading a single event. Methods <!-- TODO: Do the same apply here as in HTTP API --> Read a single event Task<EventReadResult> ReadEventAsync(string stream, long eventNumber, bool resolveLinkTos); Read a specific stream forwards Task<StreamEventsSlice> ReadStreamEventsForwardAsync(string stream, long start, int count, bool resolveLinkTos) Read a specific stream backwards Task<StreamEventsSlice> ReadStreamEventsBackwardAsync(string stream, long start, int count, bool resolveLinkTos) Read all events forwards Task<AllEventsSlice> ReadAllEventsForwardAsync(Position position, int maxCount, bool resolveLinkTos); Read all events backwards Task<AllEventsSlice> ReadAllEventsBackwardAsync(Position position, int maxCount, bool resolveLinkTos); Note These methods also have an optional parameter which allows you to specify the UserCredentials to use for the request. If you don't supply any, the default credentials for the EventStoreConnection are used ( See Connecting to a Server - User Credentials ). StreamEventsSlice The reading methods for individual streams each return a StreamEventsSlice , which is immutable. The available members on StreamEventsSlice are: Member Description string Stream The name of the stream for the slice ReadDirection ReadDirection Either ReadDirection.Forward or ReadDirection.Backward depending on which method was used to read long FromEventNumber The sequence number of the first event in the stream long LastEventNumber The sequence number of the last event in the stream long NextEventNumber The sequence number from which the next read should be performed to continue reading the stream bool IsEndOfStream Whether this slice contained the end of the stream at the time it was created ResolvedEvent[] Events An array of the events read. See the description of how to interpret a Resolved Events below for more information on this ResolvedEvent When you read events from a stream (or received over a subscription) you receive an instance of the RecordedEvent class packaged inside a ResolvedEvent . Event Store supports a special event type called 'Link Events'. Think of these events as pointers to an event in another stream. In situations where the event you read is a link event, ResolvedEvent allows you to access both the link event itself, as well as the event it points to. The members of this class are as follows: Member Description RecordedEvent Event The event, or the resolved link event if this ResolvedEvent is a link event RecordedEvent Link The link event if this ResolvedEvent is a link event RecordedEvent OriginalEvent Returns the event read or which triggered the subscription. If this ResolvedEvent represents a link event, the link will be the OriginalEvent , otherwise it will be the event bool IsResolved Indicates whether this ResolvedEvent is a resolved link event Position? OriginalPosition The logical position of the OriginalEvent string OriginalStreamId The stream name of the OriginalEvent long OriginalEventNumber The event number in the stream of the OriginalEvent Note To ensure that the Event Store server follows link events when reading, ensure you set the ResolveLinkTos parameter to true when calling read methods. RecordedEvent RecordedEvent contains all the data about a specific event. Instances of this class are immutable, and expose the following members: Member Description string EventStreamId The Event Stream this event belongs to Guid EventId The Unique Identifier representing this event long EventNumber The number of this event in the stream string EventType The event type (supplied when writing) byte[] Data A byte array representing the data of this event byte[] Metadata A byte array representing the metadata associated with this event bool IsJson Indicates whether the content was internally marked as json DateTime Created A datetime representing when this event was created. long CreatedEpoch A long representing the milliseconds since the epoch when the was created. Read a single event The ReadEventAsync method reads a single event from a stream at a specified position. This is the simplest case of reading events, but is still useful for situations such as reading the last event in the stream used as a starting point for a subscription. This function accepts three parameters: Parameter Description string stream The stream to read from long eventNumber The event number to read (use StreamPosition.End to read the last event in the stream) bool resolveLinkTos Determines whether any link events encountered in the stream will be resolved. See the discussion on Resolved Events for more information on this This method returns an instance of EventReadResult which indicates if the read was successful, and if so the ResolvedEvent that was read. Reading a stream forwards The ReadStreamEventsForwardAsync method reads the requested number of events in the order in which they were originally written to the stream from a nominated starting point in the stream. The parameters are: Parameter Description string Stream The name of the stream to read long start The earliest event to read (inclusive). For the special case of the start of the stream, you should use the constant StreamPosition.Start . int count The maximum number of events to read in this request (assuming that many exist between the start specified and the end of the stream) bool resolveLinkTos Determines whether any link events encountered in the stream will be resolved. See the discussion on Resolved Events for more information on this Example: Read an entire stream forwards from start to end This example uses the ReadStreamEventsForwardAsync method in a loop to page through all events in a stream, reading 200 events at a time to build a list of all the events in the stream. var streamEvents = new List<ResolvedEvent>(); StreamEventsSlice currentSlice; var nextSliceStart = StreamPosition.Start; do { currentSlice = _eventStoreConnection.ReadStreamEventsForward(\"myStream\", nextSliceStart, 200, false) .Result; nextSliceStart = currentSlice.NextEventNumber; streamEvents.AddRange(currentSlice.Events); } while (!currentSlice.IsEndOfStream); Note It's unlikely that client code would need to build a list in this manner. It's far more likely that you would pass events into a left fold to derive the state of some object as of a given event. Read a stream backwards The ReadStreamEventsBackwardAsync method reads the requested number of events in the reverse order from that in which they were originally written to the stream from a specified starting point. The parameters are: Parameter Description string Stream The name of the stream to read long start The latest event to read (inclusive). For the end of the stream use the constant StreamPosition.End int count The maximum number of events to read in this request (assuming that many exist between the start specified and the start of the stream) bool resolveLinkTos Determines whether any link events encountered in the stream will be resolved. See the discussion on Resolved Events for more information on this Read all events Event Store allows you to read events across all streams using the ReadAllEventsForwardAsync and ReadAllEventsBackwardsAsync methods. These work in the same way as the regular read methods, but use an instance of the global log file Position to reference events rather than the simple integer stream position described previously. They also return an AllEventsSlice rather than a StreamEventsSlice which is the same except it uses global Position s rather than stream positions. Example: Read all events forward from start to end var allEvents = new List<ResolvedEvent>(); AllEventsSlice currentSlice; var nextSliceStart = Position.Start; do { currentSlice = connection.ReadAllEventsForwardAsync(nextSliceStart, 200, false).Result; nextSliceStart = currentSlice.NextPosition; allEvents.AddRange(currentSlice.Events); } while (!currentSlice.IsEndOfStream);"
  },
  "dotnet-api/connecting-to-a-server/index.html": {
    "href": "dotnet-api/connecting-to-a-server/index.html",
    "title": "Connecting to a Server | Event Store",
    "keywords": "Connecting to a Server EventStoreConnection The EventStoreConnection class maintains a full-duplex connection between the client and the Event Store server. EventStoreConnection is thread-safe and we recommend that you create one instance per application. All operations are fully asynchronous and return either a Task or a Task<T> . If you need to execute synchronously, call .Wait() , or Result on the asynchronous version. To get maximum performance from the connection we recommend that you use it asynchronously. Note The Create methods have changed since version 3.0.2 as connection strings are now supported. The old mechanisms will still work but are marked obsolete and will be removed in the future. Creating a Connection The EventStoreConnection classes uses the static Create methods to create a new connection. All method overloads allow you to optionally specify a name for the connection, which the connection returns when it raises events (see Connection Events ). Method Description Create(Uri uri) Connects to Event Store (see URIs below) with default settings Create(ConnectionSettings connectionSettings, Uri uri) Connects to Event Store (see URIs below) with specified settings Create(string connectionString) Connects to Event Store (see URIs below) with settings from connection string (obsolete) Create(IPEndPoint tcpEndPoint) Connects to a single node with default settings (obsolete) Create(ConnectionSettings settings, IPEndPoint tcpEndPoint) Connects to a single node with custom settings (see Customising Connection Settings ) (obsolete) Create(ConnectionSettings connectionSettings, ClusterSettings clusterSettings) Connects to an Event Store HA cluster with custom settings (see Cluster Settings ) Note The connection returned by these methods is inactive. Use the ConnectAsync() method to establish a connection with the server. URIs The create methods support passing of a URI to the connection as opposed to passing IPEndPoints . This URI should be in the format of: Single Node : tcp://user:password@myserver:11234 Cluster : discover://user:password@myserver:1234 Where the port number points to the TCP port of the Event Store instance (1113 by default) or points to the manager gossip port for discovery purposes. With the URI based mechanism you can pass a domain name and the client will resolve it. Note The client performs a blocking DNS call for single node. If you are worried about blocking DNS due to network issues etc., you should resolve the DNS yourself and pass in an IP address. Customising Connection Settings Connection String Many of the overloads accept a connection string that you can use to control settings of the connection. A benefit to having these as a connection string instead of using the fluent API is that you can change them between environments without recompiling (i.e. a single node in dev and a cluster in production ). The connection string format should look familiar to those who have used connection strings in the past. It consists of a series of key/value pairs separated by semicolons. You can set the following values using the connection string. <!-- TODO: Moved, to check and what about ConnectTo? --> Name Format Description VerboseLogging True/false Enables verbose logging MaxQueueSize Integer Maximum number of outstanding operations MaxConcurrentItems Integer Maximum number of concurrent async operations MaxRetries Integer Maximum number of retry attempts MaxReconnections Integer The maximum number of times to try reconnecting RequireMaster True/false If set the server will only process if it is master ReconnectionDelay Integer (milliseconds) The delay before attempting to reconnect OperationTimeout Integer (milliseconds) The time before considering an operation timed out OperationTimeoutCheckPeriod Integer (milliseconds) The frequency in which to check timeouts DefaultUserCredentials String in format username:password The default credentials for the connection UseSslConnection True/false whether to use SSL for this connection TargetHost String The hostname expected on the certificate ValidateServer True/false Whether to validate the remote server FailOnNoServerResponse True/False Whether to fail on no server response HeartbeatInterval Integer (milliseconds) The interval at which to send the server a heartbeat HeartbeatTimeout Integer (milliseconds) The amount of time to receive a heartbeat response before timing out ClusterDns string The DNS name of the cluster for discovery MaxDiscoverAttempts Integer The maximum number of attempts to try to discover the cluster ExternalGossipPort Integer The port to try to gossip on GossipTimeout Integer (milliseconds) The amount of time before timing out a gossip response GossipSeeds Comma separated list of ip:port A list of seeds to try to discover from ConnectTo A URI in format described above to connect to The URI to connect to [!INFO] You can also use spacing instead of camel casing in your connection string. var connectionString = \"ConnectTo=tcp://admin:changeit@localhost:1113; HeartBeatTimeout=500\" Sets the connection string to connect to localhost on the default port and sets the heartbeat timeout to 500ms. var connectionString = \"Connect To = tcp://admin:changeit@localhost:1113; Gossip Timeout = 500\" Using spaces: var connectionString = \"ConnectTo=discover://admin:changeit@mycluster:3114; HeartBeatTimeout=500\" Tells the connection to try gossiping to a manager node found under the DNS 'mycluster' at port '3114' to connect to the cluster. var connectionString = \"GossipSeeds=192.168.0.2:1111,192.168.0.3:1111; HeartBeatTimeout=500\" Tells the connection to try gossiping to the gossip seeds 192.168.0.2 or 192.168.0.3 on port '1111' to discover information about the cluster. Note See the fluent API below for defaults of values. Note You can also use the ConnectionString class to return a ConnectionSettings object. Fluent API Settings used for modifying the behavior of an EventStoreConnection are encapsulated into an object of type ConnectionSettings passed as a parameter to the Create methods listed above. Instances of ConnectionSettings are created using a fluent builder class: ConnectionSettings settings = ConnectionSettings.Create(); This creates an instance of ConnectionSettings with default options. You can override these by chaining the additional builder methods described below. Logging The .NET API can log information to different destinations. By default logging is disabled. <!-- TODO: Moved, to check. Actually missing options. --> Builder Method Description UseConsoleLogger() Output log messages using Console.WriteLine UseDebugLogger() Output log messages using Debug.WriteLine UseCustomLogger() Output log messages to the specified instance of ILogger (You should implement this interface in order to log using another library such as NLog or log4net). EnableVerboseLogging() Turns on verbose logging. By default information about connection, disconnection and errors are logged, however it can be useful to have more information about specific operations as they are occuring. User Credentials Event Store supports Access Control Lists that restrict permissions for a stream based on users and groups. EventStoreConnection allows you to supply credentials for each operation, however it is often more convenient to set default credentials for all operations on the connection. Builder Method Description SetDefaultUserCredentials(UserCredentials credentials) Sets the default UserCredentials to use for this connection. If you don't supply any credentials, the operation will use these. You create a UserCredentials object as follows: UserCredentials credentials = new UserCredentials(\"username\",\"password\"); Security The .NET API and Event Store can communicate either over SSL or an unencrypted channel (by default). To configure the client-side of the SSL connection, use the builder method below. For more information on setting up the server end of the Event Store for SSL, see SSL Setup . UseSslConnection(string targetHost, bool validateServer) Uses an SSL-encrypted connection where targetHost is the name specified on the SSL certificate installed on the server, and validateServer controls whether the connection validates the server certificate. Warning In production systems where credentials are sent from the client to Event Store, you should always use SSL encryption and you should set validateServer to true . Node Preference When connecting to an Event Store HA cluster you can specify that operations are performed on any node, or only on the node that is the master. Builder Method Description PerformOnMasterOnly() Require the master to serve all write and read requests (Default). PerformOnAnyNode() Allow for writes to be forwarded and read requests to be served locally if the current node is not master. Handling Failures The following methods on the ConnectionSettingsBuilder allow you to change the way the connection handles operation failures and connection issues. Reconnections Builder Method Description WithConnectionTimeoutOf (TimeSpan timeout) Sets the timeout to connect to a server before aborting and attempting a reconnect (Default: 1 second). LimitReconnectionsTo (int limit) Limits the number of reconnections this connection can try to make (Default: 10). KeepReconnecting() Allows infinite reconnection attempts. SetReconnectionDelayTo (TimeSpan reconnectionDelay) Sets the delay between reconnection attempts (Default: 100ms). SetHeartbeatInterval (TimeSpan interval) Sets how often the connection should expect heartbeats (lower values detect broken sockets faster) (Default: 750ms). SetHeartbeatTimeout (TimeSpan timeout) Sets how long to wait without heartbeats before determining a connection to be dead (must be longer than the heatrbeat interval) (Default: 1500ms). Operations Builder Method Description SetOperationTimeout (TimeSpan timeout) Sets the operation timeout duration (Default: 7 seconds). SetTimeoutCheckPeriodTo (TimeSpan timeoutCheckPeriod) Sets how often to check for timeouts (Default: 1 second). LimitAttemptsForOperationTo (int limit) Limits the number of operation attempts (Default: 11). LimitRetriesForOperationTo (int limit) Limits the number of operation retries (Default: 10). KeepRetrying() Allows infinite operation retries. LimitOperationsQueueTo (int limit) Sets the limit for number of outstanding operations (Default: 5000). FailOnNoServerResponse() Marks that no response from server should cause an error on the request. Cluster Settings When connecting to an Event Store HA cluster you must pass an instance of ClusterSettings as well as the usual ConnectionSettings . Primarily yu use this to tell the EventStoreConnection how to discover all the nodes in the cluster. A connection to a cluster will automatically handle reconnecting to a new node if the current connection fails. Using DNS Discovery DNS discovery uses a single DNS entry with several records listing all node IP addresses. The EventStoreConnection will then use a well known port to gossip with the nodes. Use ClusterSettings.Create().DiscoverClusterViaDns() followed by: <!-- TODO: Moved, to check. --> Builder Method Description SetClusterDns(string clusterDns) Sets the DNS name under which to list cluster nodes. SetClusterGossipPort(int clusterGossipPort) Sets the well-known port on which the cluster gossip is taking place. SetMaxDiscoverAttempts(int maxDiscoverAttempts) Sets the maximum number of attempts for discovery (Default: 10). SetGossipTimeout(TimeSpan timeout) Sets the period after which gossip times out if none is received (Default: 1 second). Note If you are using the commercial edition of Event Store HA with Manager nodes in place, the gossip port should be the port number of the external HTTP port on which the managers are running. If you are using the open source edition of Event Store HA the gossip port should be the External HTTP port that the nodes are running on. If you cannot use a well-known port for this across all nodes you can instead use gossip seed discovery and set the IPEndPoint of some seed nodes instead. Connecting Using Gossip Seeds The second supported method for node discovery uses a hardcoded set of IPEndPoint s as gossip seeds. Use ClusterSettings.Create().DiscoverClusterViaGossipSeeds() followed by: <!-- TODO: Moved, to check. --> Builder Method Description SetGossipSeedEndPoints(params IPEndPoint[] gossipSeeds) Sets gossip seed endpoints for the client. SetGossipSeedEndPoints(params GossipSeed[] gossipSeeds) Same as above, but allows a specific Host header to be sent with all HTTP requests. SetMaxDiscoverAttempts(int maxDiscoverAttempts) Sets the maximum number of attempts for discovery (Default: 10). SetGossipTimeout(TimeSpan timeout) Sets the period after which gossip times out if none is received (Default: 1 second). Connection Events EventStoreConnection exposes events that your application can use to be notifed of changes to the status of the connection. <!-- TODO: Not moved. --> Event Description EventHandler<ClientConnectionEventArgs> Connected Fired when an IEventStoreConnection connects to an Event Store server. EventHandler<ClientConnectionEventArgs> Disconnected Fired when an IEventStoreConnection disconnects from an Event Store server by some means other than by calling the Close method. EventHandler<ClientReconnectingEventArgs> Reconnecting Fired when an IEventStoreConnection is attempting to reconnect to an Event Store server following a disconnection. EventHandler<ClientClosedEventArgs> Closed Fired when an IEventStoreConnection is closed either using the Close method or when reconnection limits are reached without a successful connection being established. EventHandler<ClientErrorEventArgs> ErrorOccurred Fired when an error is thrown on an IEventStoreConnection . EventHandler<ClientAuthenticationFailedEventArgs> AuthenticationFailed Fired when a client fails to authenticate to an Event Store server."
  },
  "dotnet-api/competing-consumers/index.html": {
    "href": "dotnet-api/competing-consumers/index.html",
    "title": "Competing Consumers | Event Store",
    "keywords": "Competing Consumers This document explains how to use .NET API for setting up and consuming competing consumer subscription groups. For an overview of competing consumers and how they relate to other subscription types, please see the overview document . Note The Administration UI includes a Competing Consumers section where a user can create, update, delete and view subscriptions and their statuses. Methods Creating a Persistent Subscription Before interacting with a subscription group, you need to create one. You will receive an error if you attempt to create a subscription group more than once. This requires admin permissions . Task<PersistentSubscriptionCreateResult> CreatePersistentSubscriptionAsync(string stream, string groupName, PersistentSubscriptionSettings settings, UserCredentials credentials); Updating a Persistent Subscription You can edit the settings of an existing subscription while it is running. This action drops the current subscribers and resets the subscription internally. This requires admin permissions . Task<PersistentSubscriptionUpdateResult> UpdatePersistentSubscriptionAsync(string stream, string groupName, PersistentSubscriptionSettings settings, UserCredentials credentials); Deleting a Persistent Subscription <!-- TODO: Explanation? --> Task<PersistentSubscriptionDeleteResult> DeletePersistentSubscriptionAsync(string stream, string groupName, UserCredentials userCredentials = null); Connecting to a Persistent Subscription <!-- TODO: Explanation? --> EventStorePersistentSubscription ConnectToPersistentSubscription( string groupName, string stream, Func<EventStorePersistentSubscription, ResolvedEvent, Task> eventAppeared, Action<EventStorePersistentSubscription, SubscriptionDropReason, Exception> subscriptionDropped = null, UserCredentials userCredentials = null, int bufferSize = 10, bool autoAck = true); Persistent Subscription Settings Both the Create and Update methods take a PersistentSubscriptionSettings object as a parameter. The methods use this object to provide the settings for the persistent subscription. A fluent builder is available for these options that you can locate using the Create() method. The following table shows the options you can set on a persistent subscription. Member Description ResolveLinkTos Tells the subscription to resolve link events. DoNotResolveLinkTos Tells the subscription to not resolve link events. PreferRoundRobin If possible preference a round robin between the connections with messages (if not possible uses next available). PreferDispatchToSingle If possible preference dispatching to a single connection (if not possible will use next available). StartFromBeginning Start the subscription from the first event in the stream. StartFrom(int position) Start the subscription from the position-th event in the stream. StartFromCurrent Start the subscription from the current position. WithMessageTimeoutOf(TimeSpan timeout) Sets the timeout for a client before retrying the message. CheckPointAfter(TimeSpan time) The amount of time the system should try to checkpoint after. MinimumCheckPointCountOf(int count) The minimum number of messages to write a checkpoint for. MaximumCheckPointCountOf(int count) The maximum number of messages not checkpointed before forcing a checkpoint. WithMaxRetriesOf(int count) Sets the number of times to retry a message should before considering it a bad message. WithLiveBufferSizeOf(int count) The size of the live buffer (in memory) before resorting to paging. WithReadBatchOf(int count) The size of the read batch when in paging mode. WithBufferSizeOf(int count) The number of messages to buffer when in paging mode. WithExtraStatistics Tells the backend to measure timings on the clients so statistics contain histograms of them. Creating a Subscription Group The first step of dealing with a subscription group is to create one. You will receive an error if you attempt to create a subscription group multiple times. You must have admin permissions to create a persistent subscription group. Note Normally you wouldn't create the subscription group in your general executable code. Instead, you create it as a step during an install or as an admin task when setting up Event Store. You should assume the subscription exists in your code. PersistentSubscriptionSettings settings = PersistentSubscriptionSettings.Create() .DoNotResolveLinkTos() .StartFromCurrent(); _result = _conn.CreatePersistentSubscriptionAsync(_stream, \"agroup\", settings, MyCredentials).Result; Parameter Description string stream The stream to the persistent subscription is on. string groupName The name of the subscription group to create. PersistentSubscriptionSettings settings The settings to use when creating this subscription. UserCredentials credentials The user credentials to use for this operation. Updating a Subscription Group You can edit the settings of an existing subscription group while it is running, you don't need to delete and recreate it to change settings. When you update the subscription group, it resets itself internally dropping the connections and having them reconnect. You must have admin permissions to update a persistent subscription group. PersistentSubscriptionSettings settings = PersistentSubscriptionSettings.Create() .DoNotResolveLinkTos() .StartFromCurrent(); _result = _conn.UpdatePersistentSubscriptionAsync(_stream, \"agroup\", settings, MyCredentials).Result; Note If you change settings such as startFromBeginning , this doesn't reset the group's checkpoint. If you want to change the current position in an update, you must delete and recreate the subscription group. Parameter Description string stream The stream to the persistent subscription is on. string groupName The name of the subscription group to update. PersistentSubscriptionSettings settings The settings to use when updating this subscription. UserCredentials credentials The user credentials to use for this operation. Deleting a Subscription Group Remove a subscription group with the delete operation. Like the creation of groups, you rarely do this in your runtime code and is undertaken by an administrator running a script. var result = _conn.DeletePersistentSubscriptionAsync(stream, \"groupname\", DefaultData.AdminCredentials).Result; Parameter Description string stream The stream to the persistent subscription is on. string groupName The name of the subscription group to update. UserCredentials credentials The user credentials to use for this operation. Connecting to a Subscription Group Once you have created a subscription group, clients can connect to that subscription group. A subscription in your application should only have the connection in your code, you should assume that the subscription was created via the client API, the restful API, or manually in the UI. The most important parameter to pass when connecting is the buffer size. This parameter represents how many outstanding messages the server should allow this client. If this number is too small, your subscription will spend much of its time idle as it waits for an acknowledgment to come back from the client. If it's too big, you waste resources and can start causing time out messages depending on the speed of your processing. var subscription = _conn.ConnectToPersistentSubscription(\"foo\", \"nonexisting2\", (sub, e) => Console.Write(\"appeared\"), (sub, reason, ex) =>{}); Parameter Description string stream The stream to the persistent subscription is on. string groupName The name of the subscription group to connect to. Action eventAppeared The action to call when an event arrives over the subscription. Action subscriptionDropped The action to call if the subscription is dropped. UserCredentials credentials The user credentials to use for this operation. int bufferSize The number of in-flight messages this client is allowed. bool autoAck Whether to automatically acknowledge messages after eventAppeared returns. Acknowledgements Clients must acknowledge (or not acknowledge) messages in the competing consumer model. If you enable auto-ack the subscription will automatically acknowledge messages once your handler completes them. If you throw an exception, it will shut down your subscription with a message and the uncaught exception. You can choose to not auto-ack messages. This can be useful when you have multi-threaded processing of messages in your subscriber and need to pass control to something else. There are methods on the subscription object that you can call Acknowledge, and NotAcknowledge both take a ResolvedEvent (the one you processed) both also have overloads for passing and IEnumerable<ResolvedEvent> . Consumer Strategies When creating a persistent subscription, the settings allow for different consumer strategies via the WithNamedConsumerStrategy method. Built-in strategies are defined in the enum SystemConsumerStrategies . Note HTTP clients bypass the consumer strategy which means it ignores any ordering or pinning. RoundRobin (default) Distributes events to all clients evenly. If the client bufferSize is reached the client is ignored until events are acknowledged/not acknowledged. | DispatchToSingle Distributes events to a single client until the bufferSize is reached. After which the next client is selected in a round robin style, and the process is repeated. Pinned For use with an indexing projection such as the system $by_category projection. Event Store inspects event for its source stream id, hashing the id to one of 1024 buckets assigned to individual clients. When a client disconnects it's buckets are assigned to other clients. When a client connects, it is assigned some of the existing buckets. This naively attempts to maintain a balanced workload. The main aim of this strategy is to decrease the likelihood of concurrency and ordering issues while maintaining load balancing. This is not a guarantee , and you should handle the usual ordering and concurrency issues."
  },
  "server/users-and-access-control-lists/index.html": {
    "href": "server/users-and-access-control-lists/index.html",
    "title": "Users and Access Control Lists | Event Store",
    "keywords": "Users and Access Control Lists Default Users Event Store provides two default users, $ops and $admin . $admin has full access to everything in Event Store. It can read and write to protected streams, which is any stream that starts with $, such as $projections-master . Protected streams are usually system streams, for example, $projections-master manages some of the projections' states. The $admin user can also run operational commands, such as scavenges and shutdowns on Event Store. $ops can run operational commands like the $admin user, but cannot read protected streams. New Users New users created in Event Store are standard users. They can't read protected streams or perform operations. If you add a user into the $ops or $admins group, they have the same level of access as those users. By default, any user can read any non-protected stream unless there is an ACL preventing that. Stream ACLs Event Store keeps the ACL of a stream in the streams metadata as JSON with the below definition: { \"$acl\": { \"$w\": \"$admins\", \"$r\": \"$all\", \"$d\": \"$admins\", \"$mw\": \"$admins\", \"$mr\": \"$admins\" } } These fields represent the following: $w The permission to write to this stream. $r The permission to read from this stream. $d The permission to delete this stream. $mw The permission to write the metadata associated with this stream. $mr The permission to read the metadata associated with this stream. You can update these fields with either a single string or an array of strings representing users or groups ( $admins , $all , or custom groups). It's possible to put an empty array into one of these fields, and this has the effect of removing all users from that permission. Note We recommend you don't give people access to $mw as then they can then change the ACL. Example The ACL below would give writer read and write permission on the stream, while reader would have read permission on the stream. Only users in the $admins group would be able to delete the stream or read and write the metadata. HTTP API Response .NET API Inside a file named metadata.json : [ { \"eventId\": \"7c314750-05e1-439f-b2eb-f5b0e019be72\", \"eventType\": \"update-acl\", \"metadata\": { \"$acl\": { \"$w\": \"writer\", \"$r\": [ \"reader\", \"also-reader\" ], \"$d\": \"$admins\", \"$mw\": \"$admins\", \"$mr\": \"$admins\" } } } ] curl -i -d @metadata.json http://127.0.0.1:2113/streams/newstream/metadata --user admin:changeit -H \"Content-Type: application/vnd.eventstore.events+json\" HTTP/1.1 201 Created Access-Control-Allow-Methods: GET, POST, GET, OPTIONS Access-Control-Allow-Headers: Content-Type, X-Requested-With, X-Forwarded-Host, X-Forwarded-Prefix, X-PINGOTHER, Authorization, ES-LongPoll, ES-ExpectedVersion, ES-EventId, ES-EventType, ES-RequiresMaster, ES-HardDelete, ES-ResolveLinkTos Access-Control-Allow-Origin: * Access-Control-Expose-Headers: Location, ES-Position, ES-CurrentVersion Location: http://127.0.0.1:2113/streams/%24%24newstream/0 Content-Type: text/plain; charset=utf-8 Server: Mono-HTTPAPI/1.0 Date: Tue, 18 Sep 2018 09:38:56 GMT Content-Length: 0 Keep-Alive: timeout=15,max=100 <!-- TODO: Refactor into demo application --> StreamMetadata metadata = StreamMetadata.Build() .SetCustomPropertyWithValueAsRawJsonString(\"customRawJson\", @\"{ \"\"$acl\"\": { \"\"$w\"\": \"\"writer\"\", \"\"$r\"\": [ \"\"reader\"\", \"\"also-reader\"\" ], \"\"$d\"\": \"\"$admins\"\", \"\"$mw\"\": \"\"$admins\"\", \"\"$mr\"\": \"\"$admins\"\" }}\"); conn.SetStreamMetadataAsync(streamName, ExpectedVersion.Any, metadata, adminCredentials); Default ACL The $settings stream has a special ACL used as the default ACL. This stream controls the default ACL for streams without an ACL and also controls who can create streams in the system, the default state of these is shown below: { \"$userStreamAcl\": { \"$r\": \"$all\", \"$w\": \"$all\", \"$d\": \"$all\", \"$mr\": \"$all\", \"$mw\": \"$all\" }, \"$systemStreamAcl\": { \"$r\": \"$admins\", \"$w\": \"$admins\", \"$d\": \"$admins\", \"$mr\": \"$admins\", \"$mw\": \"$admins\" } } The $userStreamAcl controls the default ACL for user streams, while all system streams use the $systemStreamAcl as the default. Note The $w in $userStreamAcl also applies to the ability to create a stream. Members of $admins always have access to everything, you cannot remove this permission. When you set a permission on a stream, it overrides the default values. However, it's not necessary to specify all permissions on a stream. It's only necessary to specify those which differ from the default. Example Note All these examples assume you have created a user named ouro . The examples also assume the password is ouroboros . { \"$userStreamAcl\": { \"$r\": \"$all\", \"$w\": \"ouro\", \"$d\": \"ouro\", \"$mr\": \"ouro\", \"$mw\": \"ouro\" }, \"$systemStreamAcl\": { \"$r\": \"$admins\", \"$w\": \"$admins\", \"$d\": \"$admins\", \"$mr\": \"$admins\", \"$mw\": \"$admins\" } } This default ACL would give ouro and $admins create and write permissions on all streams, while everyone else can read from them. Be careful allowing default access to system streams to non-admins as they would also have access to $settings unless you specifically override it. Request Response .NET API [ { \"eventId\": \"7c314750-05e1-439f-b2eb-f5b0e019be72\", \"eventType\": \"update-default-acl\", \"metadata\": { \"$userStreamAcl\": { \"$r\": \"$all\", \"$w\": \"ouro\", \"$d\": \"ouro\", \"$mr\": \"ouro\", \"$mw\": \"ouro\" }, \"$systemStreamAcl\": { \"$r\": \"$admins\", \"$w\": \"$admins\", \"$d\": \"$admins\", \"$mr\": \"$admins\", \"$mw\": \"$admins\" } } } ] curl -i -d @override-default.json http://127.0.0.1:2113/streams/%24settings/metadata --user admin:changeit -H \"Content-Type: application/vnd.eventstore.events+json\" Warning You should not copy/paste the UUID in the command line above but generate a new one or not provide one (you will be redirected to a URI with one as described in writing events in the HTTP API). HTTP/1.1 201 Created Access-Control-Allow-Methods: GET, POST, GET, OPTIONS Access-Control-Allow-Headers: Content-Type, X-Requested-With, X-Forwarded-Host, X-Forwarded-Prefix, X-PINGOTHER, Authorization, ES-LongPoll, ES-ExpectedVersion, ES-EventId, ES-EventType, ES-RequiresMaster, ES-HardDelete, ES-ResolveLinkTos Access-Control-Allow-Origin: * Access-Control-Expose-Headers: Location, ES-Position, ES-CurrentVersion Location: http://127.0.0.1:2113/streams/%24%24%24users/0 Content-Type: text/plain; charset=utf-8 Server: Mono-HTTPAPI/1.0 Date: Thu, 23 Aug 2018 10:35:19 GMT Content-Length: 0 Keep-Alive: timeout=15,max=100 <!-- TODO: Refactor into demo application --> StreamMetadata metadata = StreamMetadata.Build() .SetCustomPropertyWithValueAsRawJsonString(\"customRawJson\", @\"{ \"\"$userStreamAcl\"\": { \"\"$r\"\": \"\"$all\"\", \"\"$w\"\": \"\"ouro\"\", \"\"$d\"\": \"\"ouro\"\", \"\"$mr\"\": \"\"ouro\"\", \"\"$mw\"\": \"\"ouro\"\" }, \"\"$systemStreamAcl\"\": { \"\"$r\"\": \"\"$admins\"\", \"\"$w\"\": \"\"$admins\"\", \"\"$d\"\": \"\"$admins\"\", \"\"$mr\"\": \"\"$admins\"\", \"\"$mw\"\": \"\"$admins\"\" } }}\"); conn.SetStreamMetadataAsync(\"%24settings\", ExpectedVersion.Any, metadata, adminCredentials); If you try to access the $settings stream as an unauthorized user, Event Store returns a 401 response. Request Response curl -i http://127.0.0.1:2113/streams/%24settings -u ouro:ouroboros HTTP/1.1 401 Unauthorized Access-Control-Allow-Methods: POST, DELETE, GET, OPTIONS Access-Control-Allow-Headers: Content-Type, X-Requested-With, X-PINGOTHER, Authorization, ES-LongPoll, ES-ExpectedVersion, ES-EventId, ES-EventType, ES-RequiresMaster, ES-HardDelete, ES-ResolveLinkTo, ES-ExpectedVersion Access-Control-Allow-Origin: * Access-Control-Expose-Headers: Location, ES-Position WWW-Authenticate: Basic realm=\"ES\" Content-Type: text/plain; charset=utf-8 Server: Mono-HTTPAPI/1.0 Date: Mon, 02 Mar 2015 15:21:27 GMT Content-Length: 0 Keep-Alive: timeout=15,max=100 If you wanted to give ouro access by default to system streams, POST the following JSON: { \"$userStreamAcl\": { \"$r\": \"$all\", \"$w\": \"ouro\", \"$d\": \"ouro\", \"$mr\": \"ouro\", \"$mw\": \"ouro\" }, \"$systemStreamAcl\": { \"$r\": [\"$admins\", \"ouro\"], \"$w\": \"$admins\", \"$d\": \"$admins\", \"$mr\": \"$admins\", \"$mw\": \"$admins\" } } At which point ouro can read system streams by default: Request Response curl -i http://127.0.0.1:2113/streams/%24settings -u ouro:ouroboros HTTP/1.1 200 OK Access-Control-Allow-Methods: POST, DELETE, GET, OPTIONS Access-Control-Allow-Headers: Content-Type, X-Requested-With, X-PINGOTHER, Authorization, ES-LongPoll, ES-ExpectedVersion, ES-EventId, ES-EventType, ES-RequiresMaster, ES-HardDelete, ES-ResolveLinkTo, ES-ExpectedVersion Access-Control-Allow-Origin: * Access-Control-Expose-Headers: Location, ES-Position Cache-Control: max-age=0, no-cache, must-revalidate Vary: Accept ETag: \"1;-1296467268\" Content-Type: application/atom+xml; charset=utf-8 Server: Mono-HTTPAPI/1.0 Date: Mon, 02 Mar 2015 15:25:17 GMT Content-Length: 1286 Keep-Alive: timeout=15,max=100 You can also limit ACLs on particular streams which are then merged with the default ACLs. { \"$acl\": { \"$r\": [\"reader\", \"also-reader\"] } } If you add the above to a stream's ACL, then it overrides the read permission on that stream to allow reader and also-reader to read streams, but not ouro , resulting in the effective ACL below. { \"$acl\": { \"$r\": [\"reader\", \"also-reader\"], \"$w\": \"ouro\", \"$d\": \"ouro\", \"$mr\": \"ouro\", \"$mw\": \"ouro\" } } Warning Caching is allowed on a stream if you have enabled it to be visible to $all . This is as a performance optimization to avoid having to set cache=private on all data. If people are bookmarking your URIs and they were cached by an intermediary then they may still be accessible after you change the permissions from $all . While clients should not be bookmarking URIs in this way, it's an important consideration."
  },
  "server/setting-up-varnish-in-linux/index.html": {
    "href": "server/setting-up-varnish-in-linux/index.html",
    "title": "Setting up Varnish in Linux | Event Store",
    "keywords": "Setting up Varnish in Linux Note This guide uses the latest Ubuntu LTS (18.04) You use a reverse proxy to limit access to Event Store without breaking HTTP caching (authenticate to the proxy not to Event Store itself). Since Event Store runs HTTP only on the loopback adapter, users must enter through the reverse proxy to reach Event Store. This document provides a brief guide on how to install Event Store with the varnish reverse proxy in a Linux environment. For more information on how to properly configure varnish for your requirements, read the Varnish documentation . Ben Clark's Gist contains a varnish configuration that includes basic authentication as well as some other niceties such as adding headers for hits/misses. Install Varnish sudo apt-get update sudo apt-get install varnish Configure Varnish Open /etc/default/varnish and edit the section that looks like the below to the port with the port you want to run on: DAEMON_OPTS=\"-a :80 \\ -T localhost:6082 \\ -f /etc/varnish/default.vcl \\ -S /etc/varnish/secret \\ -s malloc,256m\" Open /etc/varnish/default.vcl and edit the backend section to match Event Store: backend default { .host = \"127.0.0.1\"; .port = \"2114\"; } Finally use sudo service varnish restart to restart varnish and Event Store should be running with a reverse proxy in front of it. If you want to check the status of varnish, use varnishstat ."
  },
  "server/metadata-and-reserved-names/index.html": {
    "href": "server/metadata-and-reserved-names/index.html",
    "title": "Metadata and Reserved Names | Event Store",
    "keywords": "Metadata and Reserved Names Stream Metadata Every stream in Event Store has metadata associated with it. Event Store allows you to change some values in the metadata, and you can write your own data into stream metadata that you can refer to in your code. Reserved Names All internal data used by Event Store is prefixed with a $ character (for example $maxCount on a stream's metadata). Because of this you should not use names with a $ prefix as event names, metadata keys, or stream names, except where detailed below. The supported internal settings are: Name Description $maxAge Sets a sliding window based on dates. When data reaches a certain age it disappears automatically from the stream and is considered eligible for scavenging. This value is set as an integer representing the number of seconds. This value must be >=1. $maxCount Sets a sliding window based on the number of items in the stream. When data reaches a certain length it disappears automatically from the stream and is considered eligible for scavenging. This value is set as an integer representing the count of items. This value must be >= 1. $cacheControl This controls the cache of the head of a stream. Most URIs in a stream are infinitely cacheable but the head by default will not cache. It may be preferable in some situations to set a small amount of caching on the head to allow intermediaries to handle polls (say 10 seconds). The argument is an integer representing the seconds to cache. This value must be >= 1. Note If you set both $maxAge and $maxCount then events will become eligible for scavenging when either criteria is met. For example, if you set $maxAge to 10 and $maxCount to 50,000, events will be marked as eligible for scavenging after either 10 seconds, or 50,000 events, have passed. Deleted items will only be removed once the scavenge process runs. Security access control lists are also included in the $acl section of the stream metadata. Name Description $r The list of users with read permissions $w The list of users with write permissions $d The list of users with delete permissions $mw The list of users with write permissions to stream metadata $mr The list of users with read permissions to stream metadata You can find more details on access control lists can here . Event Metadata Every event in Event Store has metadata associated with it. Event Store allows you to change some values in the metadata, and you can write your own data into event metadata that you can refer to in your code. All names starting with $ are reserved space for internal use. The currently supported reserved internal names are: $correlationId The application level correlation ID associated with this message. $causationId The application level causation ID associated with this message. Projections honor both the correlationId and causationId patterns for any events it produces internally (linkTo/emit/etc)."
  },
  "server/index.html": {
    "href": "server/index.html",
    "title": "Running Event Store | Event Store",
    "keywords": "Running Event Store Event Store runs as a server that clients can connect to either over HTTP or using one of the client APIs . You can run both the open source and commercial versions as either a single node or a highly available cluster of nodes. We distribute an open source version of Event Store as a console application. There are separate distributions for Windows on .NET and Linux/macOS on Mono. Install and run Event Store Note Unless you pass a database option with --db , Event Store writes to a new database created in the host system's temporary files path each time it is started. For more information on Command Line Arguments read this guide . Windows Linux Docker Kubernetes macOS The prerequisites for Installing on Windows are: NET Framework 4.0+ Windows platform SDK with compilers (v7.1) or Visual C++ installed (Only required for a full build) Event Store has Chocolatey packages available that you can install with the following command: choco install eventstore-oss You can also download a binary, unzip the archive and run from the folder location with an administrator console: EventStore.ClusterNode.exe --db ./db --log ./logs This command starts Event Store with the database stored at the path ./db and the logs in ./logs . You can view further command line arguments in the server docs . Event Store runs in an administration context because it starts an HTTP server through http.sys . For permanent or production instances you need to provide an ACL such as: netsh http add urlacl url=http://+:2113/ user=DOMAIN\\username The prerequisites for Installing on Linux are: We recommend Mono 5.16.0 , but other versions may also work. Event Store has pre-built packages available for Debian-based distributions , manual instructions for distributions that use RPM , or you can build from source . The final package name to install is eventstore-oss . If you installed from a pre-built package, start Event Store with: sudo systemctl start eventstore When you install the Event Store package, the service doesn't start by default. This is to allow you to change the configuration, located at /etc/eventstore/eventstore.conf and to prevent creating a default database. In all other cases you can run the Event Store binary or use our run-node.sh shell script which exports the environment variable LD_LIBRARY_PATH to include the installation path of Event Store, which is necessary if you are planning to use projections. ./run-node.sh --db ./ESData Note We recommend that when using Linux you set the 'open file limit' to a high number. The precise value depends on your use case, but at least between 30,000 and 60,000 . Event Store has a Docker image available for any platform that supports Docker: docker run --name eventstore-node -it -p 2113:2113 -p 1113:1113 eventstore/eventstore Event Store has a Helm chart available for installing Event Store on Kubernetes clusters: helm repo add eventstore https://eventstore.github.io/EventStore.Charts helm repo update helm install -n eventstore eventstore/eventstore Note Read this guide for more details on how to use the helm chart. Read this guide for more details on using Kubernetes with AKS and this guide for more details on using Kubernetes with GKE. Event Store has a macOS package you can download and install, and we maintain a Homebrew Cask formula you can install: brew cask install eventstore In each case you can run Event Store with the eventstore command, and stop it with Ctrl+c . To use the default database location you need to use sudo , or you can change the location with the --db parameter. Solving 503 errors from the Admin UI There is a known issue with the .NET HTTPListener class (which Event Store uses) and bad URL ACL registrations which can cause servers to return 503 errors for every request. If you see this, you can issue the following commands: netsh http show urlacl Look for an entry on the port you're trying to use ( 2113 unless you've specified a custom port), then issue: netsh http delete urlacl <the entry you just found> For example: netsh http delete urlacl http://+:2113/ These steps should resolve the issue. Shutting down an Event Store node Event Store is designed to be safe by default, and it is expected that it will be shut down using kill -9 . It is also possible to initiate a shutdown via the Admin UI, by clicking on the Shutdown Server button located on the Admin page. This may be useful if you do not have console access to the node or need to script initiating a shutdown. Securing Event Store To secure Event Store, you can bind the server to the localhost interface and install a reverse proxy such as nginx or Varnish on the public IP. Read this guide for an example of setting up Event Store with Varnish. The reverse proxy is your public interface. Internally it handles the authentication and route requests to Event Store. Event Store is only accessible through the localhost adapter and is not exposed publicly. The locally running reverse proxy is allowed to cache responses, and because of this, reverse proxies are more performant than calling Event Store directly. Even if you use a reverse proxy, you can support external authentication from Event Store itself. You do this by enabling the ES-TrustedAuth trusted intermediary option in your configuration. This allows the intermediary to write a header with the user information that Event Store uses."
  },
  "server/command-line-arguments/index.html": {
    "href": "server/command-line-arguments/index.html",
    "title": "Command Line Arguments | Event Store",
    "keywords": "Command Line Arguments Event Store supports many configuration options. There are three distinct ways to set any parameter, all with their own advantages and disadvantages. The command line Environment variables YAML files Command line To pass a configuration value over the command line you add the configuration to the line executing Event Store, for example: EventStore.ClusterNode.exe --log ~/logs While command line arguments are useful during development, they are not the preferred way to handle configuration in a production system. Environment Variables You can set all arguments can also as environment variables. This mechanism is often used in UNIX based systems. For example: log=~/logs You can reference another environment variable by setting the variable’s value to ${env:REFERENCED_ENV_VAR} . For example, if you’re using Azure Service Fabric, some predefined environment variables exist. You can use EVENTSTORE_EXT_IP={env:Fabric_NodeIPOrFQDN} to reference the node's IP address. YAML Files The last way you can set arguments is to put them into one or more configuration files. To tell Event Store to use a different configuration file, you pass the file path on the command line with --config=filename , or use the CONFIG enivornment variable. The basic format of the YAML configuration file is as follows: --- Log: \"~/logs\" IntHttpPort: 2111 --- Note You need to use the three dashes and spacing in your YAML file. YAML files are better for large installations as you can centrally distribute and manage them, or generate them from a configuration management system. Order of precedence The order of precedence between multiple configuration sources is important as you can set them in multiple ways. The command line is the highest priority followed by environment variables. Files are the lowest precedence and are processed in the order given on the command line. When starting Event Store it lists the major parameters in the log (including what set them). Parameter list Event Store supports the following parameters. Application Options Command line parameter Environment variable prefixed with EVENTSTORE_ Config file YAML Description -Help --help=VALUE HELP Help Show help. (Default: False) -Version --version=VALUE VERSION Version Show version. (Default: False) -Log --log=VALUE LOG Log Path where to keep log files. (Default: See default directories -StructuredLog --structured-log=VALUE STRUCTURED_LOG StructuredLog Enable Structured (JSON) logging. (Default: True) -Config --config=VALUE CONFIG Config Configuration files. -Defines --defines=VALUE DEFINES Defines Run-time conditionals. (Default: n/a) -WhatIf --what-if=VALUE WHAT_IF WhatIf Print effective configuration to console and then exit. (Default: False) -StartStandardProjections --start-standard-projections=VALUE START_STANDARD_PROJECTIONS StartStandardProjections Start the built in system projections. (Default: False) -DisableHTTPCaching --disable-http-caching=VALUE DISABLE_HTTP_CACHING DisableHTTPCaching Disable HTTP caching. (Default: False) -MonoMinThreadpoolSize --mono-min-threadpool-size=VALUE MONO_MIN_THREADPOOL_SIZE MonoMinThreadpoolSize Minimum number of worker threads when running under mono. Set to 0 to leave machine defaults. (Default: 10) -Force --force=VALUE FORCE Force Force the Event Store to run in possibly harmful environments such as with Boehm GC. (Default: False) -StatsPeriodSec --stats-period-sec=VALUE STATS_PERIOD_SEC StatsPeriodSec The number of seconds between statistics gathers. (Default: 30) -WorkerThreads --worker-threads=VALUE WORKER_THREADS WorkerThreads The number of threads to use for pool of worker services. (Default: 5) -EnableHistograms --enable-histograms=VALUE ENABLE_HISTOGRAMS EnableHistograms Enables the tracking of various histograms in the backend, typically only used for debugging etc (Default: False) -LogHttpRequests --log-http-requests=VALUE LOG_HTTP_REQUESTS LogHttpRequests Log HTTP Requests and Responses before processing them. (Default: False) Authentication Options Command line parameter Environment variable prefixed with EVENTSTORE_ Config file YAML Description -AuthenticationType --authentication-type=VALUE AUTHENTICATION_TYPE AuthenticationType The type of authentication to use. (Default: internal) -AuthenticationConfig --authentication-config=VALUE AUTHENTICATION_CONFIG AuthenticationConfig Path to the configuration file for authentication configuration (if applicable). Certificate Options Command line parameter Environment variable prefixed with EVENTSTORE_ Config file YAML Description -CertificateStoreLocation --certificate-store-location=VALUE CERTIFICATE_STORE_LOCATION CertificateStoreLocation The certificate store location name. -CertificateStoreName --certificate-store-name=VALUE CERTIFICATE_STORE_NAME CertificateStoreName The certificate store name. -CertificateSubjectName --certificate-subject-name=VALUE CERTIFICATE_SUBJECT_NAME CertificateSubjectName The certificate subject name. -CertificateThumbprint --certificate-thumbprint=VALUE CERTIFICATE_THUMBPRINT CertificateThumbprint The certificate fingerprint/thumbprint. -CertificateFile --certificate-file=VALUE CERTIFICATE_FILE CertificateFile The path to certificate file. -CertificatePassword --certificate-password=VALUE CERTIFICATE_PASSWORD CertificatePassword The password to certificate in file. Cluster Options Command line parameter Environment variable prefixed with EVENTSTORE_ Config file YAML Description -ClusterSize --cluster-size=VALUE CLUSTER_SIZE ClusterSize The number of nodes in the cluster. (Default: 1) -IsPromotable --is-promotable=VALUE IS_PROMOTABLE IsPromotable Can the node participate in elections and shut the node down if there isn't a quorum. (Default: True) -NodePriority --node-priority=VALUE NODE_PRIORITY NodePriority The node priority used during master election (Default: 0) -CommitCount --commit-count=VALUE COMMIT_COUNT CommitCount The number of nodes which must acknowledge commits before acknowledging to a client. (Default: -1) -PrepareCount --prepare-count=VALUE PREPARE_COUNT PrepareCount The number of nodes which must acknowledge prepares. (Default: -1) -DiscoverViaDns --discover-via-dns=VALUE DISCOVER_VIA_DNS DiscoverViaDns Whether to use DNS lookup to discover other cluster nodes. (Default: True) -ClusterDns --cluster-dns=VALUE CLUSTER_DNS ClusterDns DNS name from which other nodes can be discovered. (Default: fake.dns) -ClusterGossipPort --cluster-gossip-port=VALUE CLUSTER_GOSSIP_PORT ClusterGossipPort The port on which cluster nodes' managers are running. (Default: 30777) -GossipSeed --gossip-seed=VALUE GOSSIP_SEED GossipSeed Endpoints for other cluster nodes from which to seed gossip (Default: n/a) -GossipIntervalMs --gossip-interval-ms=VALUE GOSSIP_INTERVAL_MS GossipIntervalMs The interval in ms that nodes should try to gossip with each other (Default: 1000) -GossipAllowedDifferenceMs --gossip-allowed-difference-ms=VALUE GOSSIP_ALLOWED_DIFFERENCE_MS GossipAllowedDifferenceMs The amount of drift, in ms, between clocks on nodes allowed before gossip is rejected. (Default: 60000) -GossipTimeoutMs --gossip-timeout-ms=VALUE GOSSIP_TIMEOUT_MS GossipTimeoutMs The timeout in ms of gossip to another node. (Default: 500) -InitializationThreads --initialization-threads=VALUE INITIALIZATION_THREADS InitializationThreads Number of threads used to load chunk and index files. (Default: 1) -reduceFileCachePressure --reduce-file-cache-pressure=VALUE REDUCE_FILE_CACHE_PRESSURE reduceFileCachePressure Disables FileOptions.RandomAccess cache flag when opening chunk files. Useful if the Windows File Cache is consuming memory. (Default: False) Database Options Command line parameter Environment variable prefixed with EVENTSTORE_ Config file YAML Description -MinFlushDelayMs --min-flush-delay-ms=VALUE MIN_FLUSH_DELAY_MS MinFlushDelayMs The minimum flush delay in milliseconds. (Default: 2) -DisableScavengeMerging --disable-scavenge-merging=VALUE DISABLE_SCAVENGE_MERGING DisableScavengeMerging Disables the merging of chunks when scavenge is running (Default: False) -ScavengeHistoryMaxAge --scavenge-history-max-age=VALUE SCAVENGE_HISTORY_MAX_AGE ScavengeHistoryMaxAge The number of days to keep scavenge history (Default: 30) -CachedChunks --cached-chunks=VALUE CACHED_CHUNKS CachedChunks The number of chunks to cache in unmanaged memory. (Default: -1, or all) -ReaderThreadsCount --reader-threads-count=VALUE READER_THREADS_COUNT ReaderThreadsCount The number of reader threads to use for processing reads. (Default: 4) -ChunksCacheSize --chunks-cache-size=VALUE CHUNKS_CACHE_SIZE ChunksCacheSize The amount of unmanaged memory to use for caching chunks in bytes. (Default: 536871424) -MaxMemTableSize --max-mem-table-size=VALUE MAX_MEM_TABLE_SIZE MaxMemTableSize Adjusts the maximum size of a mem table. (Default: 1000000) -HashCollisionReadLimit --hash-collision-read-limit=VALUE HASH_COLLISION_READ_LIMIT HashCollisionReadLimit The number of events to read per candidate in the case of a hash collision (Default: 100) -Db --db=VALUE DB Db The path the db should be loaded/saved to. (Default: See default directories ) -Index --index=VALUE INDEX Index The path the index should be loaded/saved to. -MemDb --mem-db=VALUE MEM_DB MemDb Keep everything in memory, no directories or files are created. (Default: False) -SkipDbVerify --skip-db-verify=VALUE SKIP_DB_VERIFY SkipDbVerify Bypasses the checking of file hashes of database during startup (allows for faster startup). (Default: False) -WriteThrough --write-through=VALUE WRITE_THROUGH WriteThrough Enables Write Through when writing to the file system, this bypasses filesystem caches. (Default: False) -Unbuffered --unbuffered=VALUE UNBUFFERED Unbuffered Enables Unbuffered/DirectIO when writing to the file system, this bypasses filesystem caches. (Default: False) -PrepareTimeoutMs --prepare-timeout-ms=VALUE PREPARE_TIMEOUT_MS PrepareTimeoutMs Prepare timeout (in milliseconds). (Default: 2000) -CommitTimeoutMs --commit-timeout-ms=VALUE COMMIT_TIMEOUT_MS CommitTimeoutMs Commit timeout (in milliseconds). (Default: 2000) -UnsafeDisableFlushToDisk --unsafe-disable-flush-to-disk=VALUE UNSAFE_DISABLE_FLUSH_TO_DISK UnsafeDisableFlushToDisk Disable flushing to disk. (UNSAFE: on power off) (Default: False) -BetterOrdering --better-ordering=VALUE BETTER_ORDERING BetterOrdering Enable Queue affinity on reads during write process to try to get better ordering. (Default: False) -UnsafeIgnoreHardDelete --unsafe-ignore-hard-delete=VALUE UNSAFE_IGNORE_HARD_DELETE UnsafeIgnoreHardDelete Disables Hard Deletes (UNSAFE: use to remove hard deletes) (Default: False) -IndexCacheDepth --index-cache-depth=VALUE INDEX_CACHE_DEPTH IndexCacheDepth Sets the depth to cache for the mid point cache in index. (Default: 16) -AlwaysKeepScavenged --always-keep-scavenged=VALUE ALWAYS_KEEP_SCAVENGED AlwaysKeepScavenged Always keeps the newer chunks from a scavenge operation. (Default: False) Interface Options Command line parameter Environment variable prefixed with EVENTSTORE_ Config file YAML Description -IntIp --int-ip=VALUE INT_IP IntIp Internal IP Address. (Default: 127.0.0.1) -ExtIp --ext-ip=VALUE EXT_IP ExtIp External IP Address. (Default: 127.0.0.1) -IntHttpPort --int-http-port=VALUE INT_HTTP_PORT IntHttpPort Internal HTTP Port. (Default: 2112) -ExtHttpPort --ext-http-port=VALUE EXT_HTTP_PORT ExtHttpPort External HTTP Port. (Default: 2113) -IntTcpPort --int-tcp-port=VALUE INT_TCP_PORT IntTcpPort Internal TCP Port. (Default: 1112) -IntSecureTcpPort --int-secure-tcp-port=VALUE INT_SECURE_TCP_PORT IntSecureTcpPort Internal Secure TCP Port. (Default: 0) -ExtTcpPort --ext-tcp-port=VALUE EXT_TCP_PORT ExtTcpPort External TCP Port. (Default: 1113) -ExtSecureTcpPortAdvertiseAs --ext-secure-tcp-port-advertise-as=VALUE EXT_SECURE_TCP_PORT_ADVERTISE_AS ExtSecureTcpPortAdvertiseAs Advertise Secure External Tcp Port As. (Default: 0) -ExtSecureTcpPort --ext-secure-tcp-port=VALUE EXT_SECURE_TCP_PORT ExtSecureTcpPort External Secure TCP Port. (Default: 0) -ExtIpAdvertiseAs --ext-ip-advertise-as=VALUE EXT_IP_ADVERTISE_AS ExtIpAdvertiseAs Advertise External Tcp Address As. -ExtTcpPortAdvertiseAs --ext-tcp-port-advertise-as=VALUE EXT_TCP_PORT_ADVERTISE_AS ExtTcpPortAdvertiseAs Advertise External Tcp Port As. (Default: 0) -ExtHttpPortAdvertiseAs --ext-http-port-advertise-as=VALUE EXT_HTTP_PORT_ADVERTISE_AS ExtHttpPortAdvertiseAs Advertise External Http Port As. (Default: 0) -IntIpAdvertiseAs --int-ip-advertise-as=VALUE INT_IP_ADVERTISE_AS IntIpAdvertiseAs Advertise Internal Tcp Address As. -IntSecureTcpPortAdvertiseAs --int-secure-tcp-port-advertise-as=VALUE INT_SECURE_TCP_PORT_ADVERTISE_AS IntSecureTcpPortAdvertiseAs Advertise Secure Internal Tcp Port As. (Default: 0) -IntTcpPortAdvertiseAs --int-tcp-port-advertise-as=VALUE INT_TCP_PORT_ADVERTISE_AS IntTcpPortAdvertiseAs Advertise Internal Tcp Port As. (Default: 0) -IntHttpPortAdvertiseAs --int-http-port-advertise-as=VALUE INT_HTTP_PORT_ADVERTISE_AS IntHttpPortAdvertiseAs Advertise Internal Http Port As. (Default: 0) -IntTcpHeartbeatTimeout --int-tcp-heartbeat-timeout=VALUE INT_TCP_HEARTBEAT_TIMEOUT IntTcpHeartbeatTimeout Heartbeat timeout for internal TCP sockets (Default: 700) -ExtTcpHeartbeatTimeout --ext-tcp-heartbeat-timeout=VALUE EXT_TCP_HEARTBEAT_TIMEOUT ExtTcpHeartbeatTimeout Heartbeat timeout for external TCP sockets (Default: 1000) -IntTcpHeartbeatInterval --int-tcp-heartbeat-interval=VALUE INT_TCP_HEARTBEAT_INTERVAL IntTcpHeartbeatInterval Heartbeat interval for internal TCP sockets (Default: 700) -ExtTcpHeartbeatInterval --ext-tcp-heartbeat-interval=VALUE EXT_TCP_HEARTBEAT_INTERVAL ExtTcpHeartbeatInterval Heartbeat interval for external TCP sockets (Default: 2000) -GossipOnSingleNode --gossip-on-single-node=VALUE GOSSIP_ON_SINGLE_NODE GossipOnSingleNode When enabled tells a single node to run gossip as if it is a cluster (Default: False) -AdminOnExt --admin-on-ext=VALUE ADMIN_ON_EXT AdminOnExt Whether or not to run the admin ui on the external HTTP endpoint (Default: True) -StatsOnExt --stats-on-ext=VALUE STATS_ON_EXT StatsOnExt Whether or not to accept statistics requests on the external HTTP endpoint, needed if you use admin ui (Default: True) -GossipOnExt --gossip-on-ext=VALUE GOSSIP_ON_EXT GossipOnExt Whether or not to accept gossip requests on the external HTTP endpoint (Default: True) -IntHttpPrefixes --int-http-prefixes=VALUE INT_HTTP_PREFIXES IntHttpPrefixes The prefixes that the internal HTTP server should respond to. (Default: n/a) -ExtHttpPrefixes --ext-http-prefixes=VALUE EXT_HTTP_PREFIXES ExtHttpPrefixes The prefixes that the external HTTP server should respond to. (Default: n/a) -EnableTrustedAuth --enable-trusted-auth=VALUE ENABLE_TRUSTED_AUTH EnableTrustedAuth Enables trusted authentication by an intermediary in the HTTP (Default: False) -AddInterfacePrefixes --add-interface-prefixes=VALUE ADD_INTERFACE_PREFIXES AddInterfacePrefixes Add interface prefixes (Default: True) -UseInternalSsl --use-internal-ssl=VALUE USE_INTERNAL_SSL UseInternalSsl Whether to use secure internal communication. (Default: False) -DisableInsecureTCP --disable-insecure-tcp=VALUE DISABLE_INSECURE_TCP DisableInsecureTCP Whether to disable insecure TCP communication (Default: False) -SslTargetHost --ssl-target-host=VALUE SSL_TARGET_HOST SslTargetHost Target host of server's SSL certificate. (Default: n/a) -SslValidateServer --ssl-validate-server=VALUE SSL_VALIDATE_SERVER SslValidateServer Whether to validate that server's certificate is trusted. (Default: True) -ConnectionPendingSendBytesThreshold --connection-pending-send-bytes-threshold=VALUE CONNECTION_PENDING_SEND_BYTES_THRESHOLD ConnectionPendingSendBytesThreshold The maximum number of pending send bytes allowed before a connection is closed. (Default: 10485760) -FaultOutOfOrderProjections --fault-out-of-order-projections=VALUE FAULT_OUT_OF_ORDER_PROJECTIONS FaultOutOfOrderProjections Specify if a projection should be faulted when there is a discontinuity in event ordering (Default: True) Projections Options Command line parameter Environment variable prefixed with EVENTSTORE_ Config file YAML Description -RunProjections --run-projections=VALUE RUN_PROJECTIONS RunProjections Enables the running of projections. System runs built-in projections, All runs user projections. (Default: None) Possible Values:None,System,All -ProjectionThreads --projection-threads=VALUE PROJECTION_THREADS ProjectionThreads The number of threads to use for projections. (Default: 3)"
  },
  "server/cluster-without-manager-nodes/index.html": {
    "href": "server/cluster-without-manager-nodes/index.html",
    "title": "Setting up a Cluster using only Database Nodes (OSS) | Event Store",
    "keywords": "Setting up a Cluster using only Database Nodes (OSS) <!-- TODO: Needs Linux instructions --> High availability Event Store allows you to run more than one node as a cluster. There are two modes available for clustering: With database nodes only (open source and commercial) With manager nodes and database nodes (commercial only) This document covers setting up Event Store with only database nodes. Tip When setting up a cluster, you generally want an odd number of nodes as Event Store uses a quorum based algorithm to handle high availability. We recommended you define an odd number of nodes to avoid split brain problems. Common values for the ‘ClusterSize’ setting are 3 or 5 (to have a majority of 2 nodes and a majority of 3 nodes). Next Steps Read here for more information on the roles available for nodes in an Event Store cluster. Running on the Same Machine To start, set up three nodes running on a single machine. Run each of the commands below in its own console window. You either need admin privileges or have ACLs setup with IIS if running under Windows. Unix-like operating systems need no configuration. Replace \"127.0.0.1\" with whatever IP address you want to run on. EventStore.ClusterNode.exe --mem-db --log .\\logs\\log1 --int-ip 127.0.0.1 --ext-ip 127.0.0.1 --int-tcp-port=1111 --ext-tcp-port=1112 --int-http-port=1113 --ext-http-port=1114 --cluster-size=3 --discover-via-dns=false --gossip-seed=127.0.0.1:2113,127.0.0.1:3113 EventStore.ClusterNode.exe --mem-db --log .\\logs\\log2 --int-ip 127.0.0.1 --ext-ip 127.0.0.1 --int-tcp-port=2111 --ext-tcp-port=2112 --int-http-port=2113 --ext-http-port=2114 --cluster-size=3 --discover-via-dns=false --gossip-seed=127.0.0.1:1113,127.0.0.1:3113 EventStore.ClusterNode.exe --mem-db --log .\\logs\\log3 --int-ip 127.0.0.1 --ext-ip 127.0.0.1 --int-tcp-port=3111 --ext-tcp-port=3112 --int-http-port=3113 --ext-http-port=3114 --cluster-size=3 --discover-via-dns=false --gossip-seed=127.0.0.1:1113,127.0.0.1:2113 You should now have three nodes running together in a cluster. If you kill one of the nodes, it continues running. This binds to the loopback interface. To access Event Store from outside your machine, specify a different IP address for the --ext-ip parameter. Running on Separate Machines Most important is to understand the \"gossip seeds\". You are instructing seed locations for when the node first starts and needs to begin gossiping. Any node can be a seed. By giving each node the other nodes you ensure that there is always another node to gossip with if a quorum can be built. If you wanted to move this to run on three machines you would change the IPs on the command line to something such as: EventStore.ClusterNode.exe --mem-db --log c:\\dbs\\cluster\\log1 --int-ip 192.168.0.1 --ext-ip 192.168.0.1 --int-tcp-port=1111 --ext-tcp-port=1112 --int-http-port=2113 --ext-http-port=2114 --cluster-size=3 --discover-via-dns=false --gossip-seed=192.168.0.2:2113,192.168.0.3:2113 EventStore.ClusterNode.exe --mem-db --log c:\\dbs\\cluster\\log2 --int-ip 192.168.0.2 --ext-ip 192.168.0.2 --int-tcp-port=1111 --ext-tcp-port=1112 --int-http-port=2113 --ext-http-port=2114 --cluster-size=3 --discover-via-dns=false --gossip-seed=192.168.0.1:2113,192.168.0.3:2113 EventStore.ClusterNode.exe --mem-db --log c:\\dbs\\cluster\\log3 --int-ip 192.168.0.3 --ext-ip 192.168.0.3 --int-tcp-port=1111 --ext-tcp-port=1112 --int-http-port=2113 --ext-http-port=2114 --cluster-size=3 --discover-via-dns=false --gossip-seed=192.168.0.1:2113,192.168.0.2:2113 Using DNS Entering the commands above into each node is tedious and error-prone (especially as the replica set counts change). Another configuration option is to create a DNS entry that points to all the nodes in the cluster and then specify that DNS entry with the appropriate port: EventStore.ClusterNode.exe --log c:\\dbs\\cluster\\log1 --int-ip 192.168.0.1 --ext-ip 192.168.0.1 --int-tcp-port=1111 --ext-tcp-port=1112 --int-http-port=2113 --ext-http-port=2114 --cluster-size=3 --cluster-dns mydomain.com --cluster-gossip-port=2113 EventStore.ClusterNode.exe --mem-db --log c:\\dbs\\cluster\\log2 --int-ip 192.168.0.2 --ext-ip 192.168.0.2 --int-tcp-port=1111 --ext-tcp-port=1112 --int-http-port=2113 --ext-http-port=2114 --cluster-size=3 --cluster-dns mydomain.com --cluster-gossip-port=2113 EventStore.ClusterNode.exe --mem-db --log c:\\dbs\\cluster\\log3 --int-ip 192.168.0.3 --ext-ip 192.168.0.3 --int-tcp-port=1111 --ext-tcp-port=1112 --int-http-port=2113 --ext-http-port=2114 --cluster-size=3 --cluster-dns mydomain.com --cluster-gossip-port=2113 Note You can also use the method above for HTTP clients to avoid using a load balancer and fall back to round robin DNS for many deployments. Internal vs. External Networks You can optionally segregate all Event Store communications to different networks. For example, internal networks for tasks like replication, and external networks for communication between clients. You can place these communications on segregated networks which is often a good idea for both performance and security purposes. To setup an internal network, use the command line parameters provided above, but prefixed with int- . All communications channels also support enabling SSL for the connections. HTTP Clients If you want to use the HTTP API, then you should add a load balancer in front of the three nodes. It does not matter which node receives a request as the requests the node are forwarded to the request internally. With this setup, you can lose any one machine with no data loss. Native TCP Clients You can connect to the cluster using the native TCP interface. The client APIs support switching between nodes internally. As such if you have a master failover the connection automatically handle retries on another node. To set up a connection as above, provide gossip seeds to the connection. The client then uses the gossip seeds to begin gossiping information about the cluster. EventStoreConnection.Create( ConnectionSettings.Create().KeepReconnecting(), ClusterSettings.Create() .WithGossipTimeoutOf(TimeSpan.FromMilliseconds(500)) .WithGossipSeeds(new [] { new IPEndPoint(IPAddress.Parse(\"192.168.0.1\"), 2113), new IPEndPoint(IPAddress.Parse(\"192.168.0.2\"), 2113), new IPEndPoint(IPAddress.Parse(\"192.168.0.3\"), 2113) })); As in the example above, you can also use DNS to avoid manually specifying the seeds. You add the nodes to a DNS record and then specify that DNS entry to the connection to locate nodes. EventStoreConnection.Create(ConnectionSettings.Create() .KeepReconnecting(), ClusterSettings.Create() .SetClusterDns(\"mycluster.com\")) .SetGossipPort(2113) The connection automatically reconnects during node failures. You can control this behaviour with options on the ConnectionSettings such as limiting retry attempts or frequency. The connection and durable subscription even manage a subscription during node failures, you will not receive duplicated messages over your durable subscription. Tip For those using the closed source version of Event Store GossipPort is an alias for ManagerPort as the closed source version includes a node manager on each physical node. This allows for controlling many virtual nodes on a machine with easy configuration. The manager also acts as a supervisor for the nodes."
  },
  "server/64-bit-index/index.html": {
    "href": "server/64-bit-index/index.html",
    "title": "Rebuilding Indexes | Event Store",
    "keywords": "Rebuilding Indexes As of version 3.9.0 all future indexes use 64-bit hashes instead of 32-bit hashes. Event Store automatically transitions your indexes from 32-bit to 64-bit by writing all new indexes as 64-bit indexes during the merge process. If you prefer to use only 64-bit indexes immediately you can force this change. For a small database, delete the index folder in your database folder, and let it rebuild (this might take a while) If you have a large database, or it's stored in remote storage, and you can't lose downtime, you can run this operation offline on another node with the following steps: Take a back up . Restore the backup to fast local disks. Delete the index folder from back up. Run Event Store with a cluster size 3 to prevent other writes. It will rebuild the index. Restore the index back to a node ( index folder). Let Event Store catch up from master. Repeat the restore for other nodes. For other indices, your index will change to 64-bit due to the merging process that occurs over time."
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Management.ProjectionManager.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Management.ProjectionManager.html",
    "title": "Class ProjectionManager | Event Store",
    "keywords": "Class ProjectionManager Inheritance System.Object ProjectionManager Implements System.IDisposable IHandle < SystemMessage.StateChangeMessage > IHandle < SystemMessage.SystemCoreReady > IHandle < SystemMessage.EpochWritten > IHandle < ClientMessage.ReadStreamEventsBackwardCompleted > IHandle < ClientMessage.ReadStreamEventsForwardCompleted > IHandle < ClientMessage.WriteEventsCompleted > IHandle < ClientMessage.DeleteStreamCompleted > IHandle < ProjectionManagementMessage.Command.Post > IHandle < ProjectionManagementMessage.Command.UpdateQuery > IHandle < ProjectionManagementMessage.Command.GetQuery > IHandle < ProjectionManagementMessage.Command.Delete > IHandle < ProjectionManagementMessage.Command.GetStatistics > IHandle < ProjectionManagementMessage.Command.GetState > IHandle < ProjectionManagementMessage.Command.GetResult > IHandle < ProjectionManagementMessage.Command.Disable > IHandle < ProjectionManagementMessage.Command.Enable > IHandle < ProjectionManagementMessage.Command.Abort > IHandle < ProjectionManagementMessage.Command.SetRunAs > IHandle < ProjectionManagementMessage.Command.Reset > IHandle < ProjectionManagementMessage.Command.StartSlaveProjections > IHandle < ProjectionManagementMessage.Command.GetConfig > IHandle < ProjectionManagementMessage.Command.UpdateConfig > IHandle < ProjectionManagementMessage.Internal.CleanupExpired > IHandle < ProjectionManagementMessage.Internal.Deleted > IHandle < CoreProjectionStatusMessage.Started > IHandle < CoreProjectionStatusMessage.Stopped > IHandle < CoreProjectionStatusMessage.Faulted > IHandle < CoreProjectionStatusMessage.Prepared > IHandle < CoreProjectionStatusMessage.StateReport > IHandle < CoreProjectionStatusMessage.ResultReport > IHandle < CoreProjectionStatusMessage.StatisticsReport > IHandle < CoreProjectionManagementMessage.SlaveProjectionReaderAssigned > IHandle < ProjectionManagementMessage.RegisterSystemProjection > IHandle < CoreProjectionStatusMessage.ProjectionWorkerStarted > IHandle < ProjectionManagementMessage.ReaderReady > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Management Assembly : EventStore.Projections.Core.dll Syntax public class ProjectionManager : IDisposable, IHandle<SystemMessage.StateChangeMessage>, IHandle<SystemMessage.SystemCoreReady>, IHandle<SystemMessage.EpochWritten>, IHandle<ClientMessage.ReadStreamEventsBackwardCompleted>, IHandle<ClientMessage.ReadStreamEventsForwardCompleted>, IHandle<ClientMessage.WriteEventsCompleted>, IHandle<ClientMessage.DeleteStreamCompleted>, IHandle<ProjectionManagementMessage.Command.Post>, IHandle<ProjectionManagementMessage.Command.UpdateQuery>, IHandle<ProjectionManagementMessage.Command.GetQuery>, IHandle<ProjectionManagementMessage.Command.Delete>, IHandle<ProjectionManagementMessage.Command.GetStatistics>, IHandle<ProjectionManagementMessage.Command.GetState>, IHandle<ProjectionManagementMessage.Command.GetResult>, IHandle<ProjectionManagementMessage.Command.Disable>, IHandle<ProjectionManagementMessage.Command.Enable>, IHandle<ProjectionManagementMessage.Command.Abort>, IHandle<ProjectionManagementMessage.Command.SetRunAs>, IHandle<ProjectionManagementMessage.Command.Reset>, IHandle<ProjectionManagementMessage.Command.StartSlaveProjections>, IHandle<ProjectionManagementMessage.Command.GetConfig>, IHandle<ProjectionManagementMessage.Command.UpdateConfig>, IHandle<ProjectionManagementMessage.Internal.CleanupExpired>, IHandle<ProjectionManagementMessage.Internal.Deleted>, IHandle<CoreProjectionStatusMessage.Started>, IHandle<CoreProjectionStatusMessage.Stopped>, IHandle<CoreProjectionStatusMessage.Faulted>, IHandle<CoreProjectionStatusMessage.Prepared>, IHandle<CoreProjectionStatusMessage.StateReport>, IHandle<CoreProjectionStatusMessage.ResultReport>, IHandle<CoreProjectionStatusMessage.StatisticsReport>, IHandle<CoreProjectionManagementMessage.SlaveProjectionReaderAssigned>, IHandle<ProjectionManagementMessage.RegisterSystemProjection>, IHandle<CoreProjectionStatusMessage.ProjectionWorkerStarted>, IHandle<ProjectionManagementMessage.ReaderReady> Constructors ProjectionManager(IPublisher, IPublisher, IDictionary<Guid, IPublisher>, ITimeProvider, ProjectionType, IODispatcher, TimeSpan, Boolean) Declaration public ProjectionManager(IPublisher inputQueue, IPublisher publisher, IDictionary<Guid, IPublisher> queueMap, ITimeProvider timeProvider, ProjectionType runProjections, IODispatcher ioDispatcher, TimeSpan projectionQueryExpiry, bool initializeSystemProjections = true) Parameters Type Name IPublisher inputQueue IPublisher publisher System.Collections.Generic.IDictionary < System.Guid , IPublisher > queueMap ITimeProvider timeProvider ProjectionType runProjections IODispatcher ioDispatcher System.TimeSpan projectionQueryExpiry System.Boolean initializeSystemProjections Fields ProjectionCreationRetryCount Declaration public const int ProjectionCreationRetryCount = 1 Field Value Type System.Int32 ProjectionQueryId Declaration public const int ProjectionQueryId = -2 Field Value Type System.Int32 Methods Dispose() Declaration public void Dispose() Handle(ClientMessage.DeleteStreamCompleted) Declaration public void Handle(ClientMessage.DeleteStreamCompleted message) Parameters Type Name ClientMessage.DeleteStreamCompleted message Handle(ClientMessage.ReadStreamEventsBackwardCompleted) Declaration public void Handle(ClientMessage.ReadStreamEventsBackwardCompleted message) Parameters Type Name ClientMessage.ReadStreamEventsBackwardCompleted message Handle(ClientMessage.ReadStreamEventsForwardCompleted) Declaration public void Handle(ClientMessage.ReadStreamEventsForwardCompleted message) Parameters Type Name ClientMessage.ReadStreamEventsForwardCompleted message Handle(ClientMessage.WriteEventsCompleted) Declaration public void Handle(ClientMessage.WriteEventsCompleted message) Parameters Type Name ClientMessage.WriteEventsCompleted message Handle(SystemMessage.EpochWritten) Declaration public void Handle(SystemMessage.EpochWritten message) Parameters Type Name SystemMessage.EpochWritten message Handle(SystemMessage.StateChangeMessage) Declaration public void Handle(SystemMessage.StateChangeMessage message) Parameters Type Name SystemMessage.StateChangeMessage message Handle(SystemMessage.SystemCoreReady) Declaration public void Handle(SystemMessage.SystemCoreReady message) Parameters Type Name SystemMessage.SystemCoreReady message Handle(CoreProjectionManagementMessage.SlaveProjectionReaderAssigned) Declaration public void Handle(CoreProjectionManagementMessage.SlaveProjectionReaderAssigned message) Parameters Type Name CoreProjectionManagementMessage.SlaveProjectionReaderAssigned message Handle(CoreProjectionStatusMessage.Faulted) Declaration public void Handle(CoreProjectionStatusMessage.Faulted message) Parameters Type Name CoreProjectionStatusMessage.Faulted message Handle(CoreProjectionStatusMessage.Prepared) Declaration public void Handle(CoreProjectionStatusMessage.Prepared message) Parameters Type Name CoreProjectionStatusMessage.Prepared message Handle(CoreProjectionStatusMessage.ProjectionWorkerStarted) Declaration public void Handle(CoreProjectionStatusMessage.ProjectionWorkerStarted message) Parameters Type Name CoreProjectionStatusMessage.ProjectionWorkerStarted message Handle(CoreProjectionStatusMessage.ResultReport) Declaration public void Handle(CoreProjectionStatusMessage.ResultReport message) Parameters Type Name CoreProjectionStatusMessage.ResultReport message Handle(CoreProjectionStatusMessage.Started) Declaration public void Handle(CoreProjectionStatusMessage.Started message) Parameters Type Name CoreProjectionStatusMessage.Started message Handle(CoreProjectionStatusMessage.StateReport) Declaration public void Handle(CoreProjectionStatusMessage.StateReport message) Parameters Type Name CoreProjectionStatusMessage.StateReport message Handle(CoreProjectionStatusMessage.StatisticsReport) Declaration public void Handle(CoreProjectionStatusMessage.StatisticsReport message) Parameters Type Name CoreProjectionStatusMessage.StatisticsReport message Handle(CoreProjectionStatusMessage.Stopped) Declaration public void Handle(CoreProjectionStatusMessage.Stopped message) Parameters Type Name CoreProjectionStatusMessage.Stopped message Handle(ProjectionManagementMessage.Command.Abort) Declaration public void Handle(ProjectionManagementMessage.Command.Abort message) Parameters Type Name ProjectionManagementMessage.Command.Abort message Handle(ProjectionManagementMessage.Command.Delete) Declaration public void Handle(ProjectionManagementMessage.Command.Delete message) Parameters Type Name ProjectionManagementMessage.Command.Delete message Handle(ProjectionManagementMessage.Command.Disable) Declaration public void Handle(ProjectionManagementMessage.Command.Disable message) Parameters Type Name ProjectionManagementMessage.Command.Disable message Handle(ProjectionManagementMessage.Command.Enable) Declaration public void Handle(ProjectionManagementMessage.Command.Enable message) Parameters Type Name ProjectionManagementMessage.Command.Enable message Handle(ProjectionManagementMessage.Command.GetConfig) Declaration public void Handle(ProjectionManagementMessage.Command.GetConfig message) Parameters Type Name ProjectionManagementMessage.Command.GetConfig message Handle(ProjectionManagementMessage.Command.GetQuery) Declaration public void Handle(ProjectionManagementMessage.Command.GetQuery message) Parameters Type Name ProjectionManagementMessage.Command.GetQuery message Handle(ProjectionManagementMessage.Command.GetResult) Declaration public void Handle(ProjectionManagementMessage.Command.GetResult message) Parameters Type Name ProjectionManagementMessage.Command.GetResult message Handle(ProjectionManagementMessage.Command.GetState) Declaration public void Handle(ProjectionManagementMessage.Command.GetState message) Parameters Type Name ProjectionManagementMessage.Command.GetState message Handle(ProjectionManagementMessage.Command.GetStatistics) Declaration public void Handle(ProjectionManagementMessage.Command.GetStatistics message) Parameters Type Name ProjectionManagementMessage.Command.GetStatistics message Handle(ProjectionManagementMessage.Command.Post) Declaration public void Handle(ProjectionManagementMessage.Command.Post message) Parameters Type Name ProjectionManagementMessage.Command.Post message Handle(ProjectionManagementMessage.Command.Reset) Declaration public void Handle(ProjectionManagementMessage.Command.Reset message) Parameters Type Name ProjectionManagementMessage.Command.Reset message Handle(ProjectionManagementMessage.Command.SetRunAs) Declaration public void Handle(ProjectionManagementMessage.Command.SetRunAs message) Parameters Type Name ProjectionManagementMessage.Command.SetRunAs message Handle(ProjectionManagementMessage.Command.StartSlaveProjections) Declaration public void Handle(ProjectionManagementMessage.Command.StartSlaveProjections message) Parameters Type Name ProjectionManagementMessage.Command.StartSlaveProjections message Handle(ProjectionManagementMessage.Command.UpdateConfig) Declaration public void Handle(ProjectionManagementMessage.Command.UpdateConfig message) Parameters Type Name ProjectionManagementMessage.Command.UpdateConfig message Handle(ProjectionManagementMessage.Command.UpdateQuery) Declaration public void Handle(ProjectionManagementMessage.Command.UpdateQuery message) Parameters Type Name ProjectionManagementMessage.Command.UpdateQuery message Handle(ProjectionManagementMessage.Internal.CleanupExpired) Declaration public void Handle(ProjectionManagementMessage.Internal.CleanupExpired message) Parameters Type Name ProjectionManagementMessage.Internal.CleanupExpired message Handle(ProjectionManagementMessage.Internal.Deleted) Declaration public void Handle(ProjectionManagementMessage.Internal.Deleted message) Parameters Type Name ProjectionManagementMessage.Internal.Deleted message Handle(ProjectionManagementMessage.ReaderReady) Declaration public void Handle(ProjectionManagementMessage.ReaderReady message) Parameters Type Name ProjectionManagementMessage.ReaderReady message Handle(ProjectionManagementMessage.RegisterSystemProjection) Declaration public void Handle(ProjectionManagementMessage.RegisterSystemProjection message) Parameters Type Name ProjectionManagementMessage.RegisterSystemProjection message Implements System.IDisposable IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Management.ProjectionManager.NewProjectionInitializer.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Management.ProjectionManager.NewProjectionInitializer.html",
    "title": "Class ProjectionManager.NewProjectionInitializer | Event Store",
    "keywords": "Class ProjectionManager.NewProjectionInitializer Inheritance System.Object ProjectionManager.NewProjectionInitializer Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Management Assembly : EventStore.Projections.Core.dll Syntax public class NewProjectionInitializer Constructors NewProjectionInitializer(Int64, String, ProjectionMode, String, String, Boolean, Boolean, Boolean, Boolean, Boolean, ProjectionManagementMessage.RunAs, IEnvelope) Declaration public NewProjectionInitializer(long projectionId, string name, ProjectionMode projectionMode, string handlerType, string query, bool enabled, bool emitEnabled, bool checkpointsEnabled, bool enableRunAs, bool trackEmittedStreams, ProjectionManagementMessage.RunAs runAs, IEnvelope replyEnvelope) Parameters Type Name System.Int64 projectionId System.String name ProjectionMode projectionMode System.String handlerType System.String query System.Boolean enabled System.Boolean emitEnabled System.Boolean checkpointsEnabled System.Boolean enableRunAs System.Boolean trackEmittedStreams ProjectionManagementMessage.RunAs runAs IEnvelope replyEnvelope Methods CreateAndInitializeNewProjection(ProjectionManager, Guid, Guid, Boolean, Guid, Guid, Nullable<Int64>) Declaration public void CreateAndInitializeNewProjection(ProjectionManager projectionManager, Guid projectionCorrelationId, Guid workerId, bool isSlave = false, Guid slaveMasterWorkerId = default(Guid), Guid slaveMasterCorrelationId = default(Guid), long? version) Parameters Type Name ProjectionManager projectionManager System.Guid projectionCorrelationId System.Guid workerId System.Boolean isSlave System.Guid slaveMasterWorkerId System.Guid slaveMasterCorrelationId System.Nullable < System.Int64 > version Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Util.Opts.html": {
    "href": "dotnet-api/code/EventStore.Core.Util.Opts.html",
    "title": "Class Opts | Event Store",
    "keywords": "Class Opts Inheritance System.Object Opts Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Util Assembly : EventStore.Core.dll Syntax public static class Opts Fields AddInterfacePrefixesDefault Declaration public const bool AddInterfacePrefixesDefault = true Field Value Type System.Boolean AddInterfacePrefixesDescr Declaration public const string AddInterfacePrefixesDescr = \"Add interface prefixes\" Field Value Type System.String AdminOnExtDefault Declaration public const bool AdminOnExtDefault = true Field Value Type System.Boolean AdminOnExtDescr Declaration public const string AdminOnExtDescr = \"Whether or not to run the admin ui on the external HTTP endpoint\" Field Value Type System.String AlwaysKeepScavengedDefault Declaration public static readonly bool AlwaysKeepScavengedDefault Field Value Type System.Boolean AlwaysKeepScavengedDescr Declaration public const string AlwaysKeepScavengedDescr = \"Always keeps the newer chunks from a scavenge operation.\" Field Value Type System.String AppGroup Declaration public const string AppGroup = \"Application Options\" Field Value Type System.String AuthenticationConfigFileDefault Declaration public static readonly string AuthenticationConfigFileDefault Field Value Type System.String AuthenticationConfigFileDescr Declaration public const string AuthenticationConfigFileDescr = \"Path to the configuration file for authentication configuration (if applicable).\" Field Value Type System.String AuthenticationTypeDefault Declaration public static readonly string AuthenticationTypeDefault Field Value Type System.String AuthenticationTypeDescr Declaration public const string AuthenticationTypeDescr = \"The type of authentication to use.\" Field Value Type System.String AuthGroup Declaration public const string AuthGroup = \"Authentication Options\" Field Value Type System.String BetterOrderingDefault Declaration public static readonly bool BetterOrderingDefault Field Value Type System.Boolean BetterOrderingDescr Declaration public const string BetterOrderingDescr = \"Enable Queue affinity on reads during write process to try to get better ordering.\" Field Value Type System.String CachedChunksDefault Declaration public const int CachedChunksDefault = -1 Field Value Type System.Int32 CachedChunksDescr Declaration public const string CachedChunksDescr = \"The number of chunks to cache in unmanaged memory.\" Field Value Type System.String CertificateFileDefault Declaration public static readonly string CertificateFileDefault Field Value Type System.String CertificateFileDescr Declaration public const string CertificateFileDescr = \"The path to certificate file.\" Field Value Type System.String CertificatePasswordDefault Declaration public static readonly string CertificatePasswordDefault Field Value Type System.String CertificatePasswordDescr Declaration public const string CertificatePasswordDescr = \"The password to certificate in file.\" Field Value Type System.String CertificatesGroup Declaration public const string CertificatesGroup = \"Certificate Options\" Field Value Type System.String CertificateStoreLocationDefault Declaration public static readonly string CertificateStoreLocationDefault Field Value Type System.String CertificateStoreLocationDescr Declaration public const string CertificateStoreLocationDescr = \"The certificate store location name.\" Field Value Type System.String CertificateStoreNameDefault Declaration public static readonly string CertificateStoreNameDefault Field Value Type System.String CertificateStoreNameDescr Declaration public const string CertificateStoreNameDescr = \"The certificate store name.\" Field Value Type System.String CertificateSubjectNameDefault Declaration public static readonly string CertificateSubjectNameDefault Field Value Type System.String CertificateSubjectNameDescr Declaration public const string CertificateSubjectNameDescr = \"The certificate subject name.\" Field Value Type System.String CertificateThumbprintDefault Declaration public static readonly string CertificateThumbprintDefault Field Value Type System.String CertificateThumbprintDescr Declaration public const string CertificateThumbprintDescr = \"The certificate fingerprint/thumbprint.\" Field Value Type System.String ChunkInitialReaderCountDefault Declaration public const int ChunkInitialReaderCountDefault = 5 Field Value Type System.Int32 ChunkInitialReaderCountDescr Declaration public const string ChunkInitialReaderCountDescr = \"The initial number of readers to start when opening a TFChunk\" Field Value Type System.String ChunksCacheSizeDefault Declaration public const int ChunksCacheSizeDefault = 536871424 Field Value Type System.Int32 ChunksCacheSizeDescr Declaration public const string ChunksCacheSizeDescr = \"The amount of unmanaged memory to use for caching chunks in bytes.\" Field Value Type System.String ClusterDnsDefault Declaration public const string ClusterDnsDefault = \"fake.dns\" Field Value Type System.String ClusterDnsDescr Declaration public const string ClusterDnsDescr = \"DNS name from which other nodes can be discovered.\" Field Value Type System.String ClusterGossipPortDefault Declaration public const int ClusterGossipPortDefault = 30777 Field Value Type System.Int32 ClusterGossipPortDescr Declaration public const string ClusterGossipPortDescr = \"The port on which cluster nodes' managers are running.\" Field Value Type System.String ClusterGroup Declaration public const string ClusterGroup = \"Cluster Options\" Field Value Type System.String ClusterSizeDefault Declaration public const int ClusterSizeDefault = 1 Field Value Type System.Int32 ClusterSizeDescr Declaration public const string ClusterSizeDescr = \"The number of nodes in the cluster.\" Field Value Type System.String CommitCountDefault Declaration public const int CommitCountDefault = -1 Field Value Type System.Int32 CommitCountDescr Declaration public const string CommitCountDescr = \"The number of nodes which must acknowledge commits before acknowledging to a client.\" Field Value Type System.String CommitTimeoutMsDefault Declaration public static readonly int CommitTimeoutMsDefault Field Value Type System.Int32 CommitTimeoutMsDescr Declaration public const string CommitTimeoutMsDescr = \"Commit timeout (in milliseconds).\" Field Value Type System.String ConfigsDefault Declaration public static readonly string[] ConfigsDefault Field Value Type System.String [] ConfigsDescr Declaration public const string ConfigsDescr = \"Configuration files.\" Field Value Type System.String ConnectionPendingSendBytesThresholdDefault Declaration public const int ConnectionPendingSendBytesThresholdDefault = 10485760 Field Value Type System.Int32 ConnectionPendingSendBytesThresholdDescr Declaration public const string ConnectionPendingSendBytesThresholdDescr = \"The maximum number of pending send bytes allowed before a connection is closed.\" Field Value Type System.String DbGroup Declaration public const string DbGroup = \"Database Options\" Field Value Type System.String DbPathDescr Declaration public const string DbPathDescr = \"The path the db should be loaded/saved to.\" Field Value Type System.String DefinesDefault Declaration public static readonly string[] DefinesDefault Field Value Type System.String [] DefinesDescr Declaration public const string DefinesDescr = \"Run-time conditionals.\" Field Value Type System.String DisableHttpCachingDefault Declaration public const bool DisableHttpCachingDefault = false Field Value Type System.Boolean DisableHttpCachingDescr Declaration public const string DisableHttpCachingDescr = \"Disable HTTP caching.\" Field Value Type System.String DisableInsecureTCPDefault Declaration public const bool DisableInsecureTCPDefault = false Field Value Type System.Boolean DisableInsecureTCPDescr Declaration public const string DisableInsecureTCPDescr = \"Whether to disable insecure TCP communication\" Field Value Type System.String DisableScavengeMergeDefault Declaration public static readonly bool DisableScavengeMergeDefault Field Value Type System.Boolean DisableScavengeMergeDescr Declaration public const string DisableScavengeMergeDescr = \"Disables the merging of chunks when scavenge is running\" Field Value Type System.String DiscoverViaDnsDefault Declaration public const bool DiscoverViaDnsDefault = true Field Value Type System.Boolean DiscoverViaDnsDescr Declaration public const string DiscoverViaDnsDescr = \"Whether to use DNS lookup to discover other cluster nodes.\" Field Value Type System.String EnableTrustedAuthDefault Declaration public const bool EnableTrustedAuthDefault = false Field Value Type System.Boolean EnableTrustedAuthDescr Declaration public const string EnableTrustedAuthDescr = \"Enables trusted authentication by an intermediary in the HTTP\" Field Value Type System.String EnableWatchdogDefault Declaration public const bool EnableWatchdogDefault = true Field Value Type System.Boolean EnableWatchdogDescr Declaration public const string EnableWatchdogDescr = \"Enable the node supervisor\" Field Value Type System.String EnvPrefix Declaration public const string EnvPrefix = \"EVENTSTORE_\" Field Value Type System.String ExternalHttpPortAdvertiseAsDefault Declaration public static readonly int ExternalHttpPortAdvertiseAsDefault Field Value Type System.Int32 ExternalHttpPortAdvertiseAsDescr Declaration public const string ExternalHttpPortAdvertiseAsDescr = \"Advertise External Http Port As.\" Field Value Type System.String ExternalHttpPortDefault Declaration public const int ExternalHttpPortDefault = 2113 Field Value Type System.Int32 ExternalHttpPortDescr Declaration public const string ExternalHttpPortDescr = \"External HTTP Port.\" Field Value Type System.String ExternalIpAdvertiseAsDefault Declaration public static readonly IPAddress ExternalIpAdvertiseAsDefault Field Value Type System.Net.IPAddress ExternalIpAdvertiseAsDescr Declaration public const string ExternalIpAdvertiseAsDescr = \"Advertise External Tcp Address As.\" Field Value Type System.String ExternalIpDefault Declaration public static readonly IPAddress ExternalIpDefault Field Value Type System.Net.IPAddress ExternalIpDescr Declaration public const string ExternalIpDescr = \"External IP Address.\" Field Value Type System.String ExternalManagerHttpPortDefault Declaration public const int ExternalManagerHttpPortDefault = 30778 Field Value Type System.Int32 ExternalManagerHttpPortDescr Declaration public const string ExternalManagerHttpPortDescr = null Field Value Type System.String ExternalManagerIpDefault Declaration public static readonly IPAddress ExternalManagerIpDefault Field Value Type System.Net.IPAddress ExternalManagerIpDescr Declaration public const string ExternalManagerIpDescr = null Field Value Type System.String ExternalSecureTcpPortAdvertiseAsDefault Declaration public static readonly int ExternalSecureTcpPortAdvertiseAsDefault Field Value Type System.Int32 ExternalSecureTcpPortAdvertiseAsDescr Declaration public const string ExternalSecureTcpPortAdvertiseAsDescr = \"Advertise Secure External Tcp Port As.\" Field Value Type System.String ExternalSecureTcpPortDefault Declaration public const int ExternalSecureTcpPortDefault = 0 Field Value Type System.Int32 ExternalSecureTcpPortDescr Declaration public const string ExternalSecureTcpPortDescr = \"External Secure TCP Port.\" Field Value Type System.String ExternalTcpPortAdvertiseAsDefault Declaration public static readonly int ExternalTcpPortAdvertiseAsDefault Field Value Type System.Int32 ExternalTcpPortAdvertiseAsDescr Declaration public const string ExternalTcpPortAdvertiseAsDescr = \"Advertise External Tcp Port As.\" Field Value Type System.String ExternalTcpPortDefault Declaration public const int ExternalTcpPortDefault = 1113 Field Value Type System.Int32 ExternalTcpPortDescr Declaration public const string ExternalTcpPortDescr = \"External TCP Port.\" Field Value Type System.String ExtHttpPrefixesDefault Declaration public static readonly string[] ExtHttpPrefixesDefault Field Value Type System.String [] ExtHttpPrefixesDescr Declaration public const string ExtHttpPrefixesDescr = \"The prefixes that the external HTTP server should respond to.\" Field Value Type System.String ExtTcpHeartbeatIntervalDefault Declaration public const int ExtTcpHeartbeatIntervalDefault = 2000 Field Value Type System.Int32 ExtTcpHeartbeatIntervalDescr Declaration public const string ExtTcpHeartbeatIntervalDescr = \"Heartbeat interval for external TCP sockets\" Field Value Type System.String ExtTcpHeartbeatTimeoutDefault Declaration public const int ExtTcpHeartbeatTimeoutDefault = 1000 Field Value Type System.Int32 ExtTcpHeartbeatTimeoutDescr Declaration public const string ExtTcpHeartbeatTimeoutDescr = \"Heartbeat timeout for external TCP sockets\" Field Value Type System.String FaultOutOfOrderProjectionsDefault Declaration public const bool FaultOutOfOrderProjectionsDefault = false Field Value Type System.Boolean FaultOutOfOrderProjectionsDescr Declaration public const string FaultOutOfOrderProjectionsDescr = \"Fault the projection if the Event number that was expected in the stream differs from what is received. This may happen if events have been deleted or expired\" Field Value Type System.String ForceDefault Declaration public const bool ForceDefault = false Field Value Type System.Boolean ForceDescr Declaration public const string ForceDescr = \"Force the Event Store to run in possibly harmful environments such as with Boehm GC.\" Field Value Type System.String GossipAllowedDifferenceMsDefault Declaration public const int GossipAllowedDifferenceMsDefault = 60000 Field Value Type System.Int32 GossipAllowedDifferenceMsDescr Declaration public const string GossipAllowedDifferenceMsDescr = \"The amount of drift, in ms, between clocks on nodes allowed before gossip is rejected.\" Field Value Type System.String GossipIntervalMsDefault Declaration public const int GossipIntervalMsDefault = 1000 Field Value Type System.Int32 GossipIntervalMsDescr Declaration public const string GossipIntervalMsDescr = \"The interval, in ms, nodes should try to gossip with each other.\" Field Value Type System.String GossipOnExtDefault Declaration public const bool GossipOnExtDefault = true Field Value Type System.Boolean GossipOnExtDescr Declaration public const string GossipOnExtDescr = \"Whether or not to accept gossip requests on the external HTTP endpoint\" Field Value Type System.String GossipOnSingleNodeDefault Declaration public const bool GossipOnSingleNodeDefault = false Field Value Type System.Boolean GossipOnSingleNodeDescr Declaration public const string GossipOnSingleNodeDescr = \"When enabled tells a single node to run gossip as if it is a cluster\" Field Value Type System.String GossipSeedDefault Declaration public static readonly IPEndPoint[] GossipSeedDefault Field Value Type System.Net.IPEndPoint [] GossipSeedDescr Declaration public const string GossipSeedDescr = \"Endpoints for other cluster nodes from which to seed gossip\" Field Value Type System.String GossipTimeoutMsDefault Declaration public const int GossipTimeoutMsDefault = 500 Field Value Type System.Int32 GossipTimeoutMsDescr Declaration public const string GossipTimeoutMsDescr = \"The timeout, in ms, on gossip to another node.\" Field Value Type System.String HashCollisionReadLimitDefault Declaration public const int HashCollisionReadLimitDefault = 100 Field Value Type System.Int32 HashCollisionReadLimitDescr Declaration public const string HashCollisionReadLimitDescr = \"The number of events to read per candidate in the case of a hash collision\" Field Value Type System.String HistogramDescr Declaration public const string HistogramDescr = \"Enables the tracking of various histograms in the backend, typically only used for debugging etc\" Field Value Type System.String HistogramEnabledDefault Declaration public static readonly bool HistogramEnabledDefault Field Value Type System.Boolean HttpPortDefault Declaration public const int HttpPortDefault = 2113 Field Value Type System.Int32 HttpPortDescr Declaration public const string HttpPortDescr = \"The port to run the HTTP server on.\" Field Value Type System.String IndexBitnessVersionDefault Declaration public const byte IndexBitnessVersionDefault = 4 Field Value Type System.Byte IndexBitnessVersionDescr Declaration public const string IndexBitnessVersionDescr = \"Sets the bitness version for the indexes to use\" Field Value Type System.String IndexCacheDepthDefault Declaration public static int IndexCacheDepthDefault Field Value Type System.Int32 IndexCacheDepthDescr Declaration public const string IndexCacheDepthDescr = \"Sets the depth to cache for the mid point cache in index.\" Field Value Type System.String IndexPathDescr Declaration public const string IndexPathDescr = \"The path the index should be loaded/saved to.\" Field Value Type System.String InitializationThreadsDefault Declaration public static readonly int InitializationThreadsDefault Field Value Type System.Int32 InitializationThreadsDescr Declaration public const string InitializationThreadsDescr = \"Number of threads to be used to initialize the database. Will be capped at host processor count.\" Field Value Type System.String InMemDbDefault Declaration public const bool InMemDbDefault = false Field Value Type System.Boolean InMemDbDescr Declaration public const string InMemDbDescr = \"Keep everything in memory, no directories or files are created.\" Field Value Type System.String InterfacesGroup Declaration public const string InterfacesGroup = \"Interface Options\" Field Value Type System.String InternalHttpPortAdvertiseAsDefault Declaration public static readonly int InternalHttpPortAdvertiseAsDefault Field Value Type System.Int32 InternalHttpPortAdvertiseAsDescr Declaration public const string InternalHttpPortAdvertiseAsDescr = \"Advertise Internal Http Port As.\" Field Value Type System.String InternalHttpPortDefault Declaration public const int InternalHttpPortDefault = 2112 Field Value Type System.Int32 InternalHttpPortDescr Declaration public const string InternalHttpPortDescr = \"Internal HTTP Port.\" Field Value Type System.String InternalIpAdvertiseAsDefault Declaration public static readonly IPAddress InternalIpAdvertiseAsDefault Field Value Type System.Net.IPAddress InternalIpAdvertiseAsDescr Declaration public const string InternalIpAdvertiseAsDescr = \"Advertise Internal Tcp Address As.\" Field Value Type System.String InternalIpDefault Declaration public static readonly IPAddress InternalIpDefault Field Value Type System.Net.IPAddress InternalIpDescr Declaration public const string InternalIpDescr = \"Internal IP Address.\" Field Value Type System.String InternalManagerHttpPortDefault Declaration public const int InternalManagerHttpPortDefault = 30777 Field Value Type System.Int32 InternalManagerHttpPortDescr Declaration public const string InternalManagerHttpPortDescr = null Field Value Type System.String InternalManagerIpDefault Declaration public static readonly IPAddress InternalManagerIpDefault Field Value Type System.Net.IPAddress InternalManagerIpDescr Declaration public const string InternalManagerIpDescr = null Field Value Type System.String InternalSecureTcpPortAdvertiseAsDefault Declaration public static readonly int InternalSecureTcpPortAdvertiseAsDefault Field Value Type System.Int32 InternalSecureTcpPortAdvertiseAsDescr Declaration public const string InternalSecureTcpPortAdvertiseAsDescr = \"Advertise Secure Internal Tcp Port As.\" Field Value Type System.String InternalSecureTcpPortDefault Declaration public const int InternalSecureTcpPortDefault = 0 Field Value Type System.Int32 InternalSecureTcpPortDescr Declaration public const string InternalSecureTcpPortDescr = \"Internal Secure TCP Port.\" Field Value Type System.String InternalTcpPortAdvertiseAsDefault Declaration public static readonly int InternalTcpPortAdvertiseAsDefault Field Value Type System.Int32 InternalTcpPortAdvertiseAsDescr Declaration public const string InternalTcpPortAdvertiseAsDescr = \"Advertise Internal Tcp Port As.\" Field Value Type System.String InternalTcpPortDefault Declaration public const int InternalTcpPortDefault = 1112 Field Value Type System.Int32 InternalTcpPortDescr Declaration public const string InternalTcpPortDescr = \"Internal TCP Port.\" Field Value Type System.String IntHttpPrefixesDefault Declaration public static readonly string[] IntHttpPrefixesDefault Field Value Type System.String [] IntHttpPrefixesDescr Declaration public const string IntHttpPrefixesDescr = \"The prefixes that the internal HTTP server should respond to.\" Field Value Type System.String IntTcpHeartbeatIntervalDefault Declaration public const int IntTcpHeartbeatIntervalDefault = 700 Field Value Type System.Int32 IntTcpHeartbeatIntervalDescr Declaration public const string IntTcpHeartbeatIntervalDescr = \"Heartbeat interval for internal TCP sockets\" Field Value Type System.String IntTcpHeartbeatTimeoutDefault Declaration public const int IntTcpHeartbeatTimeoutDefault = 700 Field Value Type System.Int32 IntTcpHeartbeatTimeoutDescr Declaration public const string IntTcpHeartbeatTimeoutDescr = \"Heartbeat timeout for internal TCP sockets\" Field Value Type System.String IpDefault Declaration public static readonly IPAddress IpDefault Field Value Type System.Net.IPAddress IpDescr Declaration public const string IpDescr = \"The IP address to bind to.\" Field Value Type System.String LogHttpRequestsDefault Declaration public static readonly bool LogHttpRequestsDefault Field Value Type System.Boolean LogHttpRequestsDescr Declaration public const string LogHttpRequestsDescr = \"Log Http Requests and Responses before processing them.\" Field Value Type System.String LogsDescr Declaration public const string LogsDescr = \"Path where to keep log files.\" Field Value Type System.String ManagerGroup Declaration public const string ManagerGroup = \"Manager Options\" Field Value Type System.String MaxAutoMergeIndexLevelDefault Declaration public static readonly int MaxAutoMergeIndexLevelDefault Field Value Type System.Int32 MaxAutoMergeIndexLevelDescr Declaration public const string MaxAutoMergeIndexLevelDescr = \"During large Index Merge operations, writes may be slowed down. Set this to the maximum index file level for which automatic merges should happen. Merging indexes above this level should be done manually.\" Field Value Type System.String MaxMemtableSizeDefault Declaration public const int MaxMemtableSizeDefault = 1000000 Field Value Type System.Int32 MaxMemTableSizeDescr Declaration public const string MaxMemTableSizeDescr = \"Adjusts the maximum size of a mem table.\" Field Value Type System.String MinFlushDelayMsDefault Declaration public static double MinFlushDelayMsDefault Field Value Type System.Double MinFlushDelayMsDescr Declaration public const string MinFlushDelayMsDescr = \"The minimum flush delay in milliseconds.\" Field Value Type System.String MonoMinThreadpoolSizeDefault Declaration public const int MonoMinThreadpoolSizeDefault = 10 Field Value Type System.Int32 MonoMinThreadpoolSizeDescr Declaration public const string MonoMinThreadpoolSizeDescr = \"Minimum number of worker threads when running under mono. Set to 0 to leave machine defaults.\" Field Value Type System.String NodePriorityDefault Declaration public const int NodePriorityDefault = 0 Field Value Type System.Int32 NodePriorityDescr Declaration public const string NodePriorityDescr = \"The node priority used during master election\" Field Value Type System.String OptimizeIndexMergeDefault Declaration public static readonly bool OptimizeIndexMergeDefault Field Value Type System.Boolean OptimizeIndexMergeDescr Declaration public const string OptimizeIndexMergeDescr = \"Makes index merges faster and reduces disk pressure during merges.\" Field Value Type System.String PrepareCountDefault Declaration public const int PrepareCountDefault = -1 Field Value Type System.Int32 PrepareCountDescr Declaration public const string PrepareCountDescr = \"The number of nodes which must acknowledge prepares.\" Field Value Type System.String PrepareTimeoutMsDefault Declaration public static readonly int PrepareTimeoutMsDefault Field Value Type System.Int32 PrepareTimeoutMsDescr Declaration public const string PrepareTimeoutMsDescr = \"Prepare timeout (in milliseconds).\" Field Value Type System.String ProjectionsGroup Declaration public const string ProjectionsGroup = \"Projections Options\" Field Value Type System.String ProjectionsQueryExpiryDefault Declaration public const int ProjectionsQueryExpiryDefault = 5 Field Value Type System.Int32 ProjectionsQueryExpiryDescr Declaration public const string ProjectionsQueryExpiryDescr = \"The number of minutes a query can be idle before it expires\" Field Value Type System.String ProjectionThreadsDefault Declaration public const int ProjectionThreadsDefault = 3 Field Value Type System.Int32 ProjectionThreadsDescr Declaration public const string ProjectionThreadsDescr = \"The number of threads to use for projections.\" Field Value Type System.String ReaderThreadsCountDefault Declaration public const int ReaderThreadsCountDefault = 4 Field Value Type System.Int32 ReaderThreadsCountDescr Declaration public const string ReaderThreadsCountDescr = \"The number of reader threads to use for processing reads.\" Field Value Type System.String ReduceFileCachePressureDefault Declaration public static readonly bool ReduceFileCachePressureDefault Field Value Type System.Boolean ReduceFileCachePressureDescr Declaration public const string ReduceFileCachePressureDescr = \"Change the way the DB files are opened to reduce their stickiness in the system file cache.\" Field Value Type System.String RunProjectionsDefault Declaration public const ProjectionType RunProjectionsDefault = ProjectionType.None Field Value Type ProjectionType RunProjectionsDescr Declaration public const string RunProjectionsDescr = \"Enables the running of projections. System runs built-in projections, All runs user projections.\" Field Value Type System.String ScavengeHistoryMaxAgeDefault Declaration public static readonly int ScavengeHistoryMaxAgeDefault Field Value Type System.Int32 ScavengeHistoryMaxAgeDescr Declaration public const string ScavengeHistoryMaxAgeDescr = \"The number of days to keep scavenge history\" Field Value Type System.String SecureTcpPortDefault Declaration public const int SecureTcpPortDefault = 0 Field Value Type System.Int32 SecureTcpPortDescr Declaration public const string SecureTcpPortDescr = \"The port to run the secure TCP server on.\" Field Value Type System.String ShowHelpDefault Declaration public const bool ShowHelpDefault = false Field Value Type System.Boolean ShowHelpDescr Declaration public const string ShowHelpDescr = \"Show help.\" Field Value Type System.String ShowVersionDefault Declaration public const bool ShowVersionDefault = false Field Value Type System.Boolean ShowVersionDescr Declaration public const string ShowVersionDescr = \"Show version.\" Field Value Type System.String SkipDbVerifyDefault Declaration public const bool SkipDbVerifyDefault = false Field Value Type System.Boolean SkipDbVerifyDescr Declaration public const string SkipDbVerifyDescr = \"Bypasses the checking of file hashes of database during startup (allows for faster startup).\" Field Value Type System.String SkipIndexScanOnReadsDefault Declaration public static readonly bool SkipIndexScanOnReadsDefault Field Value Type System.Boolean SkipIndexScanOnReadsDescr Declaration public const string SkipIndexScanOnReadsDescr = \"Skip Index Scan on Reads. This skips the index scan which was used to stop reading duplicates.\" Field Value Type System.String SkipIndexVerifyDefault Declaration public static readonly bool SkipIndexVerifyDefault Field Value Type System.Boolean SkipIndexVerifyDescr Declaration public const string SkipIndexVerifyDescr = \"Bypasses the checking of file hashes of indexes during startup and after index merges (allows for faster startup and less disk pressure after merges).\" Field Value Type System.String SslTargetHostDefault Declaration public static readonly string SslTargetHostDefault Field Value Type System.String SslTargetHostDescr Declaration public const string SslTargetHostDescr = \"Target host of server's SSL certificate.\" Field Value Type System.String SslValidateServerDefault Declaration public const bool SslValidateServerDefault = true Field Value Type System.Boolean SslValidateServerDescr Declaration public const string SslValidateServerDescr = \"Whether to validate that server's certificate is trusted.\" Field Value Type System.String StartStandardProjectionsDefault Declaration public const bool StartStandardProjectionsDefault = false Field Value Type System.Boolean StartStandardProjectionsDescr Declaration public const string StartStandardProjectionsDescr = \"Start the built in system projections.\" Field Value Type System.String StatsOnExtDefault Declaration public const bool StatsOnExtDefault = true Field Value Type System.Boolean StatsOnExtDescr Declaration public const string StatsOnExtDescr = \"Whether or not to accept statistics requests on the external HTTP endpoint, needed if you use admin ui\" Field Value Type System.String StatsPeriodDefault Declaration public const int StatsPeriodDefault = 30 Field Value Type System.Int32 StatsPeriodDescr Declaration public const string StatsPeriodDescr = \"The number of seconds between statistics gathers.\" Field Value Type System.String StructuredLogDefault Declaration public const bool StructuredLogDefault = true Field Value Type System.Boolean StructuredLogDescr Declaration public const string StructuredLogDescr = \"Enable structured logging.\" Field Value Type System.String TcpPortDefault Declaration public const int TcpPortDefault = 1113 Field Value Type System.Int32 TcpPortDescr Declaration public const string TcpPortDescr = \"The port to run the TCP server on.\" Field Value Type System.String UnbufferedDefault Declaration public const bool UnbufferedDefault = false Field Value Type System.Boolean UnbufferedDescr Declaration public const string UnbufferedDescr = \"Enables Unbuffered/DirectIO when writing to the file system, this bypasses filesystem caches.\" Field Value Type System.String UnsafeDisableFlushToDiskDefault Declaration public static readonly bool UnsafeDisableFlushToDiskDefault Field Value Type System.Boolean UnsafeDisableFlushToDiskDescr Declaration public const string UnsafeDisableFlushToDiskDescr = \"Disable flushing to disk. (UNSAFE: on power off)\" Field Value Type System.String UnsafeIgnoreHardDeleteDefault Declaration public static readonly bool UnsafeIgnoreHardDeleteDefault Field Value Type System.Boolean UnsafeIgnoreHardDeleteDescr Declaration public const string UnsafeIgnoreHardDeleteDescr = \"Disables Hard Deletes (UNSAFE: use to remove hard deletes)\" Field Value Type System.String UseInternalSslDefault Declaration public const bool UseInternalSslDefault = false Field Value Type System.Boolean UseInternalSslDescr Declaration public const string UseInternalSslDescr = \"Whether to use secure internal communication.\" Field Value Type System.String WatchdogConfigDefault Declaration public static readonly string WatchdogConfigDefault Field Value Type System.String WatchdogConfigDescr Declaration public const string WatchdogConfigDescr = \"Location of the watchdog configuration\" Field Value Type System.String WatchdogFailureCountDefault Declaration public static readonly int WatchdogFailureCountDefault Field Value Type System.Int32 WatchdogFailureCountDescr Declaration public const string WatchdogFailureCountDescr = \"The maximum allowed supervised node failures within specified time window.\" Field Value Type System.String WatchdogFailureTimeWindowDefault Declaration public static readonly int WatchdogFailureTimeWindowDefault Field Value Type System.Int32 WatchdogFailureTimeWindowDescr Declaration public const string WatchdogFailureTimeWindowDescr = \"The time window for which to track supervised node failures.\" Field Value Type System.String WhatIfDefault Declaration public const bool WhatIfDefault = false Field Value Type System.Boolean WhatIfDescr Declaration public const string WhatIfDescr = \"Print effective configuration to console and then exit.\" Field Value Type System.String WorkerThreadsDefault Declaration public const int WorkerThreadsDefault = 5 Field Value Type System.Int32 WorkerThreadsDescr Declaration public const string WorkerThreadsDescr = \"The number of threads to use for pool of worker services.\" Field Value Type System.String WriteThroughDefault Declaration public const bool WriteThroughDefault = false Field Value Type System.Boolean WriteThroughDescr Declaration public const string WriteThroughDescr = \"Enables Write Through when writing to the file system, this bypasses filesystem caches.\" Field Value Type System.String"
  },
  "dotnet-api/code/EventStore.Core.Messages.SystemMessage.SystemStart.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.SystemMessage.SystemStart.html",
    "title": "Class SystemMessage.SystemStart | Event Store",
    "keywords": "Class SystemMessage.SystemStart Inheritance System.Object Message SystemMessage.SystemStart Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class SystemStart : Message Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.SystemMessage.SystemReady.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.SystemMessage.SystemReady.html",
    "title": "Class SystemMessage.SystemReady | Event Store",
    "keywords": "Class SystemMessage.SystemReady Inheritance System.Object Message SystemMessage.SystemReady Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class SystemReady : Message Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.SystemMessage.SystemInit.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.SystemMessage.SystemInit.html",
    "title": "Class SystemMessage.SystemInit | Event Store",
    "keywords": "Class SystemMessage.SystemInit Inheritance System.Object Message SystemMessage.SystemInit Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class SystemInit : Message Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.SystemMessage.SystemCoreReady.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.SystemMessage.SystemCoreReady.html",
    "title": "Class SystemMessage.SystemCoreReady | Event Store",
    "keywords": "Class SystemMessage.SystemCoreReady Inheritance System.Object Message SystemMessage.SystemCoreReady Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class SystemCoreReady : Message Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.SystemMessage.SubSystemInitialized.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.SystemMessage.SubSystemInitialized.html",
    "title": "Class SystemMessage.SubSystemInitialized | Event Store",
    "keywords": "Class SystemMessage.SubSystemInitialized Inheritance System.Object Message SystemMessage.SubSystemInitialized Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class SubSystemInitialized : Message Constructors SubSystemInitialized(String) Declaration public SubSystemInitialized(string subSystemName) Parameters Type Name System.String subSystemName Fields SubSystemName Declaration public readonly string SubSystemName Field Value Type System.String Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.StorageMessage.WriteTransactionStart.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.StorageMessage.WriteTransactionStart.html",
    "title": "Class StorageMessage.WriteTransactionStart | Event Store",
    "keywords": "Class StorageMessage.WriteTransactionStart Inheritance System.Object Message StorageMessage.WriteTransactionStart Implements StorageMessage.IPreconditionedWriteMessage StorageMessage.IFlushableMessage StorageMessage.IMasterWriteMessage Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class WriteTransactionStart : Message, StorageMessage.IPreconditionedWriteMessage, StorageMessage.IFlushableMessage, StorageMessage.IMasterWriteMessage Constructors WriteTransactionStart(Guid, IEnvelope, String, Int64, DateTime) Declaration public WriteTransactionStart(Guid correlationId, IEnvelope envelope, string eventStreamId, long expectedVersion, DateTime liveUntil) Parameters Type Name System.Guid correlationId IEnvelope envelope System.String eventStreamId System.Int64 expectedVersion System.DateTime liveUntil Fields LiveUntil Declaration public readonly DateTime LiveUntil Field Value Type System.DateTime Properties CorrelationId Declaration public Guid CorrelationId { get; } Property Value Type System.Guid Envelope Declaration public IEnvelope Envelope { get; } Property Value Type IEnvelope EventStreamId Declaration public string EventStreamId { get; } Property Value Type System.String ExpectedVersion Declaration public long ExpectedVersion { get; } Property Value Type System.Int64 MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Implements StorageMessage.IPreconditionedWriteMessage StorageMessage.IFlushableMessage StorageMessage.IMasterWriteMessage Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.StorageMessage.WriteTransactionPrepare.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.StorageMessage.WriteTransactionPrepare.html",
    "title": "Class StorageMessage.WriteTransactionPrepare | Event Store",
    "keywords": "Class StorageMessage.WriteTransactionPrepare Inheritance System.Object Message StorageMessage.WriteTransactionPrepare Implements StorageMessage.IFlushableMessage StorageMessage.IMasterWriteMessage Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class WriteTransactionPrepare : Message, StorageMessage.IFlushableMessage, StorageMessage.IMasterWriteMessage Constructors WriteTransactionPrepare(Guid, IEnvelope, Int64, DateTime) Declaration public WriteTransactionPrepare(Guid correlationId, IEnvelope envelope, long transactionId, DateTime liveUntil) Parameters Type Name System.Guid correlationId IEnvelope envelope System.Int64 transactionId System.DateTime liveUntil Fields CorrelationId Declaration public readonly Guid CorrelationId Field Value Type System.Guid Envelope Declaration public readonly IEnvelope Envelope Field Value Type IEnvelope LiveUntil Declaration public readonly DateTime LiveUntil Field Value Type System.DateTime TransactionId Declaration public readonly long TransactionId Field Value Type System.Int64 Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Implements StorageMessage.IFlushableMessage StorageMessage.IMasterWriteMessage Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.StorageMessage.WriteTransactionData.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.StorageMessage.WriteTransactionData.html",
    "title": "Class StorageMessage.WriteTransactionData | Event Store",
    "keywords": "Class StorageMessage.WriteTransactionData Inheritance System.Object Message StorageMessage.WriteTransactionData Implements StorageMessage.IFlushableMessage StorageMessage.IMasterWriteMessage Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class WriteTransactionData : Message, StorageMessage.IFlushableMessage, StorageMessage.IMasterWriteMessage Constructors WriteTransactionData(Guid, IEnvelope, Int64, Event[]) Declaration public WriteTransactionData(Guid correlationId, IEnvelope envelope, long transactionId, Event[] events) Parameters Type Name System.Guid correlationId IEnvelope envelope System.Int64 transactionId Event [] events Fields CorrelationId Declaration public readonly Guid CorrelationId Field Value Type System.Guid Envelope Declaration public readonly IEnvelope Envelope Field Value Type IEnvelope Events Declaration public readonly Event[] Events Field Value Type Event [] TransactionId Declaration public readonly long TransactionId Field Value Type System.Int64 Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Implements StorageMessage.IFlushableMessage StorageMessage.IMasterWriteMessage Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.StorageMessage.WritePrepares.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.StorageMessage.WritePrepares.html",
    "title": "Class StorageMessage.WritePrepares | Event Store",
    "keywords": "Class StorageMessage.WritePrepares Inheritance System.Object Message StorageMessage.WritePrepares Implements StorageMessage.IPreconditionedWriteMessage StorageMessage.IFlushableMessage StorageMessage.IMasterWriteMessage Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class WritePrepares : Message, StorageMessage.IPreconditionedWriteMessage, StorageMessage.IFlushableMessage, StorageMessage.IMasterWriteMessage Constructors WritePrepares(Guid, IEnvelope, String, Int64, Event[], DateTime) Declaration public WritePrepares(Guid correlationId, IEnvelope envelope, string eventStreamId, long expectedVersion, Event[] events, DateTime liveUntil) Parameters Type Name System.Guid correlationId IEnvelope envelope System.String eventStreamId System.Int64 expectedVersion Event [] events System.DateTime liveUntil Fields Events Declaration public readonly Event[] Events Field Value Type Event [] LiveUntil Declaration public readonly DateTime LiveUntil Field Value Type System.DateTime Properties CorrelationId Declaration public Guid CorrelationId { get; } Property Value Type System.Guid Envelope Declaration public IEnvelope Envelope { get; } Property Value Type IEnvelope EventStreamId Declaration public string EventStreamId { get; } Property Value Type System.String ExpectedVersion Declaration public long ExpectedVersion { get; } Property Value Type System.Int64 MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Methods ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Implements StorageMessage.IPreconditionedWriteMessage StorageMessage.IFlushableMessage StorageMessage.IMasterWriteMessage Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ReplicationMessageDto.CloneAssignment.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ReplicationMessageDto.CloneAssignment.html",
    "title": "Class ReplicationMessageDto.CloneAssignment | Event Store",
    "keywords": "Class ReplicationMessageDto.CloneAssignment Inheritance System.Object ReplicationMessageDto.CloneAssignment Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax [ProtoContract] public class CloneAssignment Constructors CloneAssignment() Declaration public CloneAssignment() CloneAssignment(Byte[], Byte[]) Declaration public CloneAssignment(byte[] masterId, byte[] subscriptionId) Parameters Type Name System.Byte [] masterId System.Byte [] subscriptionId Properties MasterId Declaration [ProtoMember(1)] public byte[] MasterId { get; set; } Property Value Type System.Byte [] SubscriptionId Declaration [ProtoMember(2)] public byte[] SubscriptionId { get; set; } Property Value Type System.Byte [] Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ReplicationMessage.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ReplicationMessage.html",
    "title": "Class ReplicationMessage | Event Store",
    "keywords": "Class ReplicationMessage Inheritance System.Object ReplicationMessage Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public static class ReplicationMessage"
  },
  "dotnet-api/code/EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ReplicationMessage.SubscribeToMaster.html",
    "title": "Class ReplicationMessage.SubscribeToMaster | Event Store",
    "keywords": "Class ReplicationMessage.SubscribeToMaster Inheritance System.Object Message ReplicationMessage.SubscribeToMaster Implements ReplicationMessage.IReplicationMessage Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class SubscribeToMaster : Message, ReplicationMessage.IReplicationMessage Constructors SubscribeToMaster(Guid, Guid, Guid) Declaration public SubscribeToMaster(Guid stateCorrelationId, Guid masterId, Guid subscriptionId) Parameters Type Name System.Guid stateCorrelationId System.Guid masterId System.Guid subscriptionId Fields MasterId Declaration public readonly Guid MasterId Field Value Type System.Guid StateCorrelationId Declaration public readonly Guid StateCorrelationId Field Value Type System.Guid SubscriptionId Declaration public readonly Guid SubscriptionId Field Value Type System.Guid Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Explicit Interface Implementations ReplicationMessage.IReplicationMessage.MasterId Declaration Guid ReplicationMessage.IReplicationMessage.MasterId { get; } Returns Type Description System.Guid ReplicationMessage.IReplicationMessage.SubscriptionId Declaration Guid ReplicationMessage.IReplicationMessage.SubscriptionId { get; } Returns Type Description System.Guid Implements ReplicationMessage.IReplicationMessage Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ReplicationMessage.SubscribeReplica.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ReplicationMessage.SubscribeReplica.html",
    "title": "Class ReplicationMessage.SubscribeReplica | Event Store",
    "keywords": "Class ReplicationMessage.SubscribeReplica Inheritance System.Object Message ReplicationMessage.SubscribeReplica Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class SubscribeReplica : Message Constructors SubscribeReplica(Int64, Guid, EpochRecord[], IPEndPoint, Guid, Guid, Boolean) Declaration public SubscribeReplica(long logPosition, Guid chunkId, EpochRecord[] lastEpochs, IPEndPoint replicaEndPoint, Guid masterId, Guid subscriptionId, bool isPromotable) Parameters Type Name System.Int64 logPosition System.Guid chunkId EpochRecord [] lastEpochs System.Net.IPEndPoint replicaEndPoint System.Guid masterId System.Guid subscriptionId System.Boolean isPromotable Fields ChunkId Declaration public readonly Guid ChunkId Field Value Type System.Guid IsPromotable Declaration public readonly bool IsPromotable Field Value Type System.Boolean LastEpochs Declaration public readonly EpochRecord[] LastEpochs Field Value Type EpochRecord [] LogPosition Declaration public readonly long LogPosition Field Value Type System.Int64 MasterId Declaration public readonly Guid MasterId Field Value Type System.Guid ReplicaEndPoint Declaration public readonly IPEndPoint ReplicaEndPoint Field Value Type System.Net.IPEndPoint SubscriptionId Declaration public readonly Guid SubscriptionId Field Value Type System.Guid Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.TimerService.TimerBasedScheduler.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.TimerService.TimerBasedScheduler.html",
    "title": "Class TimerBasedScheduler | Event Store",
    "keywords": "Class TimerBasedScheduler Inheritance System.Object TimerBasedScheduler Implements IScheduler System.IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.TimerService Assembly : EventStore.Core.dll Syntax public class TimerBasedScheduler : IScheduler, IDisposable Constructors TimerBasedScheduler(ITimer, ITimeProvider) Declaration public TimerBasedScheduler(ITimer timer, ITimeProvider timeProvider) Parameters Type Name ITimer timer ITimeProvider timeProvider Methods Dispose() Declaration public void Dispose() ProcessOperations() Declaration protected void ProcessOperations() Schedule(TimeSpan, Action<IScheduler, Object>, Object) Declaration public void Schedule(TimeSpan after, Action<IScheduler, object> callback, object state) Parameters Type Name System.TimeSpan after System.Action < IScheduler , System.Object > callback System.Object state Stop() Declaration public void Stop() Implements IScheduler System.IDisposable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.TimerService.ThreadBasedScheduler.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.TimerService.ThreadBasedScheduler.html",
    "title": "Class ThreadBasedScheduler | Event Store",
    "keywords": "Class ThreadBasedScheduler Inheritance System.Object ThreadBasedScheduler Implements IMonitoredQueue IScheduler System.IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.TimerService Assembly : EventStore.Core.dll Syntax public class ThreadBasedScheduler : IMonitoredQueue, IScheduler, IDisposable Constructors ThreadBasedScheduler(ITimeProvider) Declaration public ThreadBasedScheduler(ITimeProvider timeProvider) Parameters Type Name ITimeProvider timeProvider Properties Name Declaration public string Name { get; } Property Value Type System.String Task Declaration public Task Task { get; } Property Value Type System.Threading.Tasks.Task Methods Dispose() Declaration public void Dispose() GetStatistics() Declaration public QueueStats GetStatistics() Returns Type Description QueueStats Schedule(TimeSpan, Action<IScheduler, Object>, Object) Declaration public void Schedule(TimeSpan after, Action<IScheduler, object> callback, object state) Parameters Type Name System.TimeSpan after System.Action < IScheduler , System.Object > callback System.Object state Stop() Declaration public void Stop() Implements IMonitoredQueue IScheduler System.IDisposable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.TimerService.RealTimer.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.TimerService.RealTimer.html",
    "title": "Class RealTimer | Event Store",
    "keywords": "Class RealTimer Inheritance System.Object RealTimer Implements ITimer System.IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.TimerService Assembly : EventStore.Core.dll Syntax public class RealTimer : ITimer, IDisposable Constructors RealTimer() Declaration public RealTimer() Methods Dispose() Declaration public void Dispose() FireIn(Int32, Action) Declaration public void FireIn(int milliseconds, Action callback) Parameters Type Name System.Int32 milliseconds System.Action callback Implements ITimer System.IDisposable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.TimerService.RealTimeProvider.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.TimerService.RealTimeProvider.html",
    "title": "Class RealTimeProvider | Event Store",
    "keywords": "Class RealTimeProvider Inheritance System.Object RealTimeProvider Implements ITimeProvider Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.TimerService Assembly : EventStore.Core.dll Syntax public class RealTimeProvider : ITimeProvider Properties Now Declaration public DateTime Now { get; } Property Value Type System.DateTime Implements ITimeProvider Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.TimerService.ITimer.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.TimerService.ITimer.html",
    "title": "Interface ITimer | Event Store",
    "keywords": "Interface ITimer Inherited Members System.IDisposable.Dispose() Namespace : EventStore.Core.Services.TimerService Assembly : EventStore.Core.dll Syntax public interface ITimer : IDisposable Methods FireIn(Int32, Action) Declaration void FireIn(int milliseconds, Action callback) Parameters Type Name System.Int32 milliseconds System.Action callback Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.TimerService.ITimeProvider.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.TimerService.ITimeProvider.html",
    "title": "Interface ITimeProvider | Event Store",
    "keywords": "Interface ITimeProvider Namespace : EventStore.Core.Services.TimerService Assembly : EventStore.Core.dll Syntax public interface ITimeProvider Properties Now Declaration DateTime Now { get; } Property Value Type System.DateTime Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.html",
    "title": "Namespace EventStore.Core.Services.PersistentSubscription | Event Store",
    "keywords": "Namespace EventStore.Core.Services.PersistentSubscription Classes BadConfigDataException ObservedTimingMeasurement OutstandingMessageCache OutstandingMessageCache.ByTypeComparer PersistentSubscription PersistentSubscriptionCheckpointReader PersistentSubscriptionCheckpointWriter PersistentSubscriptionClient PersistentSubscriptionConfig PersistentSubscriptionEntry PersistentSubscriptionMessageParker PersistentSubscriptionParams PersistentSubscriptionParamsBuilder Builds a PersistentSubscriptionParams object. PersistentSubscriptionService PersistentSubscriptionStats PersistentSubscriptionStreamReader StreamBuffer Structs Measurement OutstandingMessage RetryableMessage SequencedEvent StreamBuffer.OutstandingMessagePointer Interfaces IPersistentSubscriptionCheckpointReader IPersistentSubscriptionCheckpointWriter IPersistentSubscriptionMessageParker IPersistentSubscriptionStreamReader Enums BufferedStreamReaderState NakAction PersistentSubscriptionState StartMessageResult"
  },
  "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.StreamBuffer.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.StreamBuffer.html",
    "title": "Class StreamBuffer | Event Store",
    "keywords": "Class StreamBuffer Inheritance System.Object StreamBuffer Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.PersistentSubscription Assembly : EventStore.Core.dll Syntax public class StreamBuffer Constructors StreamBuffer(Int32, Int32, Int32, Boolean) Declaration public StreamBuffer(int maxBufferSize, int maxLiveBufferSize, int initialSequence, bool startInHistory) Parameters Type Name System.Int32 maxBufferSize System.Int32 maxLiveBufferSize System.Int32 initialSequence System.Boolean startInHistory Properties BufferCount Declaration public int BufferCount { get; } Property Value Type System.Int32 Live Declaration public bool Live { get; } Property Value Type System.Boolean LiveBufferCount Declaration public long LiveBufferCount { get; } Property Value Type System.Int64 ReadBufferCount Declaration public int ReadBufferCount { get; } Property Value Type System.Int32 RetryBufferCount Declaration public int RetryBufferCount { get; } Property Value Type System.Int32 Methods AddLiveMessage(OutstandingMessage) Declaration public void AddLiveMessage(OutstandingMessage ev) Parameters Type Name OutstandingMessage ev AddReadMessage(OutstandingMessage) Declaration public void AddReadMessage(OutstandingMessage ev) Parameters Type Name OutstandingMessage ev AddRetry(OutstandingMessage) Declaration public void AddRetry(OutstandingMessage ev) Parameters Type Name OutstandingMessage ev CanAccept(Int32) Declaration public bool CanAccept(int count) Parameters Type Name System.Int32 count Returns Type Description System.Boolean GetLowestRetry() Declaration public long GetLowestRetry() Returns Type Description System.Int64 Scan() Declaration public IEnumerable<StreamBuffer.OutstandingMessagePointer> Scan() Returns Type Description System.Collections.Generic.IEnumerable < StreamBuffer.OutstandingMessagePointer > TryMoveToLive() Declaration public bool TryMoveToLive() Returns Type Description System.Boolean Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.StreamBuffer.OutstandingMessagePointer.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.StreamBuffer.OutstandingMessagePointer.html",
    "title": "Struct StreamBuffer.OutstandingMessagePointer | Event Store",
    "keywords": "Struct StreamBuffer.OutstandingMessagePointer Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Services.PersistentSubscription Assembly : EventStore.Core.dll Syntax public struct OutstandingMessagePointer Properties Message Declaration public OutstandingMessage Message { get; } Property Value Type OutstandingMessage Methods MarkSent() Declaration public void MarkSent() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) EnumExtensions.EnumValueName<T>(T) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.StartMessageResult.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.StartMessageResult.html",
    "title": "Enum StartMessageResult | Event Store",
    "keywords": "Enum StartMessageResult Namespace : EventStore.Core.Services.PersistentSubscription Assembly : EventStore.Core.dll Syntax public enum StartMessageResult Fields Name Description SkippedDuplicate Success Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<StartMessageResult>() ProtobufExtensions.Serialize<StartMessageResult>() ProtobufExtensions.SerializeToArray<StartMessageResult>()"
  },
  "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.SequencedEvent.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.SequencedEvent.html",
    "title": "Struct SequencedEvent | Event Store",
    "keywords": "Struct SequencedEvent Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Services.PersistentSubscription Assembly : EventStore.Core.dll Syntax public struct SequencedEvent Constructors SequencedEvent(Int64, ResolvedEvent) Declaration public SequencedEvent(long sequence, ResolvedEvent event) Parameters Type Name System.Int64 sequence ResolvedEvent event Fields Event Declaration public readonly ResolvedEvent Event Field Value Type ResolvedEvent Sequence Declaration public readonly long Sequence Field Value Type System.Int64 Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) EnumExtensions.EnumValueName<T>(T) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.OutstandingMessage.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.OutstandingMessage.html",
    "title": "Struct OutstandingMessage | Event Store",
    "keywords": "Struct OutstandingMessage Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Services.PersistentSubscription Assembly : EventStore.Core.dll Syntax public struct OutstandingMessage Constructors OutstandingMessage(Guid, PersistentSubscriptionClient, ResolvedEvent, Int32) Declaration public OutstandingMessage(Guid eventId, PersistentSubscriptionClient handlingClient, ResolvedEvent resolvedEvent, int retryCount) Parameters Type Name System.Guid eventId PersistentSubscriptionClient handlingClient ResolvedEvent resolvedEvent System.Int32 retryCount Fields EventId Declaration public readonly Guid EventId Field Value Type System.Guid HandlingClient Declaration public readonly PersistentSubscriptionClient HandlingClient Field Value Type PersistentSubscriptionClient IsReplayedEvent Declaration public readonly bool IsReplayedEvent Field Value Type System.Boolean ResolvedEvent Declaration public readonly ResolvedEvent ResolvedEvent Field Value Type ResolvedEvent RetryCount Declaration public readonly int RetryCount Field Value Type System.Int32 Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) EnumExtensions.EnumValueName<T>(T) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.ObservedTimingMeasurement.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.ObservedTimingMeasurement.html",
    "title": "Class ObservedTimingMeasurement | Event Store",
    "keywords": "Class ObservedTimingMeasurement Inheritance System.Object ObservedTimingMeasurement Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.PersistentSubscription Assembly : EventStore.Core.dll Syntax public class ObservedTimingMeasurement Fields Measurements Declaration public readonly List<Measurement> Measurements Field Value Type System.Collections.Generic.List < Measurement > Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.NakAction.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.NakAction.html",
    "title": "Enum NakAction | Event Store",
    "keywords": "Enum NakAction Namespace : EventStore.Core.Services.PersistentSubscription Assembly : EventStore.Core.dll Syntax public enum NakAction Fields Name Description Park Retry Skip Stop Unknown Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<NakAction>() ProtobufExtensions.Serialize<NakAction>() ProtobufExtensions.SerializeToArray<NakAction>()"
  },
  "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.ReadStreamEventsCompleted.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.ReadStreamEventsCompleted.html",
    "title": "Class TcpClientMessageDto.ReadStreamEventsCompleted | Event Store",
    "keywords": "Class TcpClientMessageDto.ReadStreamEventsCompleted Inheritance System.Object TcpClientMessageDto.ReadStreamEventsCompleted Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax [Serializable] [ProtoContract(Name = \"ReadStreamEventsCompleted\")] public class ReadStreamEventsCompleted Constructors ReadStreamEventsCompleted(TcpClientMessageDto.ResolvedIndexedEvent[], TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult, Int64, Int64, Boolean, Int64, String) Declaration public ReadStreamEventsCompleted(TcpClientMessageDto.ResolvedIndexedEvent[] events, TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult result, long nextEventNumber, long lastEventNumber, bool isEndOfStream, long lastCommitPosition, string error) Parameters Type Name TcpClientMessageDto.ResolvedIndexedEvent [] events TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult result System.Int64 nextEventNumber System.Int64 lastEventNumber System.Boolean isEndOfStream System.Int64 lastCommitPosition System.String error Fields Error Declaration [ProtoMember(7, IsRequired = false, Name = \"error\", DataFormat = DataFormat.Default)] public readonly string Error Field Value Type System.String Events Declaration [ProtoMember(1, Name = \"events\", DataFormat = DataFormat.Default)] public readonly TcpClientMessageDto.ResolvedIndexedEvent[] Events Field Value Type TcpClientMessageDto.ResolvedIndexedEvent [] IsEndOfStream Declaration [ProtoMember(5, IsRequired = true, Name = \"is_end_of_stream\", DataFormat = DataFormat.Default)] public readonly bool IsEndOfStream Field Value Type System.Boolean LastCommitPosition Declaration [ProtoMember(6, IsRequired = true, Name = \"last_commit_position\", DataFormat = DataFormat.TwosComplement)] public readonly long LastCommitPosition Field Value Type System.Int64 LastEventNumber Declaration [ProtoMember(4, IsRequired = true, Name = \"last_event_number\", DataFormat = DataFormat.TwosComplement)] public readonly long LastEventNumber Field Value Type System.Int64 NextEventNumber Declaration [ProtoMember(3, IsRequired = true, Name = \"next_event_number\", DataFormat = DataFormat.TwosComplement)] public readonly long NextEventNumber Field Value Type System.Int64 Result Declaration [ProtoMember(2, IsRequired = true, Name = \"result\", DataFormat = DataFormat.TwosComplement)] public readonly TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult Result Field Value Type TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.DeletePersistentSubscription.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.DeletePersistentSubscription.html",
    "title": "Class TcpClientMessageDto.DeletePersistentSubscription | Event Store",
    "keywords": "Class TcpClientMessageDto.DeletePersistentSubscription Inheritance System.Object TcpClientMessageDto.DeletePersistentSubscription Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax [Serializable] [ProtoContract(Name = \"DeletePersistentSubscription\")] public class DeletePersistentSubscription Constructors DeletePersistentSubscription(String, String) Declaration public DeletePersistentSubscription(string subscriptionGroupName, string eventStreamId) Parameters Type Name System.String subscriptionGroupName System.String eventStreamId Fields EventStreamId Declaration [ProtoMember(2, IsRequired = true, Name = \"event_stream_id\", DataFormat = DataFormat.Default)] public readonly string EventStreamId Field Value Type System.String SubscriptionGroupName Declaration [ProtoMember(1, IsRequired = true, Name = \"subscription_group_name\", DataFormat = DataFormat.Default)] public readonly string SubscriptionGroupName Field Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscriptionCompleted.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscriptionCompleted.html",
    "title": "Class TcpClientMessageDto.CreatePersistentSubscriptionCompleted | Event Store",
    "keywords": "Class TcpClientMessageDto.CreatePersistentSubscriptionCompleted Inheritance System.Object TcpClientMessageDto.CreatePersistentSubscriptionCompleted Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax [Serializable] [ProtoContract(Name = \"CreatePersistentSubscriptionCompleted\")] public class CreatePersistentSubscriptionCompleted Constructors CreatePersistentSubscriptionCompleted(TcpClientMessageDto.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult, String) Declaration public CreatePersistentSubscriptionCompleted(TcpClientMessageDto.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult result, string reason) Parameters Type Name TcpClientMessageDto.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult result System.String reason Fields Reason Declaration [ProtoMember(2, IsRequired = false, Name = \"reason\", DataFormat = DataFormat.Default)] public readonly string Reason Field Value Type System.String Result Declaration [ProtoMember(1, IsRequired = true, Name = \"result\", DataFormat = DataFormat.TwosComplement)] public readonly TcpClientMessageDto.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult Result Field Value Type TcpClientMessageDto.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult.html",
    "title": "Enum TcpClientMessageDto.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult | Event Store",
    "keywords": "Enum TcpClientMessageDto.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax [ProtoContract(Name = \"CreatePersistentSubscriptionResult\")] public enum CreatePersistentSubscriptionResult Fields Name Description AccessDenied AlreadyExists Fail Success Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<TcpClientMessageDto.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult>() ProtobufExtensions.Serialize<TcpClientMessageDto.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult>() ProtobufExtensions.SerializeToArray<TcpClientMessageDto.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult>()"
  },
  "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.CreatePersistentSubscription.html",
    "title": "Class TcpClientMessageDto.CreatePersistentSubscription | Event Store",
    "keywords": "Class TcpClientMessageDto.CreatePersistentSubscription Inheritance System.Object TcpClientMessageDto.CreatePersistentSubscription Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax [Serializable] [ProtoContract(Name = \"CreatePersistentSubscription\")] public class CreatePersistentSubscription Constructors CreatePersistentSubscription(String, String, Boolean, Int64, Int32, Boolean, Int32, Int32, Int32, Int32, Boolean, Int32, Int32, Int32, Int32, String) Declaration public CreatePersistentSubscription(string subscriptionGroupName, string eventStreamId, bool resolveLinkTos, long startFrom, int messageTimeoutMilliseconds, bool recordStatistics, int liveBufferSize, int readBatchSize, int bufferSize, int maxRetryCount, bool preferRoundRobin, int checkpointAfterTime, int checkpointMaxCount, int checkpointMinCount, int subscriberMaxCount, string namedConsumerStrategy) Parameters Type Name System.String subscriptionGroupName System.String eventStreamId System.Boolean resolveLinkTos System.Int64 startFrom System.Int32 messageTimeoutMilliseconds System.Boolean recordStatistics System.Int32 liveBufferSize System.Int32 readBatchSize System.Int32 bufferSize System.Int32 maxRetryCount System.Boolean preferRoundRobin System.Int32 checkpointAfterTime System.Int32 checkpointMaxCount System.Int32 checkpointMinCount System.Int32 subscriberMaxCount System.String namedConsumerStrategy Fields BufferSize Declaration [ProtoMember(9, IsRequired = true, Name = \"buffer_size\", DataFormat = DataFormat.TwosComplement)] public readonly int BufferSize Field Value Type System.Int32 CheckpointAfterTime Declaration [ProtoMember(12, IsRequired = true, Name = \"checkpoint_after_time\", DataFormat = DataFormat.TwosComplement)] public readonly int CheckpointAfterTime Field Value Type System.Int32 CheckpointMaxCount Declaration [ProtoMember(13, IsRequired = true, Name = \"checkpoint_max_count\", DataFormat = DataFormat.TwosComplement)] public readonly int CheckpointMaxCount Field Value Type System.Int32 CheckpointMinCount Declaration [ProtoMember(14, IsRequired = true, Name = \"checkpoint_min_count\", DataFormat = DataFormat.TwosComplement)] public readonly int CheckpointMinCount Field Value Type System.Int32 EventStreamId Declaration [ProtoMember(2, IsRequired = true, Name = \"event_stream_id\", DataFormat = DataFormat.Default)] public readonly string EventStreamId Field Value Type System.String LiveBufferSize Declaration [ProtoMember(7, IsRequired = true, Name = \"live_buffer_size\", DataFormat = DataFormat.TwosComplement)] public readonly int LiveBufferSize Field Value Type System.Int32 MaxRetryCount Declaration [ProtoMember(10, IsRequired = true, Name = \"max_retry_count\", DataFormat = DataFormat.TwosComplement)] public readonly int MaxRetryCount Field Value Type System.Int32 MessageTimeoutMilliseconds Declaration [ProtoMember(5, IsRequired = true, Name = \"message_timeout_milliseconds\", DataFormat = DataFormat.TwosComplement)] public readonly int MessageTimeoutMilliseconds Field Value Type System.Int32 NamedConsumerStrategy Declaration [ProtoMember(16, IsRequired = false, Name = \"named_consumer_strategy\", DataFormat = DataFormat.Default)] public readonly string NamedConsumerStrategy Field Value Type System.String PreferRoundRobin Declaration [ProtoMember(11, IsRequired = true, Name = \"prefer_round_robin\", DataFormat = DataFormat.Default)] public readonly bool PreferRoundRobin Field Value Type System.Boolean ReadBatchSize Declaration [ProtoMember(8, IsRequired = true, Name = \"read_batch_size\", DataFormat = DataFormat.TwosComplement)] public readonly int ReadBatchSize Field Value Type System.Int32 RecordStatistics Declaration [ProtoMember(6, IsRequired = true, Name = \"record_statistics\", DataFormat = DataFormat.Default)] public readonly bool RecordStatistics Field Value Type System.Boolean ResolveLinkTos Declaration [ProtoMember(3, IsRequired = true, Name = \"resolve_link_tos\", DataFormat = DataFormat.Default)] public readonly bool ResolveLinkTos Field Value Type System.Boolean StartFrom Declaration [ProtoMember(4, IsRequired = true, Name = \"start_from\", DataFormat = DataFormat.TwosComplement)] public readonly long StartFrom Field Value Type System.Int64 SubscriberMaxCount Declaration [ProtoMember(15, IsRequired = true, Name = \"subscriber_max_count\", DataFormat = DataFormat.TwosComplement)] public readonly int SubscriberMaxCount Field Value Type System.Int32 SubscriptionGroupName Declaration [ProtoMember(1, IsRequired = true, Name = \"subscription_group_name\", DataFormat = DataFormat.Default)] public readonly string SubscriptionGroupName Field Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.ConnectToPersistentSubscription.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.ConnectToPersistentSubscription.html",
    "title": "Class TcpClientMessageDto.ConnectToPersistentSubscription | Event Store",
    "keywords": "Class TcpClientMessageDto.ConnectToPersistentSubscription Inheritance System.Object TcpClientMessageDto.ConnectToPersistentSubscription Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax [Serializable] [ProtoContract(Name = \"ConnectToPersistentSubscription\")] public class ConnectToPersistentSubscription Constructors ConnectToPersistentSubscription(String, String, Int32) Declaration public ConnectToPersistentSubscription(string subscriptionId, string eventStreamId, int allowedInFlightMessages) Parameters Type Name System.String subscriptionId System.String eventStreamId System.Int32 allowedInFlightMessages Fields AllowedInFlightMessages Declaration [ProtoMember(3, IsRequired = true, Name = \"allowed_in_flight_messages\", DataFormat = DataFormat.TwosComplement)] public readonly int AllowedInFlightMessages Field Value Type System.Int32 EventStreamId Declaration [ProtoMember(2, IsRequired = true, Name = \"event_stream_id\", DataFormat = DataFormat.Default)] public readonly string EventStreamId Field Value Type System.String SubscriptionId Declaration [ProtoMember(1, IsRequired = true, Name = \"subscription_id\", DataFormat = DataFormat.Default)] public readonly string SubscriptionId Field Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.ClientIdentified.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.ClientIdentified.html",
    "title": "Class TcpClientMessageDto.ClientIdentified | Event Store",
    "keywords": "Class TcpClientMessageDto.ClientIdentified Inheritance System.Object TcpClientMessageDto.ClientIdentified Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax [Serializable] [ProtoContract(Name = \"ClientIdentified\")] public class ClientIdentified Constructors ClientIdentified() Declaration public ClientIdentified() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Data.StreamAcl.html": {
    "href": "dotnet-api/code/EventStore.Core.Data.StreamAcl.html",
    "title": "Class StreamAcl | Event Store",
    "keywords": "Class StreamAcl Inheritance System.Object StreamAcl Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Data Assembly : EventStore.Core.dll Syntax public class StreamAcl Constructors StreamAcl(String, String, String, String, String) Declaration public StreamAcl(string readRole, string writeRole, string deleteRole, string metaReadRole, string metaWriteRole) Parameters Type Name System.String readRole System.String writeRole System.String deleteRole System.String metaReadRole System.String metaWriteRole StreamAcl(String[], String[], String[], String[], String[]) Declaration public StreamAcl(string[] readRoles, string[] writeRoles, string[] deleteRoles, string[] metaReadRoles, string[] metaWriteRoles) Parameters Type Name System.String [] readRoles System.String [] writeRoles System.String [] deleteRoles System.String [] metaReadRoles System.String [] metaWriteRoles Fields DeleteRoles Declaration public readonly string[] DeleteRoles Field Value Type System.String [] MetaReadRoles Declaration public readonly string[] MetaReadRoles Field Value Type System.String [] MetaWriteRoles Declaration public readonly string[] MetaWriteRoles Field Value Type System.String [] ReadRoles Declaration public readonly string[] ReadRoles Field Value Type System.String [] WriteRoles Declaration public readonly string[] WriteRoles Field Value Type System.String [] Methods ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Cluster.ClusterInfo.html": {
    "href": "dotnet-api/code/EventStore.Core.Cluster.ClusterInfo.html",
    "title": "Class ClusterInfo | Event Store",
    "keywords": "Class ClusterInfo Inheritance System.Object ClusterInfo Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Cluster Assembly : EventStore.Core.dll Syntax public class ClusterInfo Constructors ClusterInfo(MemberInfo[]) Declaration public ClusterInfo(params MemberInfo[] members) Parameters Type Name MemberInfo [] members ClusterInfo(ClusterInfoDto) Declaration public ClusterInfo(ClusterInfoDto dto) Parameters Type Name ClusterInfoDto dto ClusterInfo(IEnumerable<MemberInfo>) Declaration public ClusterInfo(IEnumerable<MemberInfo> members) Parameters Type Name System.Collections.Generic.IEnumerable < MemberInfo > members Fields Members Declaration public readonly MemberInfo[] Members Field Value Type MemberInfo [] Methods HasChangedSince(ClusterInfo) Declaration public bool HasChangedSince(ClusterInfo other) Parameters Type Name ClusterInfo other Returns Type Description System.Boolean ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Http.Authentication.BasicHttpAuthenticationProvider.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Http.Authentication.BasicHttpAuthenticationProvider.html",
    "title": "Class BasicHttpAuthenticationProvider | Event Store",
    "keywords": "Class BasicHttpAuthenticationProvider Inheritance System.Object HttpAuthenticationProvider BasicHttpAuthenticationProvider Inherited Members HttpAuthenticationProvider.Authenticated(IncomingHttpRequestMessage, IPrincipal) HttpAuthenticationProvider.ReplyUnauthorized(HttpEntity) HttpAuthenticationProvider.ReplyInternalServerError(HttpEntity) HttpAuthenticationProvider.ReplyNotYetAvailable(HttpEntity) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Transport.Http.Authentication Assembly : EventStore.Core.dll Syntax public class BasicHttpAuthenticationProvider : HttpAuthenticationProvider Constructors BasicHttpAuthenticationProvider(IAuthenticationProvider) Declaration public BasicHttpAuthenticationProvider(IAuthenticationProvider internalAuthenticationProvider) Parameters Type Name IAuthenticationProvider internalAuthenticationProvider Methods Authenticate(IncomingHttpRequestMessage) Declaration public override bool Authenticate(IncomingHttpRequestMessage message) Parameters Type Name IncomingHttpRequestMessage message Returns Type Description System.Boolean Overrides HttpAuthenticationProvider.Authenticate(IncomingHttpRequestMessage) Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Storage.ReaderIndex.IIndexReader.html",
    "title": "Interface IIndexReader | Event Store",
    "keywords": "Interface IIndexReader Namespace : EventStore.Core.Services.Storage.ReaderIndex Assembly : EventStore.Core.dll Syntax public interface IIndexReader Properties CachedStreamInfo Declaration long CachedStreamInfo { get; } Property Value Type System.Int64 HashCollisions Declaration long HashCollisions { get; } Property Value Type System.Int64 NotCachedStreamInfo Declaration long NotCachedStreamInfo { get; } Property Value Type System.Int64 Methods CheckStreamAccess(String, StreamAccessType, IPrincipal) Declaration StreamAccess CheckStreamAccess(string streamId, StreamAccessType streamAccessType, IPrincipal user) Parameters Type Name System.String streamId StreamAccessType streamAccessType System.Security.Principal.IPrincipal user Returns Type Description StreamAccess GetEventStreamIdByTransactionId(Int64) Declaration string GetEventStreamIdByTransactionId(long transactionId) Parameters Type Name System.Int64 transactionId Returns Type Description System.String GetStreamLastEventNumber(String) Declaration long GetStreamLastEventNumber(string streamId) Parameters Type Name System.String streamId Returns Type Description System.Int64 GetStreamMetadata(String) Declaration StreamMetadata GetStreamMetadata(string streamId) Parameters Type Name System.String streamId Returns Type Description StreamMetadata ReadEvent(String, Int64) Declaration IndexReadEventResult ReadEvent(string streamId, long eventNumber) Parameters Type Name System.String streamId System.Int64 eventNumber Returns Type Description IndexReadEventResult ReadPrepare(String, Int64) Doesn't filter $maxAge, $maxCount, $tb(truncate before), doesn't check stream deletion, etc. Declaration PrepareLogRecord ReadPrepare(string streamId, long eventNumber) Parameters Type Name System.String streamId System.Int64 eventNumber Returns Type Description PrepareLogRecord ReadStreamEventsBackward(String, Int64, Int32) Declaration IndexReadStreamResult ReadStreamEventsBackward(string streamId, long fromEventNumber, int maxCount) Parameters Type Name System.String streamId System.Int64 fromEventNumber System.Int32 maxCount Returns Type Description IndexReadStreamResult ReadStreamEventsForward(String, Int64, Int32) Declaration IndexReadStreamResult ReadStreamEventsForward(string streamId, long fromEventNumber, int maxCount) Parameters Type Name System.String streamId System.Int64 fromEventNumber System.Int32 maxCount Returns Type Description IndexReadStreamResult Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Storage.ReaderIndex.IIndexCommitter.html",
    "title": "Interface IIndexCommitter | Event Store",
    "keywords": "Interface IIndexCommitter Namespace : EventStore.Core.Services.Storage.ReaderIndex Assembly : EventStore.Core.dll Syntax public interface IIndexCommitter Properties LastCommitPosition Declaration long LastCommitPosition { get; } Property Value Type System.Int64 Methods Commit(CommitLogRecord, Boolean, Boolean) Declaration long Commit(CommitLogRecord commit, bool isTfEof, bool cacheLastEventNumber) Parameters Type Name CommitLogRecord commit System.Boolean isTfEof System.Boolean cacheLastEventNumber Returns Type Description System.Int64 Commit(IList<PrepareLogRecord>, Boolean, Boolean) Declaration long Commit(IList<PrepareLogRecord> commitedPrepares, bool isTfEof, bool cacheLastEventNumber) Parameters Type Name System.Collections.Generic.IList < PrepareLogRecord > commitedPrepares System.Boolean isTfEof System.Boolean cacheLastEventNumber Returns Type Description System.Int64 Dispose() Declaration void Dispose() GetCommitLastEventNumber(CommitLogRecord) Declaration long GetCommitLastEventNumber(CommitLogRecord commit) Parameters Type Name CommitLogRecord commit Returns Type Description System.Int64 Init(Int64) Declaration void Init(long buildToPosition) Parameters Type Name System.Int64 buildToPosition Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Storage.ReaderIndex.IIndexBackend.html",
    "title": "Interface IIndexBackend | Event Store",
    "keywords": "Interface IIndexBackend Namespace : EventStore.Core.Services.Storage.ReaderIndex Assembly : EventStore.Core.dll Syntax public interface IIndexBackend Methods BorrowReader() Declaration TFReaderLease BorrowReader() Returns Type Description TFReaderLease GetSystemSettings() Declaration SystemSettings GetSystemSettings() Returns Type Description SystemSettings SetStreamLastEventNumber(String, Int64) Declaration long? SetStreamLastEventNumber(string streamId, long lastEventNumber) Parameters Type Name System.String streamId System.Int64 lastEventNumber Returns Type Description System.Nullable < System.Int64 > SetStreamMetadata(String, StreamMetadata) Declaration StreamMetadata SetStreamMetadata(string streamId, StreamMetadata metadata) Parameters Type Name System.String streamId StreamMetadata metadata Returns Type Description StreamMetadata SetSystemSettings(SystemSettings) Declaration void SetSystemSettings(SystemSettings systemSettings) Parameters Type Name SystemSettings systemSettings TryGetStreamLastEventNumber(String) Declaration IndexBackend.EventNumberCached TryGetStreamLastEventNumber(string streamId) Parameters Type Name System.String streamId Returns Type Description IndexBackend.EventNumberCached TryGetStreamMetadata(String) Declaration IndexBackend.MetadataCached TryGetStreamMetadata(string streamId) Parameters Type Name System.String streamId Returns Type Description IndexBackend.MetadataCached UpdateStreamLastEventNumber(Int32, String, Nullable<Int64>) Declaration long? UpdateStreamLastEventNumber(int cacheVersion, string streamId, long? lastEventNumber) Parameters Type Name System.Int32 cacheVersion System.String streamId System.Nullable < System.Int64 > lastEventNumber Returns Type Description System.Nullable < System.Int64 > UpdateStreamMetadata(Int32, String, StreamMetadata) Declaration StreamMetadata UpdateStreamMetadata(int cacheVersion, string streamId, StreamMetadata metadata) Parameters Type Name System.Int32 cacheVersion System.String streamId StreamMetadata metadata Returns Type Description StreamMetadata Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Storage.ReaderIndex.IAllReader.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Storage.ReaderIndex.IAllReader.html",
    "title": "Interface IAllReader | Event Store",
    "keywords": "Interface IAllReader Namespace : EventStore.Core.Services.Storage.ReaderIndex Assembly : EventStore.Core.dll Syntax public interface IAllReader Methods ReadAllEventsBackward(TFPos, Int32) Returns event records in the reverse sequence they were committed into TF. Positions is specified as post-positions (pointer after the end of record). Declaration IndexReadAllResult ReadAllEventsBackward(TFPos pos, int maxCount) Parameters Type Name TFPos pos System.Int32 maxCount Returns Type Description IndexReadAllResult ReadAllEventsForward(TFPos, Int32) Returns event records in the sequence they were committed into TF. Positions is specified as pre-positions (pointer at the beginning of the record). Declaration IndexReadAllResult ReadAllEventsForward(TFPos pos, int maxCount) Parameters Type Name TFPos pos System.Int32 maxCount Returns Type Description IndexReadAllResult Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Storage.ReaderIndex.DictionaryBasedCache.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Storage.ReaderIndex.DictionaryBasedCache.html",
    "title": "Class DictionaryBasedCache | Event Store",
    "keywords": "Class DictionaryBasedCache Inheritance System.Object BoundedCache < System.Int64 , PrepareLogRecord > DictionaryBasedCache Inherited Members BoundedCache<Int64, PrepareLogRecord>.Count BoundedCache<Int64, PrepareLogRecord>.TryGetRecord(Int64, PrepareLogRecord) BoundedCache<Int64, PrepareLogRecord>.PutRecord(Int64, PrepareLogRecord) BoundedCache<Int64, PrepareLogRecord>.PutRecord(Int64, PrepareLogRecord, Boolean) BoundedCache<Int64, PrepareLogRecord>.TryPutRecord(Int64, PrepareLogRecord) BoundedCache<Int64, PrepareLogRecord>.Clear() BoundedCache<Int64, PrepareLogRecord>.RemoveRecord(Int64) BoundedCache<Int64, PrepareLogRecord>.GetStatistics() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Storage.ReaderIndex Assembly : EventStore.Core.dll Syntax public class DictionaryBasedCache : BoundedCache<long, PrepareLogRecord> Constructors DictionaryBasedCache() Declaration public DictionaryBasedCache() DictionaryBasedCache(Int32, Int64) Declaration public DictionaryBasedCache(int maxCachedEntries, long maxCacheSize) Parameters Type Name System.Int32 maxCachedEntries System.Int64 maxCacheSize Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Storage.ReaderIndex.CommitDecision.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Storage.ReaderIndex.CommitDecision.html",
    "title": "Enum CommitDecision | Event Store",
    "keywords": "Enum CommitDecision Namespace : EventStore.Core.Services.Storage.ReaderIndex Assembly : EventStore.Core.dll Syntax public enum CommitDecision Fields Name Description CorruptedIdempotency Deleted Idempotent IdempotentNotReady InvalidTransaction Ok WrongExpectedVersion Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<CommitDecision>() ProtobufExtensions.Serialize<CommitDecision>() ProtobufExtensions.SerializeToArray<CommitDecision>()"
  },
  "dotnet-api/code/EventStore.Core.Services.Storage.ReaderIndex.CommitCheckResult.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Storage.ReaderIndex.CommitCheckResult.html",
    "title": "Struct CommitCheckResult | Event Store",
    "keywords": "Struct CommitCheckResult Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Services.Storage.ReaderIndex Assembly : EventStore.Core.dll Syntax public struct CommitCheckResult Constructors CommitCheckResult(CommitDecision, String, Int64, Int64, Int64, Boolean) Declaration public CommitCheckResult(CommitDecision decision, string eventStreamId, long currentVersion, long startEventNumber, long endEventNumber, bool isSoftDeleted) Parameters Type Name CommitDecision decision System.String eventStreamId System.Int64 currentVersion System.Int64 startEventNumber System.Int64 endEventNumber System.Boolean isSoftDeleted Fields CurrentVersion Declaration public readonly long CurrentVersion Field Value Type System.Int64 Decision Declaration public readonly CommitDecision Decision Field Value Type CommitDecision EndEventNumber Declaration public readonly long EndEventNumber Field Value Type System.Int64 EventStreamId Declaration public readonly string EventStreamId Field Value Type System.String IsSoftDeleted Declaration public readonly bool IsSoftDeleted Field Value Type System.Boolean StartEventNumber Declaration public readonly long StartEventNumber Field Value Type System.Int64 Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) EnumExtensions.EnumValueName<T>(T) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Storage.ReaderIndex.BoundedCache-2.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Storage.ReaderIndex.BoundedCache-2.html",
    "title": "Class BoundedCache<TKey, TValue> | Event Store",
    "keywords": "Class BoundedCache<TKey, TValue> Inheritance System.Object BoundedCache<TKey, TValue> DictionaryBasedCache Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Storage.ReaderIndex Assembly : EventStore.Core.dll Syntax public class BoundedCache<TKey, TValue> Type Parameters Name Description TKey TValue Constructors BoundedCache(Int32, Int64, Func<TValue, Int64>) Declaration public BoundedCache(int maxCachedEntries, long maxDataSize, Func<TValue, long> valueSize) Parameters Type Name System.Int32 maxCachedEntries System.Int64 maxDataSize System.Func <TValue, System.Int64 > valueSize Properties Count Declaration public int Count { get; } Property Value Type System.Int32 Methods Clear() Declaration public void Clear() GetStatistics() Declaration public ReadCacheStats GetStatistics() Returns Type Description ReadCacheStats PutRecord(TKey, TValue) Declaration public void PutRecord(TKey key, TValue value) Parameters Type Name TKey key TValue value PutRecord(TKey, TValue, Boolean) Declaration public void PutRecord(TKey key, TValue value, bool throwOnDuplicate) Parameters Type Name TKey key TValue value System.Boolean throwOnDuplicate RemoveRecord(TKey) Declaration public void RemoveRecord(TKey key) Parameters Type Name TKey key TryGetRecord(TKey, out TValue) Declaration public bool TryGetRecord(TKey key, out TValue value) Parameters Type Name TKey key TValue value Returns Type Description System.Boolean TryPutRecord(TKey, TValue) Declaration public bool TryPutRecord(TKey key, TValue value) Parameters Type Name TKey key TValue value Returns Type Description System.Boolean Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.HttpMessage.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.HttpMessage.html",
    "title": "Class HttpMessage | Event Store",
    "keywords": "Class HttpMessage Inheritance System.Object HttpMessage Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public static class HttpMessage"
  },
  "dotnet-api/code/EventStore.Core.Messages.HttpMessage.TextMessage.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.HttpMessage.TextMessage.html",
    "title": "Class HttpMessage.TextMessage | Event Store",
    "keywords": "Class HttpMessage.TextMessage Inheritance System.Object Message HttpMessage.TextMessage Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class TextMessage : Message Constructors TextMessage() Declaration public TextMessage() TextMessage(String) Declaration public TextMessage(string text) Parameters Type Name System.String text Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Text Declaration public string Text { get; set; } Property Value Type System.String Methods ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.HttpMessage.SendOverHttp.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.HttpMessage.SendOverHttp.html",
    "title": "Class HttpMessage.SendOverHttp | Event Store",
    "keywords": "Class HttpMessage.SendOverHttp Inheritance System.Object Message HttpMessage.SendOverHttp Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class SendOverHttp : Message Constructors SendOverHttp(IPEndPoint, Message, DateTime) Declaration public SendOverHttp(IPEndPoint endPoint, Message message, DateTime liveUntil) Parameters Type Name System.Net.IPEndPoint endPoint Message message System.DateTime liveUntil Fields EndPoint Declaration public readonly IPEndPoint EndPoint Field Value Type System.Net.IPEndPoint LiveUntil Declaration public readonly DateTime LiveUntil Field Value Type System.DateTime Message Declaration public readonly Message Message Field Value Type Message Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.HttpMessage.PurgeTimedOutRequests.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.HttpMessage.PurgeTimedOutRequests.html",
    "title": "Class HttpMessage.PurgeTimedOutRequests | Event Store",
    "keywords": "Class HttpMessage.PurgeTimedOutRequests Inheritance System.Object Message HttpMessage.PurgeTimedOutRequests Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class PurgeTimedOutRequests : Message Constructors PurgeTimedOutRequests(ServiceAccessibility) Declaration public PurgeTimedOutRequests(ServiceAccessibility accessibility) Parameters Type Name ServiceAccessibility accessibility Fields Accessibility Declaration public readonly ServiceAccessibility Accessibility Field Value Type ServiceAccessibility Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.HttpMessage.HttpSendPart.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.HttpMessage.HttpSendPart.html",
    "title": "Class HttpMessage.HttpSendPart | Event Store",
    "keywords": "Class HttpMessage.HttpSendPart Inheritance System.Object Message HttpMessage.HttpSendMessage HttpMessage.HttpSendPart Implements IQueueAffineMessage Inherited Members HttpMessage.HttpSendMessage.QueueId HttpMessage.HttpSendMessage.Envelope HttpMessage.HttpSendMessage.CorrelationId HttpMessage.HttpSendMessage.HttpEntityManager Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class HttpSendPart : HttpMessage.HttpSendMessage, IQueueAffineMessage Constructors HttpSendPart(Guid, IEnvelope, HttpEntityManager, String) Declaration public HttpSendPart(Guid correlationId, IEnvelope envelope, HttpEntityManager httpEntityManager, string data) Parameters Type Name System.Guid correlationId IEnvelope envelope HttpEntityManager httpEntityManager System.String data Fields Data Declaration public readonly string Data Field Value Type System.String Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides HttpMessage.HttpSendMessage.MsgTypeId Implements IQueueAffineMessage Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.GossipMessage.GossipSendFailed.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.GossipMessage.GossipSendFailed.html",
    "title": "Class GossipMessage.GossipSendFailed | Event Store",
    "keywords": "Class GossipMessage.GossipSendFailed Inheritance System.Object Message GossipMessage.GossipSendFailed Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class GossipSendFailed : Message Constructors GossipSendFailed(String, IPEndPoint) Declaration public GossipSendFailed(string reason, IPEndPoint recipient) Parameters Type Name System.String reason System.Net.IPEndPoint recipient Fields Reason Declaration public readonly string Reason Field Value Type System.String Recipient Declaration public readonly IPEndPoint Recipient Field Value Type System.Net.IPEndPoint Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Methods ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.GossipMessage.GossipReceived.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.GossipMessage.GossipReceived.html",
    "title": "Class GossipMessage.GossipReceived | Event Store",
    "keywords": "Class GossipMessage.GossipReceived Inheritance System.Object Message GossipMessage.GossipReceived Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class GossipReceived : Message Constructors GossipReceived(IEnvelope, ClusterInfo, IPEndPoint) Declaration public GossipReceived(IEnvelope envelope, ClusterInfo clusterInfo, IPEndPoint server) Parameters Type Name IEnvelope envelope ClusterInfo clusterInfo System.Net.IPEndPoint server Fields ClusterInfo Declaration public readonly ClusterInfo ClusterInfo Field Value Type ClusterInfo Envelope Declaration public readonly IEnvelope Envelope Field Value Type IEnvelope Server Declaration public readonly IPEndPoint Server Field Value Type System.Net.IPEndPoint Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.GossipMessage.Gossip.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.GossipMessage.Gossip.html",
    "title": "Class GossipMessage.Gossip | Event Store",
    "keywords": "Class GossipMessage.Gossip Inheritance System.Object Message GossipMessage.Gossip Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class Gossip : Message Constructors Gossip(Int32) Declaration public Gossip(int gossipRound) Parameters Type Name System.Int32 gossipRound Fields GossipRound Declaration public readonly int GossipRound Field Value Type System.Int32 Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ElectionMessageDto.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ElectionMessageDto.html",
    "title": "Class ElectionMessageDto | Event Store",
    "keywords": "Class ElectionMessageDto Inheritance System.Object ElectionMessageDto Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public static class ElectionMessageDto"
  },
  "dotnet-api/code/EventStore.Core.Messages.ElectionMessageDto.ViewChangeProofDto.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ElectionMessageDto.ViewChangeProofDto.html",
    "title": "Class ElectionMessageDto.ViewChangeProofDto | Event Store",
    "keywords": "Class ElectionMessageDto.ViewChangeProofDto Inheritance System.Object ElectionMessageDto.ViewChangeProofDto Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class ViewChangeProofDto Constructors ViewChangeProofDto() Declaration public ViewChangeProofDto() ViewChangeProofDto(ElectionMessage.ViewChangeProof) Declaration public ViewChangeProofDto(ElectionMessage.ViewChangeProof message) Parameters Type Name ElectionMessage.ViewChangeProof message Properties InstalledView Declaration public int InstalledView { get; set; } Property Value Type System.Int32 ServerId Declaration public Guid ServerId { get; set; } Property Value Type System.Guid ServerInternalHttpAddress Declaration public string ServerInternalHttpAddress { get; set; } Property Value Type System.String ServerInternalHttpPort Declaration public int ServerInternalHttpPort { get; set; } Property Value Type System.Int32 Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ElectionMessageDto.ViewChangeDto.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ElectionMessageDto.ViewChangeDto.html",
    "title": "Class ElectionMessageDto.ViewChangeDto | Event Store",
    "keywords": "Class ElectionMessageDto.ViewChangeDto Inheritance System.Object ElectionMessageDto.ViewChangeDto Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class ViewChangeDto Constructors ViewChangeDto() Declaration public ViewChangeDto() ViewChangeDto(ElectionMessage.ViewChange) Declaration public ViewChangeDto(ElectionMessage.ViewChange message) Parameters Type Name ElectionMessage.ViewChange message Properties AttemptedView Declaration public int AttemptedView { get; set; } Property Value Type System.Int32 ServerId Declaration public Guid ServerId { get; set; } Property Value Type System.Guid ServerInternalHttpAddress Declaration public string ServerInternalHttpAddress { get; set; } Property Value Type System.String ServerInternalHttpPort Declaration public int ServerInternalHttpPort { get; set; } Property Value Type System.Int32 Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ClientMessage.TcpForwardMessage.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ClientMessage.TcpForwardMessage.html",
    "title": "Class ClientMessage.TcpForwardMessage | Event Store",
    "keywords": "Class ClientMessage.TcpForwardMessage Inheritance System.Object Message ClientMessage.TcpForwardMessage Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class TcpForwardMessage : Message Constructors TcpForwardMessage(Message) Declaration public TcpForwardMessage(Message message) Parameters Type Name Message message Fields Message Declaration public readonly Message Message Field Value Type Message Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ClientMessage.SubscriptionDropped.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ClientMessage.SubscriptionDropped.html",
    "title": "Class ClientMessage.SubscriptionDropped | Event Store",
    "keywords": "Class ClientMessage.SubscriptionDropped Inheritance System.Object Message ClientMessage.SubscriptionDropped Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class SubscriptionDropped : Message Constructors SubscriptionDropped(Guid, SubscriptionDropReason) Declaration public SubscriptionDropped(Guid correlationId, SubscriptionDropReason reason) Parameters Type Name System.Guid correlationId SubscriptionDropReason reason Fields CorrelationId Declaration public readonly Guid CorrelationId Field Value Type System.Guid Reason Declaration public readonly SubscriptionDropReason Reason Field Value Type SubscriptionDropReason Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ClientMessage.SubscriptionConfirmation.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ClientMessage.SubscriptionConfirmation.html",
    "title": "Class ClientMessage.SubscriptionConfirmation | Event Store",
    "keywords": "Class ClientMessage.SubscriptionConfirmation Inheritance System.Object Message ClientMessage.SubscriptionConfirmation Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class SubscriptionConfirmation : Message Constructors SubscriptionConfirmation(Guid, Int64, Nullable<Int64>) Declaration public SubscriptionConfirmation(Guid correlationId, long lastCommitPosition, long? lastEventNumber) Parameters Type Name System.Guid correlationId System.Int64 lastCommitPosition System.Nullable < System.Int64 > lastEventNumber Fields CorrelationId Declaration public readonly Guid CorrelationId Field Value Type System.Guid LastCommitPosition Declaration public readonly long LastCommitPosition Field Value Type System.Int64 LastEventNumber Declaration public readonly long? LastEventNumber Field Value Type System.Nullable < System.Int64 > Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ClientMessage.PersistentSubscriptionNackEvents.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ClientMessage.PersistentSubscriptionNackEvents.html",
    "title": "Class ClientMessage.PersistentSubscriptionNackEvents | Event Store",
    "keywords": "Class ClientMessage.PersistentSubscriptionNackEvents Inheritance System.Object Message ClientMessage.ReadRequestMessage ClientMessage.PersistentSubscriptionNackEvents Inherited Members ClientMessage.ReadRequestMessage.InternalCorrId ClientMessage.ReadRequestMessage.CorrelationId ClientMessage.ReadRequestMessage.Envelope ClientMessage.ReadRequestMessage.User ClientMessage.ReadRequestMessage.Expires Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class PersistentSubscriptionNackEvents : ClientMessage.ReadRequestMessage Constructors PersistentSubscriptionNackEvents(Guid, Guid, IEnvelope, String, String, ClientMessage.PersistentSubscriptionNackEvents.NakAction, Guid[], IPrincipal) Declaration public PersistentSubscriptionNackEvents(Guid internalCorrId, Guid correlationId, IEnvelope envelope, string subscriptionId, string message, ClientMessage.PersistentSubscriptionNackEvents.NakAction action, Guid[] processedEventIds, IPrincipal user) Parameters Type Name System.Guid internalCorrId System.Guid correlationId IEnvelope envelope System.String subscriptionId System.String message ClientMessage.PersistentSubscriptionNackEvents.NakAction action System.Guid [] processedEventIds System.Security.Principal.IPrincipal user Fields Action Declaration public readonly ClientMessage.PersistentSubscriptionNackEvents.NakAction Action Field Value Type ClientMessage.PersistentSubscriptionNackEvents.NakAction Message Declaration public readonly string Message Field Value Type System.String ProcessedEventIds Declaration public readonly Guid[] ProcessedEventIds Field Value Type System.Guid [] SubscriptionId Declaration public readonly string SubscriptionId Field Value Type System.String Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides ClientMessage.ReadRequestMessage.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ClientMessage.PersistentSubscriptionNackEvents.NakAction.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ClientMessage.PersistentSubscriptionNackEvents.NakAction.html",
    "title": "Enum ClientMessage.PersistentSubscriptionNackEvents.NakAction | Event Store",
    "keywords": "Enum ClientMessage.PersistentSubscriptionNackEvents.NakAction Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public enum NakAction Fields Name Description Park Retry Skip Stop Unknown Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<ClientMessage.PersistentSubscriptionNackEvents.NakAction>() ProtobufExtensions.Serialize<ClientMessage.PersistentSubscriptionNackEvents.NakAction>() ProtobufExtensions.SerializeToArray<ClientMessage.PersistentSubscriptionNackEvents.NakAction>()"
  },
  "dotnet-api/code/EventStore.Core.Messages.ClientMessage.PersistentSubscriptionConfirmation.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ClientMessage.PersistentSubscriptionConfirmation.html",
    "title": "Class ClientMessage.PersistentSubscriptionConfirmation | Event Store",
    "keywords": "Class ClientMessage.PersistentSubscriptionConfirmation Inheritance System.Object Message ClientMessage.PersistentSubscriptionConfirmation Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class PersistentSubscriptionConfirmation : Message Constructors PersistentSubscriptionConfirmation(String, Guid, Int64, Nullable<Int64>) Declaration public PersistentSubscriptionConfirmation(string subscriptionId, Guid correlationId, long lastCommitPosition, long? lastEventNumber) Parameters Type Name System.String subscriptionId System.Guid correlationId System.Int64 lastCommitPosition System.Nullable < System.Int64 > lastEventNumber Fields CorrelationId Declaration public readonly Guid CorrelationId Field Value Type System.Guid LastCommitPosition Declaration public readonly long LastCommitPosition Field Value Type System.Int64 LastEventNumber Declaration public readonly long? LastEventNumber Field Value Type System.Nullable < System.Int64 > SubscriptionId Declaration public string SubscriptionId Field Value Type System.String Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ClientMessage.PersistentSubscriptionAckEvents.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ClientMessage.PersistentSubscriptionAckEvents.html",
    "title": "Class ClientMessage.PersistentSubscriptionAckEvents | Event Store",
    "keywords": "Class ClientMessage.PersistentSubscriptionAckEvents Inheritance System.Object Message ClientMessage.ReadRequestMessage ClientMessage.PersistentSubscriptionAckEvents Inherited Members ClientMessage.ReadRequestMessage.InternalCorrId ClientMessage.ReadRequestMessage.CorrelationId ClientMessage.ReadRequestMessage.Envelope ClientMessage.ReadRequestMessage.User ClientMessage.ReadRequestMessage.Expires Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class PersistentSubscriptionAckEvents : ClientMessage.ReadRequestMessage Constructors PersistentSubscriptionAckEvents(Guid, Guid, IEnvelope, String, Guid[], IPrincipal) Declaration public PersistentSubscriptionAckEvents(Guid internalCorrId, Guid correlationId, IEnvelope envelope, string subscriptionId, Guid[] processedEventIds, IPrincipal user) Parameters Type Name System.Guid internalCorrId System.Guid correlationId IEnvelope envelope System.String subscriptionId System.Guid [] processedEventIds System.Security.Principal.IPrincipal user Fields ProcessedEventIds Declaration public readonly Guid[] ProcessedEventIds Field Value Type System.Guid [] SubscriptionId Declaration public readonly string SubscriptionId Field Value Type System.String Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides ClientMessage.ReadRequestMessage.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ClientMessage.NotHandled.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ClientMessage.NotHandled.html",
    "title": "Class ClientMessage.NotHandled | Event Store",
    "keywords": "Class ClientMessage.NotHandled Inheritance System.Object Message ClientMessage.NotHandled Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class NotHandled : Message Constructors NotHandled(Guid, TcpClientMessageDto.NotHandled.NotHandledReason, Object) Declaration public NotHandled(Guid correlationId, TcpClientMessageDto.NotHandled.NotHandledReason reason, object additionalInfo) Parameters Type Name System.Guid correlationId TcpClientMessageDto.NotHandled.NotHandledReason reason System.Object additionalInfo Fields AdditionalInfo Declaration public readonly object AdditionalInfo Field Value Type System.Object CorrelationId Declaration public readonly Guid CorrelationId Field Value Type System.Guid Reason Declaration public readonly TcpClientMessageDto.NotHandled.NotHandledReason Reason Field Value Type TcpClientMessageDto.NotHandled.NotHandledReason Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ClientMessage.MergeIndexesResponse.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ClientMessage.MergeIndexesResponse.html",
    "title": "Class ClientMessage.MergeIndexesResponse | Event Store",
    "keywords": "Class ClientMessage.MergeIndexesResponse Inheritance System.Object Message ClientMessage.MergeIndexesResponse Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class MergeIndexesResponse : Message Constructors MergeIndexesResponse(Guid, ClientMessage.MergeIndexesResponse.MergeIndexesResult) Declaration public MergeIndexesResponse(Guid correlationId, ClientMessage.MergeIndexesResponse.MergeIndexesResult result) Parameters Type Name System.Guid correlationId ClientMessage.MergeIndexesResponse.MergeIndexesResult result Fields CorrelationId Declaration public readonly Guid CorrelationId Field Value Type System.Guid Result Declaration public readonly ClientMessage.MergeIndexesResponse.MergeIndexesResult Result Field Value Type ClientMessage.MergeIndexesResponse.MergeIndexesResult Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Methods ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Helpers.IODispatcherDelayedMessage.html": {
    "href": "dotnet-api/code/EventStore.Core.Helpers.IODispatcherDelayedMessage.html",
    "title": "Class IODispatcherDelayedMessage | Event Store",
    "keywords": "Class IODispatcherDelayedMessage Inheritance System.Object Message IODispatcherDelayedMessage Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Helpers Assembly : EventStore.Core.dll Syntax public sealed class IODispatcherDelayedMessage : Message Constructors IODispatcherDelayedMessage(Guid, Action) Declaration public IODispatcherDelayedMessage(Guid correlationId, Action action) Parameters Type Name System.Guid correlationId System.Action action IODispatcherDelayedMessage(Guid, Action, Nullable<Guid>) Declaration public IODispatcherDelayedMessage(Guid correlationId, Action action, Guid? messageCorrelationId) Parameters Type Name System.Guid correlationId System.Action action System.Nullable < System.Guid > messageCorrelationId Properties Action Declaration public Action Action { get; } Property Value Type System.Action CorrelationId Declaration public Guid CorrelationId { get; } Property Value Type System.Guid MessageCorrelationId Declaration public Guid? MessageCorrelationId { get; } Property Value Type System.Nullable < System.Guid > MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Helpers.IODispatcherAsync.html": {
    "href": "dotnet-api/code/EventStore.Core.Helpers.IODispatcherAsync.html",
    "title": "Class IODispatcherAsync | Event Store",
    "keywords": "Class IODispatcherAsync Inheritance System.Object IODispatcherAsync Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Helpers Assembly : EventStore.Core.dll Syntax public static class IODispatcherAsync Methods BeginDelay(IODispatcher, IODispatcherAsync.CancellationScope, TimeSpan, Action) Declaration public static IODispatcherAsync.Step BeginDelay(this IODispatcher ioDispatcher, IODispatcherAsync.CancellationScope cancellationScope, TimeSpan timeout, Action handler) Parameters Type Name IODispatcher ioDispatcher IODispatcherAsync.CancellationScope cancellationScope System.TimeSpan timeout System.Action handler Returns Type Description IODispatcherAsync.Step BeginDeleteStream(IODispatcher, IODispatcherAsync.CancellationScope, String, Int64, Boolean, IPrincipal, Action<ClientMessage.DeleteStreamCompleted>) Declaration public static IODispatcherAsync.Step BeginDeleteStream(this IODispatcher ioDispatcher, IODispatcherAsync.CancellationScope cancellationScope, string streamId, long expectedVersion, bool hardDelete, IPrincipal principal, Action<ClientMessage.DeleteStreamCompleted> handler) Parameters Type Name IODispatcher ioDispatcher IODispatcherAsync.CancellationScope cancellationScope System.String streamId System.Int64 expectedVersion System.Boolean hardDelete System.Security.Principal.IPrincipal principal System.Action < ClientMessage.DeleteStreamCompleted > handler Returns Type Description IODispatcherAsync.Step BeginReadBackward(IODispatcher, IODispatcherAsync.CancellationScope, String, Int64, Int32, Boolean, IPrincipal, Action<ClientMessage.ReadStreamEventsBackwardCompleted>, Action) Declaration public static IODispatcherAsync.Step BeginReadBackward(this IODispatcher ioDispatcher, IODispatcherAsync.CancellationScope cancellationScope, string streamId, long fromEventNumber, int maxCount, bool resolveLinks, IPrincipal principal, Action<ClientMessage.ReadStreamEventsBackwardCompleted> handler, Action timeoutHandler) Parameters Type Name IODispatcher ioDispatcher IODispatcherAsync.CancellationScope cancellationScope System.String streamId System.Int64 fromEventNumber System.Int32 maxCount System.Boolean resolveLinks System.Security.Principal.IPrincipal principal System.Action < ClientMessage.ReadStreamEventsBackwardCompleted > handler System.Action timeoutHandler Returns Type Description IODispatcherAsync.Step BeginReadForward(IODispatcher, IODispatcherAsync.CancellationScope, String, Int64, Int32, Boolean, IPrincipal, Action<ClientMessage.ReadStreamEventsForwardCompleted>, Action) Declaration public static IODispatcherAsync.Step BeginReadForward(this IODispatcher ioDispatcher, IODispatcherAsync.CancellationScope cancellationScope, string streamId, long fromEventNumber, int maxCount, bool resolveLinks, IPrincipal principal, Action<ClientMessage.ReadStreamEventsForwardCompleted> handler, Action timeoutHandler) Parameters Type Name IODispatcher ioDispatcher IODispatcherAsync.CancellationScope cancellationScope System.String streamId System.Int64 fromEventNumber System.Int32 maxCount System.Boolean resolveLinks System.Security.Principal.IPrincipal principal System.Action < ClientMessage.ReadStreamEventsForwardCompleted > handler System.Action timeoutHandler Returns Type Description IODispatcherAsync.Step BeginSubscribeAwake(IODispatcher, IODispatcherAsync.CancellationScope, String, TFPos, Action<IODispatcherDelayedMessage>, Nullable<Guid>) Declaration public static IODispatcherAsync.Step BeginSubscribeAwake(this IODispatcher ioDispatcher, IODispatcherAsync.CancellationScope cancellationScope, string streamId, TFPos from, Action<IODispatcherDelayedMessage> handler, Guid? correlationId = default(Guid? )) Parameters Type Name IODispatcher ioDispatcher IODispatcherAsync.CancellationScope cancellationScope System.String streamId TFPos from System.Action < IODispatcherDelayedMessage > handler System.Nullable < System.Guid > correlationId Returns Type Description IODispatcherAsync.Step BeginUpdateStreamAcl(IODispatcher, IODispatcherAsync.CancellationScope, String, Int64, IPrincipal, StreamMetadata, Action<ClientMessage.WriteEventsCompleted>) Declaration public static IODispatcherAsync.Step BeginUpdateStreamAcl(this IODispatcher ioDispatcher, IODispatcherAsync.CancellationScope cancellationScope, string streamId, long expectedVersion, IPrincipal principal, StreamMetadata metadata, Action<ClientMessage.WriteEventsCompleted> handler) Parameters Type Name IODispatcher ioDispatcher IODispatcherAsync.CancellationScope cancellationScope System.String streamId System.Int64 expectedVersion System.Security.Principal.IPrincipal principal StreamMetadata metadata System.Action < ClientMessage.WriteEventsCompleted > handler Returns Type Description IODispatcherAsync.Step BeginWriteEvents(IODispatcher, IODispatcherAsync.CancellationScope, String, Int64, IPrincipal, Event[], Action<ClientMessage.WriteEventsCompleted>) Declaration public static IODispatcherAsync.Step BeginWriteEvents(this IODispatcher ioDispatcher, IODispatcherAsync.CancellationScope cancellationScope, string streamId, long expectedVersion, IPrincipal principal, Event[] events, Action<ClientMessage.WriteEventsCompleted> handler) Parameters Type Name IODispatcher ioDispatcher IODispatcherAsync.CancellationScope cancellationScope System.String streamId System.Int64 expectedVersion System.Security.Principal.IPrincipal principal Event [] events System.Action < ClientMessage.WriteEventsCompleted > handler Returns Type Description IODispatcherAsync.Step Run(IODispatcherAsync.Step) Declaration public static void Run(this IODispatcherAsync.Step action) Parameters Type Name IODispatcherAsync.Step action Run(IEnumerable<IODispatcherAsync.Step>) Declaration public static void Run(this IEnumerable<IODispatcherAsync.Step> actions) Parameters Type Name System.Collections.Generic.IEnumerable < IODispatcherAsync.Step > actions"
  },
  "dotnet-api/code/EventStore.Core.Messaging.PublishEnvelope.html": {
    "href": "dotnet-api/code/EventStore.Core.Messaging.PublishEnvelope.html",
    "title": "Class PublishEnvelope | Event Store",
    "keywords": "Class PublishEnvelope Inheritance System.Object PublishEnvelope Implements IEnvelope Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messaging Assembly : EventStore.Core.dll Syntax public class PublishEnvelope : IEnvelope Constructors PublishEnvelope(IPublisher, Boolean) Declaration public PublishEnvelope(IPublisher publisher, bool crossThread = false) Parameters Type Name IPublisher publisher System.Boolean crossThread Methods ReplyWith<T>(T) Declaration public void ReplyWith<T>(T message) where T : Message Parameters Type Name T message Type Parameters Name Description T Implements IEnvelope Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messaging.NoopEnvelope.html": {
    "href": "dotnet-api/code/EventStore.Core.Messaging.NoopEnvelope.html",
    "title": "Class NoopEnvelope | Event Store",
    "keywords": "Class NoopEnvelope Inheritance System.Object NoopEnvelope Implements IEnvelope Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messaging Assembly : EventStore.Core.dll Syntax public class NoopEnvelope : IEnvelope Methods ReplyWith<T>(T) Declaration public void ReplyWith<T>(T message) where T : Message Parameters Type Name T message Type Parameters Name Description T Implements IEnvelope Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messaging.MessageHierarchy.html": {
    "href": "dotnet-api/code/EventStore.Core.Messaging.MessageHierarchy.html",
    "title": "Class MessageHierarchy | Event Store",
    "keywords": "Class MessageHierarchy Inheritance System.Object MessageHierarchy Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messaging Assembly : EventStore.Core.dll Syntax public static class MessageHierarchy Fields Descendants Declaration public static readonly Dictionary<Type, List<Type>> Descendants Field Value Type System.Collections.Generic.Dictionary < System.Type , System.Collections.Generic.List < System.Type >> DescendantsByType Declaration public static readonly Dictionary<Type, int[]> DescendantsByType Field Value Type System.Collections.Generic.Dictionary < System.Type , System.Int32 []> DescendantsByTypeId Declaration public static readonly int[][] DescendantsByTypeId Field Value Type System.Int32 [][] MaxMsgTypeId Declaration public static readonly int MaxMsgTypeId Field Value Type System.Int32 MsgTypeIdByType Declaration public static readonly Dictionary<Type, int> MsgTypeIdByType Field Value Type System.Collections.Generic.Dictionary < System.Type , System.Int32 > ParentsByTypeId Declaration public static readonly int[][] ParentsByTypeId Field Value Type System.Int32 [][]"
  },
  "dotnet-api/code/EventStore.Core.Messaging.Message.html": {
    "href": "dotnet-api/code/EventStore.Core.Messaging.Message.html",
    "title": "Class Message | Event Store",
    "keywords": "Class Message Inheritance System.Object Message IODispatcherDelayedMessage ClientMessage.ClientIdentified ClientMessage.DeleteStreamCompleted ClientMessage.IdentifyClient ClientMessage.MergeIndexes ClientMessage.MergeIndexesResponse ClientMessage.NotHandled ClientMessage.PersistentSubscriptionConfirmation ClientMessage.PersistentSubscriptionStreamEventAppeared ClientMessage.ReadRequestMessage ClientMessage.ReadResponseMessage ClientMessage.RequestShutdown ClientMessage.ScavengeDatabase ClientMessage.ScavengeDatabaseResponse ClientMessage.StopDatabaseScavenge ClientMessage.StreamEventAppeared ClientMessage.SubscriptionConfirmation ClientMessage.SubscriptionDropped ClientMessage.TcpForwardMessage ClientMessage.TransactionCommitCompleted ClientMessage.TransactionStartCompleted ClientMessage.TransactionWriteCompleted ClientMessage.WriteEventsCompleted ClientMessage.WriteRequestMessage ElectionMessage.Accept ElectionMessage.ElectionsDone ElectionMessage.ElectionsTimedOut ElectionMessage.Prepare ElectionMessage.PrepareOk ElectionMessage.Proposal ElectionMessage.SendViewChangeProof ElectionMessage.StartElections ElectionMessage.ViewChange ElectionMessage.ViewChangeProof GossipMessage.Gossip GossipMessage.GossipReceived GossipMessage.GossipSendFailed GossipMessage.GossipUpdated GossipMessage.GotGossipSeedSources GossipMessage.RetrieveGossipSeedSources GossipMessage.SendGossip HttpMessage.DeniedToHandle HttpMessage.HttpCompleted HttpMessage.HttpSendMessage HttpMessage.PurgeTimedOutRequests HttpMessage.SendOverHttp HttpMessage.TextMessage InternalAuthenticationProviderMessages.ResetPasswordCache MonitoringMessage.GetAllPersistentSubscriptionStats MonitoringMessage.GetFreshStats MonitoringMessage.GetFreshStatsCompleted MonitoringMessage.GetFreshTcpConnectionStats MonitoringMessage.GetFreshTcpConnectionStatsCompleted MonitoringMessage.GetPersistentSubscriptionStats MonitoringMessage.GetPersistentSubscriptionStatsCompleted MonitoringMessage.GetStreamPersistentSubscriptionStats MonitoringMessage.InternalStatsRequest MonitoringMessage.InternalStatsRequestResponse ReplicationMessage.AckLogPosition ReplicationMessage.CloneAssignment ReplicationMessage.CreateChunk ReplicationMessage.DataChunkBulk ReplicationMessage.GetReplicationStats ReplicationMessage.GetReplicationStatsCompleted ReplicationMessage.RawChunkBulk ReplicationMessage.ReconnectToMaster ReplicationMessage.ReplicaLogPositionAck ReplicationMessage.ReplicaSubscribed ReplicationMessage.ReplicaSubscriptionRequest ReplicationMessage.ReplicaSubscriptionRetry ReplicationMessage.SlaveAssignment ReplicationMessage.SubscribeReplica ReplicationMessage.SubscribeToMaster StorageMessage.AlreadyCommitted StorageMessage.BatchLogExpiredMessages StorageMessage.CommitAck StorageMessage.CommitReplicated StorageMessage.EventCommitted StorageMessage.InvalidTransaction StorageMessage.PrepareAck StorageMessage.RequestCompleted StorageMessage.RequestManagerTimerTick StorageMessage.StreamDeleted StorageMessage.TfEofAtNonCommitRecord StorageMessage.WriteCommit StorageMessage.WriteDelete StorageMessage.WritePrepares StorageMessage.WriteTransactionData StorageMessage.WriteTransactionPrepare StorageMessage.WriteTransactionStart StorageMessage.WrongExpectedVersion SubscriptionMessage.CheckPollTimeout SubscriptionMessage.PersistentSubscriptionTimerTick SubscriptionMessage.PollStream SystemMessage.ChaserCaughtUp SystemMessage.EpochWritten SystemMessage.NoQuorumMessage SystemMessage.RequestForwardingTimerTick SystemMessage.ServiceInitialized SystemMessage.ServiceShutdown SystemMessage.ShutdownTimeout SystemMessage.StateChangeMessage SystemMessage.SubSystemInitialized SystemMessage.SystemCoreReady SystemMessage.SystemInit SystemMessage.SystemReady SystemMessage.SystemStart SystemMessage.VNodeConnectionEstablished SystemMessage.VNodeConnectionLost SystemMessage.WaitForChaserToCatchUp SystemMessage.WriteEpoch TcpMessage.Authenticated TcpMessage.ConnectionClosed TcpMessage.ConnectionEstablished TcpMessage.Heartbeat TcpMessage.HeartbeatTimeout TcpMessage.NotAuthenticated TcpMessage.NotReady TcpMessage.PongMessage TcpMessage.TcpSend UserManagementMessage.RequestMessage UserManagementMessage.ResponseMessage UserManagementMessage.UserManagementServiceInitialized AwakeServiceMessage.SubscribeAwake AwakeServiceMessage.UnsubscribeAwake TimerMessage.Schedule IncomingHttpRequestMessage CoreProjectionCheckpointWriterMessage.CheckpointWritten CoreProjectionCheckpointWriterMessage.RestartRequested CoreProjectionManagementMessageBase CoreProjectionStatusMessage.ProjectionWorkerStarted FeedReaderMessage.FeedReaderMessageBase EventReaderSubscriptionMessageBase PartitionProcessingResultBase PartitionProcessingResultOutputBase ProjectionCoreServiceMessage.Connected ProjectionCoreServiceMessage.CoreTick ProjectionCoreServiceMessage.StartCore ProjectionCoreServiceMessage.StopCore ProjectionCoreServiceMessage.SubComponentStarted ProjectionCoreServiceMessage.SubComponentStopped ProjectionManagementMessage.Command.ControlMessage ProjectionManagementMessage.Command.GetResult ProjectionManagementMessage.Command.GetState ProjectionManagementMessage.Command.GetStatistics ProjectionManagementMessage.Internal.CleanupExpired ProjectionManagementMessage.Internal.Deleted ProjectionManagementMessage.Internal.ReadTimeout ProjectionManagementMessage.Internal.RegularTimeout ProjectionManagementMessage.OperationFailed ProjectionManagementMessage.ProjectionConfig ProjectionManagementMessage.ProjectionDataBase ProjectionManagementMessage.ProjectionQuery ProjectionManagementMessage.ReaderReady ProjectionManagementMessage.RegisterSystemProjection ProjectionManagementMessage.RequestSystemProjections ProjectionManagementMessage.SlaveProjectionsStarted ProjectionManagementMessage.Starting ProjectionManagementMessage.Statistics ProjectionManagementMessage.Updated ReaderCoreServiceMessage.ReaderTick ReaderCoreServiceMessage.StartReader ReaderCoreServiceMessage.StopReader ReaderSubscriptionManagement.CompleteSpooledStreamReading ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage ReaderSubscriptionManagement.SpoolStreamReading ReaderSubscriptionManagement.SpoolStreamReadingCore ReaderSubscriptionMessage.SubscriptionMessage UnwrapEnvelopeMessage Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messaging Assembly : EventStore.Core.dll Syntax public abstract class Message Fields NextMsgId Declaration protected static int NextMsgId Field Value Type System.Int32 Properties MsgTypeId Declaration public virtual int MsgTypeId { get; } Property Value Type System.Int32 Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messaging.IEnvelope.html": {
    "href": "dotnet-api/code/EventStore.Core.Messaging.IEnvelope.html",
    "title": "Interface IEnvelope | Event Store",
    "keywords": "Interface IEnvelope Namespace : EventStore.Core.Messaging Assembly : EventStore.Core.dll Syntax public interface IEnvelope Methods ReplyWith<T>(T) Declaration void ReplyWith<T>(T message) where T : Message Parameters Type Name T message Type Parameters Name Description T Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messaging.Forwarder.html": {
    "href": "dotnet-api/code/EventStore.Core.Messaging.Forwarder.html",
    "title": "Class Forwarder | Event Store",
    "keywords": "Class Forwarder Inheritance System.Object Forwarder Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messaging Assembly : EventStore.Core.dll Syntax public static class Forwarder Methods Create<T>(IPublisher) Creates a message handler publishing all incoming messages on destination. Declaration public static IHandle<T> Create<T>(IPublisher to) where T : Message Parameters Type Name IPublisher to Returns Type Description IHandle <T> Type Parameters Name Description T CreateBalancing<T>(IPublisher[]) Creates a message handler publishing all incoming messages onto one of the destinations. Declaration public static IHandle<T> CreateBalancing<T>(params IPublisher[] to) where T : Message Parameters Type Name IPublisher [] to Returns Type Description IHandle <T> Type Parameters Name Description T CreateTracing<T>(IPublisher, String) Declaration public static IHandle<T> CreateTracing<T>(IPublisher to, string prefix) where T : Message Parameters Type Name IPublisher to System.String prefix Returns Type Description IHandle <T> Type Parameters Name Description T"
  },
  "dotnet-api/code/EventStore.Core.Messaging.CallbackEnvelope.html": {
    "href": "dotnet-api/code/EventStore.Core.Messaging.CallbackEnvelope.html",
    "title": "Class CallbackEnvelope | Event Store",
    "keywords": "Class CallbackEnvelope Inheritance System.Object CallbackEnvelope Implements IEnvelope Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messaging Assembly : EventStore.Core.dll Syntax public class CallbackEnvelope : IEnvelope Constructors CallbackEnvelope(Action<Message>) Declaration public CallbackEnvelope(Action<Message> callback) Parameters Type Name System.Action < Message > callback Methods ReplyWith<T>(T) Declaration public void ReplyWith<T>(T message) where T : Message Parameters Type Name T message Type Parameters Name Description T Implements IEnvelope Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.html",
    "title": "Namespace EventStore.Core.Messages | Event Store",
    "keywords": "Namespace EventStore.Core.Messages Classes ClientMessage ClientMessage.ClientIdentified ClientMessage.ConnectToPersistentSubscription ClientMessage.CreatePersistentSubscription ClientMessage.CreatePersistentSubscriptionCompleted ClientMessage.DeletePersistentSubscription ClientMessage.DeletePersistentSubscriptionCompleted ClientMessage.DeleteStream ClientMessage.DeleteStreamCompleted ClientMessage.IdentifyClient ClientMessage.MergeIndexes ClientMessage.MergeIndexesResponse ClientMessage.NotHandled ClientMessage.PersistentSubscriptionAckEvents ClientMessage.PersistentSubscriptionConfirmation ClientMessage.PersistentSubscriptionNackEvents ClientMessage.PersistentSubscriptionNakEvents ClientMessage.PersistentSubscriptionStreamEventAppeared ClientMessage.ReadAllEventsBackward ClientMessage.ReadAllEventsBackwardCompleted ClientMessage.ReadAllEventsForward ClientMessage.ReadAllEventsForwardCompleted ClientMessage.ReadEvent ClientMessage.ReadEventCompleted ClientMessage.ReadNextNPersistentMessages ClientMessage.ReadNextNPersistentMessagesCompleted ClientMessage.ReadRequestMessage ClientMessage.ReadResponseMessage ClientMessage.ReadStreamEventsBackward ClientMessage.ReadStreamEventsBackwardCompleted ClientMessage.ReadStreamEventsForward ClientMessage.ReadStreamEventsForwardCompleted ClientMessage.ReplayAllParkedMessages ClientMessage.ReplayMessagesReceived ClientMessage.ReplayParkedMessage ClientMessage.RequestShutdown ClientMessage.ScavengeDatabase ClientMessage.ScavengeDatabaseResponse ClientMessage.StopDatabaseScavenge ClientMessage.StreamEventAppeared ClientMessage.SubscribeToStream ClientMessage.SubscriptionConfirmation ClientMessage.SubscriptionDropped ClientMessage.TcpForwardMessage ClientMessage.TransactionCommit ClientMessage.TransactionCommitCompleted ClientMessage.TransactionStart ClientMessage.TransactionStartCompleted ClientMessage.TransactionWrite ClientMessage.TransactionWriteCompleted ClientMessage.UnsubscribeFromStream ClientMessage.UpdatePersistentSubscription ClientMessage.UpdatePersistentSubscriptionCompleted ClientMessage.WriteEvents ClientMessage.WriteEventsCompleted ClientMessage.WriteRequestMessage ClusterInfoDto ElectionMessage ElectionMessage.Accept ElectionMessage.ElectionsDone ElectionMessage.ElectionsTimedOut ElectionMessage.Prepare ElectionMessage.PrepareOk ElectionMessage.Proposal ElectionMessage.SendViewChangeProof ElectionMessage.StartElections ElectionMessage.ViewChange ElectionMessage.ViewChangeProof ElectionMessageDto ElectionMessageDto.AcceptDto ElectionMessageDto.PrepareDto ElectionMessageDto.PrepareOkDto ElectionMessageDto.ProposalDto ElectionMessageDto.ViewChangeDto ElectionMessageDto.ViewChangeProofDto GossipMessage GossipMessage.Gossip GossipMessage.GossipReceived GossipMessage.GossipSendFailed GossipMessage.GossipUpdated GossipMessage.GotGossipSeedSources GossipMessage.RetrieveGossipSeedSources GossipMessage.SendGossip HttpClientMessageDto HttpClientMessageDto.ClientEventDynamic HttpClientMessageDto.ClientEventText HttpClientMessageDto.ReadEventCompletedText HttpClientMessageDto.WriteEventsDynamic HttpMessage HttpMessage.DeniedToHandle HttpMessage.HttpBeginSend HttpMessage.HttpCompleted HttpMessage.HttpEndSend HttpMessage.HttpSend HttpMessage.HttpSendMessage HttpMessage.HttpSendPart HttpMessage.PurgeTimedOutRequests HttpMessage.SendOverHttp HttpMessage.TextMessage InternalAuthenticationProviderMessages InternalAuthenticationProviderMessages.ResetPasswordCache MemberInfoDto MergeIndexesResultDto MonitoringMessage MonitoringMessage.ConnectionInfo MonitoringMessage.GetAllPersistentSubscriptionStats MonitoringMessage.GetFreshStats MonitoringMessage.GetFreshStatsCompleted MonitoringMessage.GetFreshTcpConnectionStats MonitoringMessage.GetFreshTcpConnectionStatsCompleted MonitoringMessage.GetPersistentSubscriptionStats MonitoringMessage.GetPersistentSubscriptionStatsCompleted MonitoringMessage.GetStreamPersistentSubscriptionStats MonitoringMessage.InternalStatsRequest MonitoringMessage.InternalStatsRequestResponse MonitoringMessage.SubscriptionInfo MonitoringMessage.TcpConnectionStats ReplicationMessage ReplicationMessage.AckLogPosition ReplicationMessage.CloneAssignment ReplicationMessage.CreateChunk ReplicationMessage.DataChunkBulk ReplicationMessage.GetReplicationStats ReplicationMessage.GetReplicationStatsCompleted ReplicationMessage.RawChunkBulk ReplicationMessage.ReconnectToMaster ReplicationMessage.ReplicaLogPositionAck ReplicationMessage.ReplicaSubscribed ReplicationMessage.ReplicaSubscriptionRequest ReplicationMessage.ReplicaSubscriptionRetry ReplicationMessage.ReplicationStats ReplicationMessage.SlaveAssignment ReplicationMessage.SubscribeReplica ReplicationMessage.SubscribeToMaster ReplicationMessageDto ReplicationMessageDto.CloneAssignment ReplicationMessageDto.CommitAck ReplicationMessageDto.CreateChunk ReplicationMessageDto.DataChunkBulk ReplicationMessageDto.Epoch ReplicationMessageDto.PrepareAck ReplicationMessageDto.RawChunkBulk ReplicationMessageDto.ReplicaLogPositionAck ReplicationMessageDto.ReplicaSubscribed ReplicationMessageDto.ReplicaSubscriptionRetry ReplicationMessageDto.SlaveAssignment ReplicationMessageDto.SubscribeReplica ScavengeResultDto StorageMessage StorageMessage.AlreadyCommitted StorageMessage.BatchLogExpiredMessages StorageMessage.CheckStreamAccess StorageMessage.CheckStreamAccessCompleted StorageMessage.CommitAck StorageMessage.CommitReplicated StorageMessage.EventCommitted StorageMessage.InvalidTransaction StorageMessage.PrepareAck StorageMessage.RequestCompleted StorageMessage.RequestManagerTimerTick StorageMessage.StreamDeleted StorageMessage.TfEofAtNonCommitRecord StorageMessage.WriteCommit StorageMessage.WriteDelete StorageMessage.WritePrepares StorageMessage.WriteTransactionData StorageMessage.WriteTransactionPrepare StorageMessage.WriteTransactionStart StorageMessage.WrongExpectedVersion SubscriptionMessage SubscriptionMessage.CheckPollTimeout SubscriptionMessage.PersistentSubscriptionTimerTick SubscriptionMessage.PollStream SystemMessage SystemMessage.BecomeCatchingUp SystemMessage.BecomeClone SystemMessage.BecomeMaster SystemMessage.BecomePreMaster SystemMessage.BecomePreReplica SystemMessage.BecomeShutdown SystemMessage.BecomeShuttingDown SystemMessage.BecomeSlave SystemMessage.BecomeUnknown SystemMessage.ChaserCaughtUp SystemMessage.EpochWritten SystemMessage.NoQuorumMessage SystemMessage.ReplicaStateMessage SystemMessage.RequestForwardingTimerTick SystemMessage.ServiceInitialized SystemMessage.ServiceShutdown SystemMessage.ShutdownTimeout SystemMessage.StateChangeMessage SystemMessage.SubSystemInitialized SystemMessage.SystemCoreReady SystemMessage.SystemInit SystemMessage.SystemReady SystemMessage.SystemStart SystemMessage.VNodeConnectionEstablished SystemMessage.VNodeConnectionLost SystemMessage.WaitForChaserToCatchUp SystemMessage.WriteEpoch TcpClientMessageDto TcpClientMessageDto.ClientIdentified TcpClientMessageDto.ConnectToPersistentSubscription TcpClientMessageDto.CreatePersistentSubscription TcpClientMessageDto.CreatePersistentSubscriptionCompleted TcpClientMessageDto.DeletePersistentSubscription TcpClientMessageDto.DeletePersistentSubscriptionCompleted TcpClientMessageDto.DeleteStream TcpClientMessageDto.DeleteStreamCompleted TcpClientMessageDto.EventRecord TcpClientMessageDto.IdentifyClient TcpClientMessageDto.NewEvent TcpClientMessageDto.NotHandled TcpClientMessageDto.NotHandled.MasterInfo TcpClientMessageDto.PersistentSubscriptionAckEvents TcpClientMessageDto.PersistentSubscriptionConfirmation TcpClientMessageDto.PersistentSubscriptionNakEvents TcpClientMessageDto.PersistentSubscriptionStreamEventAppeared TcpClientMessageDto.ReadAllEvents TcpClientMessageDto.ReadAllEventsCompleted TcpClientMessageDto.ReadEvent TcpClientMessageDto.ReadEventCompleted TcpClientMessageDto.ReadStreamEvents TcpClientMessageDto.ReadStreamEventsCompleted TcpClientMessageDto.ResolvedEvent TcpClientMessageDto.ResolvedIndexedEvent TcpClientMessageDto.ScavengeDatabase TcpClientMessageDto.ScavengeDatabaseResponse TcpClientMessageDto.StreamEventAppeared TcpClientMessageDto.SubscribeToStream TcpClientMessageDto.SubscriptionConfirmation TcpClientMessageDto.SubscriptionDropped TcpClientMessageDto.TransactionCommit TcpClientMessageDto.TransactionCommitCompleted TcpClientMessageDto.TransactionStart TcpClientMessageDto.TransactionStartCompleted TcpClientMessageDto.TransactionWrite TcpClientMessageDto.TransactionWriteCompleted TcpClientMessageDto.UnsubscribeFromStream TcpClientMessageDto.UpdatePersistentSubscription TcpClientMessageDto.UpdatePersistentSubscriptionCompleted TcpClientMessageDto.WriteEvents TcpClientMessageDto.WriteEventsCompleted TcpMessage TcpMessage.Authenticated TcpMessage.ConnectionClosed TcpMessage.ConnectionEstablished TcpMessage.Heartbeat TcpMessage.HeartbeatTimeout TcpMessage.NotAuthenticated TcpMessage.NotReady TcpMessage.PongMessage TcpMessage.TcpSend UserManagementMessage UserManagementMessage.AllUserDetailsResult UserManagementMessage.AllUserDetailsResultHttpFormatted UserManagementMessage.ChangePassword UserManagementMessage.Create UserManagementMessage.Delete UserManagementMessage.Disable UserManagementMessage.Enable UserManagementMessage.Get UserManagementMessage.GetAll UserManagementMessage.RequestMessage UserManagementMessage.ResetPassword UserManagementMessage.ResponseMessage UserManagementMessage.Update UserManagementMessage.UpdateResult UserManagementMessage.UserData UserManagementMessage.UserDataHttpFormated UserManagementMessage.UserDetailsResult UserManagementMessage.UserDetailsResultHttpFormatted UserManagementMessage.UserManagementRequestMessage UserManagementMessage.UserManagementServiceInitialized Interfaces IQueueAffineMessage ReplicationMessage.IReplicationMessage StorageMessage.IFlushableMessage StorageMessage.IMasterWriteMessage StorageMessage.IPreconditionedWriteMessage Enums ClientMessage.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult ClientMessage.DeletePersistentSubscriptionCompleted.DeletePersistentSubscriptionResult ClientMessage.MergeIndexesResponse.MergeIndexesResult ClientMessage.PersistentSubscriptionNackEvents.NakAction ClientMessage.ReadNextNPersistentMessagesCompleted.ReadNextNPersistentMessagesResult ClientMessage.ReplayMessagesReceived.ReplayMessagesReceivedResult ClientMessage.ScavengeDatabaseResponse.ScavengeResult ClientMessage.UpdatePersistentSubscriptionCompleted.UpdatePersistentSubscriptionResult DenialReason MonitoringMessage.GetPersistentSubscriptionStatsCompleted.OperationStatus OperationResult TcpClientMessageDto.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult TcpClientMessageDto.DeletePersistentSubscriptionCompleted.DeletePersistentSubscriptionResult TcpClientMessageDto.NotHandled.NotHandledReason TcpClientMessageDto.OperationResult TcpClientMessageDto.PersistentSubscriptionNakEvents.NakAction TcpClientMessageDto.ReadAllEventsCompleted.ReadAllResult TcpClientMessageDto.ReadEventCompleted.ReadEventResult TcpClientMessageDto.ReadStreamEventsCompleted.ReadStreamResult TcpClientMessageDto.ScavengeDatabaseResponse.ScavengeResult TcpClientMessageDto.SubscriptionDropped.SubscriptionDropReason TcpClientMessageDto.UpdatePersistentSubscriptionCompleted.UpdatePersistentSubscriptionResult UserManagementMessage.Error"
  },
  "dotnet-api/code/EventStore.Core.Messages.TcpMessage.PongMessage.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.TcpMessage.PongMessage.html",
    "title": "Class TcpMessage.PongMessage | Event Store",
    "keywords": "Class TcpMessage.PongMessage Inheritance System.Object Message TcpMessage.PongMessage Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class PongMessage : Message Constructors PongMessage(Guid, Byte[]) Declaration public PongMessage(Guid correlationId, byte[] payload) Parameters Type Name System.Guid correlationId System.Byte [] payload Fields CorrelationId Declaration public readonly Guid CorrelationId Field Value Type System.Guid Payload Declaration public readonly byte[] Payload Field Value Type System.Byte [] Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.TcpMessage.NotReady.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.TcpMessage.NotReady.html",
    "title": "Class TcpMessage.NotReady | Event Store",
    "keywords": "Class TcpMessage.NotReady Inheritance System.Object Message TcpMessage.NotReady Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class NotReady : Message Constructors NotReady(Guid, String) Declaration public NotReady(Guid correlationId, string reason) Parameters Type Name System.Guid correlationId System.String reason Fields CorrelationId Declaration public readonly Guid CorrelationId Field Value Type System.Guid Reason Declaration public readonly string Reason Field Value Type System.String Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.BadConfigDataException.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.BadConfigDataException.html",
    "title": "Class BadConfigDataException | Event Store",
    "keywords": "Class BadConfigDataException Inheritance System.Object System.Exception BadConfigDataException Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Services.PersistentSubscription Assembly : EventStore.Core.dll Syntax public class BadConfigDataException : Exception, _Exception, ISerializable Constructors BadConfigDataException(String, Exception) Declaration public BadConfigDataException(string message, Exception inner) Parameters Type Name System.String message System.Exception inner Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Monitoring.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Monitoring.html",
    "title": "Namespace EventStore.Core.Services.Monitoring | Event Store",
    "keywords": "Namespace EventStore.Core.Services.Monitoring Classes MonitoringService StatsCollectorEnvelope SystemStatsHelper Enums StatsStorage"
  },
  "dotnet-api/code/EventStore.Core.Services.Monitoring.Utils.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Monitoring.Utils.html",
    "title": "Namespace EventStore.Core.Services.Monitoring.Utils | Event Store",
    "keywords": "Namespace EventStore.Core.Services.Monitoring.Utils Classes StatsCsvEncoder"
  },
  "dotnet-api/code/EventStore.Core.Services.Monitoring.Utils.StatsCsvEncoder.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Monitoring.Utils.StatsCsvEncoder.html",
    "title": "Class StatsCsvEncoder | Event Store",
    "keywords": "Class StatsCsvEncoder Inheritance System.Object StatsCsvEncoder Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Monitoring.Utils Assembly : EventStore.Core.dll Syntax public static class StatsCsvEncoder Methods GetHeader(Dictionary<String, Object>) Declaration public static string GetHeader(Dictionary<string, object> stats) Parameters Type Name System.Collections.Generic.Dictionary < System.String , System.Object > stats Returns Type Description System.String GetLine(Dictionary<String, Object>) Declaration public static string GetLine(Dictionary<string, object> stats) Parameters Type Name System.Collections.Generic.Dictionary < System.String , System.Object > stats Returns Type Description System.String"
  },
  "dotnet-api/code/EventStore.Core.Services.Monitoring.SystemStatsHelper.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Monitoring.SystemStatsHelper.html",
    "title": "Class SystemStatsHelper | Event Store",
    "keywords": "Class SystemStatsHelper Inheritance System.Object SystemStatsHelper Implements System.IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Monitoring Assembly : EventStore.Core.dll Syntax public class SystemStatsHelper : IDisposable Constructors SystemStatsHelper(ILogger, ICheckpoint, String) Declaration public SystemStatsHelper(ILogger log, ICheckpoint writerCheckpoint, string dbPath) Parameters Type Name ILogger log ICheckpoint writerCheckpoint System.String dbPath Methods Dispose() Declaration public void Dispose() GetSystemStats() Declaration public IDictionary<string, object> GetSystemStats() Returns Type Description System.Collections.Generic.IDictionary < System.String , System.Object > Implements System.IDisposable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Monitoring.StatsStorage.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Monitoring.StatsStorage.html",
    "title": "Enum StatsStorage | Event Store",
    "keywords": "Enum StatsStorage Namespace : EventStore.Core.Services.Monitoring Assembly : EventStore.Core.dll Syntax [Flags] public enum StatsStorage Fields Name Description File None Stream StreamAndFile Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<StatsStorage>() ProtobufExtensions.Serialize<StatsStorage>() ProtobufExtensions.SerializeToArray<StatsStorage>()"
  },
  "dotnet-api/code/EventStore.Core.Messages.MonitoringMessage.GetFreshStats.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.MonitoringMessage.GetFreshStats.html",
    "title": "Class MonitoringMessage.GetFreshStats | Event Store",
    "keywords": "Class MonitoringMessage.GetFreshStats Inheritance System.Object Message MonitoringMessage.GetFreshStats Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class GetFreshStats : Message Constructors GetFreshStats(IEnvelope, Func<Dictionary<String, Object>, Dictionary<String, Object>>, Boolean, Boolean) Declaration public GetFreshStats(IEnvelope envelope, Func<Dictionary<string, object>, Dictionary<string, object>> statsSelector, bool useMetadata, bool useGrouping) Parameters Type Name IEnvelope envelope System.Func < System.Collections.Generic.Dictionary < System.String , System.Object >, System.Collections.Generic.Dictionary < System.String , System.Object >> statsSelector System.Boolean useMetadata System.Boolean useGrouping Fields Envelope Declaration public readonly IEnvelope Envelope Field Value Type IEnvelope StatsSelector Declaration public readonly Func<Dictionary<string, object>, Dictionary<string, object>> StatsSelector Field Value Type System.Func < System.Collections.Generic.Dictionary < System.String , System.Object >, System.Collections.Generic.Dictionary < System.String , System.Object >> UseGrouping Declaration public readonly bool UseGrouping Field Value Type System.Boolean UseMetadata Declaration public readonly bool UseMetadata Field Value Type System.Boolean Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.MonitoringMessage.GetAllPersistentSubscriptionStats.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.MonitoringMessage.GetAllPersistentSubscriptionStats.html",
    "title": "Class MonitoringMessage.GetAllPersistentSubscriptionStats | Event Store",
    "keywords": "Class MonitoringMessage.GetAllPersistentSubscriptionStats Inheritance System.Object Message MonitoringMessage.GetAllPersistentSubscriptionStats Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class GetAllPersistentSubscriptionStats : Message Constructors GetAllPersistentSubscriptionStats(IEnvelope) Declaration public GetAllPersistentSubscriptionStats(IEnvelope envelope) Parameters Type Name IEnvelope envelope Fields Envelope Declaration public readonly IEnvelope Envelope Field Value Type IEnvelope Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.MonitoringMessage.ConnectionInfo.html",
    "title": "Class MonitoringMessage.ConnectionInfo | Event Store",
    "keywords": "Class MonitoringMessage.ConnectionInfo Inheritance System.Object MonitoringMessage.ConnectionInfo Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class ConnectionInfo Properties AvailableSlots Declaration public int AvailableSlots { get; set; } Property Value Type System.Int32 AverageItemsPerSecond Declaration public int AverageItemsPerSecond { get; set; } Property Value Type System.Int32 CountSinceLastMeasurement Declaration public long CountSinceLastMeasurement { get; set; } Property Value Type System.Int64 From Declaration public string From { get; set; } Property Value Type System.String InFlightMessages Declaration public int InFlightMessages { get; set; } Property Value Type System.Int32 ObservedMeasurements Declaration public List<Measurement> ObservedMeasurements { get; set; } Property Value Type System.Collections.Generic.List < Measurement > TotalItems Declaration public long TotalItems { get; set; } Property Value Type System.Int64 Username Declaration public string Username { get; set; } Property Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.MergeIndexesResultDto.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.MergeIndexesResultDto.html",
    "title": "Class MergeIndexesResultDto | Event Store",
    "keywords": "Class MergeIndexesResultDto Inheritance System.Object MergeIndexesResultDto Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class MergeIndexesResultDto Constructors MergeIndexesResultDto() Declaration public MergeIndexesResultDto() MergeIndexesResultDto(String) Declaration public MergeIndexesResultDto(string mergeIndexesId) Parameters Type Name System.String mergeIndexesId Properties MergeIndexesId Declaration public string MergeIndexesId { get; set; } Property Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.MemberInfoDto.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.MemberInfoDto.html",
    "title": "Class MemberInfoDto | Event Store",
    "keywords": "Class MemberInfoDto Inheritance System.Object MemberInfoDto Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class MemberInfoDto Constructors MemberInfoDto() Declaration public MemberInfoDto() MemberInfoDto(MemberInfo) Declaration public MemberInfoDto(MemberInfo member) Parameters Type Name MemberInfo member Properties ChaserCheckpoint Declaration public long ChaserCheckpoint { get; set; } Property Value Type System.Int64 EpochId Declaration public Guid EpochId { get; set; } Property Value Type System.Guid EpochNumber Declaration public int EpochNumber { get; set; } Property Value Type System.Int32 EpochPosition Declaration public long EpochPosition { get; set; } Property Value Type System.Int64 ExternalHttpIp Declaration public string ExternalHttpIp { get; set; } Property Value Type System.String ExternalHttpPort Declaration public int ExternalHttpPort { get; set; } Property Value Type System.Int32 ExternalSecureTcpPort Declaration public int ExternalSecureTcpPort { get; set; } Property Value Type System.Int32 ExternalTcpIp Declaration public string ExternalTcpIp { get; set; } Property Value Type System.String ExternalTcpPort Declaration public int ExternalTcpPort { get; set; } Property Value Type System.Int32 InstanceId Declaration public Guid InstanceId { get; set; } Property Value Type System.Guid InternalHttpIp Declaration public string InternalHttpIp { get; set; } Property Value Type System.String InternalHttpPort Declaration public int InternalHttpPort { get; set; } Property Value Type System.Int32 InternalSecureTcpPort Declaration public int InternalSecureTcpPort { get; set; } Property Value Type System.Int32 InternalTcpIp Declaration public string InternalTcpIp { get; set; } Property Value Type System.String InternalTcpPort Declaration public int InternalTcpPort { get; set; } Property Value Type System.Int32 IsAlive Declaration public bool IsAlive { get; set; } Property Value Type System.Boolean LastCommitPosition Declaration public long LastCommitPosition { get; set; } Property Value Type System.Int64 NodePriority Declaration public int NodePriority { get; set; } Property Value Type System.Int32 State Declaration public VNodeState State { get; set; } Property Value Type VNodeState TimeStamp Declaration public DateTime TimeStamp { get; set; } Property Value Type System.DateTime WriterCheckpoint Declaration public long WriterCheckpoint { get; set; } Property Value Type System.Int64 Methods ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ElectionMessageDto.PrepareDto.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ElectionMessageDto.PrepareDto.html",
    "title": "Class ElectionMessageDto.PrepareDto | Event Store",
    "keywords": "Class ElectionMessageDto.PrepareDto Inheritance System.Object ElectionMessageDto.PrepareDto Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class PrepareDto Constructors PrepareDto() Declaration public PrepareDto() PrepareDto(ElectionMessage.Prepare) Declaration public PrepareDto(ElectionMessage.Prepare message) Parameters Type Name ElectionMessage.Prepare message Properties ServerId Declaration public Guid ServerId { get; set; } Property Value Type System.Guid ServerInternalHttpAddress Declaration public string ServerInternalHttpAddress { get; set; } Property Value Type System.String ServerInternalHttpPort Declaration public int ServerInternalHttpPort { get; set; } Property Value Type System.Int32 View Declaration public int View { get; set; } Property Value Type System.Int32 Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ElectionMessageDto.AcceptDto.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ElectionMessageDto.AcceptDto.html",
    "title": "Class ElectionMessageDto.AcceptDto | Event Store",
    "keywords": "Class ElectionMessageDto.AcceptDto Inheritance System.Object ElectionMessageDto.AcceptDto Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class AcceptDto Constructors AcceptDto() Declaration public AcceptDto() AcceptDto(ElectionMessage.Accept) Declaration public AcceptDto(ElectionMessage.Accept message) Parameters Type Name ElectionMessage.Accept message Properties MasterId Declaration public Guid MasterId { get; set; } Property Value Type System.Guid MasterInternalHttpAddress Declaration public string MasterInternalHttpAddress { get; set; } Property Value Type System.String MasterInternalHttpPort Declaration public int MasterInternalHttpPort { get; set; } Property Value Type System.Int32 ServerId Declaration public Guid ServerId { get; set; } Property Value Type System.Guid ServerInternalHttpAddress Declaration public string ServerInternalHttpAddress { get; set; } Property Value Type System.String ServerInternalHttpPort Declaration public int ServerInternalHttpPort { get; set; } Property Value Type System.Int32 View Declaration public int View { get; set; } Property Value Type System.Int32 Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ElectionMessage.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ElectionMessage.html",
    "title": "Class ElectionMessage | Event Store",
    "keywords": "Class ElectionMessage Inheritance System.Object ElectionMessage Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public static class ElectionMessage"
  },
  "dotnet-api/code/EventStore.Common.Utils.BooleanTypeConverter.html": {
    "href": "dotnet-api/code/EventStore.Common.Utils.BooleanTypeConverter.html",
    "title": "Class BooleanTypeConverter | Event Store",
    "keywords": "Class BooleanTypeConverter Inheritance System.Object System.ComponentModel.TypeConverter System.ComponentModel.BooleanConverter BooleanTypeConverter Inherited Members System.ComponentModel.BooleanConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext) System.ComponentModel.BooleanConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext) System.ComponentModel.BooleanConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext) System.ComponentModel.TypeConverter.CanConvertFrom(System.Type) System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type) System.ComponentModel.TypeConverter.CanConvertTo(System.Type) System.ComponentModel.TypeConverter.ConvertFrom(System.Object) System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext, System.String) System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String) System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.String) System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.String) System.ComponentModel.TypeConverter.ConvertFromString(System.String) System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object, System.Type) System.ComponentModel.TypeConverter.ConvertTo(System.Object, System.Type) System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext, System.Object) System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object) System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object) System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext, System.Object) System.ComponentModel.TypeConverter.ConvertToString(System.Object) System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary) System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext, System.Collections.IDictionary) System.ComponentModel.TypeConverter.GetConvertFromException(System.Object) System.ComponentModel.TypeConverter.GetConvertToException(System.Object, System.Type) System.ComponentModel.TypeConverter.GetCreateInstanceSupported() System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext) System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext, System.Object) System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext, System.Object, System.Attribute[]) System.ComponentModel.TypeConverter.GetProperties(System.Object) System.ComponentModel.TypeConverter.GetPropertiesSupported() System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext) System.ComponentModel.TypeConverter.GetStandardValues() System.ComponentModel.TypeConverter.GetStandardValuesExclusive() System.ComponentModel.TypeConverter.GetStandardValuesSupported() System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext, System.Object) System.ComponentModel.TypeConverter.IsValid(System.Object) System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection, System.String[]) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Common.Utils Assembly : EventStore.Common.dll Syntax public class BooleanTypeConverter : BooleanConverter Methods CanConvertFrom(ITypeDescriptorContext, Type) Declaration public override bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType) Parameters Type Name System.ComponentModel.ITypeDescriptorContext context System.Type sourceType Returns Type Description System.Boolean Overrides System.ComponentModel.BooleanConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type) ConvertFrom(ITypeDescriptorContext, CultureInfo, Object) Declaration public override object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value) Parameters Type Name System.ComponentModel.ITypeDescriptorContext context System.Globalization.CultureInfo culture System.Object value Returns Type Description System.Object Overrides System.ComponentModel.BooleanConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object) Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Common.Options.IOptions.html": {
    "href": "dotnet-api/code/EventStore.Common.Options.IOptions.html",
    "title": "Interface IOptions | Event Store",
    "keywords": "Interface IOptions Namespace : EventStore.Common.Options Assembly : EventStore.Common.dll Syntax public interface IOptions Properties Config Declaration string Config { get; } Property Value Type System.String Defines Declaration string[] Defines { get; } Property Value Type System.String [] Force Declaration bool Force { get; } Property Value Type System.Boolean Help Declaration bool Help { get; } Property Value Type System.Boolean Log Declaration string Log { get; } Property Value Type System.String Version Declaration bool Version { get; } Property Value Type System.Boolean WhatIf Declaration bool WhatIf { get; } Property Value Type System.Boolean Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Common.Options.EventStoreOptions.html": {
    "href": "dotnet-api/code/EventStore.Common.Options.EventStoreOptions.html",
    "title": "Class EventStoreOptions | Event Store",
    "keywords": "Class EventStoreOptions Inheritance System.Object EventStoreOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Common.Options Assembly : EventStore.Common.dll Syntax public class EventStoreOptions Methods DumpOptions() Declaration public static string DumpOptions() Returns Type Description System.String DumpOptionsStructured() Declaration public static object DumpOptionsStructured() Returns Type Description System.Object GetUsage<TOptions>() Declaration public static string GetUsage<TOptions>() Returns Type Description System.String Type Parameters Name Description TOptions Parse<TOptions>(String, String) Declaration public static TOptions Parse<TOptions>(string configFile, string sectionName = \"\") where TOptions : class, new() Parameters Type Name System.String configFile System.String sectionName Returns Type Description TOptions Type Parameters Name Description TOptions Parse<TOptions>(String[], String, String) Declaration public static TOptions Parse<TOptions>(string[] args, string environmentPrefix, string defaultConfigLocation = null) where TOptions : class, IOptions, new() Parameters Type Name System.String [] args System.String environmentPrefix System.String defaultConfigLocation Returns Type Description TOptions Type Parameters Name Description TOptions Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Common.Log.NLogValueFormatter.html": {
    "href": "dotnet-api/code/EventStore.Common.Log.NLogValueFormatter.html",
    "title": "Class NLogValueFormatter | Event Store",
    "keywords": "Class NLogValueFormatter Inheritance System.Object NLogValueFormatter Implements NLog.IValueFormatter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Common.Log Assembly : EventStore.Common.dll Syntax public class NLogValueFormatter : IValueFormatter Constructors NLogValueFormatter(IValueFormatter, Boolean) Declaration public NLogValueFormatter(IValueFormatter originalFormatter, bool isStructured) Parameters Type Name NLog.IValueFormatter originalFormatter System.Boolean isStructured Methods FormatValue(Object, String, CaptureType, IFormatProvider, StringBuilder) Declaration public bool FormatValue(object value, string format, CaptureType captureType, IFormatProvider formatProvider, StringBuilder builder) Parameters Type Name System.Object value System.String format NLog.MessageTemplates.CaptureType captureType System.IFormatProvider formatProvider System.Text.StringBuilder builder Returns Type Description System.Boolean Implements NLog.IValueFormatter Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Common.Log.NLogDirectoryLayoutRendered.html": {
    "href": "dotnet-api/code/EventStore.Common.Log.NLogDirectoryLayoutRendered.html",
    "title": "Class NLogDirectoryLayoutRendered | Event Store",
    "keywords": "Class NLogDirectoryLayoutRendered Inheritance System.Object NLog.LayoutRenderers.LayoutRenderer NLogDirectoryLayoutRendered Implements System.IDisposable Inherited Members NLog.LayoutRenderers.LayoutRenderer.ToString() NLog.LayoutRenderers.LayoutRenderer.Dispose() NLog.LayoutRenderers.LayoutRenderer.Render(NLog.LogEventInfo) NLog.LayoutRenderers.LayoutRenderer.InitializeLayoutRenderer() NLog.LayoutRenderers.LayoutRenderer.CloseLayoutRenderer() NLog.LayoutRenderers.LayoutRenderer.Dispose(System.Boolean) NLog.LayoutRenderers.LayoutRenderer.GetFormatProvider(NLog.LogEventInfo, System.IFormatProvider) NLog.LayoutRenderers.LayoutRenderer.GetCulture(NLog.LogEventInfo, System.Globalization.CultureInfo) NLog.LayoutRenderers.LayoutRenderer.Register<T>(System.String) NLog.LayoutRenderers.LayoutRenderer.Register(System.String, System.Type) NLog.LayoutRenderers.LayoutRenderer.Register(System.String, System.Func<NLog.LogEventInfo, System.Object>) NLog.LayoutRenderers.LayoutRenderer.Register(System.String, System.Func<NLog.LogEventInfo, NLog.Config.LoggingConfiguration, System.Object>) NLog.LayoutRenderers.LayoutRenderer.LoggingConfiguration System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Common.Log Assembly : EventStore.Common.dll Syntax [LayoutRenderer(\"logsdir\")] public class NLogDirectoryLayoutRendered : LayoutRenderer, ISupportsInitialize, IRenderable, IDisposable Methods Append(StringBuilder, LogEventInfo) Declaration protected override void Append(StringBuilder builder, LogEventInfo logEvent) Parameters Type Name System.Text.StringBuilder builder NLog.LogEventInfo logEvent Overrides NLog.LayoutRenderers.LayoutRenderer.Append(System.Text.StringBuilder, NLog.LogEventInfo) Implements System.IDisposable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Common.Log.ILogger.html": {
    "href": "dotnet-api/code/EventStore.Common.Log.ILogger.html",
    "title": "Interface ILogger | Event Store",
    "keywords": "Interface ILogger Namespace : EventStore.Common.Log Assembly : EventStore.Common.dll Syntax public interface ILogger Methods Debug(String, Object[]) Declaration void Debug(string format, params object[] args) Parameters Type Name System.String format System.Object [] args DebugException(Exception, String, Object[]) Declaration void DebugException(Exception exc, string format, params object[] args) Parameters Type Name System.Exception exc System.String format System.Object [] args Error(String, Object[]) Declaration void Error(string format, params object[] args) Parameters Type Name System.String format System.Object [] args ErrorException(Exception, String, Object[]) Declaration void ErrorException(Exception exc, string format, params object[] args) Parameters Type Name System.Exception exc System.String format System.Object [] args Fatal(String, Object[]) Declaration void Fatal(string format, params object[] args) Parameters Type Name System.String format System.Object [] args FatalException(Exception, String, Object[]) Declaration void FatalException(Exception exc, string format, params object[] args) Parameters Type Name System.Exception exc System.String format System.Object [] args Flush(Nullable<TimeSpan>) Declaration void Flush(TimeSpan? maxTimeToWait = default(TimeSpan? )) Parameters Type Name System.Nullable < System.TimeSpan > maxTimeToWait Info(String, Object[]) Declaration void Info(string format, params object[] args) Parameters Type Name System.String format System.Object [] args InfoException(Exception, String, Object[]) Declaration void InfoException(Exception exc, string format, params object[] args) Parameters Type Name System.Exception exc System.String format System.Object [] args Trace(String, Object[]) Declaration void Trace(string format, params object[] args) Parameters Type Name System.String format System.Object [] args TraceException(Exception, String, Object[]) Declaration void TraceException(Exception exc, string format, params object[] args) Parameters Type Name System.Exception exc System.String format System.Object [] args Warn(String, Object[]) Declaration void Warn(string format, params object[] args) Parameters Type Name System.String format System.Object [] args WarnException(Exception, String, Object[]) Declaration void WarnException(Exception exc, string format, params object[] args) Parameters Type Name System.Exception exc System.String format System.Object [] args Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Common.Exceptions.html": {
    "href": "dotnet-api/code/EventStore.Common.Exceptions.html",
    "title": "Namespace EventStore.Common.Exceptions | Event Store",
    "keywords": "Namespace EventStore.Common.Exceptions Classes ApplicationInitializationException"
  },
  "dotnet-api/code/EventStore.Common.Exceptions.ApplicationInitializationException.html": {
    "href": "dotnet-api/code/EventStore.Common.Exceptions.ApplicationInitializationException.html",
    "title": "Class ApplicationInitializationException | Event Store",
    "keywords": "Class ApplicationInitializationException Inheritance System.Object System.Exception ApplicationInitializationException Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Common.Exceptions Assembly : EventStore.Common.dll Syntax public class ApplicationInitializationException : Exception, _Exception, ISerializable Constructors ApplicationInitializationException(String) Declaration public ApplicationInitializationException(string message) Parameters Type Name System.String message ApplicationInitializationException(String, Exception) Declaration public ApplicationInitializationException(string message, Exception innerException) Parameters Type Name System.String message System.Exception innerException Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.ClusterNode.Program.html": {
    "href": "dotnet-api/code/EventStore.ClusterNode.Program.html",
    "title": "Class Program | Event Store",
    "keywords": "Class Program Inheritance System.Object ProgramBase < ClusterNodeOptions > Program Inherited Members ProgramBase<ClusterNodeOptions>.Log ProgramBase<ClusterNodeOptions>.Run(String[]) ProgramBase<ClusterNodeOptions>.GetCertificateStoreLocation(String) ProgramBase<ClusterNodeOptions>.GetCertificateStoreName(String) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.ClusterNode Assembly : EventStore.ClusterNode.dll Syntax public class Program : ProgramBase<ClusterNodeOptions> Methods Create(ClusterNodeOptions) Declaration protected override void Create(ClusterNodeOptions opts) Parameters Type Name ClusterNodeOptions opts Overrides EventStore.Core.ProgramBase<EventStore.ClusterNode.ClusterNodeOptions>.Create(EventStore.ClusterNode.ClusterNodeOptions) GetComponentName(ClusterNodeOptions) Declaration protected override string GetComponentName(ClusterNodeOptions options) Parameters Type Name ClusterNodeOptions options Returns Type Description System.String Overrides EventStore.Core.ProgramBase<EventStore.ClusterNode.ClusterNodeOptions>.GetComponentName(EventStore.ClusterNode.ClusterNodeOptions) GetIsStructuredLog(ClusterNodeOptions) Declaration protected override bool GetIsStructuredLog(ClusterNodeOptions options) Parameters Type Name ClusterNodeOptions options Returns Type Description System.Boolean Overrides EventStore.Core.ProgramBase<EventStore.ClusterNode.ClusterNodeOptions>.GetIsStructuredLog(EventStore.ClusterNode.ClusterNodeOptions) GetLogsDirectory(ClusterNodeOptions) Declaration protected override string GetLogsDirectory(ClusterNodeOptions options) Parameters Type Name ClusterNodeOptions options Returns Type Description System.String Overrides EventStore.Core.ProgramBase<EventStore.ClusterNode.ClusterNodeOptions>.GetLogsDirectory(EventStore.ClusterNode.ClusterNodeOptions) Main(String[]) Declaration public static void Main(string[] args) Parameters Type Name System.String [] args OnProgramExit() Declaration protected override void OnProgramExit() Overrides EventStore.Core.ProgramBase<EventStore.ClusterNode.ClusterNodeOptions>.OnProgramExit() PreInit(ClusterNodeOptions) Declaration protected override void PreInit(ClusterNodeOptions options) Parameters Type Name ClusterNodeOptions options Overrides EventStore.Core.ProgramBase<EventStore.ClusterNode.ClusterNodeOptions>.PreInit(EventStore.ClusterNode.ClusterNodeOptions) Start() Declaration protected override void Start() Overrides EventStore.Core.ProgramBase<EventStore.ClusterNode.ClusterNodeOptions>.Start() Stop() Declaration public override void Stop() Overrides EventStore.Core.ProgramBase<EventStore.ClusterNode.ClusterNodeOptions>.Stop() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.ClientAPI.Embedded.html": {
    "href": "dotnet-api/code/EventStore.ClientAPI.Embedded.html",
    "title": "Namespace EventStore.ClientAPI.Embedded | Event Store",
    "keywords": "Namespace EventStore.ClientAPI.Embedded Classes EmbeddedEventStoreConnection Contains factory methods to build a connection to an in-process EventStore EmbeddedVNodeBuilder Allows a client to build a ClusterVNode for use with the Embedded client API by specifying high level options rather than using the constructor of ClusterVNode directly."
  },
  "dotnet-api/code/EventStore.BufferManagement.html": {
    "href": "dotnet-api/code/EventStore.BufferManagement.html",
    "title": "Namespace EventStore.BufferManagement | Event Store",
    "keywords": "Namespace EventStore.BufferManagement Classes BufferManager A manager to handle buffers for the socket connections BufferPool BufferPoolStream UnableToAllocateBufferException UnableToCreateMemoryException"
  },
  "dotnet-api/code/EventStore.BufferManagement.BufferPoolStream.html": {
    "href": "dotnet-api/code/EventStore.BufferManagement.BufferPoolStream.html",
    "title": "Class BufferPoolStream | Event Store",
    "keywords": "Class BufferPoolStream Inheritance System.Object System.MarshalByRefObject System.IO.Stream BufferPoolStream Implements System.IDisposable Inherited Members System.IO.Stream.Null System.IO.Stream.BeginRead(System.Byte[], System.Int32, System.Int32, System.AsyncCallback, System.Object) System.IO.Stream.BeginWrite(System.Byte[], System.Int32, System.Int32, System.AsyncCallback, System.Object) System.IO.Stream.Close() System.IO.Stream.CopyTo(System.IO.Stream) System.IO.Stream.CopyTo(System.IO.Stream, System.Int32) System.IO.Stream.CopyToAsync(System.IO.Stream) System.IO.Stream.CopyToAsync(System.IO.Stream, System.Int32) System.IO.Stream.CopyToAsync(System.IO.Stream, System.Int32, System.Threading.CancellationToken) System.IO.Stream.CreateWaitHandle() System.IO.Stream.Dispose() System.IO.Stream.EndRead(System.IAsyncResult) System.IO.Stream.EndWrite(System.IAsyncResult) System.IO.Stream.FlushAsync() System.IO.Stream.FlushAsync(System.Threading.CancellationToken) System.IO.Stream.ObjectInvariant() System.IO.Stream.ReadAsync(System.Byte[], System.Int32, System.Int32) System.IO.Stream.ReadAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken) System.IO.Stream.ReadByte() System.IO.Stream.Synchronized(System.IO.Stream) System.IO.Stream.WriteAsync(System.Byte[], System.Int32, System.Int32) System.IO.Stream.WriteAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken) System.IO.Stream.WriteByte(System.Byte) System.IO.Stream.CanTimeout System.IO.Stream.ReadTimeout System.IO.Stream.WriteTimeout System.MarshalByRefObject.CreateObjRef(System.Type) System.MarshalByRefObject.GetLifetimeService() System.MarshalByRefObject.InitializeLifetimeService() System.MarshalByRefObject.MemberwiseClone(System.Boolean) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.BufferManagement Assembly : EventStore.BufferManagement.dll Syntax public class BufferPoolStream : Stream, IDisposable Constructors BufferPoolStream(BufferPool) Initializes a new instance of the BufferPoolStream class. Declaration public BufferPoolStream(BufferPool bufferPool) Parameters Type Name BufferPool bufferPool Properties BufferPool Declaration public BufferPool BufferPool { get; } Property Value Type BufferPool CanRead Declaration public override bool CanRead { get; } Property Value Type System.Boolean Overrides System.IO.Stream.CanRead CanSeek Declaration public override bool CanSeek { get; } Property Value Type System.Boolean Overrides System.IO.Stream.CanSeek CanWrite Declaration public override bool CanWrite { get; } Property Value Type System.Boolean Overrides System.IO.Stream.CanWrite Capacity Declaration public int Capacity { get; } Property Value Type System.Int32 Length Declaration public override long Length { get; } Property Value Type System.Int64 Overrides System.IO.Stream.Length Position Declaration public override long Position { get; set; } Property Value Type System.Int64 Overrides System.IO.Stream.Position Methods Dispose(Boolean) Declaration protected override void Dispose(bool disposing) Parameters Type Name System.Boolean disposing Overrides System.IO.Stream.Dispose(System.Boolean) Flush() Declaration public override void Flush() Overrides System.IO.Stream.Flush() Read(Byte[], Int32, Int32) Declaration public override int Read(byte[] buffer, int offset, int count) Parameters Type Name System.Byte [] buffer System.Int32 offset System.Int32 count Returns Type Description System.Int32 Overrides System.IO.Stream.Read(System.Byte[], System.Int32, System.Int32) Seek(Int64, SeekOrigin) Declaration public override long Seek(long offset, SeekOrigin origin) Parameters Type Name System.Int64 offset System.IO.SeekOrigin origin Returns Type Description System.Int64 Overrides System.IO.Stream.Seek(System.Int64, System.IO.SeekOrigin) SetLength(Int64) Declaration public override void SetLength(long value) Parameters Type Name System.Int64 value Overrides System.IO.Stream.SetLength(System.Int64) ToArray() Declaration public byte[] ToArray() Returns Type Description System.Byte [] Write(Byte[], Int32, Int32) Declaration public override void Write(byte[] buffer, int offset, int count) Parameters Type Name System.Byte [] buffer System.Int32 offset System.Int32 count Overrides System.IO.Stream.Write(System.Byte[], System.Int32, System.Int32) Implements System.IDisposable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.BufferManagement.BufferManager.html": {
    "href": "dotnet-api/code/EventStore.BufferManagement.BufferManager.html",
    "title": "Class BufferManager | Event Store",
    "keywords": "Class BufferManager A manager to handle buffers for the socket connections Inheritance System.Object BufferManager Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.BufferManagement Assembly : EventStore.BufferManagement.dll Syntax public class BufferManager Remarks When used in an async call a buffer is pinned. Large numbers of pinned buffers cause problem with the GC (in particular it causes heap fragmentation). This class maintains a set of large segments and gives clients pieces of these segments that they can use for their buffers. The alternative to this would be to create many small arrays which it then maintained. This methodology should be slightly better than the many small array methodology because in creating only a few very large objects it will force these objects to be placed on the LOH. Since the objects are on the LOH they are at this time not subject to compacting which would require an update of all GC roots as would be the case with lots of smaller arrays that were in the normal heap. Constructors BufferManager(Int32, Int32) Constructs a new BufferManager object Declaration public BufferManager(int segmentChunks, int chunkSize) Parameters Type Name System.Int32 segmentChunks System.Int32 chunkSize BufferManager(Int32, Int32, Int32) Constructs a new BufferManager object Declaration public BufferManager(int segmentChunks, int chunkSize, int initialSegments) Parameters Type Name System.Int32 segmentChunks System.Int32 chunkSize System.Int32 initialSegments BufferManager(Int32, Int32, Int32, Boolean) Constructs a new BufferManager object Declaration public BufferManager(int segmentChunks, int chunkSize, int initialSegments, bool allowedToCreateMemory) Parameters Type Name System.Int32 segmentChunks System.Int32 chunkSize System.Int32 initialSegments System.Boolean allowedToCreateMemory Properties AvailableBuffers The current number of buffers available Declaration public int AvailableBuffers { get; } Property Value Type System.Int32 ChunkSize Declaration public int ChunkSize { get; } Property Value Type System.Int32 Default Gets the default buffer manager Declaration public static BufferManager Default { get; } Property Value Type BufferManager Remarks You should only be using this method if you don't want to manage buffers on your own. SegmentChunksCount Declaration public int SegmentChunksCount { get; } Property Value Type System.Int32 SegmentsCount Declaration public int SegmentsCount { get; } Property Value Type System.Int32 TotalBufferSize The total size of all buffers Declaration public int TotalBufferSize { get; } Property Value Type System.Int32 Methods CheckIn(ArraySegment<Byte>) Returns a buffer to the control of the manager Declaration public void CheckIn(ArraySegment<byte> buffer) Parameters Type Name System.ArraySegment < System.Byte > buffer Remarks It is the client's responsibility to return the buffer to the manger by calling CheckIn(ArraySegment<Byte>) on the buffer CheckIn(IEnumerable<ArraySegment<Byte>>) Returns a set of buffers to the control of the manager Declaration public void CheckIn(IEnumerable<ArraySegment<byte>> buffersToReturn) Parameters Type Name System.Collections.Generic.IEnumerable < System.ArraySegment < System.Byte >> buffersToReturn Remarks It is the client's responsibility to return the buffer to the manger by calling CheckIn(IEnumerable<ArraySegment<Byte>>) on the buffer CheckOut() Checks out a buffer from the manager Declaration public ArraySegment<byte> CheckOut() Returns Type Description System.ArraySegment < System.Byte > A System.ArraySegment<T> that can be used as a buffer Remarks It is the client's responsibility to return the buffer to the manager by calling CheckIn(ArraySegment<Byte>) on the buffer CheckOut(Int32) Checks out a buffer from the manager Declaration public IEnumerable<ArraySegment<byte>> CheckOut(int toGet) Parameters Type Name System.Int32 toGet Returns Type Description System.Collections.Generic.IEnumerable < System.ArraySegment < System.Byte >> A System.ArraySegment<T> that can be used as a buffer Remarks It is the client's responsibility to return the buffer to the manger by calling CheckIn(IEnumerable<ArraySegment<Byte>>) on the buffer SetDefaultBufferManager(BufferManager) Sets the default buffer manager. Declaration public static void SetDefaultBufferManager(BufferManager manager) Parameters Type Name BufferManager manager Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Rags.Yaml.html": {
    "href": "dotnet-api/code/EventStore.Rags.Yaml.html",
    "title": "Class Yaml | Event Store",
    "keywords": "Class Yaml Inheritance System.Object Yaml Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Rags Assembly : EventStore.Rags.dll Syntax public class Yaml Methods FromFile(String, String) Declaration public static IEnumerable<OptionSource> FromFile(string fileName, string sectionName = null) Parameters Type Name System.String fileName System.String sectionName Returns Type Description System.Collections.Generic.IEnumerable < OptionSource > Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.MultiStreamEventFilter.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.MultiStreamEventFilter.html",
    "title": "Class MultiStreamEventFilter | Event Store",
    "keywords": "Class MultiStreamEventFilter Inheritance System.Object EventFilter MultiStreamEventFilter Inherited Members EventFilter.Passes(Boolean, String, String, Boolean) EventFilter.PassesDeleteNotification(String) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public class MultiStreamEventFilter : EventFilter Constructors MultiStreamEventFilter(HashSet<String>, Boolean, HashSet<String>) Declaration public MultiStreamEventFilter(HashSet<string> streams, bool allEvents, HashSet<string> events) Parameters Type Name System.Collections.Generic.HashSet < System.String > streams System.Boolean allEvents System.Collections.Generic.HashSet < System.String > events Methods DeletedNotificationPasses(String) Declaration protected override bool DeletedNotificationPasses(string positionStreamId) Parameters Type Name System.String positionStreamId Returns Type Description System.Boolean Overrides EventFilter.DeletedNotificationPasses(String) GetCategory(String) Declaration public override string GetCategory(string positionStreamId) Parameters Type Name System.String positionStreamId Returns Type Description System.String Overrides EventFilter.GetCategory(String) PassesSource(Boolean, String, String) Declaration public override bool PassesSource(bool resolvedFromLinkTo, string positionStreamId, string eventType) Parameters Type Name System.Boolean resolvedFromLinkTo System.String positionStreamId System.String eventType Returns Type Description System.Boolean Overrides EventFilter.PassesSource(Boolean, String, String) Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ISpoolStreamWorkItemContainer.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.ISpoolStreamWorkItemContainer.html",
    "title": "Interface ISpoolStreamWorkItemContainer | Event Store",
    "keywords": "Interface ISpoolStreamWorkItemContainer Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public interface ISpoolStreamWorkItemContainer Methods CompleteSpoolProcessingWorkItem(Guid, CheckpointTag) Declaration void CompleteSpoolProcessingWorkItem(Guid subscriptionId, CheckpointTag position) Parameters Type Name System.Guid subscriptionId CheckpointTag position TransformCatalogEvent(CheckpointTag, ResolvedEvent) Declaration string TransformCatalogEvent(CheckpointTag position, ResolvedEvent event) Parameters Type Name CheckpointTag position ResolvedEvent event Returns Type Description System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.IResultWriter.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.IResultWriter.html",
    "title": "Interface IResultWriter | Event Store",
    "keywords": "Interface IResultWriter Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public interface IResultWriter Methods AccountPartition(EventProcessedResult) Declaration void AccountPartition(EventProcessedResult result) Parameters Type Name EventProcessedResult result EventsEmitted(EmittedEventEnvelope[], Guid, String) Declaration void EventsEmitted(EmittedEventEnvelope[] scheduledWrites, Guid causedBy, string correlationId) Parameters Type Name EmittedEventEnvelope [] scheduledWrites System.Guid causedBy System.String correlationId WriteEofResult(Guid, String, String, CheckpointTag, Guid, String) Declaration void WriteEofResult(Guid subscriptionId, string partition, string resultBody, CheckpointTag causedBy, Guid causedByGuid, string correlationId) Parameters Type Name System.Guid subscriptionId System.String partition System.String resultBody CheckpointTag causedBy System.Guid causedByGuid System.String correlationId WritePartitionMeasured(Guid, String, Int64) Declaration void WritePartitionMeasured(Guid subscriptionId, string partition, long size) Parameters Type Name System.Guid subscriptionId System.String partition System.Int64 size WriteProgress(Guid, Single) Declaration void WriteProgress(Guid subscriptionId, float progress) Parameters Type Name System.Guid subscriptionId System.Single progress WriteRunningResult(EventProcessedResult) Declaration void WriteRunningResult(EventProcessedResult result) Parameters Type Name EventProcessedResult result Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.IResultEventEmitter.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.IResultEventEmitter.html",
    "title": "Interface IResultEventEmitter | Event Store",
    "keywords": "Interface IResultEventEmitter Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public interface IResultEventEmitter Methods ResultUpdated(String, String, CheckpointTag) Declaration EmittedEventEnvelope[] ResultUpdated(string partition, string result, CheckpointTag at) Parameters Type Name System.String partition System.String result CheckpointTag at Returns Type Description EmittedEventEnvelope [] Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.IReaderSubscription.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.IReaderSubscription.html",
    "title": "Interface IReaderSubscription | Event Store",
    "keywords": "Interface IReaderSubscription Inherited Members IHandle<ReaderSubscriptionMessage.CommittedEventDistributed>.Handle(ReaderSubscriptionMessage.CommittedEventDistributed) IHandle<ReaderSubscriptionMessage.EventReaderIdle>.Handle(ReaderSubscriptionMessage.EventReaderIdle) IHandle<ReaderSubscriptionMessage.EventReaderStarting>.Handle(ReaderSubscriptionMessage.EventReaderStarting) IHandle<ReaderSubscriptionMessage.EventReaderEof>.Handle(ReaderSubscriptionMessage.EventReaderEof) IHandle<ReaderSubscriptionMessage.EventReaderPartitionEof>.Handle(ReaderSubscriptionMessage.EventReaderPartitionEof) IHandle<ReaderSubscriptionMessage.EventReaderPartitionDeleted>.Handle(ReaderSubscriptionMessage.EventReaderPartitionDeleted) IHandle<ReaderSubscriptionMessage.EventReaderPartitionMeasured>.Handle(ReaderSubscriptionMessage.EventReaderPartitionMeasured) IHandle<ReaderSubscriptionMessage.EventReaderNotAuthorized>.Handle(ReaderSubscriptionMessage.EventReaderNotAuthorized) Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public interface IReaderSubscription : IHandle<ReaderSubscriptionMessage.CommittedEventDistributed>, IHandle<ReaderSubscriptionMessage.EventReaderIdle>, IHandle<ReaderSubscriptionMessage.EventReaderStarting>, IHandle<ReaderSubscriptionMessage.EventReaderEof>, IHandle<ReaderSubscriptionMessage.EventReaderPartitionEof>, IHandle<ReaderSubscriptionMessage.EventReaderPartitionDeleted>, IHandle<ReaderSubscriptionMessage.EventReaderPartitionMeasured>, IHandle<ReaderSubscriptionMessage.EventReaderNotAuthorized> Properties SubscriptionId Declaration Guid SubscriptionId { get; } Property Value Type System.Guid Tag Declaration string Tag { get; } Property Value Type System.String Methods CreatePausedEventReader(IPublisher, IODispatcher, Guid) Declaration IEventReader CreatePausedEventReader(IPublisher publisher, IODispatcher ioDispatcher, Guid forkedEventReaderId) Parameters Type Name IPublisher publisher IODispatcher ioDispatcher System.Guid forkedEventReaderId Returns Type Description IEventReader Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.IReaderStrategy.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.IReaderStrategy.html",
    "title": "Interface IReaderStrategy | Event Store",
    "keywords": "Interface IReaderStrategy Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public interface IReaderStrategy Properties EventFilter Declaration EventFilter EventFilter { get; } Property Value Type EventFilter IsReadingOrderRepeatable Declaration bool IsReadingOrderRepeatable { get; } Property Value Type System.Boolean PositionTagger Declaration PositionTagger PositionTagger { get; } Property Value Type PositionTagger Methods CreatePausedEventReader(Guid, IPublisher, IODispatcher, CheckpointTag, Boolean, Nullable<Int32>) Declaration IEventReader CreatePausedEventReader(Guid eventReaderId, IPublisher publisher, IODispatcher ioDispatcher, CheckpointTag checkpointTag, bool stopOnEof, int? stopAfterNEvents) Parameters Type Name System.Guid eventReaderId IPublisher publisher IODispatcher ioDispatcher CheckpointTag checkpointTag System.Boolean stopOnEof System.Nullable < System.Int32 > stopAfterNEvents Returns Type Description IEventReader CreateReaderSubscription(IPublisher, CheckpointTag, Guid, ReaderSubscriptionOptions) Declaration IReaderSubscription CreateReaderSubscription(IPublisher publisher, CheckpointTag fromCheckpointTag, Guid subscriptionId, ReaderSubscriptionOptions readerSubscriptionOptions) Parameters Type Name IPublisher publisher CheckpointTag fromCheckpointTag System.Guid subscriptionId ReaderSubscriptionOptions readerSubscriptionOptions Returns Type Description IReaderSubscription Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.IProjectionProcessingPhase.html",
    "title": "Interface IProjectionProcessingPhase | Event Store",
    "keywords": "Interface IProjectionProcessingPhase Inherited Members System.IDisposable.Dispose() IHandle<CoreProjectionManagementMessage.GetState>.Handle(CoreProjectionManagementMessage.GetState) IHandle<CoreProjectionManagementMessage.GetResult>.Handle(CoreProjectionManagementMessage.GetResult) IHandle<CoreProjectionProcessingMessage.PrerecordedEventsLoaded>.Handle(CoreProjectionProcessingMessage.PrerecordedEventsLoaded) Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public interface IProjectionProcessingPhase : IDisposable, IHandle<CoreProjectionManagementMessage.GetState>, IHandle<CoreProjectionManagementMessage.GetResult>, IHandle<CoreProjectionProcessingMessage.PrerecordedEventsLoaded> Properties CheckpointManager Declaration ICoreProjectionCheckpointManager CheckpointManager { get; } Property Value Type ICoreProjectionCheckpointManager EmittedStreamsTracker Declaration IEmittedStreamsTracker EmittedStreamsTracker { get; } Property Value Type IEmittedStreamsTracker Methods AdjustTag(CheckpointTag) Declaration CheckpointTag AdjustTag(CheckpointTag tag) Parameters Type Name CheckpointTag tag Returns Type Description CheckpointTag AssignSlaves(SlaveProjectionCommunicationChannels) Declaration void AssignSlaves(SlaveProjectionCommunicationChannels slaveProjections) Parameters Type Name SlaveProjectionCommunicationChannels slaveProjections EnsureUnsubscribed() Declaration void EnsureUnsubscribed() GetStatistics(ProjectionStatistics) Declaration void GetStatistics(ProjectionStatistics info) Parameters Type Name ProjectionStatistics info InitializeFromCheckpoint(CheckpointTag) Declaration void InitializeFromCheckpoint(CheckpointTag checkpointTag) Parameters Type Name CheckpointTag checkpointTag MakeZeroCheckpointTag() Declaration CheckpointTag MakeZeroCheckpointTag() Returns Type Description CheckpointTag ProcessEvent() Declaration void ProcessEvent() SetProjectionState(PhaseState) Declaration void SetProjectionState(PhaseState state) Parameters Type Name PhaseState state Subscribe(CheckpointTag, Boolean) Declaration void Subscribe(CheckpointTag from, bool fromCheckpoint) Parameters Type Name CheckpointTag from System.Boolean fromCheckpoint Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.IProjectionPhaseStateManager.html",
    "title": "Interface IProjectionPhaseStateManager | Event Store",
    "keywords": "Interface IProjectionPhaseStateManager Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public interface IProjectionPhaseStateManager Properties LastProcessedEventPosition Declaration CheckpointTag LastProcessedEventPosition { get; } Property Value Type CheckpointTag Methods BeginGetPartitionStateAt(String, CheckpointTag, Action<PartitionState>, Boolean) Declaration void BeginGetPartitionStateAt(string statePartition, CheckpointTag at, Action<PartitionState> loadCompleted, bool lockLoaded) Parameters Type Name System.String statePartition CheckpointTag at System.Action < PartitionState > loadCompleted System.Boolean lockLoaded UnlockAndForgetBefore(CheckpointTag) Declaration void UnlockAndForgetBefore(CheckpointTag checkpointTag) Parameters Type Name CheckpointTag checkpointTag Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.IProjectionPhaseCompleter.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.IProjectionPhaseCompleter.html",
    "title": "Interface IProjectionPhaseCompleter | Event Store",
    "keywords": "Interface IProjectionPhaseCompleter Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public interface IProjectionPhaseCompleter Methods Complete() Declaration void Complete() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.IProjectionPhaseCheckpointManager.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.IProjectionPhaseCheckpointManager.html",
    "title": "Interface IProjectionPhaseCheckpointManager | Event Store",
    "keywords": "Interface IProjectionPhaseCheckpointManager Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public interface IProjectionPhaseCheckpointManager Methods NewCheckpointStarted(CheckpointTag) Declaration void NewCheckpointStarted(CheckpointTag checkpointTag) Parameters Type Name CheckpointTag checkpointTag SetCurrentCheckpointSuggestedWorkItem(CheckpointSuggestedWorkItem) Declaration void SetCurrentCheckpointSuggestedWorkItem(CheckpointSuggestedWorkItem checkpointSuggestedWorkItem) Parameters Type Name CheckpointSuggestedWorkItem checkpointSuggestedWorkItem Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.IProgressResultWriter.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.IProgressResultWriter.html",
    "title": "Interface IProgressResultWriter | Event Store",
    "keywords": "Interface IProgressResultWriter Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public interface IProgressResultWriter Methods WriteProgress(Single) Declaration void WriteProgress(float progress) Parameters Type Name System.Single progress Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.IEventWriter.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.IEventWriter.html",
    "title": "Interface IEventWriter | Event Store",
    "keywords": "Interface IEventWriter Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public interface IEventWriter Methods ValidateOrderAndEmitEvents(EmittedEventEnvelope[]) Declaration void ValidateOrderAndEmitEvents(EmittedEventEnvelope[] events) Parameters Type Name EmittedEventEnvelope [] events Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Processing.IEventReader.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Processing.IEventReader.html",
    "title": "Interface IEventReader | Event Store",
    "keywords": "Interface IEventReader Inherited Members System.IDisposable.Dispose() Namespace : EventStore.Projections.Core.Services.Processing Assembly : EventStore.Projections.Core.dll Syntax public interface IEventReader : IDisposable Methods Pause() Declaration void Pause() Resume() Declaration void Resume() SendNotAuthorized() Declaration void SendNotAuthorized() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Commands.PersistedProjectionConfig.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Commands.PersistedProjectionConfig.html",
    "title": "Class PersistedProjectionConfig | Event Store",
    "keywords": "Class PersistedProjectionConfig Inheritance System.Object PersistedProjectionConfig Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages.Persisted.Commands Assembly : EventStore.Projections.Core.dll Syntax public sealed class PersistedProjectionConfig Constructors PersistedProjectionConfig() Declaration public PersistedProjectionConfig() PersistedProjectionConfig(ProjectionConfig) Declaration public PersistedProjectionConfig(ProjectionConfig config) Parameters Type Name ProjectionConfig config Fields CheckpointAfterMs Declaration public int CheckpointAfterMs Field Value Type System.Int32 CheckpointHandledThreshold Declaration public int CheckpointHandledThreshold Field Value Type System.Int32 CheckpointsEnabled Declaration public bool CheckpointsEnabled Field Value Type System.Boolean CheckpointUnhandledBytesThreshold Declaration public int CheckpointUnhandledBytesThreshold Field Value Type System.Int32 CreateTempStreams Declaration public bool CreateTempStreams Field Value Type System.Boolean EmitEventEnabled Declaration public bool EmitEventEnabled Field Value Type System.Boolean IsSlaveProjection Declaration public bool IsSlaveProjection Field Value Type System.Boolean MaximumAllowedWritesInFlight Declaration public int MaximumAllowedWritesInFlight Field Value Type System.Int32 MaxWriteBatchLength Declaration public int MaxWriteBatchLength Field Value Type System.Int32 PendingEventsThreshold Declaration public int PendingEventsThreshold Field Value Type System.Int32 RunAs Declaration public string RunAs Field Value Type System.String RunAsRoles Declaration public string[] RunAsRoles Field Value Type System.String [] StopOnEof Declaration public bool StopOnEof Field Value Type System.Boolean TrackEmittedStreams Declaration public bool TrackEmittedStreams Field Value Type System.Boolean Methods ToConfig() Declaration public ProjectionConfig ToConfig() Returns Type Description ProjectionConfig Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Commands.LoadStoppedCommand.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Commands.LoadStoppedCommand.html",
    "title": "Class LoadStoppedCommand | Event Store",
    "keywords": "Class LoadStoppedCommand Inheritance System.Object LoadStoppedCommand Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages.Persisted.Commands Assembly : EventStore.Projections.Core.dll Syntax public class LoadStoppedCommand Properties Id Declaration public string Id { get; set; } Property Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Commands.KillCommand.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Commands.KillCommand.html",
    "title": "Class KillCommand | Event Store",
    "keywords": "Class KillCommand Inheritance System.Object KillCommand Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages.Persisted.Commands Assembly : EventStore.Projections.Core.dll Syntax public class KillCommand Properties Id Declaration public string Id { get; set; } Property Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Commands.GetStateCommand.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Commands.GetStateCommand.html",
    "title": "Class GetStateCommand | Event Store",
    "keywords": "Class GetStateCommand Inheritance System.Object GetStateCommand Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages.Persisted.Commands Assembly : EventStore.Projections.Core.dll Syntax public sealed class GetStateCommand Properties CorrelationId Declaration public string CorrelationId { get; set; } Property Value Type System.String Id Declaration public string Id { get; set; } Property Value Type System.String Partition Declaration public string Partition { get; set; } Property Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Commands.GetResultCommand.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Commands.GetResultCommand.html",
    "title": "Class GetResultCommand | Event Store",
    "keywords": "Class GetResultCommand Inheritance System.Object GetResultCommand Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages.Persisted.Commands Assembly : EventStore.Projections.Core.dll Syntax public sealed class GetResultCommand Properties CorrelationId Declaration public string CorrelationId { get; set; } Property Value Type System.String Id Declaration public string Id { get; set; } Property Value Type System.String Partition Declaration public string Partition { get; set; } Property Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Commands.DisposeCommand.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Commands.DisposeCommand.html",
    "title": "Class DisposeCommand | Event Store",
    "keywords": "Class DisposeCommand Inheritance System.Object DisposeCommand Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages.Persisted.Commands Assembly : EventStore.Projections.Core.dll Syntax public class DisposeCommand Properties Id Declaration public string Id { get; set; } Property Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Commands.CreatePreparedCommand.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Commands.CreatePreparedCommand.html",
    "title": "Class CreatePreparedCommand | Event Store",
    "keywords": "Class CreatePreparedCommand Inheritance System.Object CreatePreparedCommand Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages.Persisted.Commands Assembly : EventStore.Projections.Core.dll Syntax public class CreatePreparedCommand Properties Config Declaration public PersistedProjectionConfig Config { get; set; } Property Value Type PersistedProjectionConfig HandlerType Declaration public string HandlerType { get; set; } Property Value Type System.String Id Declaration public string Id { get; set; } Property Value Type System.String Name Declaration public string Name { get; set; } Property Value Type System.String Query Declaration public string Query { get; set; } Property Value Type System.String SourceDefinition Declaration public QuerySourcesDefinition SourceDefinition { get; set; } Property Value Type QuerySourcesDefinition Version Declaration public PersistedProjectionVersion Version { get; set; } Property Value Type PersistedProjectionVersion Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareSlaveCommand.html",
    "title": "Class CreateAndPrepareSlaveCommand | Event Store",
    "keywords": "Class CreateAndPrepareSlaveCommand Inheritance System.Object CreateAndPrepareSlaveCommand Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages.Persisted.Commands Assembly : EventStore.Projections.Core.dll Syntax public class CreateAndPrepareSlaveCommand Properties Config Declaration public PersistedProjectionConfig Config { get; set; } Property Value Type PersistedProjectionConfig HandlerType Declaration public string HandlerType { get; set; } Property Value Type System.String Id Declaration public string Id { get; set; } Property Value Type System.String MasterCoreProjectionId Declaration public string MasterCoreProjectionId { get; set; } Property Value Type System.String MasterWorkerId Declaration public string MasterWorkerId { get; set; } Property Value Type System.String Name Declaration public string Name { get; set; } Property Value Type System.String Query Declaration public string Query { get; set; } Property Value Type System.String Version Declaration public PersistedProjectionVersion Version { get; set; } Property Value Type PersistedProjectionVersion Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareCommand.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Commands.CreateAndPrepareCommand.html",
    "title": "Class CreateAndPrepareCommand | Event Store",
    "keywords": "Class CreateAndPrepareCommand Inheritance System.Object CreateAndPrepareCommand Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages.Persisted.Commands Assembly : EventStore.Projections.Core.dll Syntax public class CreateAndPrepareCommand Properties Config Declaration public PersistedProjectionConfig Config { get; set; } Property Value Type PersistedProjectionConfig HandlerType Declaration public string HandlerType { get; set; } Property Value Type System.String Id Declaration public string Id { get; set; } Property Value Type System.String Name Declaration public string Name { get; set; } Property Value Type System.String Query Declaration public string Query { get; set; } Property Value Type System.String Version Declaration public PersistedProjectionVersion Version { get; set; } Property Value Type PersistedProjectionVersion Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.html",
    "title": "Namespace EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages | Event Store",
    "keywords": "Namespace EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages Classes PartitionMeasured PartitionMeasuredOutput PartitionProcessingProgress PartitionProcessingProgressOutput PartitionProcessingResult PartitionProcessingResultBase PartitionProcessingResultOutput PartitionProcessingResultOutputBase"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultOutputBase.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultOutputBase.html",
    "title": "Class PartitionProcessingResultOutputBase | Event Store",
    "keywords": "Class PartitionProcessingResultOutputBase Inheritance System.Object Message PartitionProcessingResultOutputBase PartitionMeasuredOutput PartitionProcessingProgressOutput PartitionProcessingResultOutput Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages Assembly : EventStore.Projections.Core.dll Syntax public abstract class PartitionProcessingResultOutputBase : Message Constructors PartitionProcessingResultOutputBase(Guid, Guid, Guid, String) Declaration protected PartitionProcessingResultOutputBase(Guid workerId, Guid masterProjectionId, Guid subscriptionId, string partition) Parameters Type Name System.Guid workerId System.Guid masterProjectionId System.Guid subscriptionId System.String partition Properties MasterProjectionId Declaration public Guid MasterProjectionId { get; } Property Value Type System.Guid MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Partition Declaration public string Partition { get; } Property Value Type System.String SubscriptionId Declaration public Guid SubscriptionId { get; } Property Value Type System.Guid WorkerId Declaration public Guid WorkerId { get; } Property Value Type System.Guid Methods AsInput() Declaration public abstract Message AsInput() Returns Type Description Message Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultOutput.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultOutput.html",
    "title": "Class PartitionProcessingResultOutput | Event Store",
    "keywords": "Class PartitionProcessingResultOutput Inheritance System.Object Message PartitionProcessingResultOutputBase PartitionProcessingResultOutput Inherited Members PartitionProcessingResultOutputBase.Partition PartitionProcessingResultOutputBase.SubscriptionId PartitionProcessingResultOutputBase.WorkerId PartitionProcessingResultOutputBase.MasterProjectionId Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages Assembly : EventStore.Projections.Core.dll Syntax public sealed class PartitionProcessingResultOutput : PartitionProcessingResultOutputBase Constructors PartitionProcessingResultOutput(Guid, Guid, Guid, String, Guid, CheckpointTag, String) Declaration public PartitionProcessingResultOutput(Guid workerId, Guid masterProjectionId, Guid subscriptionId, string partition, Guid causedByGuid, CheckpointTag position, string result) Parameters Type Name System.Guid workerId System.Guid masterProjectionId System.Guid subscriptionId System.String partition System.Guid causedByGuid CheckpointTag position System.String result Properties CausedByGuid Declaration public Guid CausedByGuid { get; } Property Value Type System.Guid MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides PartitionProcessingResultOutputBase.MsgTypeId Position Declaration public CheckpointTag Position { get; } Property Value Type CheckpointTag Result Declaration public string Result { get; } Property Value Type System.String Methods AsInput() Declaration public override Message AsInput() Returns Type Description Message Overrides PartitionProcessingResultOutputBase.AsInput() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages.PartitionProcessingResultBase.html",
    "title": "Class PartitionProcessingResultBase | Event Store",
    "keywords": "Class PartitionProcessingResultBase Inheritance System.Object Message PartitionProcessingResultBase PartitionMeasured PartitionProcessingProgress PartitionProcessingResult Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages.ParallelQueryProcessingMessages Assembly : EventStore.Projections.Core.dll Syntax public abstract class PartitionProcessingResultBase : Message Constructors PartitionProcessingResultBase(Guid, Guid, Guid, String) Declaration protected PartitionProcessingResultBase(Guid workerId, Guid masterProjectionId, Guid subscriptionId, string partition) Parameters Type Name System.Guid workerId System.Guid masterProjectionId System.Guid subscriptionId System.String partition Properties MasterProjectionId Declaration public Guid MasterProjectionId { get; } Property Value Type System.Guid MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Partition Declaration public string Partition { get; } Property Value Type System.String SubscriptionId Declaration public Guid SubscriptionId { get; } Property Value Type System.Guid WorkerId Declaration public Guid WorkerId { get; } Property Value Type System.Guid Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Dispose.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.Dispose.html",
    "title": "Class CoreProjectionManagementMessage.Dispose | Event Store",
    "keywords": "Class CoreProjectionManagementMessage.Dispose Inheritance System.Object Message CoreProjectionManagementMessageBase CoreProjectionManagementControlMessage CoreProjectionManagementMessage.Dispose Inherited Members CoreProjectionManagementControlMessage.WorkerId CoreProjectionManagementMessageBase.ProjectionId Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class Dispose : CoreProjectionManagementControlMessage Constructors Dispose(Guid, Guid) Declaration public Dispose(Guid projectionId, Guid workerId) Parameters Type Name System.Guid projectionId System.Guid workerId Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides CoreProjectionManagementControlMessage.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreatePrepared.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreatePrepared.html",
    "title": "Class CoreProjectionManagementMessage.CreatePrepared | Event Store",
    "keywords": "Class CoreProjectionManagementMessage.CreatePrepared Inheritance System.Object Message CoreProjectionManagementMessageBase CoreProjectionManagementControlMessage CoreProjectionManagementMessage.CreatePrepared Inherited Members CoreProjectionManagementControlMessage.WorkerId CoreProjectionManagementMessageBase.ProjectionId Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class CreatePrepared : CoreProjectionManagementControlMessage Constructors CreatePrepared(Guid, Guid, String, ProjectionVersion, ProjectionConfig, QuerySourcesDefinition, String, String) Declaration public CreatePrepared(Guid projectionId, Guid workerId, string name, ProjectionVersion version, ProjectionConfig config, QuerySourcesDefinition sourceDefinition, string handlerType, string query) Parameters Type Name System.Guid projectionId System.Guid workerId System.String name ProjectionVersion version ProjectionConfig config QuerySourcesDefinition sourceDefinition System.String handlerType System.String query Properties Config Declaration public ProjectionConfig Config { get; } Property Value Type ProjectionConfig HandlerType Declaration public string HandlerType { get; } Property Value Type System.String MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides CoreProjectionManagementControlMessage.MsgTypeId Name Declaration public string Name { get; } Property Value Type System.String Query Declaration public string Query { get; } Property Value Type System.String SourceDefinition Declaration public QuerySourcesDefinition SourceDefinition { get; } Property Value Type QuerySourcesDefinition Version Declaration public ProjectionVersion Version { get; } Property Value Type ProjectionVersion Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.StreamEventAppeared.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.StreamEventAppeared.html",
    "title": "Class TcpClientMessageDto.StreamEventAppeared | Event Store",
    "keywords": "Class TcpClientMessageDto.StreamEventAppeared Inheritance System.Object TcpClientMessageDto.StreamEventAppeared Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax [Serializable] [ProtoContract(Name = \"StreamEventAppeared\")] public class StreamEventAppeared Constructors StreamEventAppeared(TcpClientMessageDto.ResolvedEvent) Declaration public StreamEventAppeared(TcpClientMessageDto.ResolvedEvent event) Parameters Type Name TcpClientMessageDto.ResolvedEvent event Fields Event Declaration [ProtoMember(1, IsRequired = true, Name = \"event\", DataFormat = DataFormat.Default)] public readonly TcpClientMessageDto.ResolvedEvent Event Field Value Type TcpClientMessageDto.ResolvedEvent Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.ScavengeDatabaseResponse.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.ScavengeDatabaseResponse.html",
    "title": "Class TcpClientMessageDto.ScavengeDatabaseResponse | Event Store",
    "keywords": "Class TcpClientMessageDto.ScavengeDatabaseResponse Inheritance System.Object TcpClientMessageDto.ScavengeDatabaseResponse Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax [Serializable] [ProtoContract(Name = \"ScavengeDatabaseResponse\")] public class ScavengeDatabaseResponse Constructors ScavengeDatabaseResponse(TcpClientMessageDto.ScavengeDatabaseResponse.ScavengeResult, String) Declaration public ScavengeDatabaseResponse(TcpClientMessageDto.ScavengeDatabaseResponse.ScavengeResult result, string scavengeId) Parameters Type Name TcpClientMessageDto.ScavengeDatabaseResponse.ScavengeResult result System.String scavengeId Fields Result Declaration [ProtoMember(1, IsRequired = true, Name = \"result\", DataFormat = DataFormat.TwosComplement)] public readonly TcpClientMessageDto.ScavengeDatabaseResponse.ScavengeResult Result Field Value Type TcpClientMessageDto.ScavengeDatabaseResponse.ScavengeResult ScavengeId Declaration [ProtoMember(2, IsRequired = false, Name = \"scavengeId\", DataFormat = DataFormat.Default)] public readonly string ScavengeId Field Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.SystemMessage.BecomeShuttingDown.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.SystemMessage.BecomeShuttingDown.html",
    "title": "Class SystemMessage.BecomeShuttingDown | Event Store",
    "keywords": "Class SystemMessage.BecomeShuttingDown Inheritance System.Object Message SystemMessage.StateChangeMessage SystemMessage.BecomeShuttingDown Inherited Members SystemMessage.StateChangeMessage.CorrelationId SystemMessage.StateChangeMessage.State Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class BecomeShuttingDown : SystemMessage.StateChangeMessage Constructors BecomeShuttingDown(Guid, Boolean, Boolean) Declaration public BecomeShuttingDown(Guid correlationId, bool exitProcess, bool shutdownHttp) Parameters Type Name System.Guid correlationId System.Boolean exitProcess System.Boolean shutdownHttp Fields ExitProcess Declaration public readonly bool ExitProcess Field Value Type System.Boolean ShutdownHttp Declaration public readonly bool ShutdownHttp Field Value Type System.Boolean Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides SystemMessage.StateChangeMessage.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.SystemMessage.BecomeShutdown.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.SystemMessage.BecomeShutdown.html",
    "title": "Class SystemMessage.BecomeShutdown | Event Store",
    "keywords": "Class SystemMessage.BecomeShutdown Inheritance System.Object Message SystemMessage.StateChangeMessage SystemMessage.BecomeShutdown Inherited Members SystemMessage.StateChangeMessage.CorrelationId SystemMessage.StateChangeMessage.State Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class BecomeShutdown : SystemMessage.StateChangeMessage Constructors BecomeShutdown(Guid) Declaration public BecomeShutdown(Guid correlationId) Parameters Type Name System.Guid correlationId Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides SystemMessage.StateChangeMessage.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.SystemMessage.BecomePreReplica.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.SystemMessage.BecomePreReplica.html",
    "title": "Class SystemMessage.BecomePreReplica | Event Store",
    "keywords": "Class SystemMessage.BecomePreReplica Inheritance System.Object Message SystemMessage.StateChangeMessage SystemMessage.ReplicaStateMessage SystemMessage.BecomePreReplica Inherited Members SystemMessage.ReplicaStateMessage.Master SystemMessage.StateChangeMessage.CorrelationId SystemMessage.StateChangeMessage.State Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class BecomePreReplica : SystemMessage.ReplicaStateMessage Constructors BecomePreReplica(Guid, VNodeInfo) Declaration public BecomePreReplica(Guid correlationId, VNodeInfo master) Parameters Type Name System.Guid correlationId VNodeInfo master Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides SystemMessage.ReplicaStateMessage.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.SystemMessage.BecomePreMaster.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.SystemMessage.BecomePreMaster.html",
    "title": "Class SystemMessage.BecomePreMaster | Event Store",
    "keywords": "Class SystemMessage.BecomePreMaster Inheritance System.Object Message SystemMessage.StateChangeMessage SystemMessage.BecomePreMaster Inherited Members SystemMessage.StateChangeMessage.CorrelationId SystemMessage.StateChangeMessage.State Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class BecomePreMaster : SystemMessage.StateChangeMessage Constructors BecomePreMaster(Guid) Declaration public BecomePreMaster(Guid correlationId) Parameters Type Name System.Guid correlationId Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides SystemMessage.StateChangeMessage.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ReplicationMessage.CreateChunk.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ReplicationMessage.CreateChunk.html",
    "title": "Class ReplicationMessage.CreateChunk | Event Store",
    "keywords": "Class ReplicationMessage.CreateChunk Inheritance System.Object Message ReplicationMessage.CreateChunk Implements ReplicationMessage.IReplicationMessage Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class CreateChunk : Message, ReplicationMessage.IReplicationMessage Constructors CreateChunk(Guid, Guid, ChunkHeader, Int32, Boolean) Declaration public CreateChunk(Guid masterId, Guid subscriptionId, ChunkHeader chunkHeader, int fileSize, bool isCompletedChunk) Parameters Type Name System.Guid masterId System.Guid subscriptionId ChunkHeader chunkHeader System.Int32 fileSize System.Boolean isCompletedChunk Fields ChunkHeader Declaration public readonly ChunkHeader ChunkHeader Field Value Type ChunkHeader FileSize Declaration public readonly int FileSize Field Value Type System.Int32 IsCompletedChunk Declaration public bool IsCompletedChunk Field Value Type System.Boolean MasterId Declaration public readonly Guid MasterId Field Value Type System.Guid SubscriptionId Declaration public readonly Guid SubscriptionId Field Value Type System.Guid Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Methods ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Explicit Interface Implementations ReplicationMessage.IReplicationMessage.MasterId Declaration Guid ReplicationMessage.IReplicationMessage.MasterId { get; } Returns Type Description System.Guid ReplicationMessage.IReplicationMessage.SubscriptionId Declaration Guid ReplicationMessage.IReplicationMessage.SubscriptionId { get; } Returns Type Description System.Guid Implements ReplicationMessage.IReplicationMessage Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ReplicationMessage.CloneAssignment.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ReplicationMessage.CloneAssignment.html",
    "title": "Class ReplicationMessage.CloneAssignment | Event Store",
    "keywords": "Class ReplicationMessage.CloneAssignment Inheritance System.Object Message ReplicationMessage.CloneAssignment Implements ReplicationMessage.IReplicationMessage Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class CloneAssignment : Message, ReplicationMessage.IReplicationMessage Constructors CloneAssignment(Guid, Guid) Declaration public CloneAssignment(Guid masterId, Guid subscriptionId) Parameters Type Name System.Guid masterId System.Guid subscriptionId Fields MasterId Declaration public readonly Guid MasterId Field Value Type System.Guid SubscriptionId Declaration public readonly Guid SubscriptionId Field Value Type System.Guid Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Explicit Interface Implementations ReplicationMessage.IReplicationMessage.MasterId Declaration Guid ReplicationMessage.IReplicationMessage.MasterId { get; } Returns Type Description System.Guid ReplicationMessage.IReplicationMessage.SubscriptionId Declaration Guid ReplicationMessage.IReplicationMessage.SubscriptionId { get; } Returns Type Description System.Guid Implements ReplicationMessage.IReplicationMessage Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ReplicationMessage.AckLogPosition.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ReplicationMessage.AckLogPosition.html",
    "title": "Class ReplicationMessage.AckLogPosition | Event Store",
    "keywords": "Class ReplicationMessage.AckLogPosition Inheritance System.Object Message ReplicationMessage.AckLogPosition Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class AckLogPosition : Message Constructors AckLogPosition(Guid, Int64) Declaration public AckLogPosition(Guid subscriptionId, long replicationLogPosition) Parameters Type Name System.Guid subscriptionId System.Int64 replicationLogPosition Fields ReplicationLogPosition Declaration public readonly long ReplicationLogPosition Field Value Type System.Int64 SubscriptionId Declaration public readonly Guid SubscriptionId Field Value Type System.Guid Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.OperationResult.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.OperationResult.html",
    "title": "Enum OperationResult | Event Store",
    "keywords": "Enum OperationResult Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public enum OperationResult Fields Name Description AccessDenied CommitTimeout ForwardTimeout InvalidTransaction PrepareTimeout StreamDeleted Success WrongExpectedVersion Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<OperationResult>() ProtobufExtensions.Serialize<OperationResult>() ProtobufExtensions.SerializeToArray<OperationResult>()"
  },
  "dotnet-api/code/EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackwardCompleted.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackwardCompleted.html",
    "title": "Class ClientMessage.ReadStreamEventsBackwardCompleted | Event Store",
    "keywords": "Class ClientMessage.ReadStreamEventsBackwardCompleted Inheritance System.Object Message ClientMessage.ReadResponseMessage ClientMessage.ReadStreamEventsBackwardCompleted Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class ReadStreamEventsBackwardCompleted : ClientMessage.ReadResponseMessage Constructors ReadStreamEventsBackwardCompleted(Guid, String, Int64, Int32, ReadStreamResult, ResolvedEvent[], StreamMetadata, Boolean, String, Int64, Int64, Boolean, Int64) Declaration public ReadStreamEventsBackwardCompleted(Guid correlationId, string eventStreamId, long fromEventNumber, int maxCount, ReadStreamResult result, ResolvedEvent[] events, StreamMetadata streamMetadata, bool isCachePublic, string error, long nextEventNumber, long lastEventNumber, bool isEndOfStream, long tfLastCommitPosition) Parameters Type Name System.Guid correlationId System.String eventStreamId System.Int64 fromEventNumber System.Int32 maxCount ReadStreamResult result ResolvedEvent [] events StreamMetadata streamMetadata System.Boolean isCachePublic System.String error System.Int64 nextEventNumber System.Int64 lastEventNumber System.Boolean isEndOfStream System.Int64 tfLastCommitPosition Fields CorrelationId Declaration public readonly Guid CorrelationId Field Value Type System.Guid Error Declaration public readonly string Error Field Value Type System.String Events Declaration public readonly ResolvedEvent[] Events Field Value Type ResolvedEvent [] EventStreamId Declaration public readonly string EventStreamId Field Value Type System.String FromEventNumber Declaration public readonly long FromEventNumber Field Value Type System.Int64 IsCachePublic Declaration public readonly bool IsCachePublic Field Value Type System.Boolean IsEndOfStream Declaration public readonly bool IsEndOfStream Field Value Type System.Boolean LastEventNumber Declaration public readonly long LastEventNumber Field Value Type System.Int64 MaxCount Declaration public readonly int MaxCount Field Value Type System.Int32 NextEventNumber Declaration public readonly long NextEventNumber Field Value Type System.Int64 Result Declaration public readonly ReadStreamResult Result Field Value Type ReadStreamResult StreamMetadata Declaration public readonly StreamMetadata StreamMetadata Field Value Type StreamMetadata TfLastCommitPosition Declaration public readonly long TfLastCommitPosition Field Value Type System.Int64 Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides ClientMessage.ReadResponseMessage.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ClientMessage.ReadStreamEventsBackward.html",
    "title": "Class ClientMessage.ReadStreamEventsBackward | Event Store",
    "keywords": "Class ClientMessage.ReadStreamEventsBackward Inheritance System.Object Message ClientMessage.ReadRequestMessage ClientMessage.ReadStreamEventsBackward Inherited Members ClientMessage.ReadRequestMessage.InternalCorrId ClientMessage.ReadRequestMessage.CorrelationId ClientMessage.ReadRequestMessage.Envelope ClientMessage.ReadRequestMessage.User ClientMessage.ReadRequestMessage.Expires Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class ReadStreamEventsBackward : ClientMessage.ReadRequestMessage Constructors ReadStreamEventsBackward(Guid, Guid, IEnvelope, String, Int64, Int32, Boolean, Boolean, Nullable<Int64>, IPrincipal) Declaration public ReadStreamEventsBackward(Guid internalCorrId, Guid correlationId, IEnvelope envelope, string eventStreamId, long fromEventNumber, int maxCount, bool resolveLinkTos, bool requireMaster, long? validationStreamVersion, IPrincipal user) Parameters Type Name System.Guid internalCorrId System.Guid correlationId IEnvelope envelope System.String eventStreamId System.Int64 fromEventNumber System.Int32 maxCount System.Boolean resolveLinkTos System.Boolean requireMaster System.Nullable < System.Int64 > validationStreamVersion System.Security.Principal.IPrincipal user Fields EventStreamId Declaration public readonly string EventStreamId Field Value Type System.String FromEventNumber Declaration public readonly long FromEventNumber Field Value Type System.Int64 MaxCount Declaration public readonly int MaxCount Field Value Type System.Int32 RequireMaster Declaration public readonly bool RequireMaster Field Value Type System.Boolean ResolveLinkTos Declaration public readonly bool ResolveLinkTos Field Value Type System.Boolean ValidationStreamVersion Declaration public readonly long? ValidationStreamVersion Field Value Type System.Nullable < System.Int64 > Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides ClientMessage.ReadRequestMessage.MsgTypeId Methods ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ClientMessage.ReadResponseMessage.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ClientMessage.ReadResponseMessage.html",
    "title": "Class ClientMessage.ReadResponseMessage | Event Store",
    "keywords": "Class ClientMessage.ReadResponseMessage Inheritance System.Object Message ClientMessage.ReadResponseMessage ClientMessage.CreatePersistentSubscriptionCompleted ClientMessage.DeletePersistentSubscriptionCompleted ClientMessage.ReadAllEventsBackwardCompleted ClientMessage.ReadAllEventsForwardCompleted ClientMessage.ReadEventCompleted ClientMessage.ReadNextNPersistentMessagesCompleted ClientMessage.ReadStreamEventsBackwardCompleted ClientMessage.ReadStreamEventsForwardCompleted ClientMessage.ReplayMessagesReceived ClientMessage.UpdatePersistentSubscriptionCompleted StorageMessage.CheckStreamAccessCompleted Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public abstract class ReadResponseMessage : Message Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ClientMessage.ReadAllEventsBackwardCompleted.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ClientMessage.ReadAllEventsBackwardCompleted.html",
    "title": "Class ClientMessage.ReadAllEventsBackwardCompleted | Event Store",
    "keywords": "Class ClientMessage.ReadAllEventsBackwardCompleted Inheritance System.Object Message ClientMessage.ReadResponseMessage ClientMessage.ReadAllEventsBackwardCompleted Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class ReadAllEventsBackwardCompleted : ClientMessage.ReadResponseMessage Constructors ReadAllEventsBackwardCompleted(Guid, ReadAllResult, String, ResolvedEvent[], StreamMetadata, Boolean, Int32, TFPos, TFPos, TFPos, Int64) Declaration public ReadAllEventsBackwardCompleted(Guid correlationId, ReadAllResult result, string error, ResolvedEvent[] events, StreamMetadata streamMetadata, bool isCachePublic, int maxCount, TFPos currentPos, TFPos nextPos, TFPos prevPos, long tfLastCommitPosition) Parameters Type Name System.Guid correlationId ReadAllResult result System.String error ResolvedEvent [] events StreamMetadata streamMetadata System.Boolean isCachePublic System.Int32 maxCount TFPos currentPos TFPos nextPos TFPos prevPos System.Int64 tfLastCommitPosition Fields CorrelationId Declaration public readonly Guid CorrelationId Field Value Type System.Guid CurrentPos Declaration public readonly TFPos CurrentPos Field Value Type TFPos Error Declaration public readonly string Error Field Value Type System.String Events Declaration public readonly ResolvedEvent[] Events Field Value Type ResolvedEvent [] IsCachePublic Declaration public readonly bool IsCachePublic Field Value Type System.Boolean MaxCount Declaration public readonly int MaxCount Field Value Type System.Int32 NextPos Declaration public readonly TFPos NextPos Field Value Type TFPos PrevPos Declaration public readonly TFPos PrevPos Field Value Type TFPos Result Declaration public readonly ReadAllResult Result Field Value Type ReadAllResult StreamMetadata Declaration public readonly StreamMetadata StreamMetadata Field Value Type StreamMetadata TfLastCommitPosition Declaration public readonly long TfLastCommitPosition Field Value Type System.Int64 Properties IsEndOfStream Declaration public bool IsEndOfStream { get; } Property Value Type System.Boolean MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides ClientMessage.ReadResponseMessage.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Index.PTableFooter.html": {
    "href": "dotnet-api/code/EventStore.Core.Index.PTableFooter.html",
    "title": "Class PTableFooter | Event Store",
    "keywords": "Class PTableFooter Inheritance System.Object PTableFooter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Index Assembly : EventStore.Core.dll Syntax public class PTableFooter Constructors PTableFooter(Byte, UInt32) Declaration public PTableFooter(byte version, uint numMidpointsCached) Parameters Type Name System.Byte version System.UInt32 numMidpointsCached Fields FileType Declaration public readonly FileType FileType Field Value Type FileType NumMidpointsCached Declaration public readonly uint NumMidpointsCached Field Value Type System.UInt32 Version Declaration public readonly byte Version Field Value Type System.Byte Methods AsByteArray() Declaration public byte[] AsByteArray() Returns Type Description System.Byte [] FromStream(Stream) Declaration public static PTableFooter FromStream(Stream stream) Parameters Type Name System.IO.Stream stream Returns Type Description PTableFooter GetSize(Byte) Declaration public static int GetSize(byte version) Parameters Type Name System.Byte version Returns Type Description System.Int32 Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Index.IndexEntryV1.html": {
    "href": "dotnet-api/code/EventStore.Core.Index.IndexEntryV1.html",
    "title": "Struct IndexEntryV1 | Event Store",
    "keywords": "Struct IndexEntryV1 Implements System.IComparable < IndexEntryV1 > System.IEquatable < IndexEntryV1 > Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Index Assembly : EventStore.Core.dll Syntax public struct IndexEntryV1 : IComparable<IndexEntryV1>, IEquatable<IndexEntryV1> Constructors IndexEntryV1(UInt32, Int32, Int64) Declaration public IndexEntryV1(uint stream, int version, long position) Parameters Type Name System.UInt32 stream System.Int32 version System.Int64 position IndexEntryV1(UInt64, Int64) Declaration public IndexEntryV1(ulong key, long position) Parameters Type Name System.UInt64 key System.Int64 position Fields Bytes Declaration public byte *Bytes Field Value Type System.Byte * Key Declaration public ulong Key Field Value Type System.UInt64 Position Declaration public long Position Field Value Type System.Int64 Stream Declaration public uint Stream Field Value Type System.UInt32 Version Declaration public int Version Field Value Type System.Int32 Methods CompareTo(IndexEntryV1) Declaration public int CompareTo(IndexEntryV1 other) Parameters Type Name IndexEntryV1 other Returns Type Description System.Int32 Equals(IndexEntryV1) Declaration public bool Equals(IndexEntryV1 other) Parameters Type Name IndexEntryV1 other Returns Type Description System.Boolean ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Implements System.IComparable<T> System.IEquatable<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) EnumExtensions.EnumValueName<T>(T) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Index.Hashes.IHasher.html": {
    "href": "dotnet-api/code/EventStore.Core.Index.Hashes.IHasher.html",
    "title": "Interface IHasher | Event Store",
    "keywords": "Interface IHasher Namespace : EventStore.Core.Index.Hashes Assembly : EventStore.Core.dll Syntax public interface IHasher Methods Hash(Byte[]) Declaration uint Hash(byte[] data) Parameters Type Name System.Byte [] data Returns Type Description System.UInt32 Hash(Byte[], Int32, UInt32, UInt32) Declaration uint Hash(byte[] data, int offset, uint len, uint seed) Parameters Type Name System.Byte [] data System.Int32 offset System.UInt32 len System.UInt32 seed Returns Type Description System.UInt32 Hash(String) Declaration uint Hash(string s) Parameters Type Name System.String s Returns Type Description System.UInt32 Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Helpers.html": {
    "href": "dotnet-api/code/EventStore.Core.Helpers.html",
    "title": "Namespace EventStore.Core.Helpers | Event Store",
    "keywords": "Namespace EventStore.Core.Helpers Classes IODispatcher IODispatcherAsync IODispatcherAsync.CancellationScope IODispatcherDelayedMessage LengthPrefixSuffixFramer StreamVersionConverter Delegates IODispatcherAsync.Step"
  },
  "dotnet-api/code/EventStore.Core.Data.ResolvedEvent.html": {
    "href": "dotnet-api/code/EventStore.Core.Data.ResolvedEvent.html",
    "title": "Struct ResolvedEvent | Event Store",
    "keywords": "Struct ResolvedEvent Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Data Assembly : EventStore.Core.dll Syntax public struct ResolvedEvent Fields EmptyArray Declaration public static readonly ResolvedEvent[] EmptyArray Field Value Type ResolvedEvent [] EmptyEvent Declaration public static readonly ResolvedEvent EmptyEvent Field Value Type ResolvedEvent Event Declaration public readonly EventRecord Event Field Value Type EventRecord Link Declaration public readonly EventRecord Link Field Value Type EventRecord OriginalPosition Position of the OriginalEvent (unresolved link or event) if available Declaration public readonly TFPos? OriginalPosition Field Value Type System.Nullable < TFPos > ResolveResult Declaration public readonly ReadEventResult ResolveResult Field Value Type ReadEventResult Properties OriginalEvent Declaration public EventRecord OriginalEvent { get; } Property Value Type EventRecord OriginalEventNumber Declaration public long OriginalEventNumber { get; } Property Value Type System.Int64 OriginalStreamId Declaration public string OriginalStreamId { get; } Property Value Type System.String Methods ForFailedResolvedLink(EventRecord, ReadEventResult, Nullable<Int64>) Declaration public static ResolvedEvent ForFailedResolvedLink(EventRecord link, ReadEventResult resolveResult, long? commitPosition = default(long? )) Parameters Type Name EventRecord link ReadEventResult resolveResult System.Nullable < System.Int64 > commitPosition Returns Type Description ResolvedEvent ForResolvedLink(EventRecord, EventRecord, Nullable<Int64>) Declaration public static ResolvedEvent ForResolvedLink(EventRecord event, EventRecord link, long? commitPosition = default(long? )) Parameters Type Name EventRecord event EventRecord link System.Nullable < System.Int64 > commitPosition Returns Type Description ResolvedEvent ForUnresolvedEvent(EventRecord, Nullable<Int64>) Declaration public static ResolvedEvent ForUnresolvedEvent(EventRecord event, long? commitPosition = default(long? )) Parameters Type Name EventRecord event System.Nullable < System.Int64 > commitPosition Returns Type Description ResolvedEvent WithoutPosition() Declaration public ResolvedEvent WithoutPosition() Returns Type Description ResolvedEvent Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) EnumExtensions.EnumValueName<T>(T) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Data.GossipAdvertiseInfo.html": {
    "href": "dotnet-api/code/EventStore.Core.Data.GossipAdvertiseInfo.html",
    "title": "Class GossipAdvertiseInfo | Event Store",
    "keywords": "Class GossipAdvertiseInfo Inheritance System.Object GossipAdvertiseInfo Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Data Assembly : EventStore.Core.dll Syntax public class GossipAdvertiseInfo Constructors GossipAdvertiseInfo(IPEndPoint, IPEndPoint, IPEndPoint, IPEndPoint, IPEndPoint, IPEndPoint, IPAddress, IPAddress, Int32, Int32) Declaration public GossipAdvertiseInfo(IPEndPoint internalTcp, IPEndPoint internalSecureTcp, IPEndPoint externalTcp, IPEndPoint externalSecureTcp, IPEndPoint internalHttp, IPEndPoint externalHttp, IPAddress advertiseInternalIPAs, IPAddress advertiseExternalIPAs, int advertiseInternalHttpPortAs, int advertiseExternalHttpPortAs) Parameters Type Name System.Net.IPEndPoint internalTcp System.Net.IPEndPoint internalSecureTcp System.Net.IPEndPoint externalTcp System.Net.IPEndPoint externalSecureTcp System.Net.IPEndPoint internalHttp System.Net.IPEndPoint externalHttp System.Net.IPAddress advertiseInternalIPAs System.Net.IPAddress advertiseExternalIPAs System.Int32 advertiseInternalHttpPortAs System.Int32 advertiseExternalHttpPortAs Properties AdvertiseExternalHttpPortAs Declaration public int AdvertiseExternalHttpPortAs { get; set; } Property Value Type System.Int32 AdvertiseExternalIPAs Declaration public IPAddress AdvertiseExternalIPAs { get; set; } Property Value Type System.Net.IPAddress AdvertiseInternalHttpPortAs Declaration public int AdvertiseInternalHttpPortAs { get; set; } Property Value Type System.Int32 AdvertiseInternalIPAs Declaration public IPAddress AdvertiseInternalIPAs { get; set; } Property Value Type System.Net.IPAddress ExternalHttp Declaration public IPEndPoint ExternalHttp { get; set; } Property Value Type System.Net.IPEndPoint ExternalSecureTcp Declaration public IPEndPoint ExternalSecureTcp { get; set; } Property Value Type System.Net.IPEndPoint ExternalTcp Declaration public IPEndPoint ExternalTcp { get; set; } Property Value Type System.Net.IPEndPoint InternalHttp Declaration public IPEndPoint InternalHttp { get; set; } Property Value Type System.Net.IPEndPoint InternalSecureTcp Declaration public IPEndPoint InternalSecureTcp { get; set; } Property Value Type System.Net.IPEndPoint InternalTcp Declaration public IPEndPoint InternalTcp { get; set; } Property Value Type System.Net.IPEndPoint Methods ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Cluster.html": {
    "href": "dotnet-api/code/EventStore.Core.Cluster.html",
    "title": "Namespace EventStore.Core.Cluster | Event Store",
    "keywords": "Namespace EventStore.Core.Cluster Classes ClusterInfo MemberInfo VNodeInfoHelper"
  },
  "dotnet-api/code/EventStore.Core.Cluster.VNodeInfoHelper.html": {
    "href": "dotnet-api/code/EventStore.Core.Cluster.VNodeInfoHelper.html",
    "title": "Class VNodeInfoHelper | Event Store",
    "keywords": "Class VNodeInfoHelper Inheritance System.Object VNodeInfoHelper Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Cluster Assembly : EventStore.Core.dll Syntax public static class VNodeInfoHelper Methods FromMemberInfo(MemberInfo) Declaration public static VNodeInfo FromMemberInfo(MemberInfo member) Parameters Type Name MemberInfo member Returns Type Description VNodeInfo"
  },
  "dotnet-api/code/EventStore.Core.Cluster.Settings.html": {
    "href": "dotnet-api/code/EventStore.Core.Cluster.Settings.html",
    "title": "Namespace EventStore.Core.Cluster.Settings | Event Store",
    "keywords": "Namespace EventStore.Core.Cluster.Settings Classes ClusterConsts ClusterVNodeSettings Enums ClusterVNodeAuthenticationType"
  },
  "http-api/swagger.html": {
    "href": "http-api/swagger.html",
    "title": "HTTP API | Event Store",
    "keywords": "HTTP API"
  },
  "http-api/swagger/Streams.html": {
    "href": "http-api/swagger/Streams.html",
    "title": "Streams | Event Store",
    "keywords": "Streams Endpoints for Stream operations"
  },
  "http-api/swagger/Subscriptions.html": {
    "href": "http-api/swagger/Subscriptions.html",
    "title": "Subscriptions | Event Store",
    "keywords": "Subscriptions Endpoints for Subscription operations"
  },
  "http-api/swagger/Projections.html": {
    "href": "http-api/swagger/Projections.html",
    "title": "Projections | Event Store",
    "keywords": "Projections Endpoints for Projection operations"
  },
  "http-api/swagger/Admin.html": {
    "href": "http-api/swagger/Admin.html",
    "title": "Admin | Event Store",
    "keywords": "Admin Endpoints for Admin operations"
  },
  "http-api/swagger/Info.html": {
    "href": "http-api/swagger/Info.html",
    "title": "Info | Event Store",
    "keywords": "Info Endpoints for Info operations"
  },
  "http-api/swagger/Users.html": {
    "href": "http-api/swagger/Users.html",
    "title": "Users | Event Store",
    "keywords": "Users Endpoints for User operations"
  },
  "http-api/swagger/Stats.html": {
    "href": "http-api/swagger/Stats.html",
    "title": "Stats | Event Store",
    "keywords": "Stats Endpoints for Statistics operations"
  },
  "http-api/swagger/Return Gossip details.html": {
    "href": "http-api/swagger/Return Gossip details.html",
    "title": "Return Gossip details | Event Store",
    "keywords": "Return Gossip details Return Gossip details for nodes in cluster. Request GET /gossip application/json application/json Responses Status Code Description Samples one two 200 OK one two 404 Not found"
  },
  "http-api/swagger/Update Gossip details.html": {
    "href": "http-api/swagger/Update Gossip details.html",
    "title": "Update Gossip details | Event Store",
    "keywords": "Update Gossip details Update Gossip details for nodes in a cluster. Request POST /gossip application/json application/json Responses Status Code Description Samples one two 200 OK one two 404 Not found"
  },
  "http-api/swagger/Streams/Read a stream.html": {
    "href": "http-api/swagger/Streams/Read a stream.html",
    "title": "Read a stream | Event Store",
    "keywords": "Read a stream Read a stream, receiving a standard AtomFeed document as a response. Request GET /streams/{stream}[?embed] Parameters Name Type Value Notes *stream string The stream ID embed string application/json application/json Responses Status Code Description Samples one two 200 OK one two 404 Not found"
  },
  "http-api/swagger/Streams/Write to a stream.html": {
    "href": "http-api/swagger/Streams/Write to a stream.html",
    "title": "Write to a stream | Event Store",
    "keywords": "Write to a stream Write to a stream. Request POST /streams/{stream} Parameters Name Type Value Notes *stream string The name of the stream *stream data Stream events to create ES-ExpectedVersion integer Expected stream version ES-EventType string The event type associated to a posted body ES-EventId integer Event ID associated to a posted body ES-RequiresMaster boolean Wether to run on a master node application/json application/json Responses Status Code Description Samples one two 201 New stream created one two 307 Temporary Redirect one two 400 Write request body invalid"
  },
  "http-api/swagger/Streams/Delete a stream.html": {
    "href": "http-api/swagger/Streams/Delete a stream.html",
    "title": "Delete a stream | Event Store",
    "keywords": "Delete a stream Delete specified stream Request DELETE /streams/{stream} Parameters Name Type Value Notes *stream string The stream ID to delete application/xml application/xml Responses Status Code Description Samples one two 204 Stream deleted"
  },
  "http-api/swagger/Streams/Alternative stream URL.html": {
    "href": "http-api/swagger/Streams/Alternative stream URL.html",
    "title": "Alternative stream URL | Event Store",
    "keywords": "Alternative stream URL A URL generated by Event Store if you don't supply an ID when creating a stream. You then use this URL to post events to. Request POST /streams/{stream}/incoming/{guid} Parameters Name Type Value Notes *stream string The name of the stream *guid string Autogenerated UUID application/json application/json Responses Status Code Description Samples one two 200 New event created one two 400 Bad request"
  },
  "http-api/swagger/Streams/Read stream event.html": {
    "href": "http-api/swagger/Streams/Read stream event.html",
    "title": "Read stream event | Event Store",
    "keywords": "Read stream event Reads a single event from a stream. Request GET /streams/{stream}/{event}[?embed] Parameters Name Type Value Notes *stream string The stream ID *event string The event ID embed string application/json application/json Responses Status Code Description Samples one two 200 OK one two 404 Not found"
  },
  "http-api/swagger/Streams/Get {n} events.html": {
    "href": "http-api/swagger/Streams/Get {n} events.html",
    "title": "Get {n} events | Event Store",
    "keywords": "Get {n} events Paginate backwards though stream events by a specified amount. Request GET /streams/{stream}/{event}/{count}[?embed] Parameters Name Type Value Notes *stream string The stream ID *event string The event ID *count integer How many events to skip backwards from in the request. embed string application/json application/json Responses Status Code Description Samples one two 200 OK one two 404 Not found"
  },
  "http-api/swagger/Streams/Page back through events.html": {
    "href": "http-api/swagger/Streams/Page back through events.html",
    "title": "Page back through events | Event Store",
    "keywords": "Page back through events Paginate backwards though stream events by a specified amount. Request GET /streams/{stream}/{event}/backward/{count}[?embed] Parameters Name Type Value Notes *stream string The stream ID *event string The event ID *count integer How many events to skip backwards from in the request. embed string application/json application/json Responses Status Code Description Samples one two 200 OK one two 404 Not found"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionResult.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionResult.html",
    "title": "Class ProjectionManagementMessage.ProjectionResult | Event Store",
    "keywords": "Class ProjectionManagementMessage.ProjectionResult Inheritance System.Object Message ProjectionManagementMessage.ProjectionDataBase ProjectionManagementMessage.ProjectionResult Inherited Members ProjectionManagementMessage.ProjectionDataBase.Name ProjectionManagementMessage.ProjectionDataBase.Exception ProjectionManagementMessage.ProjectionDataBase.Partition ProjectionManagementMessage.ProjectionDataBase.Position Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class ProjectionResult : ProjectionManagementMessage.ProjectionDataBase Constructors ProjectionResult(String, String, String, CheckpointTag, Exception) Declaration public ProjectionResult(string name, string partition, string result, CheckpointTag position, Exception exception = null) Parameters Type Name System.String name System.String partition System.String result CheckpointTag position System.Exception exception Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides ProjectionManagementMessage.ProjectionDataBase.MsgTypeId Result Declaration public string Result { get; } Property Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionQuery.html",
    "title": "Class ProjectionManagementMessage.ProjectionQuery | Event Store",
    "keywords": "Class ProjectionManagementMessage.ProjectionQuery Inheritance System.Object Message ProjectionManagementMessage.ProjectionQuery Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class ProjectionQuery : Message Constructors ProjectionQuery(String, String, Boolean, ProjectionSourceDefinition, ProjectionOutputConfig) Declaration public ProjectionQuery(string name, string query, bool emitEnabled, ProjectionSourceDefinition definition, ProjectionOutputConfig outputConfig) Parameters Type Name System.String name System.String query System.Boolean emitEnabled ProjectionSourceDefinition definition ProjectionOutputConfig outputConfig Properties Definition Declaration public ProjectionSourceDefinition Definition { get; } Property Value Type ProjectionSourceDefinition EmitEnabled Declaration public bool EmitEnabled { get; } Property Value Type System.Boolean MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Name Declaration public string Name { get; } Property Value Type System.String OutputConfig Declaration public ProjectionOutputConfig OutputConfig { get; } Property Value Type ProjectionOutputConfig Query Declaration public string Query { get; } Property Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionDataBase.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionDataBase.html",
    "title": "Class ProjectionManagementMessage.ProjectionDataBase | Event Store",
    "keywords": "Class ProjectionManagementMessage.ProjectionDataBase Inheritance System.Object Message ProjectionManagementMessage.ProjectionDataBase ProjectionManagementMessage.ProjectionResult ProjectionManagementMessage.ProjectionState Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public abstract class ProjectionDataBase : Message Constructors ProjectionDataBase(String, String, CheckpointTag, Exception) Declaration protected ProjectionDataBase(string name, string partition, CheckpointTag position, Exception exception = null) Parameters Type Name System.String name System.String partition CheckpointTag position System.Exception exception Properties Exception Declaration public Exception Exception { get; } Property Value Type System.Exception MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Name Declaration public string Name { get; } Property Value Type System.String Partition Declaration public string Partition { get; } Property Value Type System.String Position Declaration public CheckpointTag Position { get; } Property Value Type CheckpointTag Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionConfig.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.ProjectionConfig.html",
    "title": "Class ProjectionManagementMessage.ProjectionConfig | Event Store",
    "keywords": "Class ProjectionManagementMessage.ProjectionConfig Inheritance System.Object Message ProjectionManagementMessage.ProjectionConfig Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class ProjectionConfig : Message Constructors ProjectionConfig(Boolean, Boolean, Int32, Int32, Int32, Int32, Int32, Int32) Declaration public ProjectionConfig(bool emitEnabled, bool trackEmittedStreams, int checkpointAfterMs, int checkpointHandledThreshold, int checkpointUnhandledBytesThreshold, int pendingEventsThreshold, int maxWriteBatchLength, int maxAllowedWritesInFlight) Parameters Type Name System.Boolean emitEnabled System.Boolean trackEmittedStreams System.Int32 checkpointAfterMs System.Int32 checkpointHandledThreshold System.Int32 checkpointUnhandledBytesThreshold System.Int32 pendingEventsThreshold System.Int32 maxWriteBatchLength System.Int32 maxAllowedWritesInFlight Properties CheckpointAfterMs Declaration public int CheckpointAfterMs { get; } Property Value Type System.Int32 CheckpointHandledThreshold Declaration public int CheckpointHandledThreshold { get; } Property Value Type System.Int32 CheckpointUnhandledBytesThreshold Declaration public int CheckpointUnhandledBytesThreshold { get; } Property Value Type System.Int32 EmitEnabled Declaration public bool EmitEnabled { get; } Property Value Type System.Boolean MaxAllowedWritesInFlight Declaration public int MaxAllowedWritesInFlight { get; } Property Value Type System.Int32 MaxWriteBatchLength Declaration public int MaxWriteBatchLength { get; } Property Value Type System.Int32 MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId PendingEventsThreshold Declaration public int PendingEventsThreshold { get; } Property Value Type System.Int32 TrackEmittedStreams Declaration public bool TrackEmittedStreams { get; } Property Value Type System.Boolean Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Responses.ResetCommand.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Responses.ResetCommand.html",
    "title": "Class ResetCommand | Event Store",
    "keywords": "Class ResetCommand Inheritance System.Object ResetCommand Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages.Persisted.Responses Assembly : EventStore.Projections.Core.dll Syntax public class ResetCommand Fields Name Declaration public string Name Field Value Type System.String RunAs Declaration public SerializedRunAs RunAs Field Value Type SerializedRunAs Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Responses.ProjectionWorkerStarted.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.Persisted.Responses.ProjectionWorkerStarted.html",
    "title": "Class ProjectionWorkerStarted | Event Store",
    "keywords": "Class ProjectionWorkerStarted Inheritance System.Object ProjectionWorkerStarted Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages.Persisted.Responses Assembly : EventStore.Projections.Core.dll Syntax public class ProjectionWorkerStarted Properties Id Declaration public string Id { get; set; } Property Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ClientMessage.WriteEvents.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ClientMessage.WriteEvents.html",
    "title": "Class ClientMessage.WriteEvents | Event Store",
    "keywords": "Class ClientMessage.WriteEvents Inheritance System.Object Message ClientMessage.WriteRequestMessage ClientMessage.WriteEvents Inherited Members ClientMessage.WriteRequestMessage.InternalCorrId ClientMessage.WriteRequestMessage.CorrelationId ClientMessage.WriteRequestMessage.Envelope ClientMessage.WriteRequestMessage.RequireMaster ClientMessage.WriteRequestMessage.User ClientMessage.WriteRequestMessage.Login ClientMessage.WriteRequestMessage.Password Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class WriteEvents : ClientMessage.WriteRequestMessage Constructors WriteEvents(Guid, Guid, IEnvelope, Boolean, String, Int64, Event, IPrincipal, String, String) Declaration public WriteEvents(Guid internalCorrId, Guid correlationId, IEnvelope envelope, bool requireMaster, string eventStreamId, long expectedVersion, Event event, IPrincipal user, string login = null, string password = null) Parameters Type Name System.Guid internalCorrId System.Guid correlationId IEnvelope envelope System.Boolean requireMaster System.String eventStreamId System.Int64 expectedVersion Event event System.Security.Principal.IPrincipal user System.String login System.String password WriteEvents(Guid, Guid, IEnvelope, Boolean, String, Int64, Event[], IPrincipal, String, String) Declaration public WriteEvents(Guid internalCorrId, Guid correlationId, IEnvelope envelope, bool requireMaster, string eventStreamId, long expectedVersion, Event[] events, IPrincipal user, string login = null, string password = null) Parameters Type Name System.Guid internalCorrId System.Guid correlationId IEnvelope envelope System.Boolean requireMaster System.String eventStreamId System.Int64 expectedVersion Event [] events System.Security.Principal.IPrincipal user System.String login System.String password Fields Events Declaration public readonly Event[] Events Field Value Type Event [] EventStreamId Declaration public readonly string EventStreamId Field Value Type System.String ExpectedVersion Declaration public readonly long ExpectedVersion Field Value Type System.Int64 Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides ClientMessage.WriteRequestMessage.MsgTypeId Methods ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ClientMessage.UpdatePersistentSubscriptionCompleted.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ClientMessage.UpdatePersistentSubscriptionCompleted.html",
    "title": "Class ClientMessage.UpdatePersistentSubscriptionCompleted | Event Store",
    "keywords": "Class ClientMessage.UpdatePersistentSubscriptionCompleted Inheritance System.Object Message ClientMessage.ReadResponseMessage ClientMessage.UpdatePersistentSubscriptionCompleted Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class UpdatePersistentSubscriptionCompleted : ClientMessage.ReadResponseMessage Constructors UpdatePersistentSubscriptionCompleted(Guid, ClientMessage.UpdatePersistentSubscriptionCompleted.UpdatePersistentSubscriptionResult, String) Declaration public UpdatePersistentSubscriptionCompleted(Guid correlationId, ClientMessage.UpdatePersistentSubscriptionCompleted.UpdatePersistentSubscriptionResult result, string reason) Parameters Type Name System.Guid correlationId ClientMessage.UpdatePersistentSubscriptionCompleted.UpdatePersistentSubscriptionResult result System.String reason Fields CorrelationId Declaration public readonly Guid CorrelationId Field Value Type System.Guid Reason Declaration public readonly string Reason Field Value Type System.String Result Declaration public readonly ClientMessage.UpdatePersistentSubscriptionCompleted.UpdatePersistentSubscriptionResult Result Field Value Type ClientMessage.UpdatePersistentSubscriptionCompleted.UpdatePersistentSubscriptionResult Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides ClientMessage.ReadResponseMessage.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ClientMessage.UpdatePersistentSubscriptionCompleted.UpdatePersistentSubscriptionResult.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ClientMessage.UpdatePersistentSubscriptionCompleted.UpdatePersistentSubscriptionResult.html",
    "title": "Enum ClientMessage.UpdatePersistentSubscriptionCompleted.UpdatePersistentSubscriptionResult | Event Store",
    "keywords": "Enum ClientMessage.UpdatePersistentSubscriptionCompleted.UpdatePersistentSubscriptionResult Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public enum UpdatePersistentSubscriptionResult Fields Name Description AccessDenied DoesNotExist Fail Success Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<ClientMessage.UpdatePersistentSubscriptionCompleted.UpdatePersistentSubscriptionResult>() ProtobufExtensions.Serialize<ClientMessage.UpdatePersistentSubscriptionCompleted.UpdatePersistentSubscriptionResult>() ProtobufExtensions.SerializeToArray<ClientMessage.UpdatePersistentSubscriptionCompleted.UpdatePersistentSubscriptionResult>()"
  },
  "dotnet-api/code/EventStore.Core.Messages.ClientMessage.UpdatePersistentSubscription.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ClientMessage.UpdatePersistentSubscription.html",
    "title": "Class ClientMessage.UpdatePersistentSubscription | Event Store",
    "keywords": "Class ClientMessage.UpdatePersistentSubscription Inheritance System.Object Message ClientMessage.ReadRequestMessage ClientMessage.UpdatePersistentSubscription Inherited Members ClientMessage.ReadRequestMessage.InternalCorrId ClientMessage.ReadRequestMessage.CorrelationId ClientMessage.ReadRequestMessage.Envelope ClientMessage.ReadRequestMessage.User ClientMessage.ReadRequestMessage.Expires Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class UpdatePersistentSubscription : ClientMessage.ReadRequestMessage Constructors UpdatePersistentSubscription(Guid, Guid, IEnvelope, String, String, Boolean, Int64, Int32, Boolean, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, String, IPrincipal, String, String) Declaration public UpdatePersistentSubscription(Guid internalCorrId, Guid correlationId, IEnvelope envelope, string eventStreamId, string groupName, bool resolveLinkTos, long startFrom, int messageTimeoutMilliseconds, bool recordStatistics, int maxRetryCount, int bufferSize, int liveBufferSize, int readbatchSize, int checkPointAfterMilliseconds, int minCheckPointCount, int maxCheckPointCount, int maxSubscriberCount, string namedConsumerStrategy, IPrincipal user, string username, string password) Parameters Type Name System.Guid internalCorrId System.Guid correlationId IEnvelope envelope System.String eventStreamId System.String groupName System.Boolean resolveLinkTos System.Int64 startFrom System.Int32 messageTimeoutMilliseconds System.Boolean recordStatistics System.Int32 maxRetryCount System.Int32 bufferSize System.Int32 liveBufferSize System.Int32 readbatchSize System.Int32 checkPointAfterMilliseconds System.Int32 minCheckPointCount System.Int32 maxCheckPointCount System.Int32 maxSubscriberCount System.String namedConsumerStrategy System.Security.Principal.IPrincipal user System.String username System.String password Fields BufferSize Declaration public readonly int BufferSize Field Value Type System.Int32 CheckPointAfterMilliseconds Declaration public int CheckPointAfterMilliseconds Field Value Type System.Int32 EventStreamId Declaration public readonly string EventStreamId Field Value Type System.String GroupName Declaration public readonly string GroupName Field Value Type System.String LiveBufferSize Declaration public readonly int LiveBufferSize Field Value Type System.Int32 MaxCheckPointCount Declaration public int MaxCheckPointCount Field Value Type System.Int32 MaxRetryCount Declaration public readonly int MaxRetryCount Field Value Type System.Int32 MaxSubscriberCount Declaration public int MaxSubscriberCount Field Value Type System.Int32 MessageTimeoutMilliseconds Declaration public readonly int MessageTimeoutMilliseconds Field Value Type System.Int32 MinCheckPointCount Declaration public int MinCheckPointCount Field Value Type System.Int32 NamedConsumerStrategy Declaration public string NamedConsumerStrategy Field Value Type System.String ReadBatchSize Declaration public readonly int ReadBatchSize Field Value Type System.Int32 RecordStatistics Declaration public readonly bool RecordStatistics Field Value Type System.Boolean ResolveLinkTos Declaration public readonly bool ResolveLinkTos Field Value Type System.Boolean StartFrom Declaration public readonly long StartFrom Field Value Type System.Int64 Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides ClientMessage.ReadRequestMessage.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ClientMessage.UnsubscribeFromStream.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ClientMessage.UnsubscribeFromStream.html",
    "title": "Class ClientMessage.UnsubscribeFromStream | Event Store",
    "keywords": "Class ClientMessage.UnsubscribeFromStream Inheritance System.Object Message ClientMessage.ReadRequestMessage ClientMessage.UnsubscribeFromStream Inherited Members ClientMessage.ReadRequestMessage.InternalCorrId ClientMessage.ReadRequestMessage.CorrelationId ClientMessage.ReadRequestMessage.Envelope ClientMessage.ReadRequestMessage.User ClientMessage.ReadRequestMessage.Expires Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class UnsubscribeFromStream : ClientMessage.ReadRequestMessage Constructors UnsubscribeFromStream(Guid, Guid, IEnvelope, IPrincipal) Declaration public UnsubscribeFromStream(Guid internalCorrId, Guid correlationId, IEnvelope envelope, IPrincipal user) Parameters Type Name System.Guid internalCorrId System.Guid correlationId IEnvelope envelope System.Security.Principal.IPrincipal user Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides ClientMessage.ReadRequestMessage.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ClientMessage.ReadAllEventsForward.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ClientMessage.ReadAllEventsForward.html",
    "title": "Class ClientMessage.ReadAllEventsForward | Event Store",
    "keywords": "Class ClientMessage.ReadAllEventsForward Inheritance System.Object Message ClientMessage.ReadRequestMessage ClientMessage.ReadAllEventsForward Inherited Members ClientMessage.ReadRequestMessage.InternalCorrId ClientMessage.ReadRequestMessage.CorrelationId ClientMessage.ReadRequestMessage.Envelope ClientMessage.ReadRequestMessage.User ClientMessage.ReadRequestMessage.Expires Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class ReadAllEventsForward : ClientMessage.ReadRequestMessage Constructors ReadAllEventsForward(Guid, Guid, IEnvelope, Int64, Int64, Int32, Boolean, Boolean, Nullable<Int64>, IPrincipal, Nullable<TimeSpan>) Declaration public ReadAllEventsForward(Guid internalCorrId, Guid correlationId, IEnvelope envelope, long commitPosition, long preparePosition, int maxCount, bool resolveLinkTos, bool requireMaster, long? validationTfLastCommitPosition, IPrincipal user, TimeSpan? longPollTimeout = default(TimeSpan? )) Parameters Type Name System.Guid internalCorrId System.Guid correlationId IEnvelope envelope System.Int64 commitPosition System.Int64 preparePosition System.Int32 maxCount System.Boolean resolveLinkTos System.Boolean requireMaster System.Nullable < System.Int64 > validationTfLastCommitPosition System.Security.Principal.IPrincipal user System.Nullable < System.TimeSpan > longPollTimeout Fields CommitPosition Declaration public readonly long CommitPosition Field Value Type System.Int64 LongPollTimeout Declaration public readonly TimeSpan? LongPollTimeout Field Value Type System.Nullable < System.TimeSpan > MaxCount Declaration public readonly int MaxCount Field Value Type System.Int32 PreparePosition Declaration public readonly long PreparePosition Field Value Type System.Int64 RequireMaster Declaration public readonly bool RequireMaster Field Value Type System.Boolean ResolveLinkTos Declaration public readonly bool ResolveLinkTos Field Value Type System.Boolean ValidationTfLastCommitPosition Declaration public readonly long? ValidationTfLastCommitPosition Field Value Type System.Nullable < System.Int64 > Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides ClientMessage.ReadRequestMessage.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Index.html": {
    "href": "dotnet-api/code/EventStore.Core.Index.html",
    "title": "Namespace EventStore.Core.Index | Event Store",
    "keywords": "Namespace EventStore.Core.Index Classes GuidFilenameProvider HashListMemTable IndexMap MergeResult PTable PTableFooter PTableHeader PTableVersions ReverseComparer<T> ScavengeResult SortedListExtensions TableIndex Structs IndexEntry IndexEntryV1 IndexKey Interfaces IIndexFilenameProvider IIndexScavengerLog IMemTable ISearchTable ITableIndex Enums FileType"
  },
  "dotnet-api/code/EventStore.Core.Index.TableIndex.html": {
    "href": "dotnet-api/code/EventStore.Core.Index.TableIndex.html",
    "title": "Class TableIndex | Event Store",
    "keywords": "Class TableIndex Inheritance System.Object TableIndex Implements ITableIndex Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Index Assembly : EventStore.Core.dll Syntax public class TableIndex : ITableIndex Constructors TableIndex(String, IHasher, IHasher, Func<IMemTable>, Func<TFReaderLease>, Byte, Int32, Int32, Int32, Boolean, Boolean, Boolean, Int32, Int32) Declaration public TableIndex(string directory, IHasher lowHasher, IHasher highHasher, Func<IMemTable> memTableFactory, Func<TFReaderLease> tfReaderFactory, byte ptableVersion, int maxAutoMergeIndexLevel, int maxSizeForMemory = 1000000, int maxTablesPerLevel = 4, bool additionalReclaim = false, bool inMem = false, bool skipIndexVerify = false, int indexCacheDepth = 16, int initializationThreads = 1) Parameters Type Name System.String directory IHasher lowHasher IHasher highHasher System.Func < IMemTable > memTableFactory System.Func < TFReaderLease > tfReaderFactory System.Byte ptableVersion System.Int32 maxAutoMergeIndexLevel System.Int32 maxSizeForMemory System.Int32 maxTablesPerLevel System.Boolean additionalReclaim System.Boolean inMem System.Boolean skipIndexVerify System.Int32 indexCacheDepth System.Int32 initializationThreads Fields ForceIndexVerifyFilename Declaration public const string ForceIndexVerifyFilename = \".forceverify\" Field Value Type System.String IndexMapFilename Declaration public const string IndexMapFilename = \"indexmap\" Field Value Type System.String Properties CommitCheckpoint Declaration public long CommitCheckpoint { get; } Property Value Type System.Int64 IsBackgroundTaskRunning Declaration public bool IsBackgroundTaskRunning { get; } Property Value Type System.Boolean PrepareCheckpoint Declaration public long PrepareCheckpoint { get; } Property Value Type System.Int64 Methods Add(Int64, String, Int64, Int64) Declaration public void Add(long commitPos, string streamId, long version, long position) Parameters Type Name System.Int64 commitPos System.String streamId System.Int64 version System.Int64 position AddEntries(Int64, IList<IndexKey>) Declaration public void AddEntries(long commitPos, IList<IndexKey> entries) Parameters Type Name System.Int64 commitPos System.Collections.Generic.IList < IndexKey > entries Close(Boolean) Declaration public void Close(bool removeFiles = true) Parameters Type Name System.Boolean removeFiles GetRange(String, Int64, Int64, Nullable<Int32>) Declaration public IEnumerable<IndexEntry> GetRange(string streamId, long startVersion, long endVersion, int? limit = default(int? )) Parameters Type Name System.String streamId System.Int64 startVersion System.Int64 endVersion System.Nullable < System.Int32 > limit Returns Type Description System.Collections.Generic.IEnumerable < IndexEntry > Initialize(Int64) Declaration public void Initialize(long chaserCheckpoint) Parameters Type Name System.Int64 chaserCheckpoint MergeIndexes() Declaration public Task MergeIndexes() Returns Type Description System.Threading.Tasks.Task Scavenge(IIndexScavengerLog, CancellationToken) Declaration public void Scavenge(IIndexScavengerLog log, CancellationToken ct) Parameters Type Name IIndexScavengerLog log System.Threading.CancellationToken ct TryGetLatestEntry(String, out IndexEntry) Declaration public bool TryGetLatestEntry(string streamId, out IndexEntry entry) Parameters Type Name System.String streamId IndexEntry entry Returns Type Description System.Boolean TryGetOldestEntry(String, out IndexEntry) Declaration public bool TryGetOldestEntry(string streamId, out IndexEntry entry) Parameters Type Name System.String streamId IndexEntry entry Returns Type Description System.Boolean TryGetOneValue(String, Int64, out Int64) Declaration public bool TryGetOneValue(string streamId, long version, out long position) Parameters Type Name System.String streamId System.Int64 version System.Int64 position Returns Type Description System.Boolean TryManualMerge() Declaration public void TryManualMerge() Implements ITableIndex Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Index.SortedListExtensions.html": {
    "href": "dotnet-api/code/EventStore.Core.Index.SortedListExtensions.html",
    "title": "Class SortedListExtensions | Event Store",
    "keywords": "Class SortedListExtensions Inheritance System.Object SortedListExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Index Assembly : EventStore.Core.dll Syntax public static class SortedListExtensions Methods LowerBound<TKey, TValue>(SortedList<TKey, TValue>, TKey) Returns the index of smallest (according to comparer) element greater than or equal to provided key. Returns -1 if all keys are smaller than provided key. Declaration public static int LowerBound<TKey, TValue>(this SortedList<TKey, TValue> list, TKey key) Parameters Type Name System.Collections.Generic.SortedList <TKey, TValue> list TKey key Returns Type Description System.Int32 Type Parameters Name Description TKey TValue UpperBound<TKey, TValue>(SortedList<TKey, TValue>, TKey) Returns the index of largest (according to comparer) element less than or equal to provided key. Returns -1 if all keys are greater than provided key. Declaration public static int UpperBound<TKey, TValue>(this SortedList<TKey, TValue> list, TKey key) Parameters Type Name System.Collections.Generic.SortedList <TKey, TValue> list TKey key Returns Type Description System.Int32 Type Parameters Name Description TKey TValue"
  },
  "dotnet-api/code/EventStore.Core.Index.ScavengeResult.html": {
    "href": "dotnet-api/code/EventStore.Core.Index.ScavengeResult.html",
    "title": "Class ScavengeResult | Event Store",
    "keywords": "Class ScavengeResult Inheritance System.Object ScavengeResult Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Index Assembly : EventStore.Core.dll Syntax public class ScavengeResult Fields Index Declaration public readonly int Index Field Value Type System.Int32 IsSuccess Declaration public readonly bool IsSuccess Field Value Type System.Boolean Level Declaration public readonly int Level Field Value Type System.Int32 NewTable Declaration public readonly PTable NewTable Field Value Type PTable OldTable Declaration public readonly PTable OldTable Field Value Type PTable ScavengedMap Declaration public readonly IndexMap ScavengedMap Field Value Type IndexMap SpaceSaved Declaration public readonly long SpaceSaved Field Value Type System.Int64 Methods Failed(PTable, Int32, Int32) Declaration public static ScavengeResult Failed(PTable oldTable, int level, int index) Parameters Type Name PTable oldTable System.Int32 level System.Int32 index Returns Type Description ScavengeResult Success(IndexMap, PTable, PTable, Int64, Int32, Int32) Declaration public static ScavengeResult Success(IndexMap scavengedMap, PTable oldTable, PTable newTable, long spaceSaved, int level, int index) Parameters Type Name IndexMap scavengedMap PTable oldTable PTable newTable System.Int64 spaceSaved System.Int32 level System.Int32 index Returns Type Description ScavengeResult Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Bus.QueuedHandlerMRES.html": {
    "href": "dotnet-api/code/EventStore.Core.Bus.QueuedHandlerMRES.html",
    "title": "Class QueuedHandlerMRES | Event Store",
    "keywords": "Class QueuedHandlerMRES Lightweight in-memory queue with a separate thread in which it passes messages to the consumer. It also tracks statistics about the message processing to help in identifying bottlenecks Inheritance System.Object QueuedHandlerMRES QueuedHandler Implements IQueuedHandler IHandle < Message > IPublisher IMonitoredQueue IThreadSafePublisher Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Bus Assembly : EventStore.Core.dll Syntax public class QueuedHandlerMRES : IQueuedHandler, IHandle<Message>, IPublisher, IMonitoredQueue, IThreadSafePublisher Constructors QueuedHandlerMRES(IHandle<Message>, String, Boolean, Nullable<TimeSpan>, Nullable<TimeSpan>, String) Declaration public QueuedHandlerMRES(IHandle<Message> consumer, string name, bool watchSlowMsg = true, TimeSpan? slowMsgThreshold = default(TimeSpan? ), TimeSpan? threadStopWaitTimeout = default(TimeSpan? ), string groupName = null) Parameters Type Name IHandle < Message > consumer System.String name System.Boolean watchSlowMsg System.Nullable < System.TimeSpan > slowMsgThreshold System.Nullable < System.TimeSpan > threadStopWaitTimeout System.String groupName Properties MessageCount Declaration public int MessageCount { get; } Property Value Type System.Int32 Name Declaration public string Name { get; } Property Value Type System.String Methods GetStatistics() Declaration public QueueStats GetStatistics() Returns Type Description QueueStats Handle(Message) Declaration public void Handle(Message message) Parameters Type Name Message message Publish(Message) Declaration public void Publish(Message message) Parameters Type Name Message message RequestStop() Declaration public void RequestStop() Start() Declaration public Task Start() Returns Type Description System.Threading.Tasks.Task Stop() Declaration public void Stop() Implements IQueuedHandler IHandle<T> IPublisher IMonitoredQueue IThreadSafePublisher Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) HandleExtensions.WidenFrom<TInput, TOutput>(IHandle<TOutput>) HandleExtensions.NarrowTo<TInput, TOutput>(IHandle<TOutput>) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Bus.InMemoryBusUnoptimized.html": {
    "href": "dotnet-api/code/EventStore.Core.Bus.InMemoryBusUnoptimized.html",
    "title": "Class InMemoryBusUnoptimized | Event Store",
    "keywords": "Class InMemoryBusUnoptimized Synchronously dispatches messages to zero or more subscribers. Subscribers are responsible for handling exceptions Inheritance System.Object InMemoryBusUnoptimized Implements IBus ISubscriber IPublisher IHandle < Message > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Bus Assembly : EventStore.Core.dll Syntax public class InMemoryBusUnoptimized : IBus, ISubscriber, IPublisher, IHandle<Message> Constructors InMemoryBusUnoptimized(String, Boolean, Nullable<TimeSpan>) Declaration public InMemoryBusUnoptimized(string name, bool watchSlowMsg = true, TimeSpan? slowMsgThreshold = default(TimeSpan? )) Parameters Type Name System.String name System.Boolean watchSlowMsg System.Nullable < System.TimeSpan > slowMsgThreshold Fields DefaultSlowMessageThreshold Declaration public static readonly TimeSpan DefaultSlowMessageThreshold Field Value Type System.TimeSpan Properties Name Declaration public string Name { get; } Property Value Type System.String Methods CreateTest() Declaration public static InMemoryBusUnoptimized CreateTest() Returns Type Description InMemoryBusUnoptimized Handle(Message) Declaration public void Handle(Message message) Parameters Type Name Message message Publish(Message) Declaration public void Publish(Message message) Parameters Type Name Message message Subscribe<T>(IHandle<T>) Declaration public void Subscribe<T>(IHandle<T> handler) where T : Message Parameters Type Name IHandle <T> handler Type Parameters Name Description T Unsubscribe<T>(IHandle<T>) Declaration public void Unsubscribe<T>(IHandle<T> handler) where T : Message Parameters Type Name IHandle <T> handler Type Parameters Name Description T Implements IBus ISubscriber IPublisher IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) HandleExtensions.WidenFrom<TInput, TOutput>(IHandle<TOutput>) HandleExtensions.NarrowTo<TInput, TOutput>(IHandle<TOutput>) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Bus.InMemoryBus2.html": {
    "href": "dotnet-api/code/EventStore.Core.Bus.InMemoryBus2.html",
    "title": "Class InMemoryBus2 | Event Store",
    "keywords": "Class InMemoryBus2 Synchronously dispatches messages to zero or more subscribers. Subscribers are responsible for handling exceptions Inheritance System.Object InMemoryBus2 Implements IBus ISubscriber IPublisher IHandle < Message > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Bus Assembly : EventStore.Core.dll Syntax public class InMemoryBus2 : IBus, ISubscriber, IPublisher, IHandle<Message> Constructors InMemoryBus2(String, Boolean, Nullable<TimeSpan>) Declaration public InMemoryBus2(string name, bool watchSlowMsg = true, TimeSpan? slowMsgThreshold = default(TimeSpan? )) Parameters Type Name System.String name System.Boolean watchSlowMsg System.Nullable < System.TimeSpan > slowMsgThreshold Fields DefaultSlowMessageThreshold Declaration public static readonly TimeSpan DefaultSlowMessageThreshold Field Value Type System.TimeSpan Properties Name Declaration public string Name { get; } Property Value Type System.String Methods CreateTest() Declaration public static InMemoryBus2 CreateTest() Returns Type Description InMemoryBus2 Handle(Message) Declaration public void Handle(Message message) Parameters Type Name Message message Publish(Message) Declaration public void Publish(Message message) Parameters Type Name Message message Subscribe<T>(IHandle<T>) Declaration public void Subscribe<T>(IHandle<T> handler) where T : Message Parameters Type Name IHandle <T> handler Type Parameters Name Description T Unsubscribe<T>(IHandle<T>) Declaration public void Unsubscribe<T>(IHandle<T> handler) where T : Message Parameters Type Name IHandle <T> handler Type Parameters Name Description T Implements IBus ISubscriber IPublisher IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) HandleExtensions.WidenFrom<TInput, TOutput>(IHandle<TOutput>) HandleExtensions.NarrowTo<TInput, TOutput>(IHandle<TOutput>) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Bus.InMemoryBus.html": {
    "href": "dotnet-api/code/EventStore.Core.Bus.InMemoryBus.html",
    "title": "Class InMemoryBus | Event Store",
    "keywords": "Class InMemoryBus Synchronously dispatches messages to zero or more subscribers. Subscribers are responsible for handling exceptions Inheritance System.Object InMemoryBus Implements IBus ISubscriber IPublisher IHandle < Message > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Bus Assembly : EventStore.Core.dll Syntax public class InMemoryBus : IBus, ISubscriber, IPublisher, IHandle<Message> Constructors InMemoryBus(String, Boolean, Nullable<TimeSpan>) Declaration public InMemoryBus(string name, bool watchSlowMsg = true, TimeSpan? slowMsgThreshold = default(TimeSpan? )) Parameters Type Name System.String name System.Boolean watchSlowMsg System.Nullable < System.TimeSpan > slowMsgThreshold Fields DefaultSlowMessageThreshold Declaration public static readonly TimeSpan DefaultSlowMessageThreshold Field Value Type System.TimeSpan Properties Name Declaration public string Name { get; } Property Value Type System.String Methods CreateTest() Declaration public static InMemoryBus CreateTest() Returns Type Description InMemoryBus Handle(Message) Declaration public void Handle(Message message) Parameters Type Name Message message Publish(Message) Declaration public void Publish(Message message) Parameters Type Name Message message Subscribe<T>(IHandle<T>) Declaration public void Subscribe<T>(IHandle<T> handler) where T : Message Parameters Type Name IHandle <T> handler Type Parameters Name Description T Unsubscribe<T>(IHandle<T>) Declaration public void Unsubscribe<T>(IHandle<T> handler) where T : Message Parameters Type Name IHandle <T> handler Type Parameters Name Description T Implements IBus ISubscriber IPublisher IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) HandleExtensions.WidenFrom<TInput, TOutput>(IHandle<TOutput>) HandleExtensions.NarrowTo<TInput, TOutput>(IHandle<TOutput>) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Bus.IThreadSafePublisher.html": {
    "href": "dotnet-api/code/EventStore.Core.Bus.IThreadSafePublisher.html",
    "title": "Interface IThreadSafePublisher | Event Store",
    "keywords": "Interface IThreadSafePublisher Marks IPublisher as being OK for cross-thread publishing (e.g. in replying to envelopes). Namespace : EventStore.Core.Bus Assembly : EventStore.Core.dll Syntax public interface IThreadSafePublisher Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Bus.IQueuedHandler.html": {
    "href": "dotnet-api/code/EventStore.Core.Bus.IQueuedHandler.html",
    "title": "Interface IQueuedHandler | Event Store",
    "keywords": "Interface IQueuedHandler Inherited Members IHandle<Message>.Handle(Message) IPublisher.Publish(Message) Namespace : EventStore.Core.Bus Assembly : EventStore.Core.dll Syntax public interface IQueuedHandler : IHandle<Message>, IPublisher Properties Name Declaration string Name { get; } Property Value Type System.String Methods GetStatistics() Declaration QueueStats GetStatistics() Returns Type Description QueueStats RequestStop() Declaration void RequestStop() Start() Declaration Task Start() Returns Type Description System.Threading.Tasks.Task Stop() Declaration void Stop() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) HandleExtensions.WidenFrom<TInput, TOutput>(IHandle<TOutput>) HandleExtensions.NarrowTo<TInput, TOutput>(IHandle<TOutput>) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Bus.IPublisher.html": {
    "href": "dotnet-api/code/EventStore.Core.Bus.IPublisher.html",
    "title": "Interface IPublisher | Event Store",
    "keywords": "Interface IPublisher Namespace : EventStore.Core.Bus Assembly : EventStore.Core.dll Syntax public interface IPublisher Methods Publish(Message) Declaration void Publish(Message message) Parameters Type Name Message message Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Authentication.PasswordHashAlgorithm.html": {
    "href": "dotnet-api/code/EventStore.Core.Authentication.PasswordHashAlgorithm.html",
    "title": "Class PasswordHashAlgorithm | Event Store",
    "keywords": "Class PasswordHashAlgorithm Inheritance System.Object PasswordHashAlgorithm Rfc2898PasswordHashAlgorithm Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Authentication Assembly : EventStore.Core.dll Syntax public abstract class PasswordHashAlgorithm Methods Hash(String, out String, out String) Declaration public abstract void Hash(string password, out string hash, out string salt) Parameters Type Name System.String password System.String hash System.String salt Verify(String, String, String) Declaration public abstract bool Verify(string password, string hash, string salt) Parameters Type Name System.String password System.String hash System.String salt Returns Type Description System.Boolean Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Authentication.OpenGenericPrincipal.html": {
    "href": "dotnet-api/code/EventStore.Core.Authentication.OpenGenericPrincipal.html",
    "title": "Class OpenGenericPrincipal | Event Store",
    "keywords": "Class OpenGenericPrincipal Inheritance System.Object OpenGenericPrincipal Implements System.Security.Principal.IPrincipal Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Authentication Assembly : EventStore.Core.dll Syntax public class OpenGenericPrincipal : IPrincipal Constructors OpenGenericPrincipal(IIdentity, String[]) Declaration public OpenGenericPrincipal(IIdentity identity, string[] roles) Parameters Type Name System.Security.Principal.IIdentity identity System.String [] roles OpenGenericPrincipal(String, String[]) Declaration public OpenGenericPrincipal(string identity, params string[] roles) Parameters Type Name System.String identity System.String [] roles Properties Identity Declaration public IIdentity Identity { get; } Property Value Type System.Security.Principal.IIdentity Roles Declaration public string[] Roles { get; } Property Value Type System.String [] Methods IsInRole(String) Declaration public bool IsInRole(string role) Parameters Type Name System.String role Returns Type Description System.Boolean Implements System.Security.Principal.IPrincipal Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Authentication.AuthenticationRequest.html": {
    "href": "dotnet-api/code/EventStore.Core.Authentication.AuthenticationRequest.html",
    "title": "Class AuthenticationRequest | Event Store",
    "keywords": "Class AuthenticationRequest Inheritance System.Object AuthenticationRequest Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Authentication Assembly : EventStore.Core.dll Syntax public abstract class AuthenticationRequest Constructors AuthenticationRequest(String, String) Declaration protected AuthenticationRequest(string name, string suppliedPassword) Parameters Type Name System.String name System.String suppliedPassword Fields Name Declaration public readonly string Name Field Value Type System.String SuppliedPassword Declaration public readonly string SuppliedPassword Field Value Type System.String Methods Authenticated(IPrincipal) Declaration public abstract void Authenticated(IPrincipal principal) Parameters Type Name System.Security.Principal.IPrincipal principal Error() Declaration public abstract void Error() NotReady() Declaration public abstract void NotReady() Unauthorized() Declaration public abstract void Unauthorized() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Common.Utils.html": {
    "href": "dotnet-api/code/EventStore.Common.Utils.html",
    "title": "Namespace EventStore.Common.Utils | Event Store",
    "keywords": "Namespace EventStore.Common.Utils Classes Application BooleanTypeConverter BytesFormatter ConcurrentQueueWrapper<T> Empty EndpointExtensions Ensure EnumerableExtensions FileStreamExtensions Helper HostName IPAddressConverter IPEndPointArrayConverter IPEndPointComparer IPEndPointConverter IPFinder Json Locations OS Platforms Runtime ShellExecutor StringExtensions VersionInfo These are patched by the build process! Do not edit them manually. Enums ExitCode OsFlavor Platform"
  },
  "dotnet-api/code/EventStore.Common.Utils.Platforms.html": {
    "href": "dotnet-api/code/EventStore.Common.Utils.Platforms.html",
    "title": "Class Platforms | Event Store",
    "keywords": "Class Platforms Inheritance System.Object Platforms Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Common.Utils Assembly : EventStore.Common.dll Syntax public class Platforms Methods GetPlatform() Declaration public static Platform GetPlatform() Returns Type Description Platform Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Common.Utils.Platform.html": {
    "href": "dotnet-api/code/EventStore.Common.Utils.Platform.html",
    "title": "Enum Platform | Event Store",
    "keywords": "Enum Platform Namespace : EventStore.Common.Utils Assembly : EventStore.Common.dll Syntax public enum Platform Fields Name Description Linux Mac Windows Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<Platform>() ProtobufExtensions.Serialize<Platform>() ProtobufExtensions.SerializeToArray<Platform>()"
  },
  "dotnet-api/code/EventStore.Common.Utils.Locations.html": {
    "href": "dotnet-api/code/EventStore.Common.Utils.Locations.html",
    "title": "Class Locations | Event Store",
    "keywords": "Class Locations Inheritance System.Object Locations Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Common.Utils Assembly : EventStore.Common.dll Syntax public class Locations Fields ApplicationDirectory Declaration public static readonly string ApplicationDirectory Field Value Type System.String DefaultConfigurationDirectory Declaration public static readonly string DefaultConfigurationDirectory Field Value Type System.String DefaultContentDirectory Declaration public static readonly string DefaultContentDirectory Field Value Type System.String DefaultDataDirectory Declaration public static readonly string DefaultDataDirectory Field Value Type System.String DefaultLogDirectory Declaration public static readonly string DefaultLogDirectory Field Value Type System.String DefaultTestClientLogDirectory Declaration public static readonly string DefaultTestClientLogDirectory Field Value Type System.String FallbackDefaultDataDirectory Declaration public static readonly string FallbackDefaultDataDirectory Field Value Type System.String PluginsDirectory Declaration public static readonly string PluginsDirectory Field Value Type System.String PreludeDirectory Declaration public static readonly string PreludeDirectory Field Value Type System.String PreludeResourcesPath Declaration public static readonly string PreludeResourcesPath Field Value Type System.String ProjectionsDirectory Declaration public static readonly string ProjectionsDirectory Field Value Type System.String WebContentDirectory Declaration public static readonly string WebContentDirectory Field Value Type System.String Methods GetPrecededLocation(String[]) Returns the preceded location by checking the existence of the directory. The local directory should be the first priority as the first element followed by the global default location as last element. Declaration public static string GetPrecededLocation(params string[] locations) Parameters Type Name System.String [] locations Returns Type Description System.String the preceded location Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Common.Utils.Json.html": {
    "href": "dotnet-api/code/EventStore.Common.Utils.Json.html",
    "title": "Class Json | Event Store",
    "keywords": "Class Json Inheritance System.Object Json Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Common.Utils Assembly : EventStore.Common.dll Syntax public static class Json Fields JsonSettings Declaration public static readonly JsonSerializerSettings JsonSettings Field Value Type Newtonsoft.Json.JsonSerializerSettings Methods DeserializeObject(JObject, Type, JsonConverter[]) Declaration public static object DeserializeObject(JObject value, Type type, params JsonConverter[] converters) Parameters Type Name Newtonsoft.Json.Linq.JObject value System.Type type Newtonsoft.Json.JsonConverter [] converters Returns Type Description System.Object DeserializeObject(JObject, Type, JsonSerializerSettings) Declaration public static object DeserializeObject(JObject value, Type type, JsonSerializerSettings settings) Parameters Type Name Newtonsoft.Json.Linq.JObject value System.Type type Newtonsoft.Json.JsonSerializerSettings settings Returns Type Description System.Object IsValidJson(Byte[]) Declaration public static bool IsValidJson(this byte[] value) Parameters Type Name System.Byte [] value Returns Type Description System.Boolean ParseJson<T>(Byte[]) Declaration public static T ParseJson<T>(this byte[] json) Parameters Type Name System.Byte [] json Returns Type Description T Type Parameters Name Description T ParseJson<T>(String) Declaration public static T ParseJson<T>(this string json) Parameters Type Name System.String json Returns Type Description T Type Parameters Name Description T ToCanonicalJson(Object) Declaration public static string ToCanonicalJson(this object source) Parameters Type Name System.Object source Returns Type Description System.String ToJson(Object) Declaration public static string ToJson(this object source) Parameters Type Name System.Object source Returns Type Description System.String ToJsonBytes(Object) Declaration public static byte[] ToJsonBytes(this object source) Parameters Type Name System.Object source Returns Type Description System.Byte [] ToXmlDocument(JObject, String, Boolean) Declaration public static XmlDocument ToXmlDocument(this JObject value, string deserializeRootElementName, bool writeArrayAttribute) Parameters Type Name Newtonsoft.Json.Linq.JObject value System.String deserializeRootElementName System.Boolean writeArrayAttribute Returns Type Description System.Xml.XmlDocument"
  },
  "dotnet-api/code/EventStore.Common.Utils.IPAddressConverter.html": {
    "href": "dotnet-api/code/EventStore.Common.Utils.IPAddressConverter.html",
    "title": "Class IPAddressConverter | Event Store",
    "keywords": "Class IPAddressConverter Inheritance System.Object System.ComponentModel.TypeConverter IPAddressConverter Inherited Members System.ComponentModel.TypeConverter.CanConvertFrom(System.Type) System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type) System.ComponentModel.TypeConverter.CanConvertTo(System.Type) System.ComponentModel.TypeConverter.ConvertFrom(System.Object) System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext, System.String) System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String) System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.String) System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.String) System.ComponentModel.TypeConverter.ConvertFromString(System.String) System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object, System.Type) System.ComponentModel.TypeConverter.ConvertTo(System.Object, System.Type) System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext, System.Object) System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object) System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object) System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext, System.Object) System.ComponentModel.TypeConverter.ConvertToString(System.Object) System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary) System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext, System.Collections.IDictionary) System.ComponentModel.TypeConverter.GetConvertFromException(System.Object) System.ComponentModel.TypeConverter.GetConvertToException(System.Object, System.Type) System.ComponentModel.TypeConverter.GetCreateInstanceSupported() System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext) System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext, System.Object) System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext, System.Object, System.Attribute[]) System.ComponentModel.TypeConverter.GetProperties(System.Object) System.ComponentModel.TypeConverter.GetPropertiesSupported() System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext) System.ComponentModel.TypeConverter.GetStandardValues() System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext) System.ComponentModel.TypeConverter.GetStandardValuesExclusive() System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext) System.ComponentModel.TypeConverter.GetStandardValuesSupported() System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext) System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext, System.Object) System.ComponentModel.TypeConverter.IsValid(System.Object) System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection, System.String[]) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Common.Utils Assembly : EventStore.Common.dll Syntax public class IPAddressConverter : TypeConverter Methods CanConvertFrom(ITypeDescriptorContext, Type) Declaration public override bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType) Parameters Type Name System.ComponentModel.ITypeDescriptorContext context System.Type sourceType Returns Type Description System.Boolean Overrides System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type) ConvertFrom(ITypeDescriptorContext, CultureInfo, Object) Declaration public override object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value) Parameters Type Name System.ComponentModel.ITypeDescriptorContext context System.Globalization.CultureInfo culture System.Object value Returns Type Description System.Object Overrides System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object) Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Common.Utils.HostName.html": {
    "href": "dotnet-api/code/EventStore.Common.Utils.HostName.html",
    "title": "Class HostName | Event Store",
    "keywords": "Class HostName Inheritance System.Object HostName Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Common.Utils Assembly : EventStore.Common.dll Syntax public class HostName Methods Combine(Uri, String, Object[]) Declaration public static string Combine(Uri responseUrl, string relativeUri, params object[] arg) Parameters Type Name System.Uri responseUrl System.String relativeUri System.Object [] arg Returns Type Description System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Common.Utils.Ensure.html": {
    "href": "dotnet-api/code/EventStore.Common.Utils.Ensure.html",
    "title": "Class Ensure | Event Store",
    "keywords": "Class Ensure Inheritance System.Object Ensure Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Common.Utils Assembly : EventStore.Common.dll Syntax public static class Ensure Methods Equal(Boolean, Boolean, String) Declaration public static void Equal(bool expected, bool actual, string argumentName) Parameters Type Name System.Boolean expected System.Boolean actual System.String argumentName Equal(Int32, Int32, String) Declaration public static void Equal(int expected, int actual, string argumentName) Parameters Type Name System.Int32 expected System.Int32 actual System.String argumentName Equal(Int64, Int64, String) Declaration public static void Equal(long expected, long actual, string argumentName) Parameters Type Name System.Int64 expected System.Int64 actual System.String argumentName Nonnegative(Int32, String) Declaration public static void Nonnegative(int number, string argumentName) Parameters Type Name System.Int32 number System.String argumentName Nonnegative(Int64, String) Declaration public static void Nonnegative(long number, string argumentName) Parameters Type Name System.Int64 number System.String argumentName NotEmptyGuid(Guid, String) Declaration public static void NotEmptyGuid(Guid guid, string argumentName) Parameters Type Name System.Guid guid System.String argumentName NotNull<T>(T, String) Declaration public static void NotNull<T>(T argument, string argumentName) where T : class Parameters Type Name T argument System.String argumentName Type Parameters Name Description T NotNullOrEmpty(String, String) Declaration public static void NotNullOrEmpty(string argument, string argumentName) Parameters Type Name System.String argument System.String argumentName Positive(Int32, String) Declaration public static void Positive(int number, string argumentName) Parameters Type Name System.Int32 number System.String argumentName Positive(Int64, String) Declaration public static void Positive(long number, string argumentName) Parameters Type Name System.Int64 number System.String argumentName"
  },
  "dotnet-api/code/EventStore.Common.Utils.EndpointExtensions.html": {
    "href": "dotnet-api/code/EventStore.Common.Utils.EndpointExtensions.html",
    "title": "Class EndpointExtensions | Event Store",
    "keywords": "Class EndpointExtensions Inheritance System.Object EndpointExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Common.Utils Assembly : EventStore.Common.dll Syntax public static class EndpointExtensions Fields HTTP_SCHEMA Declaration public const string HTTP_SCHEMA = \"http\" Field Value Type System.String HTTPS_SCHEMA Declaration public const string HTTPS_SCHEMA = \"https\" Field Value Type System.String Methods ToHttpUrl(EndPoint, String, String) Declaration public static string ToHttpUrl(this EndPoint endPoint, string schema, string rawUrl = null) Parameters Type Name System.Net.EndPoint endPoint System.String schema System.String rawUrl Returns Type Description System.String ToHttpUrl(EndPoint, String, String, Object[]) Declaration public static string ToHttpUrl(this EndPoint endPoint, string schema, string formatString, params object[] args) Parameters Type Name System.Net.EndPoint endPoint System.String schema System.String formatString System.Object [] args Returns Type Description System.String"
  },
  "dotnet-api/code/EventStore.Common.Utils.Application.html": {
    "href": "dotnet-api/code/EventStore.Common.Utils.Application.html",
    "title": "Class Application | Event Store",
    "keywords": "Class Application Inheritance System.Object Application Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Common.Utils Assembly : EventStore.Common.dll Syntax public class Application Fields AdditionalCommitChecks Declaration public const string AdditionalCommitChecks = \"ADDITIONAL_COMMIT_CHECKS\" Field Value Type System.String AlwaysKeepScavenged Declaration public const string AlwaysKeepScavenged = \"ALWAYS_KEEP_SCAVENGED\" Field Value Type System.String DisableMergeChunks Declaration public const string DisableMergeChunks = \"DISABLE_MERGE_CHUNKS\" Field Value Type System.String DoNotTimeoutRequests Declaration public const string DoNotTimeoutRequests = \"DO_NOT_TIMEOUT_REQUESTS\" Field Value Type System.String DumpStatistics Declaration public const string DumpStatistics = \"DUMP_STATISTICS\" Field Value Type System.String InfiniteMetastreams Declaration public const string InfiniteMetastreams = \"INFINITE_METASTREAMS\" Field Value Type System.String Log Declaration protected static readonly ILogger Log Field Value Type ILogger Methods AddDefines(IEnumerable<String>) Declaration public static void AddDefines(IEnumerable<string> defines) Parameters Type Name System.Collections.Generic.IEnumerable < System.String > defines Exit(ExitCode, String) Declaration public static void Exit(ExitCode exitCode, string reason) Parameters Type Name ExitCode exitCode System.String reason Exit(Int32, String) Declaration public static void Exit(int exitCode, string reason) Parameters Type Name System.Int32 exitCode System.String reason ExitSilent(Int32, String) Declaration public static void ExitSilent(int exitCode, string reason) Parameters Type Name System.Int32 exitCode System.String reason IsDefined(String) Declaration public static bool IsDefined(string define) Parameters Type Name System.String define Returns Type Description System.Boolean RegisterExitAction(Action<Int32>) Declaration public static void RegisterExitAction(Action<int> exitAction) Parameters Type Name System.Action < System.Int32 > exitAction Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Common.Options.html": {
    "href": "dotnet-api/code/EventStore.Common.Options.html",
    "title": "Namespace EventStore.Common.Options | Event Store",
    "keywords": "Namespace EventStore.Common.Options Classes EventStoreOptions RagsExtensions Interfaces IOptions Enums ProjectionType"
  },
  "dotnet-api/code/EventStore.Common.Log.html": {
    "href": "dotnet-api/code/EventStore.Common.Log.html",
    "title": "Namespace EventStore.Common.Log | Event Store",
    "keywords": "Namespace EventStore.Common.Log Classes ConsoleLogger LazyLogger LogManager NLogDirectoryLayoutRendered NLogger NLoggerHelperMethods NLogValueFormatter Interfaces ILogger"
  },
  "dotnet-api/code/EventStore.Common.Log.NLogger.html": {
    "href": "dotnet-api/code/EventStore.Common.Log.NLogger.html",
    "title": "Class NLogger | Event Store",
    "keywords": "Class NLogger Inheritance System.Object NLogger Implements ILogger Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Common.Log Assembly : EventStore.Common.dll Syntax public class NLogger : ILogger Constructors NLogger(String) Declaration public NLogger(string name) Parameters Type Name System.String name Methods Debug(String, Object[]) Declaration public void Debug(string format, params object[] args) Parameters Type Name System.String format System.Object [] args DebugException(Exception, String, Object[]) Declaration public void DebugException(Exception exc, string format, params object[] args) Parameters Type Name System.Exception exc System.String format System.Object [] args Error(String, Object[]) Declaration public void Error(string format, params object[] args) Parameters Type Name System.String format System.Object [] args ErrorException(Exception, String, Object[]) Declaration public void ErrorException(Exception exc, string format, params object[] args) Parameters Type Name System.Exception exc System.String format System.Object [] args Fatal(String, Object[]) Declaration public void Fatal(string format, params object[] args) Parameters Type Name System.String format System.Object [] args FatalException(Exception, String, Object[]) Declaration public void FatalException(Exception exc, string format, params object[] args) Parameters Type Name System.Exception exc System.String format System.Object [] args Flush(Nullable<TimeSpan>) Declaration public void Flush(TimeSpan? maxTimeToWait = default(TimeSpan? )) Parameters Type Name System.Nullable < System.TimeSpan > maxTimeToWait FlushLog(Nullable<TimeSpan>) Declaration public static void FlushLog(TimeSpan? maxTimeToWait = default(TimeSpan? )) Parameters Type Name System.Nullable < System.TimeSpan > maxTimeToWait Info(String, Object[]) Declaration public void Info(string format, params object[] args) Parameters Type Name System.String format System.Object [] args InfoException(Exception, String, Object[]) Declaration public void InfoException(Exception exc, string format, params object[] args) Parameters Type Name System.Exception exc System.String format System.Object [] args Trace(String, Object[]) Declaration public void Trace(string format, params object[] args) Parameters Type Name System.String format System.Object [] args TraceException(Exception, String, Object[]) Declaration public void TraceException(Exception exc, string format, params object[] args) Parameters Type Name System.Exception exc System.String format System.Object [] args Warn(String, Object[]) Declaration public void Warn(string format, params object[] args) Parameters Type Name System.String format System.Object [] args WarnException(Exception, String, Object[]) Declaration public void WarnException(Exception exc, string format, params object[] args) Parameters Type Name System.Exception exc System.String format System.Object [] args Implements ILogger Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Common.Log.ConsoleLogger.html": {
    "href": "dotnet-api/code/EventStore.Common.Log.ConsoleLogger.html",
    "title": "Class ConsoleLogger | Event Store",
    "keywords": "Class ConsoleLogger Inheritance System.Object ConsoleLogger Implements ILogger Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Common.Log Assembly : EventStore.Common.dll Syntax public class ConsoleLogger : ILogger Methods Debug(String, Object[]) Declaration public void Debug(string format, params object[] args) Parameters Type Name System.String format System.Object [] args DebugException(Exception, String, Object[]) Declaration public void DebugException(Exception exc, string format, params object[] args) Parameters Type Name System.Exception exc System.String format System.Object [] args Error(String, Object[]) Declaration public void Error(string format, params object[] args) Parameters Type Name System.String format System.Object [] args ErrorException(Exception, String, Object[]) Declaration public void ErrorException(Exception exc, string format, params object[] args) Parameters Type Name System.Exception exc System.String format System.Object [] args Fatal(String, Object[]) Declaration public void Fatal(string format, params object[] args) Parameters Type Name System.String format System.Object [] args FatalException(Exception, String, Object[]) Declaration public void FatalException(Exception exc, string format, params object[] args) Parameters Type Name System.Exception exc System.String format System.Object [] args Flush(Nullable<TimeSpan>) Declaration public void Flush(TimeSpan? maxTimeToWait = default(TimeSpan? )) Parameters Type Name System.Nullable < System.TimeSpan > maxTimeToWait Info(String, Object[]) Declaration public void Info(string format, params object[] args) Parameters Type Name System.String format System.Object [] args InfoException(Exception, String, Object[]) Declaration public void InfoException(Exception exc, string format, params object[] args) Parameters Type Name System.Exception exc System.String format System.Object [] args Trace(String, Object[]) Declaration public void Trace(string format, params object[] args) Parameters Type Name System.String format System.Object [] args TraceException(Exception, String, Object[]) Declaration public void TraceException(Exception exc, string format, params object[] args) Parameters Type Name System.Exception exc System.String format System.Object [] args Warn(String, Object[]) Declaration public void Warn(string format, params object[] args) Parameters Type Name System.String format System.Object [] args WarnException(Exception, String, Object[]) Declaration public void WarnException(Exception exc, string format, params object[] args) Parameters Type Name System.Exception exc System.String format System.Object [] args Implements ILogger Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.ClusterNode.ClusterVNodeBuilder.html": {
    "href": "dotnet-api/code/EventStore.ClusterNode.ClusterVNodeBuilder.html",
    "title": "Class ClusterVNodeBuilder | Event Store",
    "keywords": "Class ClusterVNodeBuilder Allows a client to build a ClusterVNode for use in EventStore.ClusterNode by specifying high level options rather than using the constructor of ClusterVNode directly. Inheritance System.Object VNodeBuilder ClusterVNodeBuilder Inherited Members VNodeBuilder._log VNodeBuilder._chunkSize VNodeBuilder._dbPath VNodeBuilder._chunksCacheSize VNodeBuilder._cachedChunks VNodeBuilder._inMemoryDb VNodeBuilder._startStandardProjections VNodeBuilder._disableHTTPCaching VNodeBuilder._logHttpRequests VNodeBuilder._enableHistograms VNodeBuilder._structuredLog VNodeBuilder._internalTcp VNodeBuilder._internalSecureTcp VNodeBuilder._externalTcp VNodeBuilder._externalSecureTcp VNodeBuilder._internalHttp VNodeBuilder._externalHttp VNodeBuilder._intHttpPrefixes VNodeBuilder._extHttpPrefixes VNodeBuilder._addInterfacePrefixes VNodeBuilder._enableTrustedAuth VNodeBuilder._certificate VNodeBuilder._workerThreads VNodeBuilder._discoverViaDns VNodeBuilder._clusterDns VNodeBuilder._gossipSeeds VNodeBuilder._minFlushDelay VNodeBuilder._clusterNodeCount VNodeBuilder._prepareAckCount VNodeBuilder._commitAckCount VNodeBuilder._prepareTimeout VNodeBuilder._commitTimeout VNodeBuilder._nodePriority VNodeBuilder._useSsl VNodeBuilder._disableInsecureTCP VNodeBuilder._sslTargetHost VNodeBuilder._sslValidateServer VNodeBuilder._statsPeriod VNodeBuilder._statsStorage VNodeBuilder._authenticationProviderFactory VNodeBuilder._disableScavengeMerging VNodeBuilder._scavengeHistoryMaxAge VNodeBuilder._adminOnPublic VNodeBuilder._statsOnPublic VNodeBuilder._gossipOnPublic VNodeBuilder._gossipInterval VNodeBuilder._gossipAllowedTimeDifference VNodeBuilder._gossipTimeout VNodeBuilder._gossipAdvertiseInfo VNodeBuilder._intTcpHeartbeatTimeout VNodeBuilder._intTcpHeartbeatInterval VNodeBuilder._extTcpHeartbeatTimeout VNodeBuilder._extTcpHeartbeatInterval VNodeBuilder._connectionPendingSendBytesThreshold VNodeBuilder._skipVerifyDbHashes VNodeBuilder._maxMemtableSize VNodeBuilder._hashCollisionReadLimit VNodeBuilder._subsystems VNodeBuilder._clusterGossipPort VNodeBuilder._readerThreadsCount VNodeBuilder._unbuffered VNodeBuilder._writethrough VNodeBuilder._chunkInitialReaderCount VNodeBuilder._index VNodeBuilder._skipIndexVerify VNodeBuilder._indexCacheDepth VNodeBuilder._optimizeIndexMerge VNodeBuilder._unsafeIgnoreHardDelete VNodeBuilder._unsafeDisableFlushToDisk VNodeBuilder._betterOrdering VNodeBuilder._projectionType VNodeBuilder._projectionsThreads VNodeBuilder._projectionsQueryExpiry VNodeBuilder._faultOutOfOrderProjections VNodeBuilder._db VNodeBuilder._vNodeSettings VNodeBuilder._dbConfig VNodeBuilder._indexBitnessVersion VNodeBuilder._alwaysKeepScavenged VNodeBuilder._skipIndexScanOnReads VNodeBuilder.WithSingleNodeSettings() VNodeBuilder.WithClusterNodeSettings(Int32) VNodeBuilder.WithStructuredLogging(Boolean) VNodeBuilder.StartStandardProjections() VNodeBuilder.DisableHTTPCaching() VNodeBuilder.RunProjections(ProjectionType, Int32, Boolean) VNodeBuilder.WithProjectionQueryExpirationOf(TimeSpan) VNodeBuilder.AddCustomSubsystem(ISubsystem) VNodeBuilder.RunInMemory() VNodeBuilder.RunOnDisk(String) VNodeBuilder.OnDefaultEndpoints() VNodeBuilder.AdvertiseInternalIPAs(IPAddress) VNodeBuilder.AdvertiseExternalIPAs(IPAddress) VNodeBuilder.AdvertiseInternalHttpPortAs(Int32) VNodeBuilder.HavingReaderThreads(Int32) VNodeBuilder.AdvertiseExternalHttpPortAs(Int32) VNodeBuilder.AdvertiseInternalSecureTCPPortAs(Int32) VNodeBuilder.AdvertiseExternalSecureTCPPortAs(Int32) VNodeBuilder.AdvertiseInternalTCPPortAs(Int32) VNodeBuilder.GossipAsSingleNode() VNodeBuilder.AdvertiseExternalTCPPortAs(Int32) VNodeBuilder.WithClusterGossipPort(Int32) VNodeBuilder.WithInternalHttpOn(IPEndPoint) VNodeBuilder.WithExternalHttpOn(IPEndPoint) VNodeBuilder.WithInternalTcpOn(IPEndPoint) VNodeBuilder.WithInternalSecureTcpOn(IPEndPoint) VNodeBuilder.WithExternalTcpOn(IPEndPoint) VNodeBuilder.WithExternalSecureTcpOn(IPEndPoint) VNodeBuilder.EnableSsl() VNodeBuilder.DisableInsecureTCP() VNodeBuilder.WithSslTargetHost(String) VNodeBuilder.ValidateSslServer() VNodeBuilder.WithGossipSeeds(IPEndPoint[]) VNodeBuilder.MaximumMemoryTableSizeOf(Int32) VNodeBuilder.WithHashCollisionReadLimitOf(Int32) VNodeBuilder.DoNotVerifyDbHashes() VNodeBuilder.NoGossipOnPublicInterface() VNodeBuilder.NoAdminOnPublicInterface() VNodeBuilder.NoStatsOnPublicInterface() VNodeBuilder.VerifyDbHashes() VNodeBuilder.WithClusterDnsName(String) VNodeBuilder.DisableDnsDiscovery() VNodeBuilder.WithWorkerThreads(Int32) VNodeBuilder.AddInternalHttpPrefix(String) VNodeBuilder.AddExternalHttpPrefix(String) VNodeBuilder.DontAddInterfacePrefixes() VNodeBuilder.WithServerCertificateFromFile(String, String) VNodeBuilder.WithInternalHeartbeatInterval(TimeSpan) VNodeBuilder.WithExternalHeartbeatInterval(TimeSpan) VNodeBuilder.WithInternalHeartbeatTimeout(TimeSpan) VNodeBuilder.WithExternalHeartbeatTimeout(TimeSpan) VNodeBuilder.WithConnectionPendingSendBytesThreshold(Int32) VNodeBuilder.WithGossipInterval(TimeSpan) VNodeBuilder.WithGossipAllowedTimeDifference(TimeSpan) VNodeBuilder.WithGossipTimeout(TimeSpan) VNodeBuilder.WithMinFlushDelay(TimeSpan) VNodeBuilder.WithPrepareTimeout(TimeSpan) VNodeBuilder.WithCommitTimeout(TimeSpan) VNodeBuilder.WithStatsPeriod(TimeSpan) VNodeBuilder.WithStatsStorage(StatsStorage) VNodeBuilder.WithPrepareCount(Int32) VNodeBuilder.WithCommitCount(Int32) VNodeBuilder.WithNodePriority(Int32) VNodeBuilder.DisableScavengeMerging() VNodeBuilder.WithScavengeHistoryMaxAge(Int32) VNodeBuilder.WithIndexPath(String) VNodeBuilder.EnableLoggingOfHttpRequests() VNodeBuilder.EnableHistograms() VNodeBuilder.WithIndexVerification(Boolean) VNodeBuilder.WithIndexCacheDepth(Int32) VNodeBuilder.WithIndexMergeOptimization(Boolean) VNodeBuilder.WithUnsafeIgnoreHardDelete() VNodeBuilder.WithUnsafeDisableFlushToDisk() VNodeBuilder.WithBetterOrdering() VNodeBuilder.EnableTrustedAuth() VNodeBuilder.WithAuthenticationProvider(IAuthenticationProviderFactory) VNodeBuilder.EnableUnbuffered() VNodeBuilder.EnableWriteThrough() VNodeBuilder.WithChunkInitialReaderCount(Int32) VNodeBuilder.WithInitializationThreads(Int32) VNodeBuilder.WithMaxAutoMergeIndexLevel(Int32) VNodeBuilder.WithServerCertificate(X509Certificate2) VNodeBuilder.WithServerCertificateFromStore(StoreLocation, StoreName, String, String) VNodeBuilder.WithServerCertificateFromStore(StoreName, String, String) VNodeBuilder.WithTfChunkSize(Int32) VNodeBuilder.WithTfChunksCacheSize(Int64) VNodeBuilder.WithTfCachedChunks(Int32) VNodeBuilder.WithIndexBitnessVersion(Byte) VNodeBuilder.AlwaysKeepScavenged() VNodeBuilder.SkipIndexScanOnReads() VNodeBuilder.ReduceFileCachePressure() VNodeBuilder.Build(IOptions, IPersistentSubscriptionConsumerStrategyFactory[]) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.ClusterNode Assembly : EventStore.ClusterNode.dll Syntax public class ClusterVNodeBuilder : VNodeBuilder Constructors ClusterVNodeBuilder() Declaration protected ClusterVNodeBuilder() Methods AsClusterMember(Int32) Returns a builder set to construct options for a cluster node instance with a cluster size. Declaration public static ClusterVNodeBuilder AsClusterMember(int clusterSize) Parameters Type Name System.Int32 clusterSize Returns Type Description ClusterVNodeBuilder A VNodeBuilder with the options set. AsSingleNode() Returns a builder set to construct options for a single node instance. Declaration public static ClusterVNodeBuilder AsSingleNode() Returns Type Description ClusterVNodeBuilder A VNodeBuilder with the options set. SetUpProjectionsIfNeeded() Declaration protected override void SetUpProjectionsIfNeeded() Overrides VNodeBuilder.SetUpProjectionsIfNeeded() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.ClientAPI.Embedded.EmbeddedVNodeBuilder.html": {
    "href": "dotnet-api/code/EventStore.ClientAPI.Embedded.EmbeddedVNodeBuilder.html",
    "title": "Class EmbeddedVNodeBuilder | Event Store",
    "keywords": "Class EmbeddedVNodeBuilder Allows a client to build a ClusterVNode for use with the Embedded client API by specifying high level options rather than using the constructor of ClusterVNode directly. Inheritance System.Object VNodeBuilder EmbeddedVNodeBuilder Inherited Members VNodeBuilder._log VNodeBuilder._chunkSize VNodeBuilder._dbPath VNodeBuilder._chunksCacheSize VNodeBuilder._cachedChunks VNodeBuilder._inMemoryDb VNodeBuilder._startStandardProjections VNodeBuilder._disableHTTPCaching VNodeBuilder._logHttpRequests VNodeBuilder._enableHistograms VNodeBuilder._structuredLog VNodeBuilder._internalTcp VNodeBuilder._internalSecureTcp VNodeBuilder._externalTcp VNodeBuilder._externalSecureTcp VNodeBuilder._internalHttp VNodeBuilder._externalHttp VNodeBuilder._intHttpPrefixes VNodeBuilder._extHttpPrefixes VNodeBuilder._addInterfacePrefixes VNodeBuilder._enableTrustedAuth VNodeBuilder._certificate VNodeBuilder._workerThreads VNodeBuilder._discoverViaDns VNodeBuilder._clusterDns VNodeBuilder._gossipSeeds VNodeBuilder._minFlushDelay VNodeBuilder._clusterNodeCount VNodeBuilder._prepareAckCount VNodeBuilder._commitAckCount VNodeBuilder._prepareTimeout VNodeBuilder._commitTimeout VNodeBuilder._nodePriority VNodeBuilder._useSsl VNodeBuilder._disableInsecureTCP VNodeBuilder._sslTargetHost VNodeBuilder._sslValidateServer VNodeBuilder._statsPeriod VNodeBuilder._statsStorage VNodeBuilder._authenticationProviderFactory VNodeBuilder._disableScavengeMerging VNodeBuilder._scavengeHistoryMaxAge VNodeBuilder._adminOnPublic VNodeBuilder._statsOnPublic VNodeBuilder._gossipOnPublic VNodeBuilder._gossipInterval VNodeBuilder._gossipAllowedTimeDifference VNodeBuilder._gossipTimeout VNodeBuilder._gossipAdvertiseInfo VNodeBuilder._intTcpHeartbeatTimeout VNodeBuilder._intTcpHeartbeatInterval VNodeBuilder._extTcpHeartbeatTimeout VNodeBuilder._extTcpHeartbeatInterval VNodeBuilder._connectionPendingSendBytesThreshold VNodeBuilder._skipVerifyDbHashes VNodeBuilder._maxMemtableSize VNodeBuilder._hashCollisionReadLimit VNodeBuilder._subsystems VNodeBuilder._clusterGossipPort VNodeBuilder._readerThreadsCount VNodeBuilder._unbuffered VNodeBuilder._writethrough VNodeBuilder._chunkInitialReaderCount VNodeBuilder._index VNodeBuilder._skipIndexVerify VNodeBuilder._indexCacheDepth VNodeBuilder._optimizeIndexMerge VNodeBuilder._unsafeIgnoreHardDelete VNodeBuilder._unsafeDisableFlushToDisk VNodeBuilder._betterOrdering VNodeBuilder._projectionType VNodeBuilder._projectionsThreads VNodeBuilder._projectionsQueryExpiry VNodeBuilder._faultOutOfOrderProjections VNodeBuilder._db VNodeBuilder._vNodeSettings VNodeBuilder._dbConfig VNodeBuilder._indexBitnessVersion VNodeBuilder._alwaysKeepScavenged VNodeBuilder._skipIndexScanOnReads VNodeBuilder.WithSingleNodeSettings() VNodeBuilder.WithClusterNodeSettings(Int32) VNodeBuilder.WithStructuredLogging(Boolean) VNodeBuilder.StartStandardProjections() VNodeBuilder.DisableHTTPCaching() VNodeBuilder.RunProjections(ProjectionType, Int32, Boolean) VNodeBuilder.WithProjectionQueryExpirationOf(TimeSpan) VNodeBuilder.AddCustomSubsystem(ISubsystem) VNodeBuilder.RunInMemory() VNodeBuilder.RunOnDisk(String) VNodeBuilder.OnDefaultEndpoints() VNodeBuilder.AdvertiseInternalIPAs(IPAddress) VNodeBuilder.AdvertiseExternalIPAs(IPAddress) VNodeBuilder.AdvertiseInternalHttpPortAs(Int32) VNodeBuilder.HavingReaderThreads(Int32) VNodeBuilder.AdvertiseExternalHttpPortAs(Int32) VNodeBuilder.AdvertiseInternalSecureTCPPortAs(Int32) VNodeBuilder.AdvertiseExternalSecureTCPPortAs(Int32) VNodeBuilder.AdvertiseInternalTCPPortAs(Int32) VNodeBuilder.GossipAsSingleNode() VNodeBuilder.AdvertiseExternalTCPPortAs(Int32) VNodeBuilder.WithClusterGossipPort(Int32) VNodeBuilder.WithInternalHttpOn(IPEndPoint) VNodeBuilder.WithExternalHttpOn(IPEndPoint) VNodeBuilder.WithInternalTcpOn(IPEndPoint) VNodeBuilder.WithInternalSecureTcpOn(IPEndPoint) VNodeBuilder.WithExternalTcpOn(IPEndPoint) VNodeBuilder.WithExternalSecureTcpOn(IPEndPoint) VNodeBuilder.EnableSsl() VNodeBuilder.DisableInsecureTCP() VNodeBuilder.WithSslTargetHost(String) VNodeBuilder.ValidateSslServer() VNodeBuilder.WithGossipSeeds(IPEndPoint[]) VNodeBuilder.MaximumMemoryTableSizeOf(Int32) VNodeBuilder.WithHashCollisionReadLimitOf(Int32) VNodeBuilder.DoNotVerifyDbHashes() VNodeBuilder.NoGossipOnPublicInterface() VNodeBuilder.NoAdminOnPublicInterface() VNodeBuilder.NoStatsOnPublicInterface() VNodeBuilder.VerifyDbHashes() VNodeBuilder.WithClusterDnsName(String) VNodeBuilder.DisableDnsDiscovery() VNodeBuilder.WithWorkerThreads(Int32) VNodeBuilder.AddInternalHttpPrefix(String) VNodeBuilder.AddExternalHttpPrefix(String) VNodeBuilder.DontAddInterfacePrefixes() VNodeBuilder.WithServerCertificateFromFile(String, String) VNodeBuilder.WithInternalHeartbeatInterval(TimeSpan) VNodeBuilder.WithExternalHeartbeatInterval(TimeSpan) VNodeBuilder.WithInternalHeartbeatTimeout(TimeSpan) VNodeBuilder.WithExternalHeartbeatTimeout(TimeSpan) VNodeBuilder.WithConnectionPendingSendBytesThreshold(Int32) VNodeBuilder.WithGossipInterval(TimeSpan) VNodeBuilder.WithGossipAllowedTimeDifference(TimeSpan) VNodeBuilder.WithGossipTimeout(TimeSpan) VNodeBuilder.WithMinFlushDelay(TimeSpan) VNodeBuilder.WithPrepareTimeout(TimeSpan) VNodeBuilder.WithCommitTimeout(TimeSpan) VNodeBuilder.WithStatsPeriod(TimeSpan) VNodeBuilder.WithStatsStorage(StatsStorage) VNodeBuilder.WithPrepareCount(Int32) VNodeBuilder.WithCommitCount(Int32) VNodeBuilder.WithNodePriority(Int32) VNodeBuilder.DisableScavengeMerging() VNodeBuilder.WithScavengeHistoryMaxAge(Int32) VNodeBuilder.WithIndexPath(String) VNodeBuilder.EnableLoggingOfHttpRequests() VNodeBuilder.EnableHistograms() VNodeBuilder.WithIndexVerification(Boolean) VNodeBuilder.WithIndexCacheDepth(Int32) VNodeBuilder.WithIndexMergeOptimization(Boolean) VNodeBuilder.WithUnsafeIgnoreHardDelete() VNodeBuilder.WithUnsafeDisableFlushToDisk() VNodeBuilder.WithBetterOrdering() VNodeBuilder.EnableTrustedAuth() VNodeBuilder.WithAuthenticationProvider(IAuthenticationProviderFactory) VNodeBuilder.EnableUnbuffered() VNodeBuilder.EnableWriteThrough() VNodeBuilder.WithChunkInitialReaderCount(Int32) VNodeBuilder.WithInitializationThreads(Int32) VNodeBuilder.WithMaxAutoMergeIndexLevel(Int32) VNodeBuilder.WithServerCertificate(X509Certificate2) VNodeBuilder.WithServerCertificateFromStore(StoreLocation, StoreName, String, String) VNodeBuilder.WithServerCertificateFromStore(StoreName, String, String) VNodeBuilder.WithTfChunkSize(Int32) VNodeBuilder.WithTfChunksCacheSize(Int64) VNodeBuilder.WithTfCachedChunks(Int32) VNodeBuilder.WithIndexBitnessVersion(Byte) VNodeBuilder.AlwaysKeepScavenged() VNodeBuilder.SkipIndexScanOnReads() VNodeBuilder.ReduceFileCachePressure() VNodeBuilder.Build(IOptions, IPersistentSubscriptionConsumerStrategyFactory[]) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.ClientAPI.Embedded Assembly : EventStore.ClientAPI.Embedded.dll Syntax public class EmbeddedVNodeBuilder : VNodeBuilder Methods AsClusterMember(Int32) Returns a builder set to construct options for a cluster node instance with a cluster size. Declaration public static EmbeddedVNodeBuilder AsClusterMember(int clusterSize) Parameters Type Name System.Int32 clusterSize Returns Type Description EmbeddedVNodeBuilder A VNodeBuilder with the options set. AsSingleNode() Returns a builder set to construct options for a single node instance. Declaration public static EmbeddedVNodeBuilder AsSingleNode() Returns Type Description EmbeddedVNodeBuilder A VNodeBuilder with the options set. SetUpProjectionsIfNeeded() Sets up the projections subsystem. Declaration protected override void SetUpProjectionsIfNeeded() Overrides VNodeBuilder.SetUpProjectionsIfNeeded() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.BufferManagement.UnableToCreateMemoryException.html": {
    "href": "dotnet-api/code/EventStore.BufferManagement.UnableToCreateMemoryException.html",
    "title": "Class UnableToCreateMemoryException | Event Store",
    "keywords": "Class UnableToCreateMemoryException Inheritance System.Object System.Exception UnableToCreateMemoryException Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.BufferManagement Assembly : EventStore.BufferManagement.dll Syntax public class UnableToCreateMemoryException : Exception, _Exception, ISerializable Constructors UnableToCreateMemoryException() Declaration public UnableToCreateMemoryException() Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.BufferManagement.BufferPool.html": {
    "href": "dotnet-api/code/EventStore.BufferManagement.BufferPool.html",
    "title": "Class BufferPool | Event Store",
    "keywords": "Class BufferPool Inheritance System.Object BufferPool Implements System.IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.BufferManagement Assembly : EventStore.BufferManagement.dll Syntax public class BufferPool : IDisposable Constructors BufferPool() Initializes a new instance of the BufferPool class. Declaration public BufferPool() BufferPool(BufferManager) Initializes a new instance of the BufferPool class. Declaration public BufferPool(BufferManager bufferManager) Parameters Type Name BufferManager bufferManager BufferPool(Int32, BufferManager) Initializes a new instance of the BufferPool class. Declaration public BufferPool(int initialBufferCount, BufferManager bufferManager) Parameters Type Name System.Int32 initialBufferCount BufferManager bufferManager Properties Capacity Gets the capacity of the BufferPool Declaration public int Capacity { get; } Property Value Type System.Int32 EffectiveBuffers Gets the effective buffers contained in this BufferPool Declaration public IEnumerable<ArraySegment<byte>> EffectiveBuffers { get; } Property Value Type System.Collections.Generic.IEnumerable < System.ArraySegment < System.Byte >> Item[Int32] Gets or sets the System.Byte with the specified index. Declaration public byte this[int index] { get; set; } Parameters Type Name System.Int32 index Property Value Type System.Byte Length Gets the current length of the BufferPool Declaration public int Length { get; } Property Value Type System.Int32 Methods Append(Byte[]) Appends the specified data. Declaration public void Append(byte[] data) Parameters Type Name System.Byte [] data Append(Byte[], Int32, Int32) Appends the specified data. Declaration public void Append(byte[] data, int offset, int count) Parameters Type Name System.Byte [] data System.Int32 offset System.Int32 count Dispose() Returns any memory used buy this BufferPool to the BufferManager Declaration public void Dispose() DisposeInternal() Declaration protected virtual void DisposeInternal() Finalize() Declaration protected void Finalize() ReadFrom(Int32, ArraySegment<Byte>) Reads data from a given position. Declaration public int ReadFrom(int position, ArraySegment<byte> data) Parameters Type Name System.Int32 position System.ArraySegment < System.Byte > data Returns Type Description System.Int32 ReadFrom(Int32, Byte[], Int32, Int32) Reads data from a given position Declaration public int ReadFrom(int position, byte[] data, int offset, int count) Parameters Type Name System.Int32 position System.Byte [] data System.Int32 offset System.Int32 count Returns Type Description System.Int32 SetLength(Int32) Sets the length of the BufferPool Declaration public void SetLength(int newLength) Parameters Type Name System.Int32 newLength SetLength(Int32, Boolean) Sets the length of the BufferPool Declaration public void SetLength(int newLength, bool releaseMemory) Parameters Type Name System.Int32 newLength System.Boolean releaseMemory ToByteArray() Converts this BufferPool to a byte array. Declaration public byte[] ToByteArray() Returns Type Description System.Byte [] Write(Int32, ArraySegment<Byte>) Writes data to the specified position. Declaration public void Write(int position, ArraySegment<byte> data) Parameters Type Name System.Int32 position System.ArraySegment < System.Byte > data Write(Int32, Byte[], Int32, Int32) Writes data to the specified position. Declaration public void Write(int position, byte[] data, int offset, int count) Parameters Type Name System.Int32 position System.Byte [] data System.Int32 offset System.Int32 count Implements System.IDisposable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Transport.Tcp.html": {
    "href": "dotnet-api/code/EventStore.Transport.Tcp.html",
    "title": "Namespace EventStore.Transport.Tcp | Event Store",
    "keywords": "Namespace EventStore.Transport.Tcp Classes TcpClientConnector TcpConfiguration TcpConnection TcpConnectionBase TcpConnectionLockless TcpConnectionMonitor TcpConnectionSsl TcpServerListener TcpStats TcpTypedConnection<T> Interfaces IMonitoredTcpConnection ITcpConnection"
  },
  "dotnet-api/code/EventStore.Transport.Tcp.TcpTypedConnection-1.html": {
    "href": "dotnet-api/code/EventStore.Transport.Tcp.TcpTypedConnection-1.html",
    "title": "Class TcpTypedConnection<T> | Event Store",
    "keywords": "Class TcpTypedConnection<T> Inheritance System.Object TcpTypedConnection<T> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Transport.Tcp Assembly : EventStore.Transport.Tcp.dll Syntax public class TcpTypedConnection<T> Type Parameters Name Description T Constructors TcpTypedConnection(ITcpConnection, IMessageFormatter<T>, IMessageFramer) Declaration public TcpTypedConnection(ITcpConnection connection, IMessageFormatter<T> formatter, IMessageFramer framer) Parameters Type Name ITcpConnection connection IMessageFormatter <T> formatter IMessageFramer framer Properties LocalEndPoint Declaration public IPEndPoint LocalEndPoint { get; } Property Value Type System.Net.IPEndPoint RemoteEndPoint Declaration public IPEndPoint RemoteEndPoint { get; } Property Value Type System.Net.IPEndPoint SendQueueSize Declaration public int SendQueueSize { get; } Property Value Type System.Int32 Methods Close(String) Declaration public void Close(string reason = null) Parameters Type Name System.String reason EnqueueSend(T) Declaration public void EnqueueSend(T message) Parameters Type Name T message ReceiveAsync(Action<TcpTypedConnection<T>, T>) Declaration public void ReceiveAsync(Action<TcpTypedConnection<T>, T> callback) Parameters Type Name System.Action < TcpTypedConnection <T>, T> callback Events ConnectionClosed Declaration public event Action<TcpTypedConnection<T>, SocketError> ConnectionClosed Event Type Type System.Action < TcpTypedConnection <T>, System.Net.Sockets.SocketError > Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Transport.Tcp.TcpStats.html": {
    "href": "dotnet-api/code/EventStore.Transport.Tcp.TcpStats.html",
    "title": "Class TcpStats | Event Store",
    "keywords": "Class TcpStats Inheritance System.Object TcpStats Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Transport.Tcp Assembly : EventStore.Transport.Tcp.dll Syntax public class TcpStats Constructors TcpStats(Int32, Int64, Int64, Int64, Int64, Int64, Int64, Int64, TimeSpan) Declaration public TcpStats(int connections, long sentBytesTotal, long receivedBytesTotal, long sentBytesSinceLastRunSinceLastRun, long receivedBytesSinceLastRun, long pendingSend, long inSend, long pendingReceived, TimeSpan measureTime) Parameters Type Name System.Int32 connections System.Int64 sentBytesTotal System.Int64 receivedBytesTotal System.Int64 sentBytesSinceLastRunSinceLastRun System.Int64 receivedBytesSinceLastRun System.Int64 pendingSend System.Int64 inSend System.Int64 pendingReceived System.TimeSpan measureTime Fields Connections Number of TCP connections to Event Store Declaration public readonly int Connections Field Value Type System.Int32 InSend Number of bytes sent to connections but not yet acknowledged by the receiving party Declaration public readonly long InSend Field Value Type System.Int64 MeasureTime Time elapsed since last stats read Declaration public readonly TimeSpan MeasureTime Field Value Type System.TimeSpan PendingReceived Number of bytes waiting to be received by connections Declaration public readonly long PendingReceived Field Value Type System.Int64 PendingSend Number of bytes waiting to be sent to connections Declaration public readonly long PendingSend Field Value Type System.Int64 ReceivedBytesSinceLastRun Total bytes received by TCP connections since last run Declaration public readonly long ReceivedBytesSinceLastRun Field Value Type System.Int64 ReceivedBytesTotal Total bytes received by TCP connections Declaration public readonly long ReceivedBytesTotal Field Value Type System.Int64 ReceivingSpeed Receiving speed in bytes per second Declaration public readonly double ReceivingSpeed Field Value Type System.Double SendingSpeed Sending speed in bytes per second Declaration public readonly double SendingSpeed Field Value Type System.Double SentBytesSinceLastRun Total bytes sent to TCP connections since last run Declaration public readonly long SentBytesSinceLastRun Field Value Type System.Int64 SentBytesTotal Total bytes sent from TCP connections Declaration public readonly long SentBytesTotal Field Value Type System.Int64 Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Transport.Tcp.TcpServerListener.html": {
    "href": "dotnet-api/code/EventStore.Transport.Tcp.TcpServerListener.html",
    "title": "Class TcpServerListener | Event Store",
    "keywords": "Class TcpServerListener Inheritance System.Object TcpServerListener Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Transport.Tcp Assembly : EventStore.Transport.Tcp.dll Syntax public class TcpServerListener Constructors TcpServerListener(IPEndPoint) Declaration public TcpServerListener(IPEndPoint serverEndPoint) Parameters Type Name System.Net.IPEndPoint serverEndPoint Methods StartListening(Action<IPEndPoint, Socket>, String) Declaration public void StartListening(Action<IPEndPoint, Socket> callback, string securityType) Parameters Type Name System.Action < System.Net.IPEndPoint , System.Net.Sockets.Socket > callback System.String securityType Stop() Declaration public void Stop() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.VNodeBuilder.html": {
    "href": "dotnet-api/code/EventStore.Core.VNodeBuilder.html",
    "title": "Class VNodeBuilder | Event Store",
    "keywords": "Class VNodeBuilder Allows a client to build a ClusterVNode for use with the Embedded client API by specifying high level options rather than using the constructor of ClusterVNode directly. Inheritance System.Object VNodeBuilder EmbeddedVNodeBuilder ClusterVNodeBuilder Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core Assembly : EventStore.Core.dll Syntax public abstract class VNodeBuilder Constructors VNodeBuilder() Declaration protected VNodeBuilder() Fields _addInterfacePrefixes Declaration protected bool _addInterfacePrefixes Field Value Type System.Boolean _adminOnPublic Declaration protected bool _adminOnPublic Field Value Type System.Boolean _alwaysKeepScavenged Declaration protected bool _alwaysKeepScavenged Field Value Type System.Boolean _authenticationProviderFactory Declaration protected IAuthenticationProviderFactory _authenticationProviderFactory Field Value Type IAuthenticationProviderFactory _betterOrdering Declaration protected bool _betterOrdering Field Value Type System.Boolean _cachedChunks Declaration protected int _cachedChunks Field Value Type System.Int32 _certificate Declaration protected X509Certificate2 _certificate Field Value Type System.Security.Cryptography.X509Certificates.X509Certificate2 _chunkInitialReaderCount Declaration protected int _chunkInitialReaderCount Field Value Type System.Int32 _chunksCacheSize Declaration protected long _chunksCacheSize Field Value Type System.Int64 _chunkSize Declaration protected int _chunkSize Field Value Type System.Int32 _clusterDns Declaration protected string _clusterDns Field Value Type System.String _clusterGossipPort Declaration protected int _clusterGossipPort Field Value Type System.Int32 _clusterNodeCount Declaration protected int _clusterNodeCount Field Value Type System.Int32 _commitAckCount Declaration protected int _commitAckCount Field Value Type System.Int32 _commitTimeout Declaration protected TimeSpan _commitTimeout Field Value Type System.TimeSpan _connectionPendingSendBytesThreshold Declaration protected int _connectionPendingSendBytesThreshold Field Value Type System.Int32 _db Declaration protected TFChunkDb _db Field Value Type TFChunkDb _dbConfig Declaration protected TFChunkDbConfig _dbConfig Field Value Type TFChunkDbConfig _dbPath Declaration protected string _dbPath Field Value Type System.String _disableHTTPCaching Declaration protected bool _disableHTTPCaching Field Value Type System.Boolean _disableInsecureTCP Declaration protected bool _disableInsecureTCP Field Value Type System.Boolean _disableScavengeMerging Declaration protected bool _disableScavengeMerging Field Value Type System.Boolean _discoverViaDns Declaration protected bool _discoverViaDns Field Value Type System.Boolean _enableHistograms Declaration protected bool _enableHistograms Field Value Type System.Boolean _enableTrustedAuth Declaration protected bool _enableTrustedAuth Field Value Type System.Boolean _externalHttp Declaration protected IPEndPoint _externalHttp Field Value Type System.Net.IPEndPoint _externalSecureTcp Declaration protected IPEndPoint _externalSecureTcp Field Value Type System.Net.IPEndPoint _externalTcp Declaration protected IPEndPoint _externalTcp Field Value Type System.Net.IPEndPoint _extHttpPrefixes Declaration protected List<string> _extHttpPrefixes Field Value Type System.Collections.Generic.List < System.String > _extTcpHeartbeatInterval Declaration protected TimeSpan _extTcpHeartbeatInterval Field Value Type System.TimeSpan _extTcpHeartbeatTimeout Declaration protected TimeSpan _extTcpHeartbeatTimeout Field Value Type System.TimeSpan _faultOutOfOrderProjections Declaration protected bool _faultOutOfOrderProjections Field Value Type System.Boolean _gossipAdvertiseInfo Declaration protected GossipAdvertiseInfo _gossipAdvertiseInfo Field Value Type GossipAdvertiseInfo _gossipAllowedTimeDifference Declaration protected TimeSpan _gossipAllowedTimeDifference Field Value Type System.TimeSpan _gossipInterval Declaration protected TimeSpan _gossipInterval Field Value Type System.TimeSpan _gossipOnPublic Declaration protected bool _gossipOnPublic Field Value Type System.Boolean _gossipSeeds Declaration protected List<IPEndPoint> _gossipSeeds Field Value Type System.Collections.Generic.List < System.Net.IPEndPoint > _gossipTimeout Declaration protected TimeSpan _gossipTimeout Field Value Type System.TimeSpan _hashCollisionReadLimit Declaration protected int _hashCollisionReadLimit Field Value Type System.Int32 _index Declaration protected string _index Field Value Type System.String _indexBitnessVersion Declaration protected byte _indexBitnessVersion Field Value Type System.Byte _indexCacheDepth Declaration protected int _indexCacheDepth Field Value Type System.Int32 _inMemoryDb Declaration protected bool _inMemoryDb Field Value Type System.Boolean _internalHttp Declaration protected IPEndPoint _internalHttp Field Value Type System.Net.IPEndPoint _internalSecureTcp Declaration protected IPEndPoint _internalSecureTcp Field Value Type System.Net.IPEndPoint _internalTcp Declaration protected IPEndPoint _internalTcp Field Value Type System.Net.IPEndPoint _intHttpPrefixes Declaration protected List<string> _intHttpPrefixes Field Value Type System.Collections.Generic.List < System.String > _intTcpHeartbeatInterval Declaration protected TimeSpan _intTcpHeartbeatInterval Field Value Type System.TimeSpan _intTcpHeartbeatTimeout Declaration protected TimeSpan _intTcpHeartbeatTimeout Field Value Type System.TimeSpan _log Declaration protected ILogger _log Field Value Type ILogger _logHttpRequests Declaration protected bool _logHttpRequests Field Value Type System.Boolean _maxMemtableSize Declaration protected int _maxMemtableSize Field Value Type System.Int32 _minFlushDelay Declaration protected TimeSpan _minFlushDelay Field Value Type System.TimeSpan _nodePriority Declaration protected int _nodePriority Field Value Type System.Int32 _optimizeIndexMerge Declaration protected bool _optimizeIndexMerge Field Value Type System.Boolean _prepareAckCount Declaration protected int _prepareAckCount Field Value Type System.Int32 _prepareTimeout Declaration protected TimeSpan _prepareTimeout Field Value Type System.TimeSpan _projectionsQueryExpiry Declaration protected TimeSpan _projectionsQueryExpiry Field Value Type System.TimeSpan _projectionsThreads Declaration protected int _projectionsThreads Field Value Type System.Int32 _projectionType Declaration protected ProjectionType _projectionType Field Value Type ProjectionType _readerThreadsCount Declaration protected int _readerThreadsCount Field Value Type System.Int32 _scavengeHistoryMaxAge Declaration protected int _scavengeHistoryMaxAge Field Value Type System.Int32 _skipIndexScanOnReads Declaration protected bool _skipIndexScanOnReads Field Value Type System.Boolean _skipIndexVerify Declaration protected bool _skipIndexVerify Field Value Type System.Boolean _skipVerifyDbHashes Declaration protected bool _skipVerifyDbHashes Field Value Type System.Boolean _sslTargetHost Declaration protected string _sslTargetHost Field Value Type System.String _sslValidateServer Declaration protected bool _sslValidateServer Field Value Type System.Boolean _startStandardProjections Declaration protected bool _startStandardProjections Field Value Type System.Boolean _statsOnPublic Declaration protected bool _statsOnPublic Field Value Type System.Boolean _statsPeriod Declaration protected TimeSpan _statsPeriod Field Value Type System.TimeSpan _statsStorage Declaration protected StatsStorage _statsStorage Field Value Type StatsStorage _structuredLog Declaration protected bool _structuredLog Field Value Type System.Boolean _subsystems Declaration protected List<ISubsystem> _subsystems Field Value Type System.Collections.Generic.List < ISubsystem > _unbuffered Declaration protected bool _unbuffered Field Value Type System.Boolean _unsafeDisableFlushToDisk Declaration protected bool _unsafeDisableFlushToDisk Field Value Type System.Boolean _unsafeIgnoreHardDelete Declaration protected bool _unsafeIgnoreHardDelete Field Value Type System.Boolean _useSsl Declaration protected bool _useSsl Field Value Type System.Boolean _vNodeSettings Declaration protected ClusterVNodeSettings _vNodeSettings Field Value Type ClusterVNodeSettings _workerThreads Declaration protected int _workerThreads Field Value Type System.Int32 _writethrough Declaration protected bool _writethrough Field Value Type System.Boolean Methods AddCustomSubsystem(ISubsystem) Adds a custom subsystem to the builder. NOTE: This is an advanced use case that most people will never need! Declaration public VNodeBuilder AddCustomSubsystem(ISubsystem subsystem) Parameters Type Name ISubsystem subsystem Returns Type Description VNodeBuilder A VNodeBuilder with the options set AddExternalHttpPrefix(String) Adds a http prefix for the external http endpoint Declaration public VNodeBuilder AddExternalHttpPrefix(string prefix) Parameters Type Name System.String prefix Returns Type Description VNodeBuilder A VNodeBuilder with the options set AddInternalHttpPrefix(String) Adds a http prefix for the internal http endpoint Declaration public VNodeBuilder AddInternalHttpPrefix(string prefix) Parameters Type Name System.String prefix Returns Type Description VNodeBuilder A VNodeBuilder with the options set AdvertiseExternalHttpPortAs(Int32) Sets up the External Http Port that would be advertised Declaration public VNodeBuilder AdvertiseExternalHttpPortAs(int extHttpPortAdvertiseAs) Parameters Type Name System.Int32 extHttpPortAdvertiseAs Returns Type Description VNodeBuilder A VNodeBuilder with the options set AdvertiseExternalIPAs(IPAddress) Sets up the External IP that would be advertised Declaration public VNodeBuilder AdvertiseExternalIPAs(IPAddress extIpAdvertiseAs) Parameters Type Name System.Net.IPAddress extIpAdvertiseAs Returns Type Description VNodeBuilder A VNodeBuilder with the options set AdvertiseExternalSecureTCPPortAs(Int32) Sets up the External Secure TCP Port that would be advertised Declaration public VNodeBuilder AdvertiseExternalSecureTCPPortAs(int extSecureTcpPortAdvertiseAs) Parameters Type Name System.Int32 extSecureTcpPortAdvertiseAs Returns Type Description VNodeBuilder A VNodeBuilder with the options set AdvertiseExternalTCPPortAs(Int32) Sets up the External TCP Port that would be advertised Declaration public VNodeBuilder AdvertiseExternalTCPPortAs(int extTcpPortAdvertiseAs) Parameters Type Name System.Int32 extTcpPortAdvertiseAs Returns Type Description VNodeBuilder A VNodeBuilder with the options set AdvertiseInternalHttpPortAs(Int32) Sets up the Internal Http Port that would be advertised Declaration public VNodeBuilder AdvertiseInternalHttpPortAs(int intHttpPortAdvertiseAs) Parameters Type Name System.Int32 intHttpPortAdvertiseAs Returns Type Description VNodeBuilder A VNodeBuilder with the options set AdvertiseInternalIPAs(IPAddress) Sets up the Internal IP that would be advertised Declaration public VNodeBuilder AdvertiseInternalIPAs(IPAddress intIpAdvertiseAs) Parameters Type Name System.Net.IPAddress intIpAdvertiseAs Returns Type Description VNodeBuilder A VNodeBuilder with the options set AdvertiseInternalSecureTCPPortAs(Int32) Sets up the Internal Secure TCP Port that would be advertised Declaration public VNodeBuilder AdvertiseInternalSecureTCPPortAs(int intSecureTcpPortAdvertiseAs) Parameters Type Name System.Int32 intSecureTcpPortAdvertiseAs Returns Type Description VNodeBuilder A VNodeBuilder with the options set AdvertiseInternalTCPPortAs(Int32) Sets up the Internal TCP Port that would be advertised Declaration public VNodeBuilder AdvertiseInternalTCPPortAs(int intTcpPortAdvertiseAs) Parameters Type Name System.Int32 intTcpPortAdvertiseAs Returns Type Description VNodeBuilder A VNodeBuilder with the options set AlwaysKeepScavenged() The newer chunks during a scavenge are always kept Declaration public VNodeBuilder AlwaysKeepScavenged() Returns Type Description VNodeBuilder A VNodeBuilder with the options set Build(IOptions, IPersistentSubscriptionConsumerStrategyFactory[]) Converts an VNodeBuilder to a ClusterVNode . Declaration public ClusterVNode Build(IOptions options = null, IPersistentSubscriptionConsumerStrategyFactory[] consumerStrategies = null) Parameters Type Name IOptions options IPersistentSubscriptionConsumerStrategyFactory [] consumerStrategies Returns Type Description ClusterVNode A ClusterVNode built with the options that were set on the VNodeBuilder DisableDnsDiscovery() Disable dns discovery for the cluster Declaration public VNodeBuilder DisableDnsDiscovery() Returns Type Description VNodeBuilder A VNodeBuilder with the options set DisableHTTPCaching() Disable HTTP Caching. Declaration public VNodeBuilder DisableHTTPCaching() Returns Type Description VNodeBuilder A VNodeBuilder with the options set DisableInsecureTCP() Disable Insecure TCP Communication Declaration public VNodeBuilder DisableInsecureTCP() Returns Type Description VNodeBuilder A VNodeBuilder with the options set DisableScavengeMerging() Disables the merging of chunks when scavenge is running Declaration public VNodeBuilder DisableScavengeMerging() Returns Type Description VNodeBuilder A VNodeBuilder with the options set DoNotVerifyDbHashes() Marks that the existing database files should not be checked for checksums on startup. Declaration public VNodeBuilder DoNotVerifyDbHashes() Returns Type Description VNodeBuilder A VNodeBuilder with the options set DontAddInterfacePrefixes() Don't add the interface prefixes (e.g. If the External IP is set to the Loopback address, we'll add http://localhost:2113/ as a prefix) Declaration public VNodeBuilder DontAddInterfacePrefixes() Returns Type Description VNodeBuilder A VNodeBuilder with the options set EnableHistograms() Enable the tracking of various histograms in the backend, typically only used for debugging Declaration public VNodeBuilder EnableHistograms() Returns Type Description VNodeBuilder A VNodeBuilder with the options set EnableLoggingOfHttpRequests() Enable logging of Http Requests and Responses before they are processed Declaration public VNodeBuilder EnableLoggingOfHttpRequests() Returns Type Description VNodeBuilder A VNodeBuilder with the options set EnableSsl() Sets that SSL should be used on connections Declaration public VNodeBuilder EnableSsl() Returns Type Description VNodeBuilder A VNodeBuilder with the options set EnableTrustedAuth() Enable trusted authentication by an intermediary in the HTTP Declaration public VNodeBuilder EnableTrustedAuth() Returns Type Description VNodeBuilder A VNodeBuilder with the options set EnableUnbuffered() Sets whether or not to use unbuffered/directio Declaration public VNodeBuilder EnableUnbuffered() Returns Type Description VNodeBuilder A VNodeBuilder with the options set EnableWriteThrough() Sets whether or not to set the write-through flag on writes to the filesystem Declaration public VNodeBuilder EnableWriteThrough() Returns Type Description VNodeBuilder A VNodeBuilder with the options set GossipAsSingleNode() Enables gossip when running on a single node for testing purposes Declaration public VNodeBuilder GossipAsSingleNode() Returns Type Description VNodeBuilder A VNodeBuilder with the options set HavingReaderThreads(Int32) Sets the number of reader threads to process read requests. Declaration public VNodeBuilder HavingReaderThreads(int readerThreadsCount) Parameters Type Name System.Int32 readerThreadsCount Returns Type Description VNodeBuilder A VNodeBuilder with the options set MaximumMemoryTableSizeOf(Int32) Sets the maximum size a memtable is allowed to reach (in count) before being moved to be a ptable Declaration public VNodeBuilder MaximumMemoryTableSizeOf(int size) Parameters Type Name System.Int32 size Returns Type Description VNodeBuilder A VNodeBuilder with the options set NoAdminOnPublicInterface() Disables the admin interface on the public (client) interface Declaration public VNodeBuilder NoAdminOnPublicInterface() Returns Type Description VNodeBuilder A VNodeBuilder with the options set NoGossipOnPublicInterface() Disables gossip on the public (client) interface Declaration public VNodeBuilder NoGossipOnPublicInterface() Returns Type Description VNodeBuilder A VNodeBuilder with the options set NoStatsOnPublicInterface() Disables statistics screens on the public (client) interface Declaration public VNodeBuilder NoStatsOnPublicInterface() Returns Type Description VNodeBuilder A VNodeBuilder with the options set OnDefaultEndpoints() Sets the default endpoints on localhost (1113 tcp, 2113 http) Declaration public VNodeBuilder OnDefaultEndpoints() Returns Type Description VNodeBuilder A VNodeBuilder with the options set ReduceFileCachePressure() Reduce file cache pressure by opening the DB chunks without RandomAccess hint. Declaration public VNodeBuilder ReduceFileCachePressure() Returns Type Description VNodeBuilder A VNodeBuilder with the options set RunInMemory() Returns a builder set to run in memory only Declaration public VNodeBuilder RunInMemory() Returns Type Description VNodeBuilder A VNodeBuilder with the options set RunOnDisk(String) Returns a builder set to write database files to the specified path Declaration public VNodeBuilder RunOnDisk(string path) Parameters Type Name System.String path Returns Type Description VNodeBuilder A VNodeBuilder with the options set RunProjections(ProjectionType, Int32, Boolean) Sets the mode and the number of threads on which to run projections. Declaration public VNodeBuilder RunProjections(ProjectionType projectionType, int numberOfThreads = 3, bool faultOutOfOrderProjections = false) Parameters Type Name ProjectionType projectionType System.Int32 numberOfThreads System.Boolean faultOutOfOrderProjections Returns Type Description VNodeBuilder A VNodeBuilder with the options set SetUpProjectionsIfNeeded() Declaration protected abstract void SetUpProjectionsIfNeeded() SkipIndexScanOnReads() Skip index scan on reads. Declaration public VNodeBuilder SkipIndexScanOnReads() Returns Type Description VNodeBuilder A VNodeBuilder with the options set StartStandardProjections() Start standard projections. Declaration public VNodeBuilder StartStandardProjections() Returns Type Description VNodeBuilder A VNodeBuilder with the options set ValidateSslServer() Sets whether to validate that the server's certificate is trusted. Declaration public VNodeBuilder ValidateSslServer() Returns Type Description VNodeBuilder A VNodeBuilder with the options set VerifyDbHashes() Marks that the existing database files should be checked for checksums on startup. Declaration public VNodeBuilder VerifyDbHashes() Returns Type Description VNodeBuilder A VNodeBuilder with the options set WithAuthenticationProvider(IAuthenticationProviderFactory) Sets the authentication provider factory to use Declaration public VNodeBuilder WithAuthenticationProvider(IAuthenticationProviderFactory authenticationProviderFactory) Parameters Type Name IAuthenticationProviderFactory authenticationProviderFactory Returns Type Description VNodeBuilder A VNodeBuilder with the options set WithBetterOrdering() Enable Queue affinity on reads during write process to try to get better ordering. Declaration public VNodeBuilder WithBetterOrdering() Returns Type Description VNodeBuilder A VNodeBuilder with the options set WithChunkInitialReaderCount(Int32) Sets the initial number of readers to open per TFChunk Declaration public VNodeBuilder WithChunkInitialReaderCount(int chunkInitialReaderCount) Parameters Type Name System.Int32 chunkInitialReaderCount Returns Type Description VNodeBuilder A VNodeBuilder with the options set WithClusterDnsName(String) Sets the dns name used for the discovery of other cluster nodes Declaration public VNodeBuilder WithClusterDnsName(string name) Parameters Type Name System.String name Returns Type Description VNodeBuilder A VNodeBuilder with the options set WithClusterGossipPort(Int32) Sets the internal gossip port (used when using cluster dns, this should point to a known port gossip will be running on) Declaration public VNodeBuilder WithClusterGossipPort(int port) Parameters Type Name System.Int32 port Returns Type Description VNodeBuilder A VNodeBuilder with the options set WithClusterNodeSettings(Int32) Declaration protected VNodeBuilder WithClusterNodeSettings(int clusterNodeCount) Parameters Type Name System.Int32 clusterNodeCount Returns Type Description VNodeBuilder WithCommitCount(Int32) Sets the number of nodes which must acknowledge commits before acknowledging to a client. The minimum allowed value is one greater than half the cluster size. Declaration public VNodeBuilder WithCommitCount(int commitCount) Parameters Type Name System.Int32 commitCount Returns Type Description VNodeBuilder A VNodeBuilder with the options set WithCommitTimeout(TimeSpan) Sets the commit timeout Declaration public VNodeBuilder WithCommitTimeout(TimeSpan commitTimeout) Parameters Type Name System.TimeSpan commitTimeout Returns Type Description VNodeBuilder A VNodeBuilder with the options set WithConnectionPendingSendBytesThreshold(Int32) Sets the maximum number of pending send bytes allowed before a connection is closed. Declaration public VNodeBuilder WithConnectionPendingSendBytesThreshold(int connectionPendingSendBytesThreshold) Parameters Type Name System.Int32 connectionPendingSendBytesThreshold Returns Type Description VNodeBuilder A VNodeBuilder with the options set WithExternalHeartbeatInterval(TimeSpan) Sets the heartbeat interval for the external network interface. Declaration public VNodeBuilder WithExternalHeartbeatInterval(TimeSpan heartbeatInterval) Parameters Type Name System.TimeSpan heartbeatInterval Returns Type Description VNodeBuilder A VNodeBuilder with the options set WithExternalHeartbeatTimeout(TimeSpan) Sets the heartbeat timeout for the external network interface. Declaration public VNodeBuilder WithExternalHeartbeatTimeout(TimeSpan heartbeatTimeout) Parameters Type Name System.TimeSpan heartbeatTimeout Returns Type Description VNodeBuilder A VNodeBuilder with the options set WithExternalHttpOn(IPEndPoint) Sets the external http endpoint to the specified value Declaration public VNodeBuilder WithExternalHttpOn(IPEndPoint endpoint) Parameters Type Name System.Net.IPEndPoint endpoint Returns Type Description VNodeBuilder A VNodeBuilder with the options set WithExternalSecureTcpOn(IPEndPoint) Sets the external secure tcp endpoint to the specified value Declaration public VNodeBuilder WithExternalSecureTcpOn(IPEndPoint endpoint) Parameters Type Name System.Net.IPEndPoint endpoint Returns Type Description VNodeBuilder A VNodeBuilder with the options set WithExternalTcpOn(IPEndPoint) Sets the external tcp endpoint to the specified value Declaration public VNodeBuilder WithExternalTcpOn(IPEndPoint endpoint) Parameters Type Name System.Net.IPEndPoint endpoint Returns Type Description VNodeBuilder A VNodeBuilder with the options set WithGossipAllowedTimeDifference(TimeSpan) Sets the allowed gossip time difference Declaration public VNodeBuilder WithGossipAllowedTimeDifference(TimeSpan gossipAllowedDifference) Parameters Type Name System.TimeSpan gossipAllowedDifference Returns Type Description VNodeBuilder A VNodeBuilder with the options set WithGossipInterval(TimeSpan) Sets the gossip interval Declaration public VNodeBuilder WithGossipInterval(TimeSpan gossipInterval) Parameters Type Name System.TimeSpan gossipInterval Returns Type Description VNodeBuilder A VNodeBuilder with the options set WithGossipSeeds(IPEndPoint[]) Sets the gossip seeds this node should talk to Declaration public VNodeBuilder WithGossipSeeds(params IPEndPoint[] endpoints) Parameters Type Name System.Net.IPEndPoint [] endpoints Returns Type Description VNodeBuilder A VNodeBuilder with the options set WithGossipTimeout(TimeSpan) Sets the gossip timeout Declaration public VNodeBuilder WithGossipTimeout(TimeSpan gossipTimeout) Parameters Type Name System.TimeSpan gossipTimeout Returns Type Description VNodeBuilder A VNodeBuilder with the options set WithHashCollisionReadLimitOf(Int32) Sets the maximum number of events to read in case of a stream Id hash collision Declaration public VNodeBuilder WithHashCollisionReadLimitOf(int hashCollisionReadLimit) Parameters Type Name System.Int32 hashCollisionReadLimit Returns Type Description VNodeBuilder A VNodeBuilder with the options set WithIndexBitnessVersion(Byte) The bitness version of the indexes Declaration public VNodeBuilder WithIndexBitnessVersion(byte indexBitnessVersion) Parameters Type Name System.Byte indexBitnessVersion Returns Type Description VNodeBuilder A VNodeBuilder with the options set WithIndexCacheDepth(Int32) Sets the depth to cache for the mid point cache in index Declaration public VNodeBuilder WithIndexCacheDepth(int indexCacheDepth) Parameters Type Name System.Int32 indexCacheDepth Returns Type Description VNodeBuilder A VNodeBuilder with the options set WithIndexMergeOptimization(Boolean) Optimizes index merges Declaration public VNodeBuilder WithIndexMergeOptimization(bool optimizeIndexMerge) Parameters Type Name System.Boolean optimizeIndexMerge Returns Type Description VNodeBuilder A VNodeBuilder with the options set WithIndexPath(String) Sets the path the index should be loaded/saved to Declaration public VNodeBuilder WithIndexPath(string indexPath) Parameters Type Name System.String indexPath Returns Type Description VNodeBuilder A VNodeBuilder with the options set WithIndexVerification(Boolean) Skips verification of indexes on startup Declaration public VNodeBuilder WithIndexVerification(bool skipIndexVerify) Parameters Type Name System.Boolean skipIndexVerify Returns Type Description VNodeBuilder A VNodeBuilder with the options set WithInitializationThreads(Int32) Sets the number of threads to use to initialize the node. Declaration public VNodeBuilder WithInitializationThreads(int initializationThreads) Parameters Type Name System.Int32 initializationThreads Returns Type Description VNodeBuilder A VNodeBuilder with the options set WithInternalHeartbeatInterval(TimeSpan) Sets the heartbeat interval for the internal network interface. Declaration public VNodeBuilder WithInternalHeartbeatInterval(TimeSpan heartbeatInterval) Parameters Type Name System.TimeSpan heartbeatInterval Returns Type Description VNodeBuilder A VNodeBuilder with the options set WithInternalHeartbeatTimeout(TimeSpan) Sets the heartbeat timeout for the internal network interface. Declaration public VNodeBuilder WithInternalHeartbeatTimeout(TimeSpan heartbeatTimeout) Parameters Type Name System.TimeSpan heartbeatTimeout Returns Type Description VNodeBuilder A VNodeBuilder with the options set WithInternalHttpOn(IPEndPoint) Sets the internal http endpoint to the specified value Declaration public VNodeBuilder WithInternalHttpOn(IPEndPoint endpoint) Parameters Type Name System.Net.IPEndPoint endpoint Returns Type Description VNodeBuilder A VNodeBuilder with the options set WithInternalSecureTcpOn(IPEndPoint) Sets the internal secure tcp endpoint to the specified value Declaration public VNodeBuilder WithInternalSecureTcpOn(IPEndPoint endpoint) Parameters Type Name System.Net.IPEndPoint endpoint Returns Type Description VNodeBuilder A VNodeBuilder with the options set WithInternalTcpOn(IPEndPoint) Sets the internal tcp endpoint to the specified value Declaration public VNodeBuilder WithInternalTcpOn(IPEndPoint endpoint) Parameters Type Name System.Net.IPEndPoint endpoint Returns Type Description VNodeBuilder A VNodeBuilder with the options set WithMaxAutoMergeIndexLevel(Int32) Sets if we want the Merge Index operation to happen automatically Declaration public VNodeBuilder WithMaxAutoMergeIndexLevel(int maxAutoMergeIndexLevel) Parameters Type Name System.Int32 maxAutoMergeIndexLevel Returns Type Description VNodeBuilder A VNodeBuilder with the options set WithMinFlushDelay(TimeSpan) Sets the minimum flush delay Declaration public VNodeBuilder WithMinFlushDelay(TimeSpan minFlushDelay) Parameters Type Name System.TimeSpan minFlushDelay Returns Type Description VNodeBuilder A VNodeBuilder with the options set WithNodePriority(Int32) Sets the node priority used during master election Declaration public VNodeBuilder WithNodePriority(int nodePriority) Parameters Type Name System.Int32 nodePriority Returns Type Description VNodeBuilder A VNodeBuilder with the options set WithPrepareCount(Int32) Sets the number of nodes which must acknowledge prepares. The minimum allowed value is one greater than half the cluster size. Declaration public VNodeBuilder WithPrepareCount(int prepareCount) Parameters Type Name System.Int32 prepareCount Returns Type Description VNodeBuilder A VNodeBuilder with the options set WithPrepareTimeout(TimeSpan) Sets the prepare timeout Declaration public VNodeBuilder WithPrepareTimeout(TimeSpan prepareTimeout) Parameters Type Name System.TimeSpan prepareTimeout Returns Type Description VNodeBuilder A VNodeBuilder with the options set WithProjectionQueryExpirationOf(TimeSpan) Sets how long a projection query can be idle before it expires. Declaration public VNodeBuilder WithProjectionQueryExpirationOf(TimeSpan projectionQueryExpiry) Parameters Type Name System.TimeSpan projectionQueryExpiry Returns Type Description VNodeBuilder A VNodeBuilder with the options set WithScavengeHistoryMaxAge(Int32) The number of days to keep scavenge history (Default: 30) Declaration public VNodeBuilder WithScavengeHistoryMaxAge(int scavengeHistoryMaxAge) Parameters Type Name System.Int32 scavengeHistoryMaxAge Returns Type Description VNodeBuilder A VNodeBuilder with the options set WithServerCertificate(X509Certificate2) Sets the Server SSL Certificate Declaration public VNodeBuilder WithServerCertificate(X509Certificate2 sslCertificate) Parameters Type Name System.Security.Cryptography.X509Certificates.X509Certificate2 sslCertificate Returns Type Description VNodeBuilder A VNodeBuilder with the options set WithServerCertificateFromFile(String, String) Sets the Server SSL Certificate to be loaded from a file Declaration public VNodeBuilder WithServerCertificateFromFile(string path, string password) Parameters Type Name System.String path System.String password Returns Type Description VNodeBuilder A VNodeBuilder with the options set WithServerCertificateFromStore(StoreLocation, StoreName, String, String) Sets the Server SSL Certificate to be loaded from a certificate store Declaration public VNodeBuilder WithServerCertificateFromStore(StoreLocation storeLocation, StoreName storeName, string certificateSubjectName, string certificateThumbprint) Parameters Type Name System.Security.Cryptography.X509Certificates.StoreLocation storeLocation System.Security.Cryptography.X509Certificates.StoreName storeName System.String certificateSubjectName System.String certificateThumbprint Returns Type Description VNodeBuilder A VNodeBuilder with the options set WithServerCertificateFromStore(StoreName, String, String) Sets the Server SSL Certificate to be loaded from a certificate store Declaration public VNodeBuilder WithServerCertificateFromStore(StoreName storeName, string certificateSubjectName, string certificateThumbprint) Parameters Type Name System.Security.Cryptography.X509Certificates.StoreName storeName System.String certificateSubjectName System.String certificateThumbprint Returns Type Description VNodeBuilder A VNodeBuilder with the options set WithSingleNodeSettings() Declaration protected VNodeBuilder WithSingleNodeSettings() Returns Type Description VNodeBuilder WithSslTargetHost(String) Sets the target host of the server's SSL certificate. Declaration public VNodeBuilder WithSslTargetHost(string targetHost) Parameters Type Name System.String targetHost Returns Type Description VNodeBuilder A VNodeBuilder with the options set WithStatsPeriod(TimeSpan) Sets the period between statistics gathers Declaration public VNodeBuilder WithStatsPeriod(TimeSpan statsPeriod) Parameters Type Name System.TimeSpan statsPeriod Returns Type Description VNodeBuilder A VNodeBuilder with the options set WithStatsStorage(StatsStorage) Sets how stats are stored. Default is Stream Declaration public VNodeBuilder WithStatsStorage(StatsStorage statsStorage) Parameters Type Name StatsStorage statsStorage Returns Type Description VNodeBuilder A VNodeBuilder with the options set WithStructuredLogging(Boolean) Enable structured logging Declaration public VNodeBuilder WithStructuredLogging(bool structuredLog) Parameters Type Name System.Boolean structuredLog Returns Type Description VNodeBuilder A VNodeBuilder with the options set WithTfCachedChunks(Int32) The number of chunks to cache in unmanaged memory. Declaration public VNodeBuilder WithTfCachedChunks(int cachedChunks) Parameters Type Name System.Int32 cachedChunks Returns Type Description VNodeBuilder A VNodeBuilder with the options set WithTfChunksCacheSize(Int64) Sets the transaction file chunk cache size. Default is ChunksCacheSize Declaration public VNodeBuilder WithTfChunksCacheSize(long chunksCacheSize) Parameters Type Name System.Int64 chunksCacheSize Returns Type Description VNodeBuilder A VNodeBuilder with the options set WithTfChunkSize(Int32) Sets the transaction file chunk size. Default is ChunkSize Declaration public VNodeBuilder WithTfChunkSize(int chunkSize) Parameters Type Name System.Int32 chunkSize Returns Type Description VNodeBuilder A VNodeBuilder with the options set WithUnsafeDisableFlushToDisk() Disables Hard Deletes (UNSAFE: use to remove hard deletes) Declaration public VNodeBuilder WithUnsafeDisableFlushToDisk() Returns Type Description VNodeBuilder A VNodeBuilder with the options set WithUnsafeIgnoreHardDelete() Disables Hard Deletes (UNSAFE: use to remove hard deletes) Declaration public VNodeBuilder WithUnsafeIgnoreHardDelete() Returns Type Description VNodeBuilder A VNodeBuilder with the options set WithWorkerThreads(Int32) Sets the number of worker threads to use in shared threadpool Declaration public VNodeBuilder WithWorkerThreads(int count) Parameters Type Name System.Int32 count Returns Type Description VNodeBuilder A VNodeBuilder with the options set Operators Implicit(VNodeBuilder to ClusterVNode) Converts an VNodeBuilder to a ClusterVNode . Declaration public static implicit operator ClusterVNode(VNodeBuilder builder) Parameters Type Name VNodeBuilder builder Returns Type Description ClusterVNode A ClusterVNode built with the options that were set on the VNodeBuilder Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Util.html": {
    "href": "dotnet-api/code/EventStore.Core.Util.html",
    "title": "Namespace EventStore.Core.Util | Event Store",
    "keywords": "Namespace EventStore.Core.Util Classes DefaultFiles FileUtils MD5Hash MiniWeb Opts"
  },
  "dotnet-api/code/EventStore.Core.TransactionLog.Unbuffered.ExtendedFileOptions.html": {
    "href": "dotnet-api/code/EventStore.Core.TransactionLog.Unbuffered.ExtendedFileOptions.html",
    "title": "Enum ExtendedFileOptions | Event Store",
    "keywords": "Enum ExtendedFileOptions Namespace : EventStore.Core.TransactionLog.Unbuffered Assembly : EventStore.Native.dll Syntax [Flags] public enum ExtendedFileOptions Fields Name Description NoBuffering Overlapped SequentialScan WriteThrough Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<ExtendedFileOptions>() ProtobufExtensions.Serialize<ExtendedFileOptions>() ProtobufExtensions.SerializeToArray<ExtendedFileOptions>()"
  },
  "dotnet-api/code/EventStore.Core.TransactionLog.TFReaderLease.html": {
    "href": "dotnet-api/code/EventStore.Core.TransactionLog.TFReaderLease.html",
    "title": "Struct TFReaderLease | Event Store",
    "keywords": "Struct TFReaderLease Implements System.IDisposable Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.TransactionLog Assembly : EventStore.Core.dll Syntax public struct TFReaderLease : IDisposable Constructors TFReaderLease(ObjectPool<ITransactionFileReader>) Declaration public TFReaderLease(ObjectPool<ITransactionFileReader> pool) Parameters Type Name ObjectPool < ITransactionFileReader > pool TFReaderLease(ITransactionFileReader) Declaration public TFReaderLease(ITransactionFileReader reader) Parameters Type Name ITransactionFileReader reader Fields Reader Declaration public readonly ITransactionFileReader Reader Field Value Type ITransactionFileReader Methods ExistsAt(Int64) Declaration public bool ExistsAt(long position) Parameters Type Name System.Int64 position Returns Type Description System.Boolean Reposition(Int64) Declaration public void Reposition(long position) Parameters Type Name System.Int64 position TryReadAt(Int64) Declaration public RecordReadResult TryReadAt(long position) Parameters Type Name System.Int64 position Returns Type Description RecordReadResult TryReadNext() Declaration public SeqReadResult TryReadNext() Returns Type Description SeqReadResult TryReadPrev() Declaration public SeqReadResult TryReadPrev() Returns Type Description SeqReadResult Explicit Interface Implementations IDisposable.Dispose() Declaration void IDisposable.Dispose() Implements System.IDisposable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) EnumExtensions.EnumValueName<T>(T) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.TransactionLog.SeqReadResult.html": {
    "href": "dotnet-api/code/EventStore.Core.TransactionLog.SeqReadResult.html",
    "title": "Struct SeqReadResult | Event Store",
    "keywords": "Struct SeqReadResult Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.TransactionLog Assembly : EventStore.Core.dll Syntax public struct SeqReadResult Constructors SeqReadResult(Boolean, Boolean, LogRecord, Int32, Int64, Int64) Declaration public SeqReadResult(bool success, bool eof, LogRecord logRecord, int recordLength, long recordPrePosition, long recordPostPosition) Parameters Type Name System.Boolean success System.Boolean eof LogRecord logRecord System.Int32 recordLength System.Int64 recordPrePosition System.Int64 recordPostPosition Fields Eof Declaration public readonly bool Eof Field Value Type System.Boolean Failure Declaration public static readonly SeqReadResult Failure Field Value Type SeqReadResult LogRecord Declaration public readonly LogRecord LogRecord Field Value Type LogRecord RecordLength Declaration public readonly int RecordLength Field Value Type System.Int32 RecordPostPosition Declaration public readonly long RecordPostPosition Field Value Type System.Int64 RecordPrePosition Declaration public readonly long RecordPrePosition Field Value Type System.Int64 Success Declaration public readonly bool Success Field Value Type System.Boolean Methods ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) EnumExtensions.EnumValueName<T>(T) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.TransactionLog.Checkpoint.MemoryMappedFileCheckpoint.html": {
    "href": "dotnet-api/code/EventStore.Core.TransactionLog.Checkpoint.MemoryMappedFileCheckpoint.html",
    "title": "Class MemoryMappedFileCheckpoint | Event Store",
    "keywords": "Class MemoryMappedFileCheckpoint Inheritance System.Object MemoryMappedFileCheckpoint Implements ICheckpoint System.IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.TransactionLog.Checkpoint Assembly : EventStore.Core.dll Syntax public class MemoryMappedFileCheckpoint : ICheckpoint, IDisposable Constructors MemoryMappedFileCheckpoint(String) Declaration public MemoryMappedFileCheckpoint(string filename) Parameters Type Name System.String filename MemoryMappedFileCheckpoint(String, String, Boolean, Boolean, Int64) Declaration public MemoryMappedFileCheckpoint(string filename, string name, bool cached, bool mustExist = false, long initValue = 0L) Parameters Type Name System.String filename System.String name System.Boolean cached System.Boolean mustExist System.Int64 initValue Properties Name Declaration public string Name { get; } Property Value Type System.String Methods Close() Declaration public void Close() Dispose() Declaration public void Dispose() Flush() Declaration public void Flush() OnFlushed(Int64) Declaration protected virtual void OnFlushed(long obj) Parameters Type Name System.Int64 obj Read() Declaration public long Read() Returns Type Description System.Int64 ReadNonFlushed() Declaration public long ReadNonFlushed() Returns Type Description System.Int64 Write(Int64) Declaration public void Write(long checkpoint) Parameters Type Name System.Int64 checkpoint Events Flushed Declaration public event Action<long> Flushed Event Type Type System.Action < System.Int64 > Implements ICheckpoint System.IDisposable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.html": {
    "href": "dotnet-api/code/EventStore.Core.TransactionLog.Checkpoint.InMemoryCheckpoint.html",
    "title": "Class InMemoryCheckpoint | Event Store",
    "keywords": "Class InMemoryCheckpoint Inheritance System.Object InMemoryCheckpoint Implements ICheckpoint System.IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.TransactionLog.Checkpoint Assembly : EventStore.Core.dll Syntax public class InMemoryCheckpoint : ICheckpoint, IDisposable Constructors InMemoryCheckpoint() Declaration public InMemoryCheckpoint() InMemoryCheckpoint(Int64) Declaration public InMemoryCheckpoint(long initialValue) Parameters Type Name System.Int64 initialValue InMemoryCheckpoint(String, Int64) Declaration public InMemoryCheckpoint(string name, long initValue = 0L) Parameters Type Name System.String name System.Int64 initValue Properties Name Declaration public string Name { get; } Property Value Type System.String Methods Close() Declaration public void Close() Dispose() Declaration public void Dispose() Flush() Declaration public void Flush() OnFlushed(Int64) Declaration protected virtual void OnFlushed(long obj) Parameters Type Name System.Int64 obj Read() Declaration public long Read() Returns Type Description System.Int64 ReadNonFlushed() Declaration public long ReadNonFlushed() Returns Type Description System.Int64 Write(Int64) Declaration public void Write(long checkpoint) Parameters Type Name System.Int64 checkpoint Events Flushed Declaration public event Action<long> Flushed Event Type Type System.Action < System.Int64 > Implements ICheckpoint System.IDisposable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.html": {
    "href": "dotnet-api/code/EventStore.Core.TransactionLog.Checkpoint.ICheckpoint.html",
    "title": "Interface ICheckpoint | Event Store",
    "keywords": "Interface ICheckpoint Inherited Members System.IDisposable.Dispose() Namespace : EventStore.Core.TransactionLog.Checkpoint Assembly : EventStore.Core.dll Syntax public interface ICheckpoint : IDisposable Properties Name Declaration string Name { get; } Property Value Type System.String Methods Close() Declaration void Close() Flush() Declaration void Flush() Read() Declaration long Read() Returns Type Description System.Int64 ReadNonFlushed() Declaration long ReadNonFlushed() Returns Type Description System.Int64 Write(Int64) Declaration void Write(long checkpoint) Parameters Type Name System.Int64 checkpoint Events Flushed Declaration event Action<long> Flushed Event Type Type System.Action < System.Int64 > Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.TransactionLog.Checkpoint.FileCheckpoint.html": {
    "href": "dotnet-api/code/EventStore.Core.TransactionLog.Checkpoint.FileCheckpoint.html",
    "title": "Class FileCheckpoint | Event Store",
    "keywords": "Class FileCheckpoint Inheritance System.Object FileCheckpoint Implements ICheckpoint System.IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.TransactionLog.Checkpoint Assembly : EventStore.Core.dll Syntax public class FileCheckpoint : ICheckpoint, IDisposable Constructors FileCheckpoint(String) Declaration public FileCheckpoint(string filename) Parameters Type Name System.String filename FileCheckpoint(String, String, Boolean, Boolean, Int64) Declaration public FileCheckpoint(string filename, string name, bool cached = false, bool mustExist = false, long initValue = 0L) Parameters Type Name System.String filename System.String name System.Boolean cached System.Boolean mustExist System.Int64 initValue Properties Name Declaration public string Name { get; } Property Value Type System.String Methods Close() Declaration public void Close() Dispose() Declaration public void Dispose() Flush() Declaration public void Flush() OnFlushed(Int64) Declaration protected virtual void OnFlushed(long obj) Parameters Type Name System.Int64 obj Read() Declaration public long Read() Returns Type Description System.Int64 ReadNonFlushed() Declaration public long ReadNonFlushed() Returns Type Description System.Int64 Write(Int64) Declaration public void Write(long checkpoint) Parameters Type Name System.Int64 checkpoint Events Flushed Declaration public event Action<long> Flushed Event Type Type System.Action < System.Int64 > Implements ICheckpoint System.IDisposable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.TransactionLog.Checkpoint.Checkpoint.html": {
    "href": "dotnet-api/code/EventStore.Core.TransactionLog.Checkpoint.Checkpoint.html",
    "title": "Class Checkpoint | Event Store",
    "keywords": "Class Checkpoint Inheritance System.Object Checkpoint Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.TransactionLog.Checkpoint Assembly : EventStore.Core.dll Syntax public static class Checkpoint Fields Chaser Declaration public const string Chaser = \"chaser\" Field Value Type System.String Epoch Declaration public const string Epoch = \"epoch\" Field Value Type System.String Replication Declaration public const string Replication = \"replication\" Field Value Type System.String Truncate Declaration public const string Truncate = \"truncate\" Field Value Type System.String Writer Declaration public const string Writer = \"writer\" Field Value Type System.String"
  },
  "dotnet-api/code/EventStore.Core.StandardComponents.html": {
    "href": "dotnet-api/code/EventStore.Core.StandardComponents.html",
    "title": "Class StandardComponents | Event Store",
    "keywords": "Class StandardComponents Inheritance System.Object StandardComponents Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core Assembly : EventStore.Core.dll Syntax public class StandardComponents Constructors StandardComponents(TFChunkDb, IQueuedHandler, ISubscriber, TimerService, ITimeProvider, IHttpForwarder, HttpService[], IPublisher) Declaration public StandardComponents(TFChunkDb db, IQueuedHandler mainQueue, ISubscriber mainBus, TimerService timerService, ITimeProvider timeProvider, IHttpForwarder httpForwarder, HttpService[] httpServices, IPublisher networkSendService) Parameters Type Name TFChunkDb db IQueuedHandler mainQueue ISubscriber mainBus TimerService timerService ITimeProvider timeProvider IHttpForwarder httpForwarder HttpService [] httpServices IPublisher networkSendService Properties Db Declaration public TFChunkDb Db { get; } Property Value Type TFChunkDb HttpForwarder Declaration public IHttpForwarder HttpForwarder { get; } Property Value Type IHttpForwarder HttpServices Declaration public HttpService[] HttpServices { get; } Property Value Type HttpService [] MainBus Declaration public ISubscriber MainBus { get; } Property Value Type ISubscriber MainQueue Declaration public IQueuedHandler MainQueue { get; } Property Value Type IQueuedHandler NetworkSendService Declaration public IPublisher NetworkSendService { get; } Property Value Type IPublisher TimeProvider Declaration public ITimeProvider TimeProvider { get; } Property Value Type ITimeProvider TimerService Declaration public TimerService TimerService { get; } Property Value Type TimerService Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Settings.html": {
    "href": "dotnet-api/code/EventStore.Core.Settings.html",
    "title": "Namespace EventStore.Core.Settings | Event Store",
    "keywords": "Namespace EventStore.Core.Settings Classes ESConsts SingleVNodeSettings"
  },
  "dotnet-api/code/EventStore.Core.Settings.SingleVNodeSettings.html": {
    "href": "dotnet-api/code/EventStore.Core.Settings.SingleVNodeSettings.html",
    "title": "Class SingleVNodeSettings | Event Store",
    "keywords": "Class SingleVNodeSettings Inheritance System.Object SingleVNodeSettings Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Settings Assembly : EventStore.Core.dll Syntax public class SingleVNodeSettings Constructors SingleVNodeSettings(IPEndPoint, IPEndPoint, IPEndPoint, String[], Boolean, X509Certificate2, Int32, TimeSpan, TimeSpan, TimeSpan, TimeSpan, TimeSpan, StatsStorage, Boolean, Boolean) Declaration public SingleVNodeSettings(IPEndPoint externalTcpEndPoint, IPEndPoint externalSecureTcpEndPoint, IPEndPoint externalHttpEndPoint, string[] httpPrefixes, bool enableTrustedAuth, X509Certificate2 certificate, int workerThreads, TimeSpan minFlushDelay, TimeSpan prepareTimeout, TimeSpan commitTimeout, TimeSpan statsPeriod, TimeSpan tcpTimeout, StatsStorage statsStorage = StatsStorage.Stream | StatsStorage.File | StatsStorage.StreamAndFile, bool skipInitializeStandardUsersCheck = false, bool disableScavengeMerging = false) Parameters Type Name System.Net.IPEndPoint externalTcpEndPoint System.Net.IPEndPoint externalSecureTcpEndPoint System.Net.IPEndPoint externalHttpEndPoint System.String [] httpPrefixes System.Boolean enableTrustedAuth System.Security.Cryptography.X509Certificates.X509Certificate2 certificate System.Int32 workerThreads System.TimeSpan minFlushDelay System.TimeSpan prepareTimeout System.TimeSpan commitTimeout System.TimeSpan statsPeriod System.TimeSpan tcpTimeout StatsStorage statsStorage System.Boolean skipInitializeStandardUsersCheck System.Boolean disableScavengeMerging Fields Certificate Declaration public readonly X509Certificate2 Certificate Field Value Type System.Security.Cryptography.X509Certificates.X509Certificate2 CommitTimeout Declaration public readonly TimeSpan CommitTimeout Field Value Type System.TimeSpan DisableScavengeMerging Declaration public readonly bool DisableScavengeMerging Field Value Type System.Boolean EnableTrustedAuth Declaration public readonly bool EnableTrustedAuth Field Value Type System.Boolean ExternalHttpEndPoint Declaration public readonly IPEndPoint ExternalHttpEndPoint Field Value Type System.Net.IPEndPoint ExternalSecureTcpEndPoint Declaration public readonly IPEndPoint ExternalSecureTcpEndPoint Field Value Type System.Net.IPEndPoint ExternalTcpEndPoint Declaration public readonly IPEndPoint ExternalTcpEndPoint Field Value Type System.Net.IPEndPoint HttpPrefixes Declaration public readonly string[] HttpPrefixes Field Value Type System.String [] MinFlushDelay Declaration public readonly TimeSpan MinFlushDelay Field Value Type System.TimeSpan PrepareTimeout Declaration public readonly TimeSpan PrepareTimeout Field Value Type System.TimeSpan SkipInitializeStandardUsersCheck Declaration public readonly bool SkipInitializeStandardUsersCheck Field Value Type System.Boolean StatsPeriod Declaration public readonly TimeSpan StatsPeriod Field Value Type System.TimeSpan StatsStorage Declaration public readonly StatsStorage StatsStorage Field Value Type StatsStorage TcpTimeout Declaration public readonly TimeSpan TcpTimeout Field Value Type System.TimeSpan WorkerThreads Declaration public readonly int WorkerThreads Field Value Type System.Int32 Methods ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Settings.ESConsts.html": {
    "href": "dotnet-api/code/EventStore.Core.Settings.ESConsts.html",
    "title": "Class ESConsts | Event Store",
    "keywords": "Class ESConsts Inheritance System.Object ESConsts Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Settings Assembly : EventStore.Core.dll Syntax public static class ESConsts Fields CachedEpochCount Declaration public const int CachedEpochCount = 1000 Field Value Type System.Int32 CachedPrincipalCount Declaration public const int CachedPrincipalCount = 1000 Field Value Type System.Int32 CommitedEventsMemCacheLimit Declaration public const int CommitedEventsMemCacheLimit = 8388608 Field Value Type System.Int32 HttpTimeout Declaration public static readonly TimeSpan HttpTimeout Field Value Type System.TimeSpan MemTableEntryCount Declaration public const int MemTableEntryCount = 1000000 Field Value Type System.Int32 PTableInitialReaderCount Declaration public const int PTableInitialReaderCount = 5 Field Value Type System.Int32 PTableMaxReaderCount Declaration public const int PTableMaxReaderCount = 17 Field Value Type System.Int32 ReadRequestTimeout Declaration public const int ReadRequestTimeout = 10000 Field Value Type System.Int32 StorageReaderThreadCount Declaration public const int StorageReaderThreadCount = 4 Field Value Type System.Int32 StreamInfoCacheCapacity Declaration public const int StreamInfoCacheCapacity = 100000 Field Value Type System.Int32 TFChunkMaxReaderCount Declaration public const int TFChunkMaxReaderCount = 21 Field Value Type System.Int32 TransactionMetadataCacheCapacity Declaration public const int TransactionMetadataCacheCapacity = 50000 Field Value Type System.Int32 UnrestrictedPendingSendBytes Declaration public const int UnrestrictedPendingSendBytes = 0 Field Value Type System.Int32"
  },
  "dotnet-api/code/EventStore.Core.Services.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.html",
    "title": "Namespace EventStore.Core.Services | Event Store",
    "keywords": "Namespace EventStore.Core.Services Classes ClusterStorageWriterService ElectionsService HttpSendService RequestForwardingService SubscriptionsService SystemConsumerStrategies System supported consumer strategies for use with persistent subscriptions. SystemEventTypes SystemHeaders SystemMetadata SystemRoles SystemStreams SystemUsers TcpSendService Enums ElectionsState SubscriptionDropReason"
  },
  "dotnet-api/code/EventStore.Core.Services.VNode.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.VNode.html",
    "title": "Namespace EventStore.Core.Services.VNode | Event Store",
    "keywords": "Namespace EventStore.Core.Services.VNode Classes ClusterVNodeController MessageForwardingProxy VNodeFSM VNodeFSMBuilder Builder syntax for constructing VNodeFSM in the code VNodeFSMHandling<TMessage> VNodeFSMStatesDefinition VNodeFSMUnoptimized"
  },
  "dotnet-api/code/EventStore.Projections.Core.Services.Management.ResponseWriter.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Services.Management.ResponseWriter.html",
    "title": "Class ResponseWriter | Event Store",
    "keywords": "Class ResponseWriter Inheritance System.Object ResponseWriter Implements IResponseWriter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Services.Management Assembly : EventStore.Projections.Core.dll Syntax public sealed class ResponseWriter : IResponseWriter Constructors ResponseWriter(IODispatcher) Declaration public ResponseWriter(IODispatcher ioDispatcher) Parameters Type Name IODispatcher ioDispatcher Methods PublishCommand(String, Object) Declaration public void PublishCommand(string command, object body) Parameters Type Name System.String command System.Object body Reset() Declaration public void Reset() Implements IResponseWriter Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.OperationFailed.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.OperationFailed.html",
    "title": "Class ProjectionManagementMessage.OperationFailed | Event Store",
    "keywords": "Class ProjectionManagementMessage.OperationFailed Inheritance System.Object Message ProjectionManagementMessage.OperationFailed ProjectionManagementMessage.Conflict ProjectionManagementMessage.NotAuthorized ProjectionManagementMessage.NotFound Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class OperationFailed : Message Constructors OperationFailed(String) Declaration public OperationFailed(string reason) Parameters Type Name System.String reason Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Reason Declaration public string Reason { get; } Property Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.NotFound.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.NotFound.html",
    "title": "Class ProjectionManagementMessage.NotFound | Event Store",
    "keywords": "Class ProjectionManagementMessage.NotFound Inheritance System.Object Message ProjectionManagementMessage.OperationFailed ProjectionManagementMessage.NotFound Inherited Members ProjectionManagementMessage.OperationFailed.Reason Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class NotFound : ProjectionManagementMessage.OperationFailed Constructors NotFound() Declaration public NotFound() Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides ProjectionManagementMessage.OperationFailed.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.NotAuthorized.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.NotAuthorized.html",
    "title": "Class ProjectionManagementMessage.NotAuthorized | Event Store",
    "keywords": "Class ProjectionManagementMessage.NotAuthorized Inheritance System.Object Message ProjectionManagementMessage.OperationFailed ProjectionManagementMessage.NotAuthorized Inherited Members ProjectionManagementMessage.OperationFailed.Reason Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class NotAuthorized : ProjectionManagementMessage.OperationFailed Constructors NotAuthorized() Declaration public NotAuthorized() Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides ProjectionManagementMessage.OperationFailed.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepare.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.CoreProjectionManagementMessage.CreateAndPrepare.html",
    "title": "Class CoreProjectionManagementMessage.CreateAndPrepare | Event Store",
    "keywords": "Class CoreProjectionManagementMessage.CreateAndPrepare Inheritance System.Object Message CoreProjectionManagementMessageBase CoreProjectionManagementControlMessage CoreProjectionManagementMessage.CreateAndPrepare Inherited Members CoreProjectionManagementControlMessage.WorkerId CoreProjectionManagementMessageBase.ProjectionId Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class CreateAndPrepare : CoreProjectionManagementControlMessage Constructors CreateAndPrepare(Guid, Guid, String, ProjectionVersion, ProjectionConfig, String, String) Declaration public CreateAndPrepare(Guid projectionId, Guid workerId, string name, ProjectionVersion version, ProjectionConfig config, string handlerType, string query) Parameters Type Name System.Guid projectionId System.Guid workerId System.String name ProjectionVersion version ProjectionConfig config System.String handlerType System.String query Properties Config Declaration public ProjectionConfig Config { get; } Property Value Type ProjectionConfig HandlerType Declaration public string HandlerType { get; } Property Value Type System.String MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides CoreProjectionManagementControlMessage.MsgTypeId Name Declaration public string Name { get; } Property Value Type System.String Query Declaration public string Query { get; } Property Value Type System.String Version Declaration public ProjectionVersion Version { get; } Property Value Type ProjectionVersion Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.CoreProjectionManagementControlMessage.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.CoreProjectionManagementControlMessage.html",
    "title": "Class CoreProjectionManagementControlMessage | Event Store",
    "keywords": "Class CoreProjectionManagementControlMessage Inheritance System.Object Message CoreProjectionManagementMessageBase CoreProjectionManagementControlMessage CoreProjectionManagementMessage.CreateAndPrepare CoreProjectionManagementMessage.CreateAndPrepareSlave CoreProjectionManagementMessage.CreatePrepared CoreProjectionManagementMessage.Dispose CoreProjectionManagementMessage.GetResult CoreProjectionManagementMessage.GetState CoreProjectionManagementMessage.Kill CoreProjectionManagementMessage.LoadStopped CoreProjectionManagementMessage.Start CoreProjectionManagementMessage.Stop Inherited Members CoreProjectionManagementMessageBase.ProjectionId Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class CoreProjectionManagementControlMessage : CoreProjectionManagementMessageBase Constructors CoreProjectionManagementControlMessage(Guid, Guid) Declaration public CoreProjectionManagementControlMessage(Guid projectionId, Guid workerId) Parameters Type Name System.Guid projectionId System.Guid workerId Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides CoreProjectionManagementMessageBase.MsgTypeId WorkerId Declaration public Guid WorkerId { get; } Property Value Type System.Guid Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.CoreProjectionCheckpointWriterMessage.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.CoreProjectionCheckpointWriterMessage.html",
    "title": "Class CoreProjectionCheckpointWriterMessage | Event Store",
    "keywords": "Class CoreProjectionCheckpointWriterMessage Inheritance System.Object CoreProjectionCheckpointWriterMessage Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public static class CoreProjectionCheckpointWriterMessage"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.CoreProjectionCheckpointWriterMessage.RestartRequested.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.CoreProjectionCheckpointWriterMessage.RestartRequested.html",
    "title": "Class CoreProjectionCheckpointWriterMessage.RestartRequested | Event Store",
    "keywords": "Class CoreProjectionCheckpointWriterMessage.RestartRequested Inheritance System.Object Message CoreProjectionCheckpointWriterMessage.RestartRequested Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public sealed class RestartRequested : Message Constructors RestartRequested(String) Declaration public RestartRequested(string reason) Parameters Type Name System.String reason Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Reason Declaration public string Reason { get; } Property Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.CoreProjectionCheckpointWriterMessage.CheckpointWritten.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.CoreProjectionCheckpointWriterMessage.CheckpointWritten.html",
    "title": "Class CoreProjectionCheckpointWriterMessage.CheckpointWritten | Event Store",
    "keywords": "Class CoreProjectionCheckpointWriterMessage.CheckpointWritten Inheritance System.Object Message CoreProjectionCheckpointWriterMessage.CheckpointWritten Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public sealed class CheckpointWritten : Message Constructors CheckpointWritten(CheckpointTag) Declaration public CheckpointWritten(CheckpointTag position) Parameters Type Name CheckpointTag position Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Position Declaration public CheckpointTag Position { get; } Property Value Type CheckpointTag Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.EventReaders.Feeds.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.EventReaders.Feeds.html",
    "title": "Namespace EventStore.Projections.Core.EventReaders.Feeds | Event Store",
    "keywords": "Namespace EventStore.Projections.Core.EventReaders.Feeds Classes FeedReader FeedReaderService"
  },
  "dotnet-api/code/EventStore.Projections.Core.EventReaders.Feeds.FeedReaderService.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.EventReaders.Feeds.FeedReaderService.html",
    "title": "Class FeedReaderService | Event Store",
    "keywords": "Class FeedReaderService Inheritance System.Object FeedReaderService Implements IHandle < FeedReaderMessage.ReadPage > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.EventReaders.Feeds Assembly : EventStore.Projections.Core.dll Syntax public class FeedReaderService : IHandle<FeedReaderMessage.ReadPage> Constructors FeedReaderService(PublishSubscribeDispatcher<Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase>, ITimeProvider) Declaration public FeedReaderService(PublishSubscribeDispatcher<Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase> subscriptionDispatcher, ITimeProvider timeProvider) Parameters Type Name PublishSubscribeDispatcher < System.Guid , ReaderSubscriptionManagement.Subscribe , ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage , EventReaderSubscriptionMessageBase > subscriptionDispatcher ITimeProvider timeProvider Methods Handle(FeedReaderMessage.ReadPage) Declaration public void Handle(FeedReaderMessage.ReadPage message) Parameters Type Name FeedReaderMessage.ReadPage message Implements IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.EventReaders.Feeds.FeedReader.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.EventReaders.Feeds.FeedReader.html",
    "title": "Class FeedReader | Event Store",
    "keywords": "Class FeedReader Inheritance System.Object FeedReader Implements IHandle < EventReaderSubscriptionMessage.CommittedEventReceived > IHandle < EventReaderSubscriptionMessage.EofReached > IHandle < EventReaderSubscriptionMessage.PartitionEofReached > IHandle < EventReaderSubscriptionMessage.CheckpointSuggested > IHandle < EventReaderSubscriptionMessage.NotAuthorized > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.EventReaders.Feeds Assembly : EventStore.Projections.Core.dll Syntax public class FeedReader : IHandle<EventReaderSubscriptionMessage.CommittedEventReceived>, IHandle<EventReaderSubscriptionMessage.EofReached>, IHandle<EventReaderSubscriptionMessage.PartitionEofReached>, IHandle<EventReaderSubscriptionMessage.CheckpointSuggested>, IHandle<EventReaderSubscriptionMessage.NotAuthorized> Constructors FeedReader(PublishSubscribeDispatcher<Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase>, IPrincipal, QuerySourcesDefinition, CheckpointTag, Int32, Guid, IEnvelope, ITimeProvider) Declaration public FeedReader(PublishSubscribeDispatcher<Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase> subscriptionDispatcher, IPrincipal user, QuerySourcesDefinition querySource, CheckpointTag fromPosition, int maxEvents, Guid requestCorrelationId, IEnvelope replyEnvelope, ITimeProvider timeProvider) Parameters Type Name PublishSubscribeDispatcher < System.Guid , ReaderSubscriptionManagement.Subscribe , ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage , EventReaderSubscriptionMessageBase > subscriptionDispatcher System.Security.Principal.IPrincipal user QuerySourcesDefinition querySource CheckpointTag fromPosition System.Int32 maxEvents System.Guid requestCorrelationId IEnvelope replyEnvelope ITimeProvider timeProvider Methods Create(PublishSubscribeDispatcher<Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase>, FeedReaderMessage.ReadPage, ITimeProvider) Declaration public static FeedReader Create(PublishSubscribeDispatcher<Guid, ReaderSubscriptionManagement.Subscribe, ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage, EventReaderSubscriptionMessageBase> publishSubscribeDispatcher, FeedReaderMessage.ReadPage message, ITimeProvider timeProvider) Parameters Type Name PublishSubscribeDispatcher < System.Guid , ReaderSubscriptionManagement.Subscribe , ReaderSubscriptionManagement.ReaderSubscriptionManagementMessage , EventReaderSubscriptionMessageBase > publishSubscribeDispatcher FeedReaderMessage.ReadPage message ITimeProvider timeProvider Returns Type Description FeedReader Handle(EventReaderSubscriptionMessage.CheckpointSuggested) Declaration public void Handle(EventReaderSubscriptionMessage.CheckpointSuggested message) Parameters Type Name EventReaderSubscriptionMessage.CheckpointSuggested message Handle(EventReaderSubscriptionMessage.CommittedEventReceived) Declaration public void Handle(EventReaderSubscriptionMessage.CommittedEventReceived message) Parameters Type Name EventReaderSubscriptionMessage.CommittedEventReceived message Handle(EventReaderSubscriptionMessage.EofReached) Declaration public void Handle(EventReaderSubscriptionMessage.EofReached message) Parameters Type Name EventReaderSubscriptionMessage.EofReached message Handle(EventReaderSubscriptionMessage.NotAuthorized) Declaration public void Handle(EventReaderSubscriptionMessage.NotAuthorized message) Parameters Type Name EventReaderSubscriptionMessage.NotAuthorized message Handle(EventReaderSubscriptionMessage.PartitionEofReached) Declaration public void Handle(EventReaderSubscriptionMessage.PartitionEofReached message) Parameters Type Name EventReaderSubscriptionMessage.PartitionEofReached message Start() Declaration public void Start() Implements IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Http.SendToHttpEnvelope-1.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Http.SendToHttpEnvelope-1.html",
    "title": "Class SendToHttpEnvelope<TExpectedResponseMessage> | Event Store",
    "keywords": "Class SendToHttpEnvelope<TExpectedResponseMessage> Inheritance System.Object SendToHttpEnvelope<TExpectedResponseMessage> Implements IEnvelope Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Transport.Http Assembly : EventStore.Core.dll Syntax public class SendToHttpEnvelope<TExpectedResponseMessage> : IEnvelope where TExpectedResponseMessage : Message Type Parameters Name Description TExpectedResponseMessage Constructors SendToHttpEnvelope(IPublisher, HttpEntityManager, Func<ICodec, TExpectedResponseMessage, String>, Func<ICodec, TExpectedResponseMessage, ResponseConfiguration>, IEnvelope) Declaration public SendToHttpEnvelope(IPublisher networkSendQueue, HttpEntityManager entity, Func<ICodec, TExpectedResponseMessage, string> formatter, Func<ICodec, TExpectedResponseMessage, ResponseConfiguration> configurator, IEnvelope notMatchingEnvelope) Parameters Type Name IPublisher networkSendQueue HttpEntityManager entity System.Func < ICodec , TExpectedResponseMessage, System.String > formatter System.Func < ICodec , TExpectedResponseMessage, ResponseConfiguration > configurator IEnvelope notMatchingEnvelope Methods ReplyWith<T>(T) Declaration public void ReplyWith<T>(T message) where T : Message Parameters Type Name T message Type Parameters Name Description T Implements IEnvelope Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Http.ResponseConfiguration.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Http.ResponseConfiguration.html",
    "title": "Class ResponseConfiguration | Event Store",
    "keywords": "Class ResponseConfiguration Inheritance System.Object ResponseConfiguration Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Transport.Http Assembly : EventStore.Core.dll Syntax public class ResponseConfiguration Constructors ResponseConfiguration(Int32, String, String, Encoding, IEnumerable<KeyValuePair<String, String>>) Declaration public ResponseConfiguration(int code, string description, string contentType, Encoding encoding, IEnumerable<KeyValuePair<string, string>> headers) Parameters Type Name System.Int32 code System.String description System.String contentType System.Text.Encoding encoding System.Collections.Generic.IEnumerable < System.Collections.Generic.KeyValuePair < System.String , System.String >> headers ResponseConfiguration(Int32, String, String, Encoding, KeyValuePair<String, String>[]) Declaration public ResponseConfiguration(int code, string description, string contentType, Encoding encoding, params KeyValuePair<string, string>[] headers) Parameters Type Name System.Int32 code System.String description System.String contentType System.Text.Encoding encoding System.Collections.Generic.KeyValuePair < System.String , System.String >[] headers ResponseConfiguration(Int32, String, Encoding, KeyValuePair<String, String>[]) Declaration public ResponseConfiguration(int code, string contentType, Encoding encoding, params KeyValuePair<string, string>[] headers) Parameters Type Name System.Int32 code System.String contentType System.Text.Encoding encoding System.Collections.Generic.KeyValuePair < System.String , System.String >[] headers Fields Code Declaration public readonly int Code Field Value Type System.Int32 ContentType Declaration public readonly string ContentType Field Value Type System.String Description Declaration public readonly string Description Field Value Type System.String Encoding Declaration public readonly Encoding Encoding Field Value Type System.Text.Encoding Headers Declaration public readonly IEnumerable<KeyValuePair<string, string>> Headers Field Value Type System.Collections.Generic.IEnumerable < System.Collections.Generic.KeyValuePair < System.String , System.String >> Methods SetCreated(String) Declaration public ResponseConfiguration SetCreated(string location) Parameters Type Name System.String location Returns Type Description ResponseConfiguration Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Http.RequestParams.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Http.RequestParams.html",
    "title": "Struct RequestParams | Event Store",
    "keywords": "Struct RequestParams Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Services.Transport.Http Assembly : EventStore.Core.dll Syntax public struct RequestParams Constructors RequestParams(Boolean) Declaration public RequestParams(bool done) Parameters Type Name System.Boolean done RequestParams(Boolean, TimeSpan) Declaration public RequestParams(bool done, TimeSpan timeout) Parameters Type Name System.Boolean done System.TimeSpan timeout RequestParams(TimeSpan) Declaration public RequestParams(TimeSpan timeout) Parameters Type Name System.TimeSpan timeout Fields IsDone Declaration public readonly bool IsDone Field Value Type System.Boolean Timeout Declaration public readonly TimeSpan Timeout Field Value Type System.TimeSpan Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) EnumExtensions.EnumValueName<T>(T) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Http.NaiveUriRouter.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Http.NaiveUriRouter.html",
    "title": "Class NaiveUriRouter | Event Store",
    "keywords": "Class NaiveUriRouter Inheritance System.Object NaiveUriRouter Implements IUriRouter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Transport.Http Assembly : EventStore.Core.dll Syntax public class NaiveUriRouter : IUriRouter Methods GetAllUriMatches(Uri) Declaration public List<UriToActionMatch> GetAllUriMatches(Uri uri) Parameters Type Name System.Uri uri Returns Type Description System.Collections.Generic.List < UriToActionMatch > RegisterAction(ControllerAction, Func<HttpEntityManager, UriTemplateMatch, RequestParams>) Declaration public void RegisterAction(ControllerAction action, Func<HttpEntityManager, UriTemplateMatch, RequestParams> handler) Parameters Type Name ControllerAction action System.Func < HttpEntityManager , System.UriTemplateMatch , RequestParams > handler Implements IUriRouter Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Http.Messages.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Http.Messages.html",
    "title": "Namespace EventStore.Core.Services.Transport.Http.Messages | Event Store",
    "keywords": "Namespace EventStore.Core.Services.Transport.Http.Messages Classes IncomingHttpRequestMessage"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Http.Authentication.AnonymousHttpAuthenticationProvider.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Http.Authentication.AnonymousHttpAuthenticationProvider.html",
    "title": "Class AnonymousHttpAuthenticationProvider | Event Store",
    "keywords": "Class AnonymousHttpAuthenticationProvider Inheritance System.Object HttpAuthenticationProvider AnonymousHttpAuthenticationProvider Inherited Members HttpAuthenticationProvider.Authenticated(IncomingHttpRequestMessage, IPrincipal) HttpAuthenticationProvider.ReplyUnauthorized(HttpEntity) HttpAuthenticationProvider.ReplyInternalServerError(HttpEntity) HttpAuthenticationProvider.ReplyNotYetAvailable(HttpEntity) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Transport.Http.Authentication Assembly : EventStore.Core.dll Syntax public class AnonymousHttpAuthenticationProvider : HttpAuthenticationProvider Methods Authenticate(IncomingHttpRequestMessage) Declaration public override bool Authenticate(IncomingHttpRequestMessage message) Parameters Type Name IncomingHttpRequestMessage message Returns Type Description System.Boolean Overrides HttpAuthenticationProvider.Authenticate(IncomingHttpRequestMessage) Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.TimerService.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.TimerService.html",
    "title": "Namespace EventStore.Core.Services.TimerService | Event Store",
    "keywords": "Namespace EventStore.Core.Services.TimerService Classes RealTimeProvider RealTimer ThreadBasedScheduler TimerBasedScheduler TimerMessage TimerMessage.Schedule TimerService Timer service uses scheduler that is expected to be already running when it is passed to constructor and stopped on the disposal. This is done to make sure that we can handle timeouts and callbacks any time (even during system shutdowns and initialization) Interfaces IScheduler ITimeProvider ITimer"
  },
  "dotnet-api/code/EventStore.Core.Services.TimerService.TimerService.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.TimerService.TimerService.html",
    "title": "Class TimerService | Event Store",
    "keywords": "Class TimerService Timer service uses scheduler that is expected to be already running when it is passed to constructor and stopped on the disposal. This is done to make sure that we can handle timeouts and callbacks any time (even during system shutdowns and initialization) Inheritance System.Object TimerService Implements System.IDisposable IHandle < SystemMessage.BecomeShutdown > IHandle < TimerMessage.Schedule > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.TimerService Assembly : EventStore.Core.dll Syntax public class TimerService : IDisposable, IHandle<SystemMessage.BecomeShutdown>, IHandle<TimerMessage.Schedule> Constructors TimerService(IScheduler) Declaration public TimerService(IScheduler scheduler) Parameters Type Name IScheduler scheduler Methods Dispose() Declaration public void Dispose() Handle(SystemMessage.BecomeShutdown) Declaration public void Handle(SystemMessage.BecomeShutdown message) Parameters Type Name SystemMessage.BecomeShutdown message Handle(TimerMessage.Schedule) Declaration public void Handle(TimerMessage.Schedule message) Parameters Type Name TimerMessage.Schedule message Implements System.IDisposable IHandle<T> IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.Measurement.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.Measurement.html",
    "title": "Struct Measurement | Event Store",
    "keywords": "Struct Measurement Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Services.PersistentSubscription Assembly : EventStore.Core.dll Syntax public struct Measurement Constructors Measurement(String, Int32) Declaration public Measurement(string key, int value) Parameters Type Name System.String key System.Int32 value Fields Key Declaration public string Key Field Value Type System.String Value Declaration public int Value Field Value Type System.Int32 Methods From(String, Int32) Declaration public static Measurement From(string key, int value) Parameters Type Name System.String key System.Int32 value Returns Type Description Measurement Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) EnumExtensions.EnumValueName<T>(T) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionStreamReader.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionStreamReader.html",
    "title": "Interface IPersistentSubscriptionStreamReader | Event Store",
    "keywords": "Interface IPersistentSubscriptionStreamReader Namespace : EventStore.Core.Services.PersistentSubscription Assembly : EventStore.Core.dll Syntax public interface IPersistentSubscriptionStreamReader Methods BeginReadEvents(String, Int64, Int32, Int32, Boolean, Action<ResolvedEvent[], Int64, Boolean>) Declaration void BeginReadEvents(string stream, long startEventNumber, int countToLoad, int batchSize, bool resolveLinkTos, Action<ResolvedEvent[], long, bool> onEventsFound) Parameters Type Name System.String stream System.Int64 startEventNumber System.Int32 countToLoad System.Int32 batchSize System.Boolean resolveLinkTos System.Action < ResolvedEvent [], System.Int64 , System.Boolean > onEventsFound Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionMessageParker.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionMessageParker.html",
    "title": "Interface IPersistentSubscriptionMessageParker | Event Store",
    "keywords": "Interface IPersistentSubscriptionMessageParker Namespace : EventStore.Core.Services.PersistentSubscription Assembly : EventStore.Core.dll Syntax public interface IPersistentSubscriptionMessageParker Methods BeginDelete(Action<IPersistentSubscriptionMessageParker>) Declaration void BeginDelete(Action<IPersistentSubscriptionMessageParker> completed) Parameters Type Name System.Action < IPersistentSubscriptionMessageParker > completed BeginMarkParkedMessagesReprocessed(Int64) Declaration void BeginMarkParkedMessagesReprocessed(long sequence) Parameters Type Name System.Int64 sequence BeginParkMessage(ResolvedEvent, String, Action<ResolvedEvent, OperationResult>) Declaration void BeginParkMessage(ResolvedEvent ev, string reason, Action<ResolvedEvent, OperationResult> completed) Parameters Type Name ResolvedEvent ev System.String reason System.Action < ResolvedEvent , OperationResult > completed BeginReadEndSequence(Action<Nullable<Int64>>) Declaration void BeginReadEndSequence(Action<long? > completed) Parameters Type Name System.Action < System.Nullable < System.Int64 >> completed Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointWriter.html",
    "title": "Interface IPersistentSubscriptionCheckpointWriter | Event Store",
    "keywords": "Interface IPersistentSubscriptionCheckpointWriter Namespace : EventStore.Core.Services.PersistentSubscription Assembly : EventStore.Core.dll Syntax public interface IPersistentSubscriptionCheckpointWriter Methods BeginDelete(Action<IPersistentSubscriptionCheckpointWriter>) Declaration void BeginDelete(Action<IPersistentSubscriptionCheckpointWriter> completed) Parameters Type Name System.Action < IPersistentSubscriptionCheckpointWriter > completed BeginWriteState(Int64) Declaration void BeginWriteState(long state) Parameters Type Name System.Int64 state Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointReader.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.IPersistentSubscriptionCheckpointReader.html",
    "title": "Interface IPersistentSubscriptionCheckpointReader | Event Store",
    "keywords": "Interface IPersistentSubscriptionCheckpointReader Namespace : EventStore.Core.Services.PersistentSubscription Assembly : EventStore.Core.dll Syntax public interface IPersistentSubscriptionCheckpointReader Methods BeginLoadState(String, Action<Nullable<Int64>>) Declaration void BeginLoadState(string subscriptionId, Action<long? > onStateLoaded) Parameters Type Name System.String subscriptionId System.Action < System.Nullable < System.Int64 >> onStateLoaded Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.ElectionsState.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.ElectionsState.html",
    "title": "Enum ElectionsState | Event Store",
    "keywords": "Enum ElectionsState Namespace : EventStore.Core.Services Assembly : EventStore.Core.dll Syntax public enum ElectionsState Fields Name Description ElectingLeader Idle Leader NonLeader Shutdown Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<ElectionsState>() ProtobufExtensions.Serialize<ElectionsState>() ProtobufExtensions.SerializeToArray<ElectionsState>()"
  },
  "dotnet-api/code/EventStore.Core.Services.ElectionsService.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.ElectionsService.html",
    "title": "Class ElectionsService | Event Store",
    "keywords": "Class ElectionsService Inheritance System.Object ElectionsService Implements IHandle < SystemMessage.BecomeShuttingDown > IHandle < GossipMessage.GossipUpdated > IHandle < ElectionMessage.StartElections > IHandle < ElectionMessage.ElectionsTimedOut > IHandle < ElectionMessage.ViewChange > IHandle < ElectionMessage.ViewChangeProof > IHandle < ElectionMessage.SendViewChangeProof > IHandle < ElectionMessage.Prepare > IHandle < ElectionMessage.PrepareOk > IHandle < ElectionMessage.Proposal > IHandle < ElectionMessage.Accept > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services Assembly : EventStore.Core.dll Syntax public class ElectionsService : IHandle<SystemMessage.BecomeShuttingDown>, IHandle<GossipMessage.GossipUpdated>, IHandle<ElectionMessage.StartElections>, IHandle<ElectionMessage.ElectionsTimedOut>, IHandle<ElectionMessage.ViewChange>, IHandle<ElectionMessage.ViewChangeProof>, IHandle<ElectionMessage.SendViewChangeProof>, IHandle<ElectionMessage.Prepare>, IHandle<ElectionMessage.PrepareOk>, IHandle<ElectionMessage.Proposal>, IHandle<ElectionMessage.Accept> Constructors ElectionsService(IPublisher, VNodeInfo, Int32, ICheckpoint, ICheckpoint, IEpochManager, Func<Int64>, Int32) Declaration public ElectionsService(IPublisher publisher, VNodeInfo nodeInfo, int clusterSize, ICheckpoint writerCheckpoint, ICheckpoint chaserCheckpoint, IEpochManager epochManager, Func<long> getLastCommitPosition, int nodePriority) Parameters Type Name IPublisher publisher VNodeInfo nodeInfo System.Int32 clusterSize ICheckpoint writerCheckpoint ICheckpoint chaserCheckpoint IEpochManager epochManager System.Func < System.Int64 > getLastCommitPosition System.Int32 nodePriority Methods Handle(ElectionMessage.Accept) Declaration public void Handle(ElectionMessage.Accept message) Parameters Type Name ElectionMessage.Accept message Handle(ElectionMessage.ElectionsTimedOut) Declaration public void Handle(ElectionMessage.ElectionsTimedOut message) Parameters Type Name ElectionMessage.ElectionsTimedOut message Handle(ElectionMessage.Prepare) Declaration public void Handle(ElectionMessage.Prepare message) Parameters Type Name ElectionMessage.Prepare message Handle(ElectionMessage.PrepareOk) Declaration public void Handle(ElectionMessage.PrepareOk msg) Parameters Type Name ElectionMessage.PrepareOk msg Handle(ElectionMessage.Proposal) Declaration public void Handle(ElectionMessage.Proposal message) Parameters Type Name ElectionMessage.Proposal message Handle(ElectionMessage.SendViewChangeProof) Declaration public void Handle(ElectionMessage.SendViewChangeProof message) Parameters Type Name ElectionMessage.SendViewChangeProof message Handle(ElectionMessage.StartElections) Declaration public void Handle(ElectionMessage.StartElections message) Parameters Type Name ElectionMessage.StartElections message Handle(ElectionMessage.ViewChange) Declaration public void Handle(ElectionMessage.ViewChange message) Parameters Type Name ElectionMessage.ViewChange message Handle(ElectionMessage.ViewChangeProof) Declaration public void Handle(ElectionMessage.ViewChangeProof message) Parameters Type Name ElectionMessage.ViewChangeProof message Handle(GossipMessage.GossipUpdated) Declaration public void Handle(GossipMessage.GossipUpdated message) Parameters Type Name GossipMessage.GossipUpdated message Handle(SystemMessage.BecomeShuttingDown) Declaration public void Handle(SystemMessage.BecomeShuttingDown message) Parameters Type Name SystemMessage.BecomeShuttingDown message SubscribeMessages(ISubscriber) Declaration public void SubscribeMessages(ISubscriber subscriber) Parameters Type Name ISubscriber subscriber Implements IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.ClusterStorageWriterService.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.ClusterStorageWriterService.html",
    "title": "Class ClusterStorageWriterService | Event Store",
    "keywords": "Class ClusterStorageWriterService Inheritance System.Object StorageWriterService ClusterStorageWriterService Implements IHandle < SystemMessage.SystemInit > IHandle < SystemMessage.StateChangeMessage > IHandle < SystemMessage.WriteEpoch > IHandle < SystemMessage.WaitForChaserToCatchUp > IHandle < StorageMessage.WritePrepares > IHandle < StorageMessage.WriteDelete > IHandle < StorageMessage.WriteTransactionStart > IHandle < StorageMessage.WriteTransactionData > IHandle < StorageMessage.WriteTransactionPrepare > IHandle < StorageMessage.WriteCommit > IHandle < MonitoringMessage.InternalStatsRequest > IHandle < ReplicationMessage.ReplicaSubscribed > IHandle < ReplicationMessage.CreateChunk > IHandle < ReplicationMessage.RawChunkBulk > IHandle < ReplicationMessage.DataChunkBulk > Inherited Members StorageWriterService.TicksPerMs StorageWriterService.Db StorageWriterService.Writer StorageWriterService.EpochManager StorageWriterService.Bus StorageWriterService.StorageWriterQueue StorageWriterService.FlushMessagesInQueue StorageWriterService.BlockWriter StorageWriterService.Tasks StorageWriterService.SubscribeToMessage<T>() StorageWriterService.IHandle<SystemMessage.SystemInit>.Handle(SystemMessage.SystemInit) StorageWriterService.IHandle<SystemMessage.WriteEpoch>.Handle(SystemMessage.WriteEpoch) StorageWriterService.IHandle<SystemMessage.WaitForChaserToCatchUp>.Handle(SystemMessage.WaitForChaserToCatchUp) StorageWriterService.IHandle<StorageMessage.WritePrepares>.Handle(StorageMessage.WritePrepares) StorageWriterService.SoftUndeleteRawMeta(Byte[], Int64, Byte[]) StorageWriterService.IHandle<StorageMessage.WriteDelete>.Handle(StorageMessage.WriteDelete) StorageWriterService.IHandle<StorageMessage.WriteTransactionStart>.Handle(StorageMessage.WriteTransactionStart) StorageWriterService.IHandle<StorageMessage.WriteTransactionData>.Handle(StorageMessage.WriteTransactionData) StorageWriterService.IHandle<StorageMessage.WriteTransactionPrepare>.Handle(StorageMessage.WriteTransactionPrepare) StorageWriterService.IHandle<StorageMessage.WriteCommit>.Handle(StorageMessage.WriteCommit) StorageWriterService.Flush(Boolean) StorageWriterService.Handle(MonitoringMessage.InternalStatsRequest) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services Assembly : EventStore.Core.dll Syntax public class ClusterStorageWriterService : StorageWriterService, IHandle<SystemMessage.SystemInit>, IHandle<SystemMessage.StateChangeMessage>, IHandle<SystemMessage.WriteEpoch>, IHandle<SystemMessage.WaitForChaserToCatchUp>, IHandle<StorageMessage.WritePrepares>, IHandle<StorageMessage.WriteDelete>, IHandle<StorageMessage.WriteTransactionStart>, IHandle<StorageMessage.WriteTransactionData>, IHandle<StorageMessage.WriteTransactionPrepare>, IHandle<StorageMessage.WriteCommit>, IHandle<MonitoringMessage.InternalStatsRequest>, IHandle<ReplicationMessage.ReplicaSubscribed>, IHandle<ReplicationMessage.CreateChunk>, IHandle<ReplicationMessage.RawChunkBulk>, IHandle<ReplicationMessage.DataChunkBulk> Constructors ClusterStorageWriterService(IPublisher, ISubscriber, TimeSpan, TFChunkDb, TFChunkWriter, IIndexWriter, IEpochManager, Func<Int64>) Declaration public ClusterStorageWriterService(IPublisher bus, ISubscriber subscribeToBus, TimeSpan minFlushDelay, TFChunkDb db, TFChunkWriter writer, IIndexWriter indexWriter, IEpochManager epochManager, Func<long> getLastCommitPosition) Parameters Type Name IPublisher bus ISubscriber subscribeToBus System.TimeSpan minFlushDelay TFChunkDb db TFChunkWriter writer IIndexWriter indexWriter IEpochManager epochManager System.Func < System.Int64 > getLastCommitPosition Methods Handle(ReplicationMessage.CreateChunk) Declaration public void Handle(ReplicationMessage.CreateChunk message) Parameters Type Name ReplicationMessage.CreateChunk message Handle(ReplicationMessage.DataChunkBulk) Declaration public void Handle(ReplicationMessage.DataChunkBulk message) Parameters Type Name ReplicationMessage.DataChunkBulk message Handle(ReplicationMessage.RawChunkBulk) Declaration public void Handle(ReplicationMessage.RawChunkBulk message) Parameters Type Name ReplicationMessage.RawChunkBulk message Handle(ReplicationMessage.ReplicaSubscribed) Declaration public void Handle(ReplicationMessage.ReplicaSubscribed message) Parameters Type Name ReplicationMessage.ReplicaSubscribed message Handle(SystemMessage.StateChangeMessage) Declaration public override void Handle(SystemMessage.StateChangeMessage message) Parameters Type Name SystemMessage.StateChangeMessage message Overrides StorageWriterService.Handle(SystemMessage.StateChangeMessage) Implements IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.ScavengeDatabaseResponse.ScavengeResult.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.ScavengeDatabaseResponse.ScavengeResult.html",
    "title": "Enum TcpClientMessageDto.ScavengeDatabaseResponse.ScavengeResult | Event Store",
    "keywords": "Enum TcpClientMessageDto.ScavengeDatabaseResponse.ScavengeResult Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax [ProtoContract(Name = \"ScavengeResult\")] public enum ScavengeResult Fields Name Description InProgress Started Unauthorized Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<TcpClientMessageDto.ScavengeDatabaseResponse.ScavengeResult>() ProtobufExtensions.Serialize<TcpClientMessageDto.ScavengeDatabaseResponse.ScavengeResult>() ProtobufExtensions.SerializeToArray<TcpClientMessageDto.ScavengeDatabaseResponse.ScavengeResult>()"
  },
  "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.ScavengeDatabase.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.ScavengeDatabase.html",
    "title": "Class TcpClientMessageDto.ScavengeDatabase | Event Store",
    "keywords": "Class TcpClientMessageDto.ScavengeDatabase Inheritance System.Object TcpClientMessageDto.ScavengeDatabase Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax [Serializable] [ProtoContract(Name = \"ScavengeDatabase\")] public class ScavengeDatabase Constructors ScavengeDatabase() Declaration public ScavengeDatabase() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.ResolvedIndexedEvent.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.ResolvedIndexedEvent.html",
    "title": "Class TcpClientMessageDto.ResolvedIndexedEvent | Event Store",
    "keywords": "Class TcpClientMessageDto.ResolvedIndexedEvent Inheritance System.Object TcpClientMessageDto.ResolvedIndexedEvent Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax [Serializable] [ProtoContract(Name = \"ResolvedIndexedEvent\")] public class ResolvedIndexedEvent Constructors ResolvedIndexedEvent(EventRecord, EventRecord) Declaration public ResolvedIndexedEvent(EventRecord eventRecord, EventRecord linkRecord) Parameters Type Name EventRecord eventRecord EventRecord linkRecord ResolvedIndexedEvent(TcpClientMessageDto.EventRecord, TcpClientMessageDto.EventRecord) Declaration public ResolvedIndexedEvent(TcpClientMessageDto.EventRecord event, TcpClientMessageDto.EventRecord link) Parameters Type Name TcpClientMessageDto.EventRecord event TcpClientMessageDto.EventRecord link Fields Event Declaration [ProtoMember(1, IsRequired = true, Name = \"event\", DataFormat = DataFormat.Default)] public readonly TcpClientMessageDto.EventRecord Event Field Value Type TcpClientMessageDto.EventRecord Link Declaration [ProtoMember(2, IsRequired = false, Name = \"link\", DataFormat = DataFormat.Default)] public readonly TcpClientMessageDto.EventRecord Link Field Value Type TcpClientMessageDto.EventRecord Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.ResolvedEvent.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.ResolvedEvent.html",
    "title": "Class TcpClientMessageDto.ResolvedEvent | Event Store",
    "keywords": "Class TcpClientMessageDto.ResolvedEvent Inheritance System.Object TcpClientMessageDto.ResolvedEvent Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax [Serializable] [ProtoContract(Name = \"ResolvedEvent\")] public class ResolvedEvent Constructors ResolvedEvent(ResolvedEvent) Declaration public ResolvedEvent(ResolvedEvent pair) Parameters Type Name ResolvedEvent pair ResolvedEvent(TcpClientMessageDto.EventRecord, TcpClientMessageDto.EventRecord, Int64, Int64) Declaration public ResolvedEvent(TcpClientMessageDto.EventRecord event, TcpClientMessageDto.EventRecord link, long commitPosition, long preparePosition) Parameters Type Name TcpClientMessageDto.EventRecord event TcpClientMessageDto.EventRecord link System.Int64 commitPosition System.Int64 preparePosition Fields CommitPosition Declaration [ProtoMember(3, IsRequired = true, Name = \"commit_position\", DataFormat = DataFormat.TwosComplement)] public readonly long CommitPosition Field Value Type System.Int64 Event Declaration [ProtoMember(1, IsRequired = true, Name = \"event\", DataFormat = DataFormat.Default)] public readonly TcpClientMessageDto.EventRecord Event Field Value Type TcpClientMessageDto.EventRecord Link Declaration [ProtoMember(2, IsRequired = false, Name = \"link\", DataFormat = DataFormat.Default)] public readonly TcpClientMessageDto.EventRecord Link Field Value Type TcpClientMessageDto.EventRecord PreparePosition Declaration [ProtoMember(4, IsRequired = true, Name = \"prepare_position\", DataFormat = DataFormat.TwosComplement)] public readonly long PreparePosition Field Value Type System.Int64 Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Index.IIndexFilenameProvider.html": {
    "href": "dotnet-api/code/EventStore.Core.Index.IIndexFilenameProvider.html",
    "title": "Interface IIndexFilenameProvider | Event Store",
    "keywords": "Interface IIndexFilenameProvider Namespace : EventStore.Core.Index Assembly : EventStore.Core.dll Syntax public interface IIndexFilenameProvider Methods GetFilenameNewTable() Declaration string GetFilenameNewTable() Returns Type Description System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Index.Hashes.html": {
    "href": "dotnet-api/code/EventStore.Core.Index.Hashes.html",
    "title": "Namespace EventStore.Core.Index.Hashes | Event Store",
    "keywords": "Namespace EventStore.Core.Index.Hashes Classes Murmur2Unsafe Murmur3AUnsafe XXHashUnsafe Interfaces IHasher"
  },
  "dotnet-api/code/EventStore.Core.Index.Hashes.XXHashUnsafe.html": {
    "href": "dotnet-api/code/EventStore.Core.Index.Hashes.XXHashUnsafe.html",
    "title": "Class XXHashUnsafe | Event Store",
    "keywords": "Class XXHashUnsafe Inheritance System.Object XXHashUnsafe Implements IHasher Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Index.Hashes Assembly : EventStore.Core.dll Syntax public class XXHashUnsafe : IHasher Methods Hash(Byte[]) Declaration public uint Hash(byte[] data) Parameters Type Name System.Byte [] data Returns Type Description System.UInt32 Hash(Byte[], Int32, UInt32, UInt32) Declaration public uint Hash(byte[] data, int offset, uint len, uint seed) Parameters Type Name System.Byte [] data System.Int32 offset System.UInt32 len System.UInt32 seed Returns Type Description System.UInt32 Hash(String) Declaration public uint Hash(string s) Parameters Type Name System.String s Returns Type Description System.UInt32 Implements IHasher Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Index.Hashes.Murmur3AUnsafe.html": {
    "href": "dotnet-api/code/EventStore.Core.Index.Hashes.Murmur3AUnsafe.html",
    "title": "Class Murmur3AUnsafe | Event Store",
    "keywords": "Class Murmur3AUnsafe Inheritance System.Object Murmur3AUnsafe Implements IHasher Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Index.Hashes Assembly : EventStore.Core.dll Syntax public class Murmur3AUnsafe : IHasher Methods Hash(Byte[]) Declaration public uint Hash(byte[] data) Parameters Type Name System.Byte [] data Returns Type Description System.UInt32 Hash(Byte[], Int32, UInt32, UInt32) Declaration public uint Hash(byte[] data, int offset, uint len, uint seed) Parameters Type Name System.Byte [] data System.Int32 offset System.UInt32 len System.UInt32 seed Returns Type Description System.UInt32 Hash(String) Declaration public uint Hash(string s) Parameters Type Name System.String s Returns Type Description System.UInt32 Implements IHasher Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Helpers.IODispatcherAsync.CancellationScope.html": {
    "href": "dotnet-api/code/EventStore.Core.Helpers.IODispatcherAsync.CancellationScope.html",
    "title": "Class IODispatcherAsync.CancellationScope | Event Store",
    "keywords": "Class IODispatcherAsync.CancellationScope Inheritance System.Object IODispatcherAsync.CancellationScope Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Helpers Assembly : EventStore.Core.dll Syntax public class CancellationScope Methods Cancel() Declaration public void Cancel() Cancelled(Guid) Declaration public bool Cancelled(Guid id) Parameters Type Name System.Guid id Returns Type Description System.Boolean Register(Guid) Declaration public Guid Register(Guid id) Parameters Type Name System.Guid id Returns Type Description System.Guid Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Helpers.IODispatcher.html": {
    "href": "dotnet-api/code/EventStore.Core.Helpers.IODispatcher.html",
    "title": "Class IODispatcher | Event Store",
    "keywords": "Class IODispatcher Inheritance System.Object IODispatcher Implements IHandle < IODispatcherDelayedMessage > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Helpers Assembly : EventStore.Core.dll Syntax public sealed class IODispatcher : IHandle<IODispatcherDelayedMessage> Constructors IODispatcher(IPublisher, IEnvelope) Declaration public IODispatcher(IPublisher publisher, IEnvelope envelope) Parameters Type Name IPublisher publisher IEnvelope envelope Fields Awaker Declaration public readonly RequestResponseDispatcher<AwakeServiceMessage.SubscribeAwake, IODispatcherDelayedMessage> Awaker Field Value Type RequestResponseDispatcher < AwakeServiceMessage.SubscribeAwake , IODispatcherDelayedMessage > BackwardReader Declaration public readonly RequestResponseDispatcher<ClientMessage.ReadStreamEventsBackward, ClientMessage.ReadStreamEventsBackwardCompleted> BackwardReader Field Value Type RequestResponseDispatcher < ClientMessage.ReadStreamEventsBackward , ClientMessage.ReadStreamEventsBackwardCompleted > ForwardReader Declaration public readonly RequestResponseDispatcher<ClientMessage.ReadStreamEventsForward, ClientMessage.ReadStreamEventsForwardCompleted> ForwardReader Field Value Type RequestResponseDispatcher < ClientMessage.ReadStreamEventsForward , ClientMessage.ReadStreamEventsForwardCompleted > ReadTimeoutMs Declaration public const int ReadTimeoutMs = 10000 Field Value Type System.Int32 StreamDeleter Declaration public readonly RequestResponseDispatcher<ClientMessage.DeleteStream, ClientMessage.DeleteStreamCompleted> StreamDeleter Field Value Type RequestResponseDispatcher < ClientMessage.DeleteStream , ClientMessage.DeleteStreamCompleted > Writer Declaration public readonly RequestResponseDispatcher<ClientMessage.WriteEvents, ClientMessage.WriteEventsCompleted> Writer Field Value Type RequestResponseDispatcher < ClientMessage.WriteEvents , ClientMessage.WriteEventsCompleted > Methods ConfigureStreamAndWriteEvents(String, Int64, Lazy<StreamMetadata>, Event[], IPrincipal, Action<ClientMessage.WriteEventsCompleted>) Declaration public void ConfigureStreamAndWriteEvents(string streamId, long expectedVersion, Lazy<StreamMetadata> streamMetadata, Event[] events, IPrincipal principal, Action<ClientMessage.WriteEventsCompleted> action) Parameters Type Name System.String streamId System.Int64 expectedVersion System.Lazy < StreamMetadata > streamMetadata Event [] events System.Security.Principal.IPrincipal principal System.Action < ClientMessage.WriteEventsCompleted > action Delay(TimeSpan, Action, Nullable<Guid>) Declaration public void Delay(TimeSpan delay, Action action, Guid? _messageCorrelationId = default(Guid? )) Parameters Type Name System.TimeSpan delay System.Action action System.Nullable < System.Guid > _messageCorrelationId DeleteStream(String, Int64, Boolean, IPrincipal, Action<ClientMessage.DeleteStreamCompleted>) Declaration public Guid DeleteStream(string streamId, long expectedVersion, bool hardDelete, IPrincipal principal, Action<ClientMessage.DeleteStreamCompleted> action) Parameters Type Name System.String streamId System.Int64 expectedVersion System.Boolean hardDelete System.Security.Principal.IPrincipal principal System.Action < ClientMessage.DeleteStreamCompleted > action Returns Type Description System.Guid Handle(IODispatcherDelayedMessage) Declaration public void Handle(IODispatcherDelayedMessage message) Parameters Type Name IODispatcherDelayedMessage message QueueWriteEvents(Guid, String, Int64, Event[], IPrincipal, Action<ClientMessage.WriteEventsCompleted>) Declaration public Guid QueueWriteEvents(Guid key, string streamId, long expectedVersion, Event[] events, IPrincipal principal, Action<ClientMessage.WriteEventsCompleted> action) Parameters Type Name System.Guid key System.String streamId System.Int64 expectedVersion Event [] events System.Security.Principal.IPrincipal principal System.Action < ClientMessage.WriteEventsCompleted > action Returns Type Description System.Guid ReadBackward(String, Int64, Int32, Boolean, IPrincipal, Action<ClientMessage.ReadStreamEventsBackwardCompleted>, Action, Guid) Declaration public Guid ReadBackward(string streamId, long fromEventNumber, int maxCount, bool resolveLinks, IPrincipal principal, Action<ClientMessage.ReadStreamEventsBackwardCompleted> action, Action timeoutAction, Guid corrId) Parameters Type Name System.String streamId System.Int64 fromEventNumber System.Int32 maxCount System.Boolean resolveLinks System.Security.Principal.IPrincipal principal System.Action < ClientMessage.ReadStreamEventsBackwardCompleted > action System.Action timeoutAction System.Guid corrId Returns Type Description System.Guid ReadBackward(String, Int64, Int32, Boolean, IPrincipal, Action<ClientMessage.ReadStreamEventsBackwardCompleted>, Nullable<Guid>) Declaration public Guid ReadBackward(string streamId, long fromEventNumber, int maxCount, bool resolveLinks, IPrincipal principal, Action<ClientMessage.ReadStreamEventsBackwardCompleted> action, Guid? corrId = default(Guid? )) Parameters Type Name System.String streamId System.Int64 fromEventNumber System.Int32 maxCount System.Boolean resolveLinks System.Security.Principal.IPrincipal principal System.Action < ClientMessage.ReadStreamEventsBackwardCompleted > action System.Nullable < System.Guid > corrId Returns Type Description System.Guid ReadForward(String, Int64, Int32, Boolean, IPrincipal, Action<ClientMessage.ReadStreamEventsForwardCompleted>, Action, Guid) Declaration public Guid ReadForward(string streamId, long fromEventNumber, int maxCount, bool resolveLinks, IPrincipal principal, Action<ClientMessage.ReadStreamEventsForwardCompleted> action, Action timeoutAction, Guid corrId) Parameters Type Name System.String streamId System.Int64 fromEventNumber System.Int32 maxCount System.Boolean resolveLinks System.Security.Principal.IPrincipal principal System.Action < ClientMessage.ReadStreamEventsForwardCompleted > action System.Action timeoutAction System.Guid corrId Returns Type Description System.Guid ReadForward(String, Int64, Int32, Boolean, IPrincipal, Action<ClientMessage.ReadStreamEventsForwardCompleted>, Nullable<Guid>) Declaration public Guid ReadForward(string streamId, long fromEventNumber, int maxCount, bool resolveLinks, IPrincipal principal, Action<ClientMessage.ReadStreamEventsForwardCompleted> action, Guid? corrId = default(Guid? )) Parameters Type Name System.String streamId System.Int64 fromEventNumber System.Int32 maxCount System.Boolean resolveLinks System.Security.Principal.IPrincipal principal System.Action < ClientMessage.ReadStreamEventsForwardCompleted > action System.Nullable < System.Guid > corrId Returns Type Description System.Guid SubscribeAwake(String, TFPos, Action<IODispatcherDelayedMessage>, Nullable<Guid>) Declaration public void SubscribeAwake(string streamId, TFPos from, Action<IODispatcherDelayedMessage> action, Guid? correlationId = default(Guid? )) Parameters Type Name System.String streamId TFPos from System.Action < IODispatcherDelayedMessage > action System.Nullable < System.Guid > correlationId UnsubscribeAwake(Guid) Declaration public void UnsubscribeAwake(Guid correlationId) Parameters Type Name System.Guid correlationId UpdateStreamAcl(String, Int64, IPrincipal, StreamMetadata, Action<ClientMessage.WriteEventsCompleted>) Declaration public void UpdateStreamAcl(string streamId, long expectedVersion, IPrincipal principal, StreamMetadata metadata, Action<ClientMessage.WriteEventsCompleted> completed) Parameters Type Name System.String streamId System.Int64 expectedVersion System.Security.Principal.IPrincipal principal StreamMetadata metadata System.Action < ClientMessage.WriteEventsCompleted > completed WriteEvent(String, Int64, Event, IPrincipal, Action<ClientMessage.WriteEventsCompleted>) Declaration public Guid WriteEvent(string streamId, long expectedVersion, Event event, IPrincipal principal, Action<ClientMessage.WriteEventsCompleted> action) Parameters Type Name System.String streamId System.Int64 expectedVersion Event event System.Security.Principal.IPrincipal principal System.Action < ClientMessage.WriteEventsCompleted > action Returns Type Description System.Guid WriteEvents(String, Int64, Event[], IPrincipal, Action<ClientMessage.WriteEventsCompleted>) Declaration public Guid WriteEvents(string streamId, long expectedVersion, Event[] events, IPrincipal principal, Action<ClientMessage.WriteEventsCompleted> action) Parameters Type Name System.String streamId System.Int64 expectedVersion Event [] events System.Security.Principal.IPrincipal principal System.Action < ClientMessage.WriteEventsCompleted > action Returns Type Description System.Guid Implements IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) HandleExtensions.WidenFrom<TInput, TOutput>(IHandle<TOutput>) HandleExtensions.NarrowTo<TInput, TOutput>(IHandle<TOutput>) IODispatcherAsync.BeginReadForward(IODispatcher, IODispatcherAsync.CancellationScope, String, Int64, Int32, Boolean, IPrincipal, Action<ClientMessage.ReadStreamEventsForwardCompleted>, Action) IODispatcherAsync.BeginReadBackward(IODispatcher, IODispatcherAsync.CancellationScope, String, Int64, Int32, Boolean, IPrincipal, Action<ClientMessage.ReadStreamEventsBackwardCompleted>, Action) IODispatcherAsync.BeginWriteEvents(IODispatcher, IODispatcherAsync.CancellationScope, String, Int64, IPrincipal, Event[], Action<ClientMessage.WriteEventsCompleted>) IODispatcherAsync.BeginDeleteStream(IODispatcher, IODispatcherAsync.CancellationScope, String, Int64, Boolean, IPrincipal, Action<ClientMessage.DeleteStreamCompleted>) IODispatcherAsync.BeginSubscribeAwake(IODispatcher, IODispatcherAsync.CancellationScope, String, TFPos, Action<IODispatcherDelayedMessage>, Nullable<Guid>) IODispatcherAsync.BeginUpdateStreamAcl(IODispatcher, IODispatcherAsync.CancellationScope, String, Int64, IPrincipal, StreamMetadata, Action<ClientMessage.WriteEventsCompleted>) IODispatcherAsync.BeginDelay(IODispatcher, IODispatcherAsync.CancellationScope, TimeSpan, Action) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.ExclusiveDbLock.html": {
    "href": "dotnet-api/code/EventStore.Core.ExclusiveDbLock.html",
    "title": "Class ExclusiveDbLock | Event Store",
    "keywords": "Class ExclusiveDbLock Inheritance System.Object ExclusiveDbLock Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core Assembly : EventStore.Core.dll Syntax public class ExclusiveDbLock Constructors ExclusiveDbLock(String) Declaration public ExclusiveDbLock(string dbPath) Parameters Type Name System.String dbPath Fields MutexName Declaration public readonly string MutexName Field Value Type System.String Properties IsAcquired Declaration public bool IsAcquired { get; } Property Value Type System.Boolean Methods Acquire() Declaration public bool Acquire() Returns Type Description System.Boolean Release() Declaration public void Release() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Exceptions.html": {
    "href": "dotnet-api/code/EventStore.Core.Exceptions.html",
    "title": "Namespace EventStore.Core.Exceptions | Event Store",
    "keywords": "Namespace EventStore.Core.Exceptions Classes BadChunkInDatabaseException ChunkNotFoundException CorruptDatabaseException CorruptIndexException ExtraneousFileFoundException FileBeingDeletedException HashValidationException InvalidFileException MaybeCorruptIndexException PTableNotFoundException ReaderCheckpointHigherThanWriterException UnableToAcquireLockInReasonableTimeException WrongFileVersionException"
  },
  "dotnet-api/code/EventStore.Core.Exceptions.ExtraneousFileFoundException.html": {
    "href": "dotnet-api/code/EventStore.Core.Exceptions.ExtraneousFileFoundException.html",
    "title": "Class ExtraneousFileFoundException | Event Store",
    "keywords": "Class ExtraneousFileFoundException Inheritance System.Object System.Exception ExtraneousFileFoundException Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Exceptions Assembly : EventStore.Core.dll Syntax public class ExtraneousFileFoundException : Exception, _Exception, ISerializable Constructors ExtraneousFileFoundException(String) Declaration public ExtraneousFileFoundException(string message) Parameters Type Name System.String message Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Common.Utils.IPEndPointConverter.html": {
    "href": "dotnet-api/code/EventStore.Common.Utils.IPEndPointConverter.html",
    "title": "Class IPEndPointConverter | Event Store",
    "keywords": "Class IPEndPointConverter Inheritance System.Object System.ComponentModel.TypeConverter IPEndPointConverter Inherited Members System.ComponentModel.TypeConverter.CanConvertFrom(System.Type) System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type) System.ComponentModel.TypeConverter.CanConvertTo(System.Type) System.ComponentModel.TypeConverter.ConvertFrom(System.Object) System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext, System.String) System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String) System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.String) System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.String) System.ComponentModel.TypeConverter.ConvertFromString(System.String) System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object, System.Type) System.ComponentModel.TypeConverter.ConvertTo(System.Object, System.Type) System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext, System.Object) System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object) System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object) System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext, System.Object) System.ComponentModel.TypeConverter.ConvertToString(System.Object) System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary) System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext, System.Collections.IDictionary) System.ComponentModel.TypeConverter.GetConvertFromException(System.Object) System.ComponentModel.TypeConverter.GetConvertToException(System.Object, System.Type) System.ComponentModel.TypeConverter.GetCreateInstanceSupported() System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext) System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext, System.Object) System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext, System.Object, System.Attribute[]) System.ComponentModel.TypeConverter.GetProperties(System.Object) System.ComponentModel.TypeConverter.GetPropertiesSupported() System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext) System.ComponentModel.TypeConverter.GetStandardValues() System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext) System.ComponentModel.TypeConverter.GetStandardValuesExclusive() System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext) System.ComponentModel.TypeConverter.GetStandardValuesSupported() System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext) System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext, System.Object) System.ComponentModel.TypeConverter.IsValid(System.Object) System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection, System.String[]) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Common.Utils Assembly : EventStore.Common.dll Syntax public class IPEndPointConverter : TypeConverter Methods CanConvertFrom(ITypeDescriptorContext, Type) Declaration public override bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType) Parameters Type Name System.ComponentModel.ITypeDescriptorContext context System.Type sourceType Returns Type Description System.Boolean Overrides System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type) ConvertFrom(ITypeDescriptorContext, CultureInfo, Object) Declaration public override object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value) Parameters Type Name System.ComponentModel.ITypeDescriptorContext context System.Globalization.CultureInfo culture System.Object value Returns Type Description System.Object Overrides System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object) Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Common.Utils.Helper.html": {
    "href": "dotnet-api/code/EventStore.Common.Utils.Helper.html",
    "title": "Class Helper | Event Store",
    "keywords": "Class Helper Inheritance System.Object Helper Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Common.Utils Assembly : EventStore.Common.dll Syntax public static class Helper Fields UTF8NoBom Declaration public static readonly UTF8Encoding UTF8NoBom Field Value Type System.Text.UTF8Encoding Methods EatException(Action) Declaration public static void EatException(Action action) Parameters Type Name System.Action action EatException<T>(Func<T>, T) Declaration public static T EatException<T>(Func<T> action, T defaultValue = null) Parameters Type Name System.Func <T> action T defaultValue Returns Type Description T Type Parameters Name Description T FormatBinaryDump(ArraySegment<Byte>) Declaration public static string FormatBinaryDump(ArraySegment<byte> logBulk) Parameters Type Name System.ArraySegment < System.Byte > logBulk Returns Type Description System.String FormatBinaryDump(Byte[]) Declaration public static string FormatBinaryDump(byte[] logBulk) Parameters Type Name System.Byte [] logBulk Returns Type Description System.String GetDefaultLogsDir() Declaration public static string GetDefaultLogsDir() Returns Type Description System.String"
  },
  "dotnet-api/code/EventStore.Common.Utils.FileStreamExtensions.html": {
    "href": "dotnet-api/code/EventStore.Common.Utils.FileStreamExtensions.html",
    "title": "Class FileStreamExtensions | Event Store",
    "keywords": "Class FileStreamExtensions Inheritance System.Object FileStreamExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Common.Utils Assembly : EventStore.Common.dll Syntax public static class FileStreamExtensions Methods ConfigureFlush(Boolean) Declaration public static void ConfigureFlush(bool disableFlushToDisk) Parameters Type Name System.Boolean disableFlushToDisk FlushFileBuffers(SafeFileHandle) Declaration public static bool FlushFileBuffers(SafeFileHandle hFile) Parameters Type Name Microsoft.Win32.SafeHandles.SafeFileHandle hFile Returns Type Description System.Boolean FlushToDisk(FileStream) Declaration public static void FlushToDisk(this FileStream fs) Parameters Type Name System.IO.FileStream fs"
  },
  "dotnet-api/code/EventStore.Common.Utils.Empty.html": {
    "href": "dotnet-api/code/EventStore.Common.Utils.Empty.html",
    "title": "Class Empty | Event Store",
    "keywords": "Class Empty Inheritance System.Object Empty Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Common.Utils Assembly : EventStore.Common.dll Syntax public static class Empty Fields Action Declaration public static readonly Action Action Field Value Type System.Action ByteArray Declaration public static readonly byte[] ByteArray Field Value Type System.Byte [] Json Declaration public static readonly string Json Field Value Type System.String ObjectArray Declaration public static readonly object[] ObjectArray Field Value Type System.Object [] Result Declaration public static readonly object Result Field Value Type System.Object StringArray Declaration public static readonly string[] StringArray Field Value Type System.String [] Xml Declaration public static readonly string Xml Field Value Type System.String"
  },
  "dotnet-api/code/EventStore.Common.Utils.ConcurrentQueueWrapper-1.html": {
    "href": "dotnet-api/code/EventStore.Common.Utils.ConcurrentQueueWrapper-1.html",
    "title": "Class ConcurrentQueueWrapper<T> | Event Store",
    "keywords": "Class ConcurrentQueueWrapper<T> Inheritance System.Object System.Collections.Concurrent.ConcurrentQueue <T> ConcurrentQueueWrapper<T> Implements System.Collections.Concurrent.IProducerConsumerCollection <T> System.Collections.ICollection System.Collections.Generic.IReadOnlyCollection <T> System.Collections.Generic.IEnumerable <T> System.Collections.IEnumerable Inherited Members System.Collections.Concurrent.ConcurrentQueue<T>.CopyTo(T[], System.Int32) System.Collections.Concurrent.ConcurrentQueue<T>.GetEnumerator() System.Collections.Concurrent.ConcurrentQueue<T>.System.Collections.Concurrent.IProducerConsumerCollection<T>.TryAdd(T) System.Collections.Concurrent.ConcurrentQueue<T>.System.Collections.Concurrent.IProducerConsumerCollection<T>.TryTake(T) System.Collections.Concurrent.ConcurrentQueue<T>.System.Collections.ICollection.CopyTo(System.Array, System.Int32) System.Collections.Concurrent.ConcurrentQueue<T>.System.Collections.IEnumerable.GetEnumerator() System.Collections.Concurrent.ConcurrentQueue<T>.ToArray() System.Collections.Concurrent.ConcurrentQueue<T>.TryPeek(T) System.Collections.Concurrent.ConcurrentQueue<T>.System.Collections.ICollection.IsSynchronized System.Collections.Concurrent.ConcurrentQueue<T>.System.Collections.ICollection.SyncRoot System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Common.Utils Assembly : EventStore.Common.dll Syntax public class ConcurrentQueueWrapper<T> : ConcurrentQueue<T>, IProducerConsumerCollection<T>, ICollection, IReadOnlyCollection<T>, IEnumerable<T>, IEnumerable Type Parameters Name Description T Properties Count Declaration public int Count { get; } Property Value Type System.Int32 IsEmpty Declaration public bool IsEmpty { get; } Property Value Type System.Boolean Methods Enqueue(T) Declaration public void Enqueue(T item) Parameters Type Name T item TryDequeue(out T) Declaration public bool TryDequeue(out T result) Parameters Type Name T result Returns Type Description System.Boolean Implements System.Collections.Concurrent.IProducerConsumerCollection<T> System.Collections.ICollection System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable Extension Methods EnumerableExtensions.Safe<T>(IEnumerable<T>) EnumerableExtensions.Contains<T>(IEnumerable<T>, Predicate<T>) EnumerableExtensions.IsEmpty<T>(IEnumerable<T>) EnumerableExtensions.IsNotEmpty<T>(IEnumerable<T>) Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Common.Options.RagsExtensions.html": {
    "href": "dotnet-api/code/EventStore.Common.Options.RagsExtensions.html",
    "title": "Class RagsExtensions | Event Store",
    "keywords": "Class RagsExtensions Inheritance System.Object RagsExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Common.Options Assembly : EventStore.Common.dll Syntax public static class RagsExtensions Methods Cleanup(IEnumerable<OptionSource>) Declaration public static IEnumerable<OptionSource> Cleanup(this IEnumerable<OptionSource> optionSources) Parameters Type Name System.Collections.Generic.IEnumerable < OptionSource > optionSources Returns Type Description System.Collections.Generic.IEnumerable < OptionSource > EnsureCorrectType<TOptions>(IEnumerable<OptionSource>) Declaration public static IEnumerable<OptionSource> EnsureCorrectType<TOptions>(this IEnumerable<OptionSource> optionSources) where TOptions : class, new() Parameters Type Name System.Collections.Generic.IEnumerable < OptionSource > optionSources Returns Type Description System.Collections.Generic.IEnumerable < OptionSource > Type Parameters Name Description TOptions EnsureExistence<TOptions>(IEnumerable<OptionSource>) Declaration public static IEnumerable<OptionSource> EnsureExistence<TOptions>(this IEnumerable<OptionSource> optionSources) where TOptions : class Parameters Type Name System.Collections.Generic.IEnumerable < OptionSource > optionSources Returns Type Description System.Collections.Generic.IEnumerable < OptionSource > Type Parameters Name Description TOptions FixNames<TOptions>(IEnumerable<OptionSource>) Declaration public static IEnumerable<OptionSource> FixNames<TOptions>(this IEnumerable<OptionSource> optionSources) where TOptions : class Parameters Type Name System.Collections.Generic.IEnumerable < OptionSource > optionSources Returns Type Description System.Collections.Generic.IEnumerable < OptionSource > Type Parameters Name Description TOptions"
  },
  "dotnet-api/code/EventStore.Common.Options.ProjectionType.html": {
    "href": "dotnet-api/code/EventStore.Common.Options.ProjectionType.html",
    "title": "Enum ProjectionType | Event Store",
    "keywords": "Enum ProjectionType Namespace : EventStore.Common.Options Assembly : EventStore.Common.dll Syntax public enum ProjectionType Fields Name Description All None System Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<ProjectionType>() ProtobufExtensions.Serialize<ProjectionType>() ProtobufExtensions.SerializeToArray<ProjectionType>()"
  },
  "dotnet-api/code/EventStore.Core.Messages.UserManagementMessage.RequestMessage.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.UserManagementMessage.RequestMessage.html",
    "title": "Class UserManagementMessage.RequestMessage | Event Store",
    "keywords": "Class UserManagementMessage.RequestMessage Inheritance System.Object Message UserManagementMessage.RequestMessage UserManagementMessage.GetAll UserManagementMessage.UserManagementRequestMessage Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class RequestMessage : Message Constructors RequestMessage(IEnvelope, IPrincipal) Declaration public RequestMessage(IEnvelope envelope, IPrincipal principal) Parameters Type Name IEnvelope envelope System.Security.Principal.IPrincipal principal Fields Envelope Declaration public readonly IEnvelope Envelope Field Value Type IEnvelope Principal Declaration public readonly IPrincipal Principal Field Value Type System.Security.Principal.IPrincipal Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.UserManagementMessage.GetAll.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.UserManagementMessage.GetAll.html",
    "title": "Class UserManagementMessage.GetAll | Event Store",
    "keywords": "Class UserManagementMessage.GetAll Inheritance System.Object Message UserManagementMessage.RequestMessage UserManagementMessage.GetAll Inherited Members UserManagementMessage.RequestMessage.Envelope UserManagementMessage.RequestMessage.Principal Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public sealed class GetAll : UserManagementMessage.RequestMessage Constructors GetAll(IEnvelope, IPrincipal) Declaration public GetAll(IEnvelope envelope, IPrincipal principal) Parameters Type Name IEnvelope envelope System.Security.Principal.IPrincipal principal Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides UserManagementMessage.RequestMessage.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.SystemMessage.ShutdownTimeout.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.SystemMessage.ShutdownTimeout.html",
    "title": "Class SystemMessage.ShutdownTimeout | Event Store",
    "keywords": "Class SystemMessage.ShutdownTimeout Inheritance System.Object Message SystemMessage.ShutdownTimeout Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class ShutdownTimeout : Message Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.SystemMessage.ServiceShutdown.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.SystemMessage.ServiceShutdown.html",
    "title": "Class SystemMessage.ServiceShutdown | Event Store",
    "keywords": "Class SystemMessage.ServiceShutdown Inheritance System.Object Message SystemMessage.ServiceShutdown Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class ServiceShutdown : Message Constructors ServiceShutdown(String) Declaration public ServiceShutdown(string serviceName) Parameters Type Name System.String serviceName Fields ServiceName Declaration public readonly string ServiceName Field Value Type System.String Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.SystemMessage.ServiceInitialized.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.SystemMessage.ServiceInitialized.html",
    "title": "Class SystemMessage.ServiceInitialized | Event Store",
    "keywords": "Class SystemMessage.ServiceInitialized Inheritance System.Object Message SystemMessage.ServiceInitialized Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class ServiceInitialized : Message Constructors ServiceInitialized(String) Declaration public ServiceInitialized(string serviceName) Parameters Type Name System.String serviceName Fields ServiceName Declaration public readonly string ServiceName Field Value Type System.String Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.SystemMessage.RequestForwardingTimerTick.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.SystemMessage.RequestForwardingTimerTick.html",
    "title": "Class SystemMessage.RequestForwardingTimerTick | Event Store",
    "keywords": "Class SystemMessage.RequestForwardingTimerTick Inheritance System.Object Message SystemMessage.RequestForwardingTimerTick Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class RequestForwardingTimerTick : Message Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.SystemMessage.ReplicaStateMessage.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.SystemMessage.ReplicaStateMessage.html",
    "title": "Class SystemMessage.ReplicaStateMessage | Event Store",
    "keywords": "Class SystemMessage.ReplicaStateMessage Inheritance System.Object Message SystemMessage.StateChangeMessage SystemMessage.ReplicaStateMessage SystemMessage.BecomeCatchingUp SystemMessage.BecomeClone SystemMessage.BecomePreReplica SystemMessage.BecomeSlave Inherited Members SystemMessage.StateChangeMessage.CorrelationId SystemMessage.StateChangeMessage.State Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public abstract class ReplicaStateMessage : SystemMessage.StateChangeMessage Constructors ReplicaStateMessage(Guid, VNodeState, VNodeInfo) Declaration protected ReplicaStateMessage(Guid correlationId, VNodeState state, VNodeInfo master) Parameters Type Name System.Guid correlationId VNodeState state VNodeInfo master Fields Master Declaration public readonly VNodeInfo Master Field Value Type VNodeInfo Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides SystemMessage.StateChangeMessage.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.SystemMessage.NoQuorumMessage.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.SystemMessage.NoQuorumMessage.html",
    "title": "Class SystemMessage.NoQuorumMessage | Event Store",
    "keywords": "Class SystemMessage.NoQuorumMessage Inheritance System.Object Message SystemMessage.NoQuorumMessage Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class NoQuorumMessage : Message Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.TransactionLog.Chunks.TFChunk.html": {
    "href": "dotnet-api/code/EventStore.Core.TransactionLog.Chunks.TFChunk.html",
    "title": "Namespace EventStore.Core.TransactionLog.Chunks.TFChunk | Event Store",
    "keywords": "Namespace EventStore.Core.TransactionLog.Chunks.TFChunk Classes InvalidReadException TFChunk Structs BulkReadResult PosMap Interfaces TFChunk.IChunkReadSide Enums TFChunk.ChunkVersions"
  },
  "dotnet-api/code/EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.html": {
    "href": "dotnet-api/code/EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.html",
    "title": "Class TFChunk | Event Store",
    "keywords": "Class TFChunk Inheritance System.Object TFChunk Implements System.IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.TransactionLog.Chunks.TFChunk Assembly : EventStore.Core.dll Syntax public class TFChunk : IDisposable Fields CurrentChunkVersion Declaration public const byte CurrentChunkVersion = 3 Field Value Type System.Byte MidpointsDepth Declaration public readonly int MidpointsDepth Field Value Type System.Int32 ReadBufferSize Declaration public const int ReadBufferSize = 8192 Field Value Type System.Int32 WriteBufferSize Declaration public const int WriteBufferSize = 8192 Field Value Type System.Int32 Properties ChunkFooter Declaration public ChunkFooter ChunkFooter { get; } Property Value Type ChunkFooter ChunkHeader Declaration public ChunkHeader ChunkHeader { get; } Property Value Type ChunkHeader FileName Declaration public string FileName { get; } Property Value Type System.String FileSize Declaration public int FileSize { get; } Property Value Type System.Int32 IsCached Declaration public bool IsCached { get; } Property Value Type System.Boolean IsReadOnly Declaration public bool IsReadOnly { get; } Property Value Type System.Boolean LogicalDataSize Declaration public long LogicalDataSize { get; } Property Value Type System.Int64 PhysicalDataSize Declaration public int PhysicalDataSize { get; } Property Value Type System.Int32 RawWriterPosition Declaration public int RawWriterPosition { get; } Property Value Type System.Int32 Methods AcquireReader() Declaration public TFChunkBulkReader AcquireReader() Returns Type Description TFChunkBulkReader CacheInMemory() Declaration public void CacheInMemory() Complete() Declaration public void Complete() CompleteRaw() Declaration public void CompleteRaw() CompleteScavenge(ICollection<PosMap>) Declaration public void CompleteScavenge(ICollection<PosMap> mapping) Parameters Type Name System.Collections.Generic.ICollection < PosMap > mapping CreateNew(String, Int32, Int32, Int32, Boolean, Boolean, Boolean, Boolean, Int32, Boolean) Declaration public static TFChunk CreateNew(string filename, int chunkSize, int chunkStartNumber, int chunkEndNumber, bool isScavenged, bool inMem, bool unbuffered, bool writethrough, int initialReaderCount, bool reduceFileCachePressure) Parameters Type Name System.String filename System.Int32 chunkSize System.Int32 chunkStartNumber System.Int32 chunkEndNumber System.Boolean isScavenged System.Boolean inMem System.Boolean unbuffered System.Boolean writethrough System.Int32 initialReaderCount System.Boolean reduceFileCachePressure Returns Type Description TFChunk CreateWithHeader(String, ChunkHeader, Int32, Boolean, Boolean, Boolean, Int32, Boolean) Declaration public static TFChunk CreateWithHeader(string filename, ChunkHeader header, int fileSize, bool inMem, bool unbuffered, bool writethrough, int initialReaderCount, bool reduceFileCachePressure) Parameters Type Name System.String filename ChunkHeader header System.Int32 fileSize System.Boolean inMem System.Boolean unbuffered System.Boolean writethrough System.Int32 initialReaderCount System.Boolean reduceFileCachePressure Returns Type Description TFChunk DeOptimizeExistsAt() Declaration public void DeOptimizeExistsAt() Dispose() Declaration public void Dispose() ExistsAt(Int64) Declaration public bool ExistsAt(long logicalPosition) Parameters Type Name System.Int64 logicalPosition Returns Type Description System.Boolean Finalize() Declaration protected void Finalize() Flush() Declaration public void Flush() FromCompletedFile(String, Boolean, Boolean, Int32, Boolean, Boolean) Declaration public static TFChunk FromCompletedFile(string filename, bool verifyHash, bool unbufferedRead, int initialReaderCount, bool optimizeReadSideCache = false, bool reduceFileCachePressure = false) Parameters Type Name System.String filename System.Boolean verifyHash System.Boolean unbufferedRead System.Int32 initialReaderCount System.Boolean optimizeReadSideCache System.Boolean reduceFileCachePressure Returns Type Description TFChunk FromOngoingFile(String, Int32, Boolean, Boolean, Boolean, Int32, Boolean) Declaration public static TFChunk FromOngoingFile(string filename, int writePosition, bool checkSize, bool unbuffered, bool writethrough, int initialReaderCount, bool reduceFileCachePressure) Parameters Type Name System.String filename System.Int32 writePosition System.Boolean checkSize System.Boolean unbuffered System.Boolean writethrough System.Int32 initialReaderCount System.Boolean reduceFileCachePressure Returns Type Description TFChunk GetAlignedSize(Int32) Declaration public static int GetAlignedSize(int size) Parameters Type Name System.Int32 size Returns Type Description System.Int32 MarkForDeletion() Declaration public void MarkForDeletion() OptimizeExistsAt() Declaration public void OptimizeExistsAt() ReleaseReader(TFChunkBulkReader) Declaration public void ReleaseReader(TFChunkBulkReader reader) Parameters Type Name TFChunkBulkReader reader ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() TryAppend(LogRecord) Declaration public RecordWriteResult TryAppend(LogRecord record) Parameters Type Name LogRecord record Returns Type Description RecordWriteResult TryAppendRawData(Byte[]) Declaration public bool TryAppendRawData(byte[] buffer) Parameters Type Name System.Byte [] buffer Returns Type Description System.Boolean TryReadAt(Int64) Declaration public RecordReadResult TryReadAt(long logicalPosition) Parameters Type Name System.Int64 logicalPosition Returns Type Description RecordReadResult TryReadClosestBackward(Int64) Declaration public RecordReadResult TryReadClosestBackward(long logicalPosition) Parameters Type Name System.Int64 logicalPosition Returns Type Description RecordReadResult TryReadClosestForward(Int64) Declaration public RecordReadResult TryReadClosestForward(long logicalPosition) Parameters Type Name System.Int64 logicalPosition Returns Type Description RecordReadResult TryReadFirst() Declaration public RecordReadResult TryReadFirst() Returns Type Description RecordReadResult TryReadLast() Declaration public RecordReadResult TryReadLast() Returns Type Description RecordReadResult UnCacheFromMemory() Declaration public void UnCacheFromMemory() VerifyFileHash() Declaration public void VerifyFileHash() WaitForDestroy(Int32) Declaration public void WaitForDestroy(int timeoutMs) Parameters Type Name System.Int32 timeoutMs Implements System.IDisposable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.html": {
    "href": "dotnet-api/code/EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.IChunkReadSide.html",
    "title": "Interface TFChunk.IChunkReadSide | Event Store",
    "keywords": "Interface TFChunk.IChunkReadSide Namespace : EventStore.Core.TransactionLog.Chunks.TFChunk Assembly : EventStore.Core.dll Syntax public interface IChunkReadSide Methods Cache() Declaration void Cache() ExistsAt(Int64) Declaration bool ExistsAt(long logicalPosition) Parameters Type Name System.Int64 logicalPosition Returns Type Description System.Boolean TryReadAt(Int64) Declaration RecordReadResult TryReadAt(long logicalPosition) Parameters Type Name System.Int64 logicalPosition Returns Type Description RecordReadResult TryReadClosestBackward(Int64) Declaration RecordReadResult TryReadClosestBackward(long logicalPosition) Parameters Type Name System.Int64 logicalPosition Returns Type Description RecordReadResult TryReadClosestForward(Int64) Declaration RecordReadResult TryReadClosestForward(long logicalPosition) Parameters Type Name System.Int64 logicalPosition Returns Type Description RecordReadResult TryReadFirst() Declaration RecordReadResult TryReadFirst() Returns Type Description RecordReadResult TryReadLast() Declaration RecordReadResult TryReadLast() Returns Type Description RecordReadResult Uncache() Declaration void Uncache() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.ChunkVersions.html": {
    "href": "dotnet-api/code/EventStore.Core.TransactionLog.Chunks.TFChunk.TFChunk.ChunkVersions.html",
    "title": "Enum TFChunk.ChunkVersions | Event Store",
    "keywords": "Enum TFChunk.ChunkVersions Namespace : EventStore.Core.TransactionLog.Chunks.TFChunk Assembly : EventStore.Core.dll Syntax public enum ChunkVersions : byte Fields Name Description Aligned OriginalNotUsed Unaligned Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<TFChunk.ChunkVersions>() ProtobufExtensions.Serialize<TFChunk.ChunkVersions>() ProtobufExtensions.SerializeToArray<TFChunk.ChunkVersions>()"
  },
  "dotnet-api/code/EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap.html": {
    "href": "dotnet-api/code/EventStore.Core.TransactionLog.Chunks.TFChunk.PosMap.html",
    "title": "Struct PosMap | Event Store",
    "keywords": "Struct PosMap Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.TransactionLog.Chunks.TFChunk Assembly : EventStore.Core.dll Syntax public struct PosMap Constructors PosMap(Int64, Int32) Declaration public PosMap(long logPos, int actualPos) Parameters Type Name System.Int64 logPos System.Int32 actualPos Fields ActualPos Declaration public readonly int ActualPos Field Value Type System.Int32 DeprecatedSize Declaration public const int DeprecatedSize = 8 Field Value Type System.Int32 FullSize Declaration public const int FullSize = 12 Field Value Type System.Int32 LogPos Declaration public readonly long LogPos Field Value Type System.Int64 Methods FromNewFormat(BinaryReader) Declaration public static PosMap FromNewFormat(BinaryReader reader) Parameters Type Name System.IO.BinaryReader reader Returns Type Description PosMap FromOldFormat(BinaryReader) Declaration public static PosMap FromOldFormat(BinaryReader reader) Parameters Type Name System.IO.BinaryReader reader Returns Type Description PosMap ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Write(BinaryWriter) Declaration public void Write(BinaryWriter writer) Parameters Type Name System.IO.BinaryWriter writer Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) EnumExtensions.EnumValueName<T>(T) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.TransactionLog.Chunks.TFChunk.InvalidReadException.html": {
    "href": "dotnet-api/code/EventStore.Core.TransactionLog.Chunks.TFChunk.InvalidReadException.html",
    "title": "Class InvalidReadException | Event Store",
    "keywords": "Class InvalidReadException Inheritance System.Object System.Exception InvalidReadException Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.TransactionLog.Chunks.TFChunk Assembly : EventStore.Core.dll Syntax public class InvalidReadException : Exception, _Exception, ISerializable Constructors InvalidReadException(String) Declaration public InvalidReadException(string message) Parameters Type Name System.String message Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.TransactionLog.Chunks.TFChunk.BulkReadResult.html": {
    "href": "dotnet-api/code/EventStore.Core.TransactionLog.Chunks.TFChunk.BulkReadResult.html",
    "title": "Struct BulkReadResult | Event Store",
    "keywords": "Struct BulkReadResult Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.TransactionLog.Chunks.TFChunk Assembly : EventStore.Core.dll Syntax public struct BulkReadResult Constructors BulkReadResult(Int32, Int32, Boolean) Declaration public BulkReadResult(int oldPosition, int bytesRead, bool isEof) Parameters Type Name System.Int32 oldPosition System.Int32 bytesRead System.Boolean isEof Fields BytesRead Declaration public readonly int BytesRead Field Value Type System.Int32 IsEOF Declaration public readonly bool IsEOF Field Value Type System.Boolean OldPosition Declaration public readonly int OldPosition Field Value Type System.Int32 Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) EnumExtensions.EnumValueName<T>(T) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.TransactionLog.Chunks.ScavengeResult.html": {
    "href": "dotnet-api/code/EventStore.Core.TransactionLog.Chunks.ScavengeResult.html",
    "title": "Enum ScavengeResult | Event Store",
    "keywords": "Enum ScavengeResult Namespace : EventStore.Core.TransactionLog.Chunks Assembly : EventStore.Core.dll Syntax public enum ScavengeResult Fields Name Description Failed Stopped Success Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<ScavengeResult>() ProtobufExtensions.Serialize<ScavengeResult>() ProtobufExtensions.SerializeToArray<ScavengeResult>()"
  },
  "dotnet-api/code/EventStore.Core.TransactionLog.Chunks.ITFChunkScavengerLogManager.html": {
    "href": "dotnet-api/code/EventStore.Core.TransactionLog.Chunks.ITFChunkScavengerLogManager.html",
    "title": "Interface ITFChunkScavengerLogManager | Event Store",
    "keywords": "Interface ITFChunkScavengerLogManager Namespace : EventStore.Core.TransactionLog.Chunks Assembly : EventStore.Core.dll Syntax public interface ITFChunkScavengerLogManager Methods CreateLog() Declaration ITFChunkScavengerLog CreateLog() Returns Type Description ITFChunkScavengerLog Initialise() Declaration void Initialise() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.TransactionLog.Chunks.ITFChunkScavengerLog.html": {
    "href": "dotnet-api/code/EventStore.Core.TransactionLog.Chunks.ITFChunkScavengerLog.html",
    "title": "Interface ITFChunkScavengerLog | Event Store",
    "keywords": "Interface ITFChunkScavengerLog Inherited Members IIndexScavengerLog.IndexTableScavenged(Int32, Int32, TimeSpan, Int64, Int64, Int64) IIndexScavengerLog.IndexTableNotScavenged(Int32, Int32, TimeSpan, Int64, String) Namespace : EventStore.Core.TransactionLog.Chunks Assembly : EventStore.Core.dll Syntax public interface ITFChunkScavengerLog : IIndexScavengerLog Properties ScavengeId Declaration string ScavengeId { get; } Property Value Type System.String SpaceSaved Declaration long SpaceSaved { get; } Property Value Type System.Int64 Methods ChunksMerged(Int32, Int32, TimeSpan, Int64) Declaration void ChunksMerged(int chunkStartNumber, int chunkEndNumber, TimeSpan elapsed, long spaceSaved) Parameters Type Name System.Int32 chunkStartNumber System.Int32 chunkEndNumber System.TimeSpan elapsed System.Int64 spaceSaved ChunksNotMerged(Int32, Int32, TimeSpan, String) Declaration void ChunksNotMerged(int chunkStartNumber, int chunkEndNumber, TimeSpan elapsed, string errorMessage) Parameters Type Name System.Int32 chunkStartNumber System.Int32 chunkEndNumber System.TimeSpan elapsed System.String errorMessage ChunksNotScavenged(Int32, Int32, TimeSpan, String) Declaration void ChunksNotScavenged(int chunkStartNumber, int chunkEndNumber, TimeSpan elapsed, string errorMessage) Parameters Type Name System.Int32 chunkStartNumber System.Int32 chunkEndNumber System.TimeSpan elapsed System.String errorMessage ChunksScavenged(Int32, Int32, TimeSpan, Int64) Declaration void ChunksScavenged(int chunkStartNumber, int chunkEndNumber, TimeSpan elapsed, long spaceSaved) Parameters Type Name System.Int32 chunkStartNumber System.Int32 chunkEndNumber System.TimeSpan elapsed System.Int64 spaceSaved ScavengeCompleted(ScavengeResult, String, TimeSpan) Declaration void ScavengeCompleted(ScavengeResult result, string error, TimeSpan elapsed) Parameters Type Name ScavengeResult result System.String error System.TimeSpan elapsed ScavengeStarted() Declaration void ScavengeStarted() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.TransactionLog.Chunks.ChunkHeader.html": {
    "href": "dotnet-api/code/EventStore.Core.TransactionLog.Chunks.ChunkHeader.html",
    "title": "Class ChunkHeader | Event Store",
    "keywords": "Class ChunkHeader Inheritance System.Object ChunkHeader Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.TransactionLog.Chunks Assembly : EventStore.Core.dll Syntax public class ChunkHeader Constructors ChunkHeader(Byte, Int32, Int32, Int32, Boolean, Guid) Declaration public ChunkHeader(byte version, int chunkSize, int chunkStartNumber, int chunkEndNumber, bool isScavenged, Guid chunkId) Parameters Type Name System.Byte version System.Int32 chunkSize System.Int32 chunkStartNumber System.Int32 chunkEndNumber System.Boolean isScavenged System.Guid chunkId Fields ChunkEndNumber Declaration public readonly int ChunkEndNumber Field Value Type System.Int32 ChunkEndPosition Declaration public readonly long ChunkEndPosition Field Value Type System.Int64 ChunkId Declaration public readonly Guid ChunkId Field Value Type System.Guid ChunkSize Declaration public readonly int ChunkSize Field Value Type System.Int32 ChunkStartNumber Declaration public readonly int ChunkStartNumber Field Value Type System.Int32 ChunkStartPosition Declaration public readonly long ChunkStartPosition Field Value Type System.Int64 IsScavenged Declaration public readonly bool IsScavenged Field Value Type System.Boolean Size Declaration public const int Size = 128 Field Value Type System.Int32 Version Declaration public readonly byte Version Field Value Type System.Byte Methods AsByteArray() Declaration public byte[] AsByteArray() Returns Type Description System.Byte [] FromStream(Stream) Declaration public static ChunkHeader FromStream(Stream stream) Parameters Type Name System.IO.Stream stream Returns Type Description ChunkHeader GetLocalLogPosition(Int64) Declaration public long GetLocalLogPosition(long globalLogicalPosition) Parameters Type Name System.Int64 globalLogicalPosition Returns Type Description System.Int64 ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.TransactionLog.Chunks.ChunkFooter.html": {
    "href": "dotnet-api/code/EventStore.Core.TransactionLog.Chunks.ChunkFooter.html",
    "title": "Class ChunkFooter | Event Store",
    "keywords": "Class ChunkFooter Inheritance System.Object ChunkFooter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.TransactionLog.Chunks Assembly : EventStore.Core.dll Syntax public class ChunkFooter Constructors ChunkFooter(Boolean, Boolean, Int32, Int64, Int32, Byte[]) Declaration public ChunkFooter(bool isCompleted, bool isMap12Bytes, int physicalDataSize, long logicalDataSize, int mapSize, byte[] md5Hash) Parameters Type Name System.Boolean isCompleted System.Boolean isMap12Bytes System.Int32 physicalDataSize System.Int64 logicalDataSize System.Int32 mapSize System.Byte [] md5Hash Fields ChecksumSize Declaration public const int ChecksumSize = 16 Field Value Type System.Int32 IsCompleted Declaration public readonly bool IsCompleted Field Value Type System.Boolean IsMap12Bytes Declaration public readonly bool IsMap12Bytes Field Value Type System.Boolean LogicalDataSize Declaration public readonly long LogicalDataSize Field Value Type System.Int64 MapCount Declaration public readonly int MapCount Field Value Type System.Int32 MapSize Declaration public readonly int MapSize Field Value Type System.Int32 MD5Hash Declaration public readonly byte[] MD5Hash Field Value Type System.Byte [] PhysicalDataSize Declaration public readonly int PhysicalDataSize Field Value Type System.Int32 Size Declaration public const int Size = 128 Field Value Type System.Int32 Methods AsByteArray() Declaration public byte[] AsByteArray() Returns Type Description System.Byte [] FromStream(Stream) Declaration public static ChunkFooter FromStream(Stream stream) Parameters Type Name System.IO.Stream stream Returns Type Description ChunkFooter Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.TransactionLog.Checkpoint.html": {
    "href": "dotnet-api/code/EventStore.Core.TransactionLog.Checkpoint.html",
    "title": "Namespace EventStore.Core.TransactionLog.Checkpoint | Event Store",
    "keywords": "Namespace EventStore.Core.TransactionLog.Checkpoint Classes Checkpoint FileCheckpoint InMemoryCheckpoint MemoryMappedFileCheckpoint WriteThroughFileCheckpoint Interfaces ICheckpoint"
  },
  "dotnet-api/code/EventStore.Core.TransactionLog.Checkpoint.WriteThroughFileCheckpoint.html": {
    "href": "dotnet-api/code/EventStore.Core.TransactionLog.Checkpoint.WriteThroughFileCheckpoint.html",
    "title": "Class WriteThroughFileCheckpoint | Event Store",
    "keywords": "Class WriteThroughFileCheckpoint Inheritance System.Object WriteThroughFileCheckpoint Implements ICheckpoint System.IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.TransactionLog.Checkpoint Assembly : EventStore.Core.dll Syntax public class WriteThroughFileCheckpoint : ICheckpoint, IDisposable Constructors WriteThroughFileCheckpoint(String) Declaration public WriteThroughFileCheckpoint(string filename) Parameters Type Name System.String filename WriteThroughFileCheckpoint(String, String) Declaration public WriteThroughFileCheckpoint(string filename, string name) Parameters Type Name System.String filename System.String name WriteThroughFileCheckpoint(String, String, Boolean, Int64) Declaration public WriteThroughFileCheckpoint(string filename, string name, bool cached, long initValue = 0L) Parameters Type Name System.String filename System.String name System.Boolean cached System.Int64 initValue Properties Name Declaration public string Name { get; } Property Value Type System.String Methods Close() Declaration public void Close() Dispose() Declaration public void Dispose() Flush() Declaration public void Flush() OnFlushed(Int64) Declaration protected virtual void OnFlushed(long obj) Parameters Type Name System.Int64 obj Read() Declaration public long Read() Returns Type Description System.Int64 ReadNonFlushed() Declaration public long ReadNonFlushed() Returns Type Description System.Int64 Write(Int64) Declaration public void Write(long checkpoint) Parameters Type Name System.Int64 checkpoint Events Flushed Declaration public event Action<long> Flushed Event Type Type System.Action < System.Int64 > Implements ICheckpoint System.IDisposable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Http.Messages.IncomingHttpRequestMessage.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Http.Messages.IncomingHttpRequestMessage.html",
    "title": "Class IncomingHttpRequestMessage | Event Store",
    "keywords": "Class IncomingHttpRequestMessage Inheritance System.Object Message IncomingHttpRequestMessage Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Transport.Http.Messages Assembly : EventStore.Core.dll Syntax public class IncomingHttpRequestMessage : Message Constructors IncomingHttpRequestMessage(HttpService, HttpEntity, IPublisher) Declaration public IncomingHttpRequestMessage(HttpService httpService, HttpEntity entity, IPublisher nextStagePublisher) Parameters Type Name HttpService httpService HttpEntity entity IPublisher nextStagePublisher Fields Entity Declaration public readonly HttpEntity Entity Field Value Type HttpEntity HttpService Declaration public readonly HttpService HttpService Field Value Type HttpService NextStagePublisher Declaration public readonly IPublisher NextStagePublisher Field Value Type IPublisher Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Http.MessageSender-1.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Http.MessageSender-1.html",
    "title": "Class MessageSender<T> | Event Store",
    "keywords": "Class MessageSender<T> Inheritance System.Object MessageSender<T> Implements IMessageSender Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Transport.Http Assembly : EventStore.Core.dll Syntax public class MessageSender<T> : IMessageSender where T : Message Type Parameters Name Description T Constructors MessageSender(ISender<T>) Declaration public MessageSender(ISender<T> sender) Parameters Type Name ISender <T> sender Methods Send(Message, IPEndPoint) Declaration public void Send(Message message, IPEndPoint endPoint) Parameters Type Name Message message System.Net.IPEndPoint endPoint Implements IMessageSender Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Http.Links.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Http.Links.html",
    "title": "Class Links | Event Store",
    "keywords": "Class Links Inheritance System.Object Links Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Transport.Http Assembly : EventStore.Core.dll Syntax public class Links Fields Self Declaration public Link Self Field Value Type Link Stream Declaration public Link Stream Field Value Type Link StreamSubscription Declaration public List<Link> StreamSubscription Field Value Type System.Collections.Generic.List < Link > Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Http.Link.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Http.Link.html",
    "title": "Class Link | Event Store",
    "keywords": "Class Link Inheritance System.Object Link Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Transport.Http Assembly : EventStore.Core.dll Syntax public class Link Constructors Link() Declaration public Link() Link(String, String[]) Declaration public Link(string href, string[] supportedContentTypes) Parameters Type Name System.String href System.String [] supportedContentTypes Fields Href Declaration public string Href Field Value Type System.String SupportedContentTypes Declaration public string[] SupportedContentTypes Field Value Type System.String [] Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Http.IUriRouter.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Http.IUriRouter.html",
    "title": "Interface IUriRouter | Event Store",
    "keywords": "Interface IUriRouter Namespace : EventStore.Core.Services.Transport.Http Assembly : EventStore.Core.dll Syntax public interface IUriRouter Methods GetAllUriMatches(Uri) Declaration List<UriToActionMatch> GetAllUriMatches(Uri uri) Parameters Type Name System.Uri uri Returns Type Description System.Collections.Generic.List < UriToActionMatch > RegisterAction(ControllerAction, Func<HttpEntityManager, UriTemplateMatch, RequestParams>) Declaration void RegisterAction(ControllerAction action, Func<HttpEntityManager, UriTemplateMatch, RequestParams> handler) Parameters Type Name ControllerAction action System.Func < HttpEntityManager , System.UriTemplateMatch , RequestParams > handler Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Http.ISender-1.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Http.ISender-1.html",
    "title": "Interface ISender<T> | Event Store",
    "keywords": "Interface ISender<T> Namespace : EventStore.Core.Services.Transport.Http Assembly : EventStore.Core.dll Syntax public interface ISender<in T> where T : Message Type Parameters Name Description T Methods Send(T, IPEndPoint) Declaration void Send(T message, IPEndPoint endPoint) Parameters Type Name T message System.Net.IPEndPoint endPoint Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Http.IMessageSender.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Http.IMessageSender.html",
    "title": "Interface IMessageSender | Event Store",
    "keywords": "Interface IMessageSender Namespace : EventStore.Core.Services.Transport.Http Assembly : EventStore.Core.dll Syntax public interface IMessageSender Methods Send(Message, IPEndPoint) Declaration void Send(Message message, IPEndPoint endPoint) Parameters Type Name Message message System.Net.IPEndPoint endPoint Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Http.IHttpService.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Http.IHttpService.html",
    "title": "Interface IHttpService | Event Store",
    "keywords": "Interface IHttpService Namespace : EventStore.Core.Services.Transport.Http Assembly : EventStore.Core.dll Syntax public interface IHttpService Properties Accessibility Declaration ServiceAccessibility Accessibility { get; } Property Value Type ServiceAccessibility Methods RegisterAction(ControllerAction, Action<HttpEntityManager, UriTemplateMatch>) Declaration void RegisterAction(ControllerAction action, Action<HttpEntityManager, UriTemplateMatch> handler) Parameters Type Name ControllerAction action System.Action < HttpEntityManager , System.UriTemplateMatch > handler RegisterCustomAction(ControllerAction, Func<HttpEntityManager, UriTemplateMatch, RequestParams>) Declaration void RegisterCustomAction(ControllerAction action, Func<HttpEntityManager, UriTemplateMatch, RequestParams> handler) Parameters Type Name ControllerAction action System.Func < HttpEntityManager , System.UriTemplateMatch , RequestParams > handler Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Http.IHttpSender.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Http.IHttpSender.html",
    "title": "Interface IHttpSender | Event Store",
    "keywords": "Interface IHttpSender Namespace : EventStore.Core.Services.Transport.Http Assembly : EventStore.Core.dll Syntax public interface IHttpSender Methods SubscribeSenders(HttpMessagePipe) Declaration void SubscribeSenders(HttpMessagePipe pipe) Parameters Type Name HttpMessagePipe pipe Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Http.IHttpForwarder.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Http.IHttpForwarder.html",
    "title": "Interface IHttpForwarder | Event Store",
    "keywords": "Interface IHttpForwarder Namespace : EventStore.Core.Services.Transport.Http Assembly : EventStore.Core.dll Syntax public interface IHttpForwarder Methods ForwardRequest(HttpEntityManager) Declaration bool ForwardRequest(HttpEntityManager manager) Parameters Type Name HttpEntityManager manager Returns Type Description System.Boolean Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Transport.Tcp.Framing.html": {
    "href": "dotnet-api/code/EventStore.Transport.Tcp.Framing.html",
    "title": "Namespace EventStore.Transport.Tcp.Framing | Event Store",
    "keywords": "Namespace EventStore.Transport.Tcp.Framing Classes LengthPrefixMessageFramer Uses length-prefixed framing to encode outgoing messages and decode incoming messages, using internal state and raising a callback once full message arrives. LengthPrefixMessageFramerWithBufferPool PackageFramingException StxEtxMessageFramer Interfaces IMessageFramer Encodes outgoing messages in frames and decodes incoming frames. For decoding it uses an internal state, raising a registered callback, once full message arrives"
  },
  "dotnet-api/code/EventStore.Transport.Tcp.Framing.StxEtxMessageFramer.html": {
    "href": "dotnet-api/code/EventStore.Transport.Tcp.Framing.StxEtxMessageFramer.html",
    "title": "Class StxEtxMessageFramer | Event Store",
    "keywords": "Class StxEtxMessageFramer Inheritance System.Object StxEtxMessageFramer Implements IMessageFramer Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Transport.Tcp.Framing Assembly : EventStore.Transport.Tcp.dll Syntax public class StxEtxMessageFramer : IMessageFramer Constructors StxEtxMessageFramer(Int32) Initializes a new instance of the StxEtxMessageFramer class. Declaration public StxEtxMessageFramer(int initialBufferSize) Parameters Type Name System.Int32 initialBufferSize Methods FrameData(ArraySegment<Byte>) Declaration public IEnumerable<ArraySegment<byte>> FrameData(ArraySegment<byte> data) Parameters Type Name System.ArraySegment < System.Byte > data Returns Type Description System.Collections.Generic.IEnumerable < System.ArraySegment < System.Byte >> RegisterMessageArrivedCallback(Action<ArraySegment<Byte>>) Declaration public void RegisterMessageArrivedCallback(Action<ArraySegment<byte>> handler) Parameters Type Name System.Action < System.ArraySegment < System.Byte >> handler UnFrameData(ArraySegment<Byte>) Declaration public void UnFrameData(ArraySegment<byte> data) Parameters Type Name System.ArraySegment < System.Byte > data UnFrameData(IEnumerable<ArraySegment<Byte>>) Declaration public void UnFrameData(IEnumerable<ArraySegment<byte>> data) Parameters Type Name System.Collections.Generic.IEnumerable < System.ArraySegment < System.Byte >> data Implements IMessageFramer Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Transport.Tcp.Framing.PackageFramingException.html": {
    "href": "dotnet-api/code/EventStore.Transport.Tcp.Framing.PackageFramingException.html",
    "title": "Class PackageFramingException | Event Store",
    "keywords": "Class PackageFramingException Inheritance System.Object System.Exception PackageFramingException Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Transport.Tcp.Framing Assembly : EventStore.Transport.Tcp.dll Syntax public class PackageFramingException : Exception, _Exception, ISerializable Constructors PackageFramingException() Declaration public PackageFramingException() PackageFramingException(SerializationInfo, StreamingContext) Declaration protected PackageFramingException(SerializationInfo info, StreamingContext context) Parameters Type Name System.Runtime.Serialization.SerializationInfo info System.Runtime.Serialization.StreamingContext context PackageFramingException(String) Declaration public PackageFramingException(string message) Parameters Type Name System.String message PackageFramingException(String, Exception) Declaration public PackageFramingException(string message, Exception innerException) Parameters Type Name System.String message System.Exception innerException Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramerWithBufferPool.html": {
    "href": "dotnet-api/code/EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramerWithBufferPool.html",
    "title": "Class LengthPrefixMessageFramerWithBufferPool | Event Store",
    "keywords": "Class LengthPrefixMessageFramerWithBufferPool Inheritance System.Object LengthPrefixMessageFramerWithBufferPool Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Transport.Tcp.Framing Assembly : EventStore.Transport.Tcp.dll Syntax public class LengthPrefixMessageFramerWithBufferPool Constructors LengthPrefixMessageFramerWithBufferPool(BufferManager, Int32) Initializes a new instance of the LengthPrefixMessageFramerWithBufferPool class. Declaration public LengthPrefixMessageFramerWithBufferPool(BufferManager bufferManager, int maxPackageSize = 16777216) Parameters Type Name BufferManager bufferManager System.Int32 maxPackageSize Methods FrameData(ArraySegment<Byte>) Declaration public IEnumerable<ArraySegment<byte>> FrameData(ArraySegment<byte> data) Parameters Type Name System.ArraySegment < System.Byte > data Returns Type Description System.Collections.Generic.IEnumerable < System.ArraySegment < System.Byte >> RegisterMessageArrivedCallback(Action<BufferPool>) Declaration public void RegisterMessageArrivedCallback(Action<BufferPool> handler) Parameters Type Name System.Action < BufferPool > handler Reset() Declaration public void Reset() UnFrameData(ArraySegment<Byte>) Declaration public void UnFrameData(ArraySegment<byte> data) Parameters Type Name System.ArraySegment < System.Byte > data UnFrameData(IEnumerable<ArraySegment<Byte>>) Declaration public void UnFrameData(IEnumerable<ArraySegment<byte>> data) Parameters Type Name System.Collections.Generic.IEnumerable < System.ArraySegment < System.Byte >> data Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer.html": {
    "href": "dotnet-api/code/EventStore.Transport.Tcp.Framing.LengthPrefixMessageFramer.html",
    "title": "Class LengthPrefixMessageFramer | Event Store",
    "keywords": "Class LengthPrefixMessageFramer Uses length-prefixed framing to encode outgoing messages and decode incoming messages, using internal state and raising a callback once full message arrives. Inheritance System.Object LengthPrefixMessageFramer Implements IMessageFramer Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Transport.Tcp.Framing Assembly : EventStore.Transport.Tcp.dll Syntax public class LengthPrefixMessageFramer : IMessageFramer Constructors LengthPrefixMessageFramer(Int32) Initializes a new instance of the LengthPrefixMessageFramer class. Declaration public LengthPrefixMessageFramer(int maxPackageSize = 67108864) Parameters Type Name System.Int32 maxPackageSize Fields HeaderLength Declaration public const int HeaderLength = 4 Field Value Type System.Int32 Methods FrameData(ArraySegment<Byte>) Declaration public IEnumerable<ArraySegment<byte>> FrameData(ArraySegment<byte> data) Parameters Type Name System.ArraySegment < System.Byte > data Returns Type Description System.Collections.Generic.IEnumerable < System.ArraySegment < System.Byte >> RegisterMessageArrivedCallback(Action<ArraySegment<Byte>>) Declaration public void RegisterMessageArrivedCallback(Action<ArraySegment<byte>> handler) Parameters Type Name System.Action < System.ArraySegment < System.Byte >> handler Reset() Declaration public void Reset() UnFrameData(ArraySegment<Byte>) Declaration public void UnFrameData(ArraySegment<byte> data) Parameters Type Name System.ArraySegment < System.Byte > data UnFrameData(IEnumerable<ArraySegment<Byte>>) Declaration public void UnFrameData(IEnumerable<ArraySegment<byte>> data) Parameters Type Name System.Collections.Generic.IEnumerable < System.ArraySegment < System.Byte >> data Implements IMessageFramer Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Transport.Tcp.Framing.IMessageFramer.html": {
    "href": "dotnet-api/code/EventStore.Transport.Tcp.Framing.IMessageFramer.html",
    "title": "Interface IMessageFramer | Event Store",
    "keywords": "Interface IMessageFramer Encodes outgoing messages in frames and decodes incoming frames. For decoding it uses an internal state, raising a registered callback, once full message arrives Namespace : EventStore.Transport.Tcp.Framing Assembly : EventStore.Transport.Tcp.dll Syntax public interface IMessageFramer Methods FrameData(ArraySegment<Byte>) Declaration IEnumerable<ArraySegment<byte>> FrameData(ArraySegment<byte> data) Parameters Type Name System.ArraySegment < System.Byte > data Returns Type Description System.Collections.Generic.IEnumerable < System.ArraySegment < System.Byte >> RegisterMessageArrivedCallback(Action<ArraySegment<Byte>>) Declaration void RegisterMessageArrivedCallback(Action<ArraySegment<byte>> handler) Parameters Type Name System.Action < System.ArraySegment < System.Byte >> handler UnFrameData(ArraySegment<Byte>) Declaration void UnFrameData(ArraySegment<byte> data) Parameters Type Name System.ArraySegment < System.Byte > data UnFrameData(IEnumerable<ArraySegment<Byte>>) Declaration void UnFrameData(IEnumerable<ArraySegment<byte>> data) Parameters Type Name System.Collections.Generic.IEnumerable < System.ArraySegment < System.Byte >> data Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Transport.Tcp.Formatting.html": {
    "href": "dotnet-api/code/EventStore.Transport.Tcp.Formatting.html",
    "title": "Namespace EventStore.Transport.Tcp.Formatting | Event Store",
    "keywords": "Namespace EventStore.Transport.Tcp.Formatting Classes FormatterBase<T> ProtoBufMessageFormatter<T> Formats a message for transport using ProtoBuf serialization RawMessageFormatter Formatter which does not format anything, actually. Just outputs raw byte[]. Interfaces IMessageFormatter<T>"
  },
  "dotnet-api/code/EventStore.Transport.Tcp.Formatting.RawMessageFormatter.html": {
    "href": "dotnet-api/code/EventStore.Transport.Tcp.Formatting.RawMessageFormatter.html",
    "title": "Class RawMessageFormatter | Event Store",
    "keywords": "Class RawMessageFormatter Formatter which does not format anything, actually. Just outputs raw byte[]. Inheritance System.Object RawMessageFormatter Implements IMessageFormatter < System.Byte []> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Transport.Tcp.Formatting Assembly : EventStore.Transport.Tcp.dll Syntax public class RawMessageFormatter : IMessageFormatter<byte[]> Constructors RawMessageFormatter() Initializes a new instance of the RawMessageFormatter class. Declaration public RawMessageFormatter() RawMessageFormatter(BufferManager) Initializes a new instance of the RawMessageFormatter class. Declaration public RawMessageFormatter(BufferManager bufferManager) Parameters Type Name BufferManager bufferManager RawMessageFormatter(BufferManager, Int32) Initializes a new instance of the RawMessageFormatter class. Declaration public RawMessageFormatter(BufferManager bufferManager, int initialBuffers) Parameters Type Name BufferManager bufferManager System.Int32 initialBuffers Methods From(BufferPool) Declaration public byte[] From(BufferPool bufferPool) Parameters Type Name BufferPool bufferPool Returns Type Description System.Byte [] From(ArraySegment<Byte>) Declaration public byte[] From(ArraySegment<byte> segment) Parameters Type Name System.ArraySegment < System.Byte > segment Returns Type Description System.Byte [] From(Byte[]) Declaration public byte[] From(byte[] array) Parameters Type Name System.Byte [] array Returns Type Description System.Byte [] ToArray(Byte[]) Declaration public byte[] ToArray(byte[] message) Parameters Type Name System.Byte [] message Returns Type Description System.Byte [] ToArraySegment(Byte[]) Declaration public ArraySegment<byte> ToArraySegment(byte[] message) Parameters Type Name System.Byte [] message Returns Type Description System.ArraySegment < System.Byte > ToBufferPool(Byte[]) Declaration public BufferPool ToBufferPool(byte[] message) Parameters Type Name System.Byte [] message Returns Type Description BufferPool Implements IMessageFormatter<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Transport.Tcp.Formatting.ProtoBufMessageFormatter-1.html": {
    "href": "dotnet-api/code/EventStore.Transport.Tcp.Formatting.ProtoBufMessageFormatter-1.html",
    "title": "Class ProtoBufMessageFormatter<T> | Event Store",
    "keywords": "Class ProtoBufMessageFormatter<T> Formats a message for transport using ProtoBuf serialization Inheritance System.Object FormatterBase <T> ProtoBufMessageFormatter<T> Implements IMessageFormatter <T> Inherited Members FormatterBase<T>.ToArraySegment(T) FormatterBase<T>.ToArray(T) FormatterBase<T>.From(BufferPool) FormatterBase<T>.From(ArraySegment<Byte>) FormatterBase<T>.From(Byte[]) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Transport.Tcp.Formatting Assembly : EventStore.Transport.Tcp.dll Syntax public class ProtoBufMessageFormatter<T> : FormatterBase<T>, IMessageFormatter<T> Type Parameters Name Description T Constructors ProtoBufMessageFormatter() Initializes a new instance of the ProtoBufMessageFormatter<T> class. Declaration public ProtoBufMessageFormatter() ProtoBufMessageFormatter(BufferManager) Initializes a new instance of the ProtoBufMessageFormatter<T> class. Declaration public ProtoBufMessageFormatter(BufferManager bufferManager) Parameters Type Name BufferManager bufferManager ProtoBufMessageFormatter(BufferManager, Int32) Initializes a new instance of the ProtoBufMessageFormatter<T> class. Declaration public ProtoBufMessageFormatter(BufferManager bufferManager, int initialBuffers) Parameters Type Name BufferManager bufferManager System.Int32 initialBuffers Methods From(Stream) Creates a message object from the specified stream Declaration public override T From(Stream stream) Parameters Type Name System.IO.Stream stream Returns Type Description T A message object Overrides EventStore.Transport.Tcp.Formatting.FormatterBase<T>.From(System.IO.Stream) ToBufferPool(T) Gets a BufferPool representing the IMessage provided. Declaration public override BufferPool ToBufferPool(T message) Parameters Type Name T message Returns Type Description BufferPool A BufferPool with a representation of the message Overrides EventStore.Transport.Tcp.Formatting.FormatterBase<T>.ToBufferPool(T) Implements IMessageFormatter<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Transport.Tcp.Formatting.IMessageFormatter-1.html": {
    "href": "dotnet-api/code/EventStore.Transport.Tcp.Formatting.IMessageFormatter-1.html",
    "title": "Interface IMessageFormatter<T> | Event Store",
    "keywords": "Interface IMessageFormatter<T> Namespace : EventStore.Transport.Tcp.Formatting Assembly : EventStore.Transport.Tcp.dll Syntax public interface IMessageFormatter<T> Type Parameters Name Description T Methods From(BufferPool) Takes a BufferPool and converts its contents to a message object Declaration T From(BufferPool bufferPool) Parameters Type Name BufferPool bufferPool Returns Type Description T A message representing the data given From(ArraySegment<Byte>) Takes an ArraySegment and converts its contents to a message object Declaration T From(ArraySegment<byte> segment) Parameters Type Name System.ArraySegment < System.Byte > segment Returns Type Description T A message representing the data given From(Byte[]) Takes an Array and converts its contents to a message object Declaration T From(byte[] array) Parameters Type Name System.Byte [] array Returns Type Description T A message representing the data given ToArray(T) Converts the object to a byte array representing a binary format of it. Declaration byte[] ToArray(T message) Parameters Type Name T message Returns Type Description System.Byte [] A BufferPool containing the data representing the object. ToArraySegment(T) Converts the object to a System.ArraySegment<T> representing a binary format of it. Declaration ArraySegment<byte> ToArraySegment(T message) Parameters Type Name T message Returns Type Description System.ArraySegment < System.Byte > A BufferPool containing the data representing the object. ToBufferPool(T) Converts the object to a BufferPool representing a binary format of it. Declaration BufferPool ToBufferPool(T message) Parameters Type Name T message Returns Type Description BufferPool A BufferPool containing the data representing the object. Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Transport.Tcp.Formatting.FormatterBase-1.html": {
    "href": "dotnet-api/code/EventStore.Transport.Tcp.Formatting.FormatterBase-1.html",
    "title": "Class FormatterBase<T> | Event Store",
    "keywords": "Class FormatterBase<T> Inheritance System.Object FormatterBase<T> ProtoBufMessageFormatter<T> Implements IMessageFormatter <T> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Transport.Tcp.Formatting Assembly : EventStore.Transport.Tcp.dll Syntax public abstract class FormatterBase<T> : IMessageFormatter<T> Type Parameters Name Description T Methods From(BufferPool) Gets a message from a BufferPool Declaration public virtual T From(BufferPool bufferPool) Parameters Type Name BufferPool bufferPool Returns Type Description T From(ArraySegment<Byte>) Gets a message from a System.ArraySegment<T> Declaration public virtual T From(ArraySegment<byte> segment) Parameters Type Name System.ArraySegment < System.Byte > segment Returns Type Description T From(Byte[]) Gets a message from a byte array Declaration public virtual T From(byte[] array) Parameters Type Name System.Byte [] array Returns Type Description T From(Stream) Creates a message object from the specified stream Declaration public abstract T From(Stream stream) Parameters Type Name System.IO.Stream stream Returns Type Description T ToArray(T) Converts the message to a byte array Declaration public virtual byte[] ToArray(T message) Parameters Type Name T message Returns Type Description System.Byte [] ToArraySegment(T) converts the message to a System.ArraySegment<T> Declaration public virtual ArraySegment<byte> ToArraySegment(T message) Parameters Type Name T message Returns Type Description System.ArraySegment < System.Byte > ToBufferPool(T) Gets a BufferPool representing the IMessage provided. Declaration public abstract BufferPool ToBufferPool(T message) Parameters Type Name T message Returns Type Description BufferPool A BufferPool with a representation of the message Implements IMessageFormatter<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Transport.Http.html": {
    "href": "dotnet-api/code/EventStore.Transport.Http.html",
    "title": "Namespace EventStore.Transport.Http | Event Store",
    "keywords": "Namespace EventStore.Transport.Http Classes AsyncQueuedBufferWriter Manages a queue of buffers to send to output stream and sens them to the output stream as previous requests complete AsyncStreamCopier<T> CompressionAlgorithms ContentType HttpMethod HttpResponse HttpStatusCode IOStreams MediaType ProxyHeaders ProxyHeaderValues WebRequestExtensions Interfaces ICodec"
  },
  "dotnet-api/code/EventStore.Transport.Http.WebRequestExtensions.html": {
    "href": "dotnet-api/code/EventStore.Transport.Http.WebRequestExtensions.html",
    "title": "Class WebRequestExtensions | Event Store",
    "keywords": "Class WebRequestExtensions Inheritance System.Object WebRequestExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Transport.Http Assembly : EventStore.Transport.Http.dll Syntax public static class WebRequestExtensions Methods EndGetResponseExtended(WebRequest, IAsyncResult) Declaration public static WebResponse EndGetResponseExtended(this WebRequest request, IAsyncResult asyncResult) Parameters Type Name System.Net.WebRequest request System.IAsyncResult asyncResult Returns Type Description System.Net.WebResponse"
  },
  "dotnet-api/code/EventStore.Transport.Http.Server.html": {
    "href": "dotnet-api/code/EventStore.Transport.Http.Server.html",
    "title": "Namespace EventStore.Transport.Http.Server | Event Store",
    "keywords": "Namespace EventStore.Transport.Http.Server Classes HttpAsyncServer"
  },
  "dotnet-api/code/EventStore.Transport.Http.Server.HttpAsyncServer.html": {
    "href": "dotnet-api/code/EventStore.Transport.Http.Server.HttpAsyncServer.html",
    "title": "Class HttpAsyncServer | Event Store",
    "keywords": "Class HttpAsyncServer Inheritance System.Object HttpAsyncServer Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Transport.Http.Server Assembly : EventStore.Transport.Http.dll Syntax public sealed class HttpAsyncServer Constructors HttpAsyncServer(String[]) Declaration public HttpAsyncServer(string[] prefixes) Parameters Type Name System.String [] prefixes Fields _listenPrefixes Declaration public readonly string[] _listenPrefixes Field Value Type System.String [] Properties IsListening Declaration public bool IsListening { get; } Property Value Type System.Boolean Methods Shutdown() Declaration public void Shutdown() TryStart() Declaration public bool TryStart() Returns Type Description System.Boolean Events RequestReceived Declaration public event Action<HttpAsyncServer, HttpListenerContext> RequestReceived Event Type Type System.Action < HttpAsyncServer , System.Net.HttpListenerContext > Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Transport.Http.ProxyHeaders.html": {
    "href": "dotnet-api/code/EventStore.Transport.Http.ProxyHeaders.html",
    "title": "Class ProxyHeaders | Event Store",
    "keywords": "Class ProxyHeaders Inheritance System.Object ProxyHeaders Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Transport.Http Assembly : EventStore.Transport.Http.dll Syntax public static class ProxyHeaders Fields XForwardedHost Declaration public const string XForwardedHost = \"X-Forwarded-Host\" Field Value Type System.String XForwardedPort Declaration public const string XForwardedPort = \"X-Forwarded-Port\" Field Value Type System.String XForwardedPrefix Declaration public const string XForwardedPrefix = \"X-Forwarded-Prefix\" Field Value Type System.String XForwardedProto Declaration public const string XForwardedProto = \"X-Forwarded-Proto\" Field Value Type System.String"
  },
  "dotnet-api/code/EventStore.Transport.Http.ProxyHeaderValues.html": {
    "href": "dotnet-api/code/EventStore.Transport.Http.ProxyHeaderValues.html",
    "title": "Class ProxyHeaderValues | Event Store",
    "keywords": "Class ProxyHeaderValues Inheritance System.Object ProxyHeaderValues Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Transport.Http Assembly : EventStore.Transport.Http.dll Syntax public static class ProxyHeaderValues Fields XForwardedProtoHttp Declaration public const string XForwardedProtoHttp = \"http\" Field Value Type System.String XForwardedProtoHttps Declaration public const string XForwardedProtoHttps = \"https\" Field Value Type System.String"
  },
  "dotnet-api/code/EventStore.Transport.Http.MediaType.html": {
    "href": "dotnet-api/code/EventStore.Transport.Http.MediaType.html",
    "title": "Class MediaType | Event Store",
    "keywords": "Class MediaType Inheritance System.Object MediaType Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Transport.Http Assembly : EventStore.Transport.Http.dll Syntax public class MediaType Constructors MediaType(String, String, String, Single) Declaration public MediaType(string range, string type, string subtype, float priority) Parameters Type Name System.String range System.String type System.String subtype System.Single priority MediaType(String, String, String, Single, Boolean, Encoding) Declaration public MediaType(string range, string type, string subtype, float priority, bool encodingSpecified, Encoding encoding) Parameters Type Name System.String range System.String type System.String subtype System.Single priority System.Boolean encodingSpecified System.Text.Encoding encoding Fields Encoding Declaration public readonly Encoding Encoding Field Value Type System.Text.Encoding EncodingSpecified Declaration public readonly bool EncodingSpecified Field Value Type System.Boolean Priority Declaration public readonly float Priority Field Value Type System.Single Range Declaration public readonly string Range Field Value Type System.String Subtype Declaration public readonly string Subtype Field Value Type System.String Type Declaration public readonly string Type Field Value Type System.String Methods Matches(String, Encoding) Declaration public bool Matches(string mediaRange, Encoding encoding) Parameters Type Name System.String mediaRange System.Text.Encoding encoding Returns Type Description System.Boolean Parse(String) Declaration public static MediaType Parse(string componentText) Parameters Type Name System.String componentText Returns Type Description MediaType TryParse(String) Declaration public static MediaType TryParse(string componentText) Parameters Type Name System.String componentText Returns Type Description MediaType TryParse(String, out MediaType) Declaration public static bool TryParse(string componentText, out MediaType result) Parameters Type Name System.String componentText MediaType result Returns Type Description System.Boolean Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Transport.Http.IOStreams.html": {
    "href": "dotnet-api/code/EventStore.Transport.Http.IOStreams.html",
    "title": "Class IOStreams | Event Store",
    "keywords": "Class IOStreams Inheritance System.Object IOStreams Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Transport.Http Assembly : EventStore.Transport.Http.dll Syntax public class IOStreams Methods SafelyDispose(Stream[]) Declaration public static void SafelyDispose(params Stream[] streams) Parameters Type Name System.IO.Stream [] streams Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Transport.Http.ICodec.html": {
    "href": "dotnet-api/code/EventStore.Transport.Http.ICodec.html",
    "title": "Interface ICodec | Event Store",
    "keywords": "Interface ICodec Namespace : EventStore.Transport.Http Assembly : EventStore.Transport.Http.dll Syntax public interface ICodec Properties ContentType Declaration string ContentType { get; } Property Value Type System.String Encoding Declaration Encoding Encoding { get; } Property Value Type System.Text.Encoding HasEventIds Declaration bool HasEventIds { get; } Property Value Type System.Boolean HasEventTypes Declaration bool HasEventTypes { get; } Property Value Type System.Boolean Methods CanParse(MediaType) Declaration bool CanParse(MediaType format) Parameters Type Name MediaType format Returns Type Description System.Boolean From<T>(String) Declaration T From<T>(string text) Parameters Type Name System.String text Returns Type Description T Type Parameters Name Description T SuitableForResponse(MediaType) Declaration bool SuitableForResponse(MediaType component) Parameters Type Name MediaType component Returns Type Description System.Boolean To<T>(T) Declaration string To<T>(T value) Parameters Type Name T value Returns Type Description System.String Type Parameters Name Description T Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.VNode.VNodeFSMUnoptimized.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.VNode.VNodeFSMUnoptimized.html",
    "title": "Class VNodeFSMUnoptimized | Event Store",
    "keywords": "Class VNodeFSMUnoptimized Inheritance System.Object VNodeFSMUnoptimized Implements IHandle < Message > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.VNode Assembly : EventStore.Core.dll Syntax public class VNodeFSMUnoptimized : IHandle<Message> Methods Handle(Message) Declaration public void Handle(Message message) Parameters Type Name Message message Implements IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) HandleExtensions.WidenFrom<TInput, TOutput>(IHandle<TOutput>) HandleExtensions.NarrowTo<TInput, TOutput>(IHandle<TOutput>) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.VNode.VNodeFSMStatesDefinition.html",
    "title": "Class VNodeFSMStatesDefinition | Event Store",
    "keywords": "Class VNodeFSMStatesDefinition Inheritance System.Object VNodeFSMStatesDefinition Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.VNode Assembly : EventStore.Core.dll Syntax public class VNodeFSMStatesDefinition Constructors VNodeFSMStatesDefinition(VNodeFSMBuilder, VNodeState[]) Declaration public VNodeFSMStatesDefinition(VNodeFSMBuilder fsm, params VNodeState[] states) Parameters Type Name VNodeFSMBuilder fsm VNodeState [] states Methods Build() Declaration public VNodeFSM Build() Returns Type Description VNodeFSM InAllStatesExcept(VNodeState[]) Declaration public VNodeFSMStatesDefinition InAllStatesExcept(params VNodeState[] states) Parameters Type Name VNodeState [] states Returns Type Description VNodeFSMStatesDefinition InAnyState() Declaration public VNodeFSMStatesDefinition InAnyState() Returns Type Description VNodeFSMStatesDefinition InState(VNodeState) Declaration public VNodeFSMStatesDefinition InState(VNodeState state) Parameters Type Name VNodeState state Returns Type Description VNodeFSMStatesDefinition InStates(VNodeState[]) Declaration public VNodeFSMStatesDefinition InStates(params VNodeState[] states) Parameters Type Name VNodeState [] states Returns Type Description VNodeFSMStatesDefinition When<TMessage>() Declaration public VNodeFSMHandling<TMessage> When<TMessage>() where TMessage : Message Returns Type Description VNodeFSMHandling <TMessage> Type Parameters Name Description TMessage WhenOther() Declaration public VNodeFSMHandling<Message> WhenOther() Returns Type Description VNodeFSMHandling < Message > Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.VNode.VNodeFSMHandling-1.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.VNode.VNodeFSMHandling-1.html",
    "title": "Class VNodeFSMHandling<TMessage> | Event Store",
    "keywords": "Class VNodeFSMHandling<TMessage> Inheritance System.Object VNodeFSMHandling<TMessage> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.VNode Assembly : EventStore.Core.dll Syntax public class VNodeFSMHandling<TMessage> where TMessage : Message Type Parameters Name Description TMessage Constructors VNodeFSMHandling(VNodeFSMStatesDefinition, Boolean) Declaration public VNodeFSMHandling(VNodeFSMStatesDefinition stateDef, bool defaultHandler = false) Parameters Type Name VNodeFSMStatesDefinition stateDef System.Boolean defaultHandler Methods Do(Action<TMessage>) Declaration public VNodeFSMStatesDefinition Do(Action<TMessage> handler) Parameters Type Name System.Action <TMessage> handler Returns Type Description VNodeFSMStatesDefinition Do(Action<VNodeState, TMessage>) Declaration public VNodeFSMStatesDefinition Do(Action<VNodeState, TMessage> handler) Parameters Type Name System.Action < VNodeState , TMessage> handler Returns Type Description VNodeFSMStatesDefinition ForwardTo(IPublisher) Declaration public VNodeFSMStatesDefinition ForwardTo(IPublisher publisher) Parameters Type Name IPublisher publisher Returns Type Description VNodeFSMStatesDefinition Ignore() Declaration public VNodeFSMStatesDefinition Ignore() Returns Type Description VNodeFSMStatesDefinition Throw() Declaration public VNodeFSMStatesDefinition Throw() Returns Type Description VNodeFSMStatesDefinition Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.VNode.VNodeFSMBuilder.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.VNode.VNodeFSMBuilder.html",
    "title": "Class VNodeFSMBuilder | Event Store",
    "keywords": "Class VNodeFSMBuilder Builder syntax for constructing VNodeFSM in the code Inheritance System.Object VNodeFSMBuilder Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.VNode Assembly : EventStore.Core.dll Syntax public class VNodeFSMBuilder Constructors VNodeFSMBuilder(Func<VNodeState>) Declaration public VNodeFSMBuilder(Func<VNodeState> getState) Parameters Type Name System.Func < VNodeState > getState Methods Build() Declaration public VNodeFSM Build() Returns Type Description VNodeFSM InAllStatesExcept(VNodeState[]) Declaration public VNodeFSMStatesDefinition InAllStatesExcept(VNodeState[] states) Parameters Type Name VNodeState [] states Returns Type Description VNodeFSMStatesDefinition InAnyState() Declaration public VNodeFSMStatesDefinition InAnyState() Returns Type Description VNodeFSMStatesDefinition InState(VNodeState) Declaration public VNodeFSMStatesDefinition InState(VNodeState state) Parameters Type Name VNodeState state Returns Type Description VNodeFSMStatesDefinition InStates(VNodeState[]) Declaration public VNodeFSMStatesDefinition InStates(params VNodeState[] states) Parameters Type Name VNodeState [] states Returns Type Description VNodeFSMStatesDefinition Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.VNode.VNodeFSM.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.VNode.VNodeFSM.html",
    "title": "Class VNodeFSM | Event Store",
    "keywords": "Class VNodeFSM Inheritance System.Object VNodeFSM Implements IHandle < Message > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.VNode Assembly : EventStore.Core.dll Syntax public class VNodeFSM : IHandle<Message> Methods Handle(Message) Declaration public void Handle(Message message) Parameters Type Name Message message Implements IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) HandleExtensions.WidenFrom<TInput, TOutput>(IHandle<TOutput>) HandleExtensions.NarrowTo<TInput, TOutput>(IHandle<TOutput>) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Http.DescriptionDocument.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Http.DescriptionDocument.html",
    "title": "Class DescriptionDocument | Event Store",
    "keywords": "Class DescriptionDocument Inheritance System.Object DescriptionDocument Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Transport.Http Assembly : EventStore.Core.dll Syntax public class DescriptionDocument Fields Description Declaration public string Description Field Value Type System.String Links Declaration [JsonProperty(\"_links\")] public Links Links Field Value Type Links Title Declaration public string Title Field Value Type System.String Methods AddStreamSubscription(String, String[]) Declaration public void AddStreamSubscription(string href, params string[] supportedContentTypes) Parameters Type Name System.String href System.String [] supportedContentTypes SetDescription(String) Declaration public void SetDescription(string description) Parameters Type Name System.String description SetSelf(String, String[]) Declaration public void SetSelf(string href, params string[] supportedContentTypes) Parameters Type Name System.String href System.String [] supportedContentTypes SetStream(String, String[]) Declaration public void SetStream(string href, params string[] supportedContentTypes) Parameters Type Name System.String href System.String [] supportedContentTypes SetTitle(String) Declaration public void SetTitle(string title) Parameters Type Name System.String title Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Http.Convert.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Http.Convert.html",
    "title": "Class Convert | Event Store",
    "keywords": "Class Convert Inheritance System.Object Convert Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Transport.Http Assembly : EventStore.Core.dll Syntax public static class Convert Methods ToAllEventsBackwardFeed(ClientMessage.ReadAllEventsBackwardCompleted, Uri, EmbedLevel) Declaration public static FeedElement ToAllEventsBackwardFeed(ClientMessage.ReadAllEventsBackwardCompleted msg, Uri requestedUrl, EmbedLevel embedContent) Parameters Type Name ClientMessage.ReadAllEventsBackwardCompleted msg System.Uri requestedUrl EmbedLevel embedContent Returns Type Description FeedElement ToAllEventsForwardFeed(ClientMessage.ReadAllEventsForwardCompleted, Uri, EmbedLevel) Declaration public static FeedElement ToAllEventsForwardFeed(ClientMessage.ReadAllEventsForwardCompleted msg, Uri requestedUrl, EmbedLevel embedContent) Parameters Type Name ClientMessage.ReadAllEventsForwardCompleted msg System.Uri requestedUrl EmbedLevel embedContent Returns Type Description FeedElement ToDescriptionDocument(Uri, String, String[]) Declaration public static DescriptionDocument ToDescriptionDocument(Uri requestedUrl, string streamId, string[] subscriptions) Parameters Type Name System.Uri requestedUrl System.String streamId System.String [] subscriptions Returns Type Description DescriptionDocument ToEntry(ResolvedEvent, Uri, EmbedLevel, Boolean) Declaration public static EntryElement ToEntry(ResolvedEvent eventLinkPair, Uri requestedUrl, EmbedLevel embedContent, bool singleEntry = false) Parameters Type Name ResolvedEvent eventLinkPair System.Uri requestedUrl EmbedLevel embedContent System.Boolean singleEntry Returns Type Description EntryElement ToNextNPersistentMessagesFeed(ClientMessage.ReadNextNPersistentMessagesCompleted, Uri, String, String, Int32, EmbedLevel) Declaration public static FeedElement ToNextNPersistentMessagesFeed(ClientMessage.ReadNextNPersistentMessagesCompleted msg, Uri requestedUrl, string streamId, string groupName, int count, EmbedLevel embedContent) Parameters Type Name ClientMessage.ReadNextNPersistentMessagesCompleted msg System.Uri requestedUrl System.String streamId System.String groupName System.Int32 count EmbedLevel embedContent Returns Type Description FeedElement ToStreamEventBackwardFeed(ClientMessage.ReadStreamEventsBackwardCompleted, Uri, EmbedLevel, Boolean) Declaration public static FeedElement ToStreamEventBackwardFeed(ClientMessage.ReadStreamEventsBackwardCompleted msg, Uri requestedUrl, EmbedLevel embedContent, bool headOfStream) Parameters Type Name ClientMessage.ReadStreamEventsBackwardCompleted msg System.Uri requestedUrl EmbedLevel embedContent System.Boolean headOfStream Returns Type Description FeedElement ToStreamEventForwardFeed(ClientMessage.ReadStreamEventsForwardCompleted, Uri, EmbedLevel) Declaration public static FeedElement ToStreamEventForwardFeed(ClientMessage.ReadStreamEventsForwardCompleted msg, Uri requestedUrl, EmbedLevel embedContent) Parameters Type Name ClientMessage.ReadStreamEventsForwardCompleted msg System.Uri requestedUrl EmbedLevel embedContent Returns Type Description FeedElement"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Http.Controllers.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Http.Controllers.html",
    "title": "Namespace EventStore.Core.Services.Transport.Http.Controllers | Event Store",
    "keywords": "Namespace EventStore.Core.Services.Transport.Http.Controllers Classes AdminController AtomController ClusterWebUiController CommunicationController ElectController GossipController HistogramController HttpHelpers InfoController InfoController.OptionStructure PersistentSubscriptionController PersistentSubscriptionController.ConnectionInfo PersistentSubscriptionController.SubscriptionConfigData PersistentSubscriptionController.SubscriptionInfo PersistentSubscriptionController.SubscriptionSummary PingController RelLink StatController UsersController Enums EmbedLevel"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Http.Controllers.UsersController.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Http.Controllers.UsersController.html",
    "title": "Class UsersController | Event Store",
    "keywords": "Class UsersController Inheritance System.Object CommunicationController UsersController Implements IHttpController Inherited Members CommunicationController.Publish(Message) CommunicationController.Subscribe(IHttpService) CommunicationController.SendBadRequest(HttpEntityManager, String) CommunicationController.SendTooBig(HttpEntityManager) CommunicationController.SendOk(HttpEntityManager) CommunicationController.Register(IHttpService, String, String, Action<HttpEntityManager, UriTemplateMatch>, ICodec[], ICodec[]) CommunicationController.RegisterCustom(IHttpService, String, String, Func<HttpEntityManager, UriTemplateMatch, RequestParams>, ICodec[], ICodec[]) CommunicationController.RegisterUrlBased(IHttpService, String, String, Action<HttpEntityManager, UriTemplateMatch>) CommunicationController.MakeUrl(HttpEntityManager, String) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Transport.Http.Controllers Assembly : EventStore.Core.dll Syntax public class UsersController : CommunicationController, IHttpController Constructors UsersController(IHttpForwarder, IPublisher, IPublisher) Declaration public UsersController(IHttpForwarder httpForwarder, IPublisher publisher, IPublisher networkSendQueue) Parameters Type Name IHttpForwarder httpForwarder IPublisher publisher IPublisher networkSendQueue Methods SubscribeCore(IHttpService) Declaration protected override void SubscribeCore(IHttpService service) Parameters Type Name IHttpService service Overrides CommunicationController.SubscribeCore(IHttpService) Implements IHttpController Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Http.Controllers.StatController.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Http.Controllers.StatController.html",
    "title": "Class StatController | Event Store",
    "keywords": "Class StatController Inheritance System.Object CommunicationController StatController Implements IHttpController Inherited Members CommunicationController.Publish(Message) CommunicationController.Subscribe(IHttpService) CommunicationController.SendBadRequest(HttpEntityManager, String) CommunicationController.SendTooBig(HttpEntityManager) CommunicationController.SendOk(HttpEntityManager) CommunicationController.Register(IHttpService, String, String, Action<HttpEntityManager, UriTemplateMatch>, ICodec[], ICodec[]) CommunicationController.RegisterCustom(IHttpService, String, String, Func<HttpEntityManager, UriTemplateMatch, RequestParams>, ICodec[], ICodec[]) CommunicationController.RegisterUrlBased(IHttpService, String, String, Action<HttpEntityManager, UriTemplateMatch>) CommunicationController.MakeUrl(HttpEntityManager, String) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Transport.Http.Controllers Assembly : EventStore.Core.dll Syntax public class StatController : CommunicationController, IHttpController Constructors StatController(IPublisher, IPublisher) Declaration public StatController(IPublisher publisher, IPublisher networkSendQueue) Parameters Type Name IPublisher publisher IPublisher networkSendQueue Methods SubscribeCore(IHttpService) Declaration protected override void SubscribeCore(IHttpService service) Parameters Type Name IHttpService service Overrides CommunicationController.SubscribeCore(IHttpService) Implements IHttpController Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Http.Controllers.RelLink.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Http.Controllers.RelLink.html",
    "title": "Class RelLink | Event Store",
    "keywords": "Class RelLink Inheritance System.Object RelLink Implements System.Xml.Serialization.IXmlSerializable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Transport.Http.Controllers Assembly : EventStore.Core.dll Syntax public class RelLink : IXmlSerializable Constructors RelLink(String, String) Declaration public RelLink(string href, string rel) Parameters Type Name System.String href System.String rel Fields href Declaration public readonly string href Field Value Type System.String rel Declaration public readonly string rel Field Value Type System.String Methods GetSchema() Declaration public XmlSchema GetSchema() Returns Type Description System.Xml.Schema.XmlSchema ReadXml(XmlReader) Declaration public void ReadXml(XmlReader reader) Parameters Type Name System.Xml.XmlReader reader WriteXml(XmlWriter) Declaration public void WriteXml(XmlWriter writer) Parameters Type Name System.Xml.XmlWriter writer Implements System.Xml.Serialization.IXmlSerializable Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Http.Controllers.PingController.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Http.Controllers.PingController.html",
    "title": "Class PingController | Event Store",
    "keywords": "Class PingController Inheritance System.Object PingController Implements IHttpController Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Transport.Http.Controllers Assembly : EventStore.Core.dll Syntax public class PingController : IHttpController Methods Subscribe(IHttpService) Declaration public void Subscribe(IHttpService service) Parameters Type Name IHttpService service Implements IHttpController Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.html",
    "title": "Class PersistentSubscriptionController | Event Store",
    "keywords": "Class PersistentSubscriptionController Inheritance System.Object CommunicationController PersistentSubscriptionController Implements IHttpController Inherited Members CommunicationController.Publish(Message) CommunicationController.Subscribe(IHttpService) CommunicationController.SendBadRequest(HttpEntityManager, String) CommunicationController.SendTooBig(HttpEntityManager) CommunicationController.SendOk(HttpEntityManager) CommunicationController.Register(IHttpService, String, String, Action<HttpEntityManager, UriTemplateMatch>, ICodec[], ICodec[]) CommunicationController.RegisterCustom(IHttpService, String, String, Func<HttpEntityManager, UriTemplateMatch, RequestParams>, ICodec[], ICodec[]) CommunicationController.RegisterUrlBased(IHttpService, String, String, Action<HttpEntityManager, UriTemplateMatch>) CommunicationController.MakeUrl(HttpEntityManager, String) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Transport.Http.Controllers Assembly : EventStore.Core.dll Syntax public class PersistentSubscriptionController : CommunicationController, IHttpController Constructors PersistentSubscriptionController(IHttpForwarder, IPublisher, IPublisher) Declaration public PersistentSubscriptionController(IHttpForwarder httpForwarder, IPublisher publisher, IPublisher networkSendQueue) Parameters Type Name IHttpForwarder httpForwarder IPublisher publisher IPublisher networkSendQueue Methods SubscribeCore(IHttpService) Declaration protected override void SubscribeCore(IHttpService service) Parameters Type Name IHttpService service Overrides CommunicationController.SubscribeCore(IHttpService) Implements IHttpController Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionSummary.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionSummary.html",
    "title": "Class PersistentSubscriptionController.SubscriptionSummary | Event Store",
    "keywords": "Class PersistentSubscriptionController.SubscriptionSummary Inheritance System.Object PersistentSubscriptionController.SubscriptionSummary Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Transport.Http.Controllers Assembly : EventStore.Core.dll Syntax public class SubscriptionSummary Properties AverageItemsPerSecond Declaration public decimal AverageItemsPerSecond { get; set; } Property Value Type System.Decimal ConnectionCount Declaration public int ConnectionCount { get; set; } Property Value Type System.Int32 EventStreamId Declaration public string EventStreamId { get; set; } Property Value Type System.String GetMessagesUri Declaration public string GetMessagesUri { get; set; } Property Value Type System.String GroupName Declaration public string GroupName { get; set; } Property Value Type System.String LastKnownEventNumber Declaration public long LastKnownEventNumber { get; set; } Property Value Type System.Int64 LastProcessedEventNumber Declaration public long LastProcessedEventNumber { get; set; } Property Value Type System.Int64 Links Declaration public List<RelLink> Links { get; set; } Property Value Type System.Collections.Generic.List < RelLink > ParkedMessageUri Declaration public string ParkedMessageUri { get; set; } Property Value Type System.String Status Declaration public string Status { get; set; } Property Value Type System.String TotalInFlightMessages Declaration public int TotalInFlightMessages { get; set; } Property Value Type System.Int32 TotalItemsProcessed Declaration public long TotalItemsProcessed { get; set; } Property Value Type System.Int64 Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionInfo.html",
    "title": "Class PersistentSubscriptionController.SubscriptionInfo | Event Store",
    "keywords": "Class PersistentSubscriptionController.SubscriptionInfo Inheritance System.Object PersistentSubscriptionController.SubscriptionInfo Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Transport.Http.Controllers Assembly : EventStore.Core.dll Syntax public class SubscriptionInfo Properties AverageItemsPerSecond Declaration public decimal AverageItemsPerSecond { get; set; } Property Value Type System.Decimal Config Declaration public PersistentSubscriptionController.SubscriptionConfigData Config { get; set; } Property Value Type PersistentSubscriptionController.SubscriptionConfigData Connections Declaration public List<PersistentSubscriptionController.ConnectionInfo> Connections { get; set; } Property Value Type System.Collections.Generic.List < PersistentSubscriptionController.ConnectionInfo > CountSinceLastMeasurement Declaration public long CountSinceLastMeasurement { get; set; } Property Value Type System.Int64 EventStreamId Declaration public string EventStreamId { get; set; } Property Value Type System.String GetMessagesUri Declaration public string GetMessagesUri { get; set; } Property Value Type System.String GroupName Declaration public string GroupName { get; set; } Property Value Type System.String LastKnownEventNumber Declaration public long LastKnownEventNumber { get; set; } Property Value Type System.Int64 LastProcessedEventNumber Declaration public long LastProcessedEventNumber { get; set; } Property Value Type System.Int64 Links Declaration public List<RelLink> Links { get; set; } Property Value Type System.Collections.Generic.List < RelLink > LiveBufferCount Declaration public long LiveBufferCount { get; set; } Property Value Type System.Int64 ParkedMessageUri Declaration public string ParkedMessageUri { get; set; } Property Value Type System.String ReadBufferCount Declaration public int ReadBufferCount { get; set; } Property Value Type System.Int32 RetryBufferCount Declaration public int RetryBufferCount { get; set; } Property Value Type System.Int32 Status Declaration public string Status { get; set; } Property Value Type System.String TotalInFlightMessages Declaration public int TotalInFlightMessages { get; set; } Property Value Type System.Int32 TotalItemsProcessed Declaration public long TotalItemsProcessed { get; set; } Property Value Type System.Int64 Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.SubscriptionConfigData.html",
    "title": "Class PersistentSubscriptionController.SubscriptionConfigData | Event Store",
    "keywords": "Class PersistentSubscriptionController.SubscriptionConfigData Inheritance System.Object PersistentSubscriptionController.SubscriptionConfigData Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Transport.Http.Controllers Assembly : EventStore.Core.dll Syntax public class SubscriptionConfigData Constructors SubscriptionConfigData() Declaration public SubscriptionConfigData() Properties BufferSize Declaration public int BufferSize { get; set; } Property Value Type System.Int32 CheckPointAfterMilliseconds Declaration public int CheckPointAfterMilliseconds { get; set; } Property Value Type System.Int32 ExtraStatistics Declaration public bool ExtraStatistics { get; set; } Property Value Type System.Boolean LiveBufferSize Declaration public int LiveBufferSize { get; set; } Property Value Type System.Int32 MaxCheckPointCount Declaration public int MaxCheckPointCount { get; set; } Property Value Type System.Int32 MaxRetryCount Declaration public int MaxRetryCount { get; set; } Property Value Type System.Int32 MaxSubscriberCount Declaration public int MaxSubscriberCount { get; set; } Property Value Type System.Int32 MessageTimeoutMilliseconds Declaration public int MessageTimeoutMilliseconds { get; set; } Property Value Type System.Int32 MinCheckPointCount Declaration public int MinCheckPointCount { get; set; } Property Value Type System.Int32 NamedConsumerStrategy Declaration public string NamedConsumerStrategy { get; set; } Property Value Type System.String PreferRoundRobin Declaration public bool PreferRoundRobin { get; set; } Property Value Type System.Boolean ReadBatchSize Declaration public int ReadBatchSize { get; set; } Property Value Type System.Int32 ResolveLinktos Declaration public bool ResolveLinktos { get; set; } Property Value Type System.Boolean StartFrom Declaration public long StartFrom { get; set; } Property Value Type System.Int64 Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.ConnectionInfo.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Http.Controllers.PersistentSubscriptionController.ConnectionInfo.html",
    "title": "Class PersistentSubscriptionController.ConnectionInfo | Event Store",
    "keywords": "Class PersistentSubscriptionController.ConnectionInfo Inheritance System.Object PersistentSubscriptionController.ConnectionInfo Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Transport.Http.Controllers Assembly : EventStore.Core.dll Syntax public class ConnectionInfo Properties AvailableSlots Declaration public int AvailableSlots { get; set; } Property Value Type System.Int32 AverageItemsPerSecond Declaration public decimal AverageItemsPerSecond { get; set; } Property Value Type System.Decimal CountSinceLastMeasurement Declaration public long CountSinceLastMeasurement { get; set; } Property Value Type System.Int64 ExtraStatistics Declaration public List<Measurement> ExtraStatistics { get; set; } Property Value Type System.Collections.Generic.List < Measurement > From Declaration public string From { get; set; } Property Value Type System.String InFlightMessages Declaration public int InFlightMessages { get; set; } Property Value Type System.Int32 TotalItemsProcessed Declaration public long TotalItemsProcessed { get; set; } Property Value Type System.Int64 Username Declaration public string Username { get; set; } Property Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Http.Controllers.InfoController.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Http.Controllers.InfoController.html",
    "title": "Class InfoController | Event Store",
    "keywords": "Class InfoController Inheritance System.Object InfoController Implements IHttpController IHandle < SystemMessage.StateChangeMessage > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Transport.Http.Controllers Assembly : EventStore.Core.dll Syntax public class InfoController : IHttpController, IHandle<SystemMessage.StateChangeMessage> Constructors InfoController(IOptions, ProjectionType) Declaration public InfoController(IOptions options, ProjectionType projectionType) Parameters Type Name IOptions options ProjectionType projectionType Methods Filter(InfoController.OptionStructure[], String[]) Declaration public InfoController.OptionStructure[] Filter(InfoController.OptionStructure[] optionsToBeFiltered, params string[] namesOfValuesToExclude) Parameters Type Name InfoController.OptionStructure [] optionsToBeFiltered System.String [] namesOfValuesToExclude Returns Type Description InfoController.OptionStructure [] GetOptionsInfo(IOptions) Declaration public InfoController.OptionStructure[] GetOptionsInfo(IOptions options) Parameters Type Name IOptions options Returns Type Description InfoController.OptionStructure [] Handle(SystemMessage.StateChangeMessage) Declaration public void Handle(SystemMessage.StateChangeMessage message) Parameters Type Name SystemMessage.StateChangeMessage message Subscribe(IHttpService) Declaration public void Subscribe(IHttpService service) Parameters Type Name IHttpService service Implements IHttpController IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) HandleExtensions.WidenFrom<TInput, TOutput>(IHandle<TOutput>) HandleExtensions.NarrowTo<TInput, TOutput>(IHandle<TOutput>) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Http.Controllers.InfoController.OptionStructure.html",
    "title": "Class InfoController.OptionStructure | Event Store",
    "keywords": "Class InfoController.OptionStructure Inheritance System.Object InfoController.OptionStructure Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Transport.Http.Controllers Assembly : EventStore.Core.dll Syntax public class OptionStructure Properties Description Declaration public string Description { get; set; } Property Value Type System.String Group Declaration public string Group { get; set; } Property Value Type System.String Name Declaration public string Name { get; set; } Property Value Type System.String PossibleValues Declaration public string[] PossibleValues { get; set; } Property Value Type System.String [] Value Declaration public string Value { get; set; } Property Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Http.Controllers.HttpHelpers.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Http.Controllers.HttpHelpers.html",
    "title": "Class HttpHelpers | Event Store",
    "keywords": "Class HttpHelpers Inheritance System.Object HttpHelpers Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Transport.Http.Controllers Assembly : EventStore.Core.dll Syntax public static class HttpHelpers Methods RegisterRedirectAction(IHttpService, String, String) Declaration public static void RegisterRedirectAction(IHttpService service, string fromUrl, string toUrl) Parameters Type Name IHttpService service System.String fromUrl System.String toUrl Reply(HttpEntityManager, String, Int32, String, String, IEnumerable<KeyValuePair<String, String>>) Declaration public static void Reply(this HttpEntityManager http, string response, int code, string description, string contentType, IEnumerable<KeyValuePair<string, string>> headers = null) Parameters Type Name HttpEntityManager http System.String response System.Int32 code System.String description System.String contentType System.Collections.Generic.IEnumerable < System.Collections.Generic.KeyValuePair < System.String , System.String >> headers"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Http.Controllers.HistogramController.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Http.Controllers.HistogramController.html",
    "title": "Class HistogramController | Event Store",
    "keywords": "Class HistogramController Inheritance System.Object HistogramController Implements IHttpController Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Transport.Http.Controllers Assembly : EventStore.Core.dll Syntax public class HistogramController : IHttpController Methods Subscribe(IHttpService) Declaration public void Subscribe(IHttpService service) Parameters Type Name IHttpService service Implements IHttpController Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Storage.ReaderIndex.ReadStreamResult.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Storage.ReaderIndex.ReadStreamResult.html",
    "title": "Enum ReadStreamResult | Event Store",
    "keywords": "Enum ReadStreamResult Namespace : EventStore.Core.Services.Storage.ReaderIndex Assembly : EventStore.Core.dll Syntax public enum ReadStreamResult Fields Name Description NoStream StreamDeleted Success Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<ReadStreamResult>() ProtobufExtensions.Serialize<ReadStreamResult>() ProtobufExtensions.SerializeToArray<ReadStreamResult>()"
  },
  "dotnet-api/code/EventStore.Core.Services.Storage.ReaderIndex.ReadIndexStats.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Storage.ReaderIndex.ReadIndexStats.html",
    "title": "Class ReadIndexStats | Event Store",
    "keywords": "Class ReadIndexStats Inheritance System.Object ReadIndexStats Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Storage.ReaderIndex Assembly : EventStore.Core.dll Syntax public class ReadIndexStats Constructors ReadIndexStats(Int64, Int64, Int64, Int64, Int64, Int64, Int64) Declaration public ReadIndexStats(long cachedRecordReads, long notCachedRecordReads, long cachedStreamInfoReads, long notCachedStreamInfoReads, long hashCollisions, long cachedTransInfoReads, long notCachedTransInfoReads) Parameters Type Name System.Int64 cachedRecordReads System.Int64 notCachedRecordReads System.Int64 cachedStreamInfoReads System.Int64 notCachedStreamInfoReads System.Int64 hashCollisions System.Int64 cachedTransInfoReads System.Int64 notCachedTransInfoReads Fields CachedRecordReads Number of cached record reads Declaration public readonly long CachedRecordReads Field Value Type System.Int64 CachedStreamInfoReads Declaration public readonly long CachedStreamInfoReads Field Value Type System.Int64 CachedTransInfoReads Declaration public readonly long CachedTransInfoReads Field Value Type System.Int64 HashCollisions Declaration public readonly long HashCollisions Field Value Type System.Int64 NotCachedRecordReads Number of uncached record reads Declaration public readonly long NotCachedRecordReads Field Value Type System.Int64 NotCachedStreamInfoReads Declaration public readonly long NotCachedStreamInfoReads Field Value Type System.Int64 NotCachedTransInfoReads Declaration public readonly long NotCachedTransInfoReads Field Value Type System.Int64 Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Storage.ReaderIndex.ReadIndex.html",
    "title": "Class ReadIndex | Event Store",
    "keywords": "Class ReadIndex Inheritance System.Object ReadIndex Implements System.IDisposable IReadIndex Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Storage.ReaderIndex Assembly : EventStore.Core.dll Syntax public class ReadIndex : IDisposable, IReadIndex Constructors ReadIndex(IPublisher, ObjectPool<ITransactionFileReader>, ITableIndex, Int32, Boolean, Int64, Int32, Boolean, ICheckpoint) Declaration public ReadIndex(IPublisher bus, ObjectPool<ITransactionFileReader> readerPool, ITableIndex tableIndex, int streamInfoCacheCapacity, bool additionalCommitChecks, long metastreamMaxCount, int hashCollisionReadLimit, bool skipIndexScanOnReads, ICheckpoint replicationCheckpoint) Parameters Type Name IPublisher bus ObjectPool < ITransactionFileReader > readerPool ITableIndex tableIndex System.Int32 streamInfoCacheCapacity System.Boolean additionalCommitChecks System.Int64 metastreamMaxCount System.Int32 hashCollisionReadLimit System.Boolean skipIndexScanOnReads ICheckpoint replicationCheckpoint Properties IndexCommitter Declaration public IIndexCommitter IndexCommitter { get; } Property Value Type IIndexCommitter IndexWriter Declaration public IIndexWriter IndexWriter { get; } Property Value Type IIndexWriter LastCommitPosition Declaration public long LastCommitPosition { get; } Property Value Type System.Int64 LastReplicatedPosition Declaration public long LastReplicatedPosition { get; } Property Value Type System.Int64 Methods Close() Declaration public void Close() Dispose() Declaration public void Dispose() GetEventStreamIdByTransactionId(Int64) Declaration public string GetEventStreamIdByTransactionId(long transactionId) Parameters Type Name System.Int64 transactionId Returns Type Description System.String Explicit Interface Implementations IReadIndex.CheckStreamAccess(String, StreamAccessType, IPrincipal) Declaration StreamAccess IReadIndex.CheckStreamAccess(string streamId, StreamAccessType streamAccessType, IPrincipal user) Parameters Type Name System.String streamId StreamAccessType streamAccessType System.Security.Principal.IPrincipal user Returns Type Description StreamAccess IReadIndex.GetStatistics() Declaration ReadIndexStats IReadIndex.GetStatistics() Returns Type Description ReadIndexStats IReadIndex.GetStreamLastEventNumber(String) Declaration long IReadIndex.GetStreamLastEventNumber(string streamId) Parameters Type Name System.String streamId Returns Type Description System.Int64 IReadIndex.GetStreamMetadata(String) Declaration StreamMetadata IReadIndex.GetStreamMetadata(string streamId) Parameters Type Name System.String streamId Returns Type Description StreamMetadata IReadIndex.Init(Int64) Declaration void IReadIndex.Init(long buildToPosition) Parameters Type Name System.Int64 buildToPosition IReadIndex.IsStreamDeleted(String) Declaration bool IReadIndex.IsStreamDeleted(string streamId) Parameters Type Name System.String streamId Returns Type Description System.Boolean IReadIndex.ReadAllEventsBackward(TFPos, Int32) Declaration IndexReadAllResult IReadIndex.ReadAllEventsBackward(TFPos pos, int maxCount) Parameters Type Name TFPos pos System.Int32 maxCount Returns Type Description IndexReadAllResult IReadIndex.ReadAllEventsForward(TFPos, Int32) Declaration IndexReadAllResult IReadIndex.ReadAllEventsForward(TFPos pos, int maxCount) Parameters Type Name TFPos pos System.Int32 maxCount Returns Type Description IndexReadAllResult IReadIndex.ReadEvent(String, Int64) Declaration IndexReadEventResult IReadIndex.ReadEvent(string streamId, long eventNumber) Parameters Type Name System.String streamId System.Int64 eventNumber Returns Type Description IndexReadEventResult IReadIndex.ReadStreamEventsBackward(String, Int64, Int32) Declaration IndexReadStreamResult IReadIndex.ReadStreamEventsBackward(string streamId, long fromEventNumber, int maxCount) Parameters Type Name System.String streamId System.Int64 fromEventNumber System.Int32 maxCount Returns Type Description IndexReadStreamResult IReadIndex.ReadStreamEventsForward(String, Int64, Int32) Declaration IndexReadStreamResult IReadIndex.ReadStreamEventsForward(string streamId, long fromEventNumber, int maxCount) Parameters Type Name System.String streamId System.Int64 fromEventNumber System.Int32 maxCount Returns Type Description IndexReadStreamResult Implements System.IDisposable IReadIndex Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Storage.ReaderIndex.ReadCacheStats.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Storage.ReaderIndex.ReadCacheStats.html",
    "title": "Class ReadCacheStats | Event Store",
    "keywords": "Class ReadCacheStats Inheritance System.Object ReadCacheStats Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Storage.ReaderIndex Assembly : EventStore.Core.dll Syntax public class ReadCacheStats Constructors ReadCacheStats(Int64, Int32, Int64, Int64) Declaration public ReadCacheStats(long size, int count, long hitCount, long missCount) Parameters Type Name System.Int64 size System.Int32 count System.Int64 hitCount System.Int64 missCount Fields Count Declaration public readonly int Count Field Value Type System.Int32 HitCount Declaration public readonly long HitCount Field Value Type System.Int64 MissCount Declaration public readonly long MissCount Field Value Type System.Int64 Size Declaration public readonly long Size Field Value Type System.Int64 Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Storage.ReaderIndex.RawMetaInfo.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Storage.ReaderIndex.RawMetaInfo.html",
    "title": "Struct RawMetaInfo | Event Store",
    "keywords": "Struct RawMetaInfo Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : EventStore.Core.Services.Storage.ReaderIndex Assembly : EventStore.Core.dll Syntax public struct RawMetaInfo Constructors RawMetaInfo(Int64, Byte[]) Declaration public RawMetaInfo(long metaLastEventNumber, byte[] rawMeta) Parameters Type Name System.Int64 metaLastEventNumber System.Byte [] rawMeta Fields MetaLastEventNumber Declaration public readonly long MetaLastEventNumber Field Value Type System.Int64 RawMeta Declaration public readonly byte[] RawMeta Field Value Type System.Byte [] Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) EnumExtensions.EnumValueName<T>(T) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Storage.ReaderIndex.IndexWriter.html",
    "title": "Class IndexWriter | Event Store",
    "keywords": "Class IndexWriter Inheritance System.Object IndexWriter Implements IIndexWriter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Storage.ReaderIndex Assembly : EventStore.Core.dll Syntax public class IndexWriter : IIndexWriter Constructors IndexWriter(IIndexBackend, IIndexReader) Declaration public IndexWriter(IIndexBackend indexBackend, IIndexReader indexReader) Parameters Type Name IIndexBackend indexBackend IIndexReader indexReader Properties CachedTransInfo Declaration public long CachedTransInfo { get; } Property Value Type System.Int64 NotCachedTransInfo Declaration public long NotCachedTransInfo { get; } Property Value Type System.Int64 Methods CheckCommit(String, Int64, IEnumerable<Guid>) Declaration public CommitCheckResult CheckCommit(string streamId, long expectedVersion, IEnumerable<Guid> eventIds) Parameters Type Name System.String streamId System.Int64 expectedVersion System.Collections.Generic.IEnumerable < System.Guid > eventIds Returns Type Description CommitCheckResult CheckCommitStartingAt(Int64, Int64) Declaration public CommitCheckResult CheckCommitStartingAt(long transactionPosition, long commitPosition) Parameters Type Name System.Int64 transactionPosition System.Int64 commitPosition Returns Type Description CommitCheckResult GetStreamLastEventNumber(String) Declaration public long GetStreamLastEventNumber(string streamId) Parameters Type Name System.String streamId Returns Type Description System.Int64 GetStreamMetadata(String) Declaration public StreamMetadata GetStreamMetadata(string streamId) Parameters Type Name System.String streamId Returns Type Description StreamMetadata GetStreamRawMeta(String) Declaration public RawMetaInfo GetStreamRawMeta(string streamId) Parameters Type Name System.String streamId Returns Type Description RawMetaInfo GetTransactionInfo(Int64, Int64) Declaration public TransactionInfo GetTransactionInfo(long writerCheckpoint, long transactionId) Parameters Type Name System.Int64 writerCheckpoint System.Int64 transactionId Returns Type Description TransactionInfo IsSoftDeleted(String) Declaration public bool IsSoftDeleted(string streamId) Parameters Type Name System.String streamId Returns Type Description System.Boolean PreCommit(CommitLogRecord) Declaration public void PreCommit(CommitLogRecord commit) Parameters Type Name CommitLogRecord commit PreCommit(IList<PrepareLogRecord>) Declaration public void PreCommit(IList<PrepareLogRecord> commitedPrepares) Parameters Type Name System.Collections.Generic.IList < PrepareLogRecord > commitedPrepares PurgeNotProcessedCommitsTill(Int64) Declaration public void PurgeNotProcessedCommitsTill(long checkpoint) Parameters Type Name System.Int64 checkpoint PurgeNotProcessedTransactions(Int64) Declaration public void PurgeNotProcessedTransactions(long checkpoint) Parameters Type Name System.Int64 checkpoint Reset() Declaration public void Reset() UpdateTransactionInfo(Int64, Int64, TransactionInfo) Declaration public void UpdateTransactionInfo(long transactionId, long logPosition, TransactionInfo transactionInfo) Parameters Type Name System.Int64 transactionId System.Int64 logPosition TransactionInfo transactionInfo Implements IIndexWriter Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Storage.ReaderIndex.IndexReader.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Storage.ReaderIndex.IndexReader.html",
    "title": "Class IndexReader | Event Store",
    "keywords": "Class IndexReader Inheritance System.Object IndexReader Implements IIndexReader Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Storage.ReaderIndex Assembly : EventStore.Core.dll Syntax public class IndexReader : IIndexReader Constructors IndexReader(IIndexBackend, ITableIndex, StreamMetadata, Int32, Boolean) Declaration public IndexReader(IIndexBackend backend, ITableIndex tableIndex, StreamMetadata metastreamMetadata, int hashCollisionReadLimit, bool skipIndexScanOnRead) Parameters Type Name IIndexBackend backend ITableIndex tableIndex StreamMetadata metastreamMetadata System.Int32 hashCollisionReadLimit System.Boolean skipIndexScanOnRead Properties CachedStreamInfo Declaration public long CachedStreamInfo { get; } Property Value Type System.Int64 HashCollisions Declaration public long HashCollisions { get; } Property Value Type System.Int64 NotCachedStreamInfo Declaration public long NotCachedStreamInfo { get; } Property Value Type System.Int64 Methods GetEventStreamIdByTransactionId(Int64) Declaration public string GetEventStreamIdByTransactionId(long transactionId) Parameters Type Name System.Int64 transactionId Returns Type Description System.String ReadPrepareInternal(TFReaderLease, Int64) Declaration protected static PrepareLogRecord ReadPrepareInternal(TFReaderLease reader, long logPosition) Parameters Type Name TFReaderLease reader System.Int64 logPosition Returns Type Description PrepareLogRecord Explicit Interface Implementations IIndexReader.CheckStreamAccess(String, StreamAccessType, IPrincipal) Declaration StreamAccess IIndexReader.CheckStreamAccess(string streamId, StreamAccessType streamAccessType, IPrincipal user) Parameters Type Name System.String streamId StreamAccessType streamAccessType System.Security.Principal.IPrincipal user Returns Type Description StreamAccess IIndexReader.GetStreamLastEventNumber(String) Declaration long IIndexReader.GetStreamLastEventNumber(string streamId) Parameters Type Name System.String streamId Returns Type Description System.Int64 IIndexReader.GetStreamMetadata(String) Declaration StreamMetadata IIndexReader.GetStreamMetadata(string streamId) Parameters Type Name System.String streamId Returns Type Description StreamMetadata IIndexReader.ReadEvent(String, Int64) Declaration IndexReadEventResult IIndexReader.ReadEvent(string streamId, long eventNumber) Parameters Type Name System.String streamId System.Int64 eventNumber Returns Type Description IndexReadEventResult IIndexReader.ReadPrepare(String, Int64) Declaration PrepareLogRecord IIndexReader.ReadPrepare(string streamId, long eventNumber) Parameters Type Name System.String streamId System.Int64 eventNumber Returns Type Description PrepareLogRecord IIndexReader.ReadStreamEventsBackward(String, Int64, Int32) Declaration IndexReadStreamResult IIndexReader.ReadStreamEventsBackward(string streamId, long fromEventNumber, int maxCount) Parameters Type Name System.String streamId System.Int64 fromEventNumber System.Int32 maxCount Returns Type Description IndexReadStreamResult IIndexReader.ReadStreamEventsForward(String, Int64, Int32) Declaration IndexReadStreamResult IIndexReader.ReadStreamEventsForward(string streamId, long fromEventNumber, int maxCount) Parameters Type Name System.String streamId System.Int64 fromEventNumber System.Int32 maxCount Returns Type Description IndexReadStreamResult Implements IIndexReader Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.SystemMessage.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.SystemMessage.html",
    "title": "Class SystemMessage | Event Store",
    "keywords": "Class SystemMessage Inheritance System.Object SystemMessage Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public static class SystemMessage"
  },
  "dotnet-api/code/EventStore.Core.Messages.SystemMessage.BecomeMaster.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.SystemMessage.BecomeMaster.html",
    "title": "Class SystemMessage.BecomeMaster | Event Store",
    "keywords": "Class SystemMessage.BecomeMaster Inheritance System.Object Message SystemMessage.StateChangeMessage SystemMessage.BecomeMaster Inherited Members SystemMessage.StateChangeMessage.CorrelationId SystemMessage.StateChangeMessage.State Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class BecomeMaster : SystemMessage.StateChangeMessage Constructors BecomeMaster(Guid) Declaration public BecomeMaster(Guid correlationId) Parameters Type Name System.Guid correlationId Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides SystemMessage.StateChangeMessage.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.StorageMessage.CommitReplicated.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.StorageMessage.CommitReplicated.html",
    "title": "Class StorageMessage.CommitReplicated | Event Store",
    "keywords": "Class StorageMessage.CommitReplicated Inheritance System.Object Message StorageMessage.CommitReplicated Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class CommitReplicated : Message Constructors CommitReplicated(Guid, Int64, Int64, Int64, Int64) Declaration public CommitReplicated(Guid correlationId, long logPosition, long transactionPosition, long firstEventNumber, long lastEventNumber) Parameters Type Name System.Guid correlationId System.Int64 logPosition System.Int64 transactionPosition System.Int64 firstEventNumber System.Int64 lastEventNumber Fields CorrelationId Declaration public readonly Guid CorrelationId Field Value Type System.Guid FirstEventNumber Declaration public readonly long FirstEventNumber Field Value Type System.Int64 LastEventNumber Declaration public readonly long LastEventNumber Field Value Type System.Int64 LogPosition Declaration public readonly long LogPosition Field Value Type System.Int64 TransactionPosition Declaration public readonly long TransactionPosition Field Value Type System.Int64 Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.StorageMessage.CommitAck.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.StorageMessage.CommitAck.html",
    "title": "Class StorageMessage.CommitAck | Event Store",
    "keywords": "Class StorageMessage.CommitAck Inheritance System.Object Message StorageMessage.CommitAck Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class CommitAck : Message Constructors CommitAck(Guid, Int64, Int64, Int64, Int64, Boolean) Declaration public CommitAck(Guid correlationId, long logPosition, long transactionPosition, long firstEventNumber, long lastEventNumber, bool isSelf = false) Parameters Type Name System.Guid correlationId System.Int64 logPosition System.Int64 transactionPosition System.Int64 firstEventNumber System.Int64 lastEventNumber System.Boolean isSelf Fields CorrelationId Declaration public readonly Guid CorrelationId Field Value Type System.Guid FirstEventNumber Declaration public readonly long FirstEventNumber Field Value Type System.Int64 IsSelf Declaration public readonly bool IsSelf Field Value Type System.Boolean LastEventNumber Declaration public readonly long LastEventNumber Field Value Type System.Int64 LogPosition Declaration public readonly long LogPosition Field Value Type System.Int64 TransactionPosition Declaration public readonly long TransactionPosition Field Value Type System.Int64 Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.StorageMessage.CheckStreamAccessCompleted.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.StorageMessage.CheckStreamAccessCompleted.html",
    "title": "Class StorageMessage.CheckStreamAccessCompleted | Event Store",
    "keywords": "Class StorageMessage.CheckStreamAccessCompleted Inheritance System.Object Message ClientMessage.ReadResponseMessage StorageMessage.CheckStreamAccessCompleted Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class CheckStreamAccessCompleted : ClientMessage.ReadResponseMessage Constructors CheckStreamAccessCompleted(Guid, String, Nullable<Int64>, StreamAccessType, StreamAccess) Declaration public CheckStreamAccessCompleted(Guid correlationId, string eventStreamId, long? transactionId, StreamAccessType accessType, StreamAccess accessResult) Parameters Type Name System.Guid correlationId System.String eventStreamId System.Nullable < System.Int64 > transactionId StreamAccessType accessType StreamAccess accessResult Fields AccessResult Declaration public readonly StreamAccess AccessResult Field Value Type StreamAccess AccessType Declaration public readonly StreamAccessType AccessType Field Value Type StreamAccessType CorrelationId Declaration public readonly Guid CorrelationId Field Value Type System.Guid EventStreamId Declaration public readonly string EventStreamId Field Value Type System.String TransactionId Declaration public readonly long? TransactionId Field Value Type System.Nullable < System.Int64 > Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides ClientMessage.ReadResponseMessage.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.MonitoringMessage.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.MonitoringMessage.html",
    "title": "Class MonitoringMessage | Event Store",
    "keywords": "Class MonitoringMessage Inheritance System.Object MonitoringMessage Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public static class MonitoringMessage"
  },
  "dotnet-api/code/EventStore.Core.Messages.HttpMessage.HttpSendMessage.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.HttpMessage.HttpSendMessage.html",
    "title": "Class HttpMessage.HttpSendMessage | Event Store",
    "keywords": "Class HttpMessage.HttpSendMessage Inheritance System.Object Message HttpMessage.HttpSendMessage HttpMessage.HttpBeginSend HttpMessage.HttpEndSend HttpMessage.HttpSend HttpMessage.HttpSendPart Implements IQueueAffineMessage Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public abstract class HttpSendMessage : Message, IQueueAffineMessage Constructors HttpSendMessage(Guid, IEnvelope, HttpEntityManager) Declaration protected HttpSendMessage(Guid correlationId, IEnvelope envelope, HttpEntityManager httpEntityManager) Parameters Type Name System.Guid correlationId IEnvelope envelope HttpEntityManager httpEntityManager Fields CorrelationId Declaration public readonly Guid CorrelationId Field Value Type System.Guid Envelope Declaration public readonly IEnvelope Envelope Field Value Type IEnvelope HttpEntityManager Declaration public readonly HttpEntityManager HttpEntityManager Field Value Type HttpEntityManager Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId QueueId Declaration public int QueueId { get; } Property Value Type System.Int32 Implements IQueueAffineMessage Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.HttpMessage.HttpSend.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.HttpMessage.HttpSend.html",
    "title": "Class HttpMessage.HttpSend | Event Store",
    "keywords": "Class HttpMessage.HttpSend Inheritance System.Object Message HttpMessage.HttpSendMessage HttpMessage.HttpSend Implements IQueueAffineMessage Inherited Members HttpMessage.HttpSendMessage.QueueId HttpMessage.HttpSendMessage.Envelope HttpMessage.HttpSendMessage.CorrelationId HttpMessage.HttpSendMessage.HttpEntityManager Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class HttpSend : HttpMessage.HttpSendMessage, IQueueAffineMessage Constructors HttpSend(HttpEntityManager, ResponseConfiguration, Object, Message) Declaration public HttpSend(HttpEntityManager httpEntityManager, ResponseConfiguration configuration, object data, Message message) Parameters Type Name HttpEntityManager httpEntityManager ResponseConfiguration configuration System.Object data Message message Fields Configuration Declaration public readonly ResponseConfiguration Configuration Field Value Type ResponseConfiguration Data Declaration public readonly object Data Field Value Type System.Object Message Declaration public readonly Message Message Field Value Type Message Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides HttpMessage.HttpSendMessage.MsgTypeId Implements IQueueAffineMessage Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.HttpMessage.HttpEndSend.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.HttpMessage.HttpEndSend.html",
    "title": "Class HttpMessage.HttpEndSend | Event Store",
    "keywords": "Class HttpMessage.HttpEndSend Inheritance System.Object Message HttpMessage.HttpSendMessage HttpMessage.HttpEndSend Implements IQueueAffineMessage Inherited Members HttpMessage.HttpSendMessage.QueueId HttpMessage.HttpSendMessage.Envelope HttpMessage.HttpSendMessage.CorrelationId HttpMessage.HttpSendMessage.HttpEntityManager Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class HttpEndSend : HttpMessage.HttpSendMessage, IQueueAffineMessage Constructors HttpEndSend(Guid, IEnvelope, HttpEntityManager) Declaration public HttpEndSend(Guid correlationId, IEnvelope envelope, HttpEntityManager httpEntityManager) Parameters Type Name System.Guid correlationId IEnvelope envelope HttpEntityManager httpEntityManager Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides HttpMessage.HttpSendMessage.MsgTypeId Implements IQueueAffineMessage Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ClientMessage.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ClientMessage.html",
    "title": "Class ClientMessage | Event Store",
    "keywords": "Class ClientMessage Inheritance System.Object ClientMessage Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public static class ClientMessage"
  },
  "dotnet-api/code/EventStore.Core.Messages.ClientMessage.SubscribeToStream.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ClientMessage.SubscribeToStream.html",
    "title": "Class ClientMessage.SubscribeToStream | Event Store",
    "keywords": "Class ClientMessage.SubscribeToStream Inheritance System.Object Message ClientMessage.ReadRequestMessage ClientMessage.SubscribeToStream Inherited Members ClientMessage.ReadRequestMessage.InternalCorrId ClientMessage.ReadRequestMessage.CorrelationId ClientMessage.ReadRequestMessage.Envelope ClientMessage.ReadRequestMessage.User ClientMessage.ReadRequestMessage.Expires Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class SubscribeToStream : ClientMessage.ReadRequestMessage Constructors SubscribeToStream(Guid, Guid, IEnvelope, Guid, String, Boolean, IPrincipal) Declaration public SubscribeToStream(Guid internalCorrId, Guid correlationId, IEnvelope envelope, Guid connectionId, string eventStreamId, bool resolveLinkTos, IPrincipal user) Parameters Type Name System.Guid internalCorrId System.Guid correlationId IEnvelope envelope System.Guid connectionId System.String eventStreamId System.Boolean resolveLinkTos System.Security.Principal.IPrincipal user Fields ConnectionId Declaration public readonly Guid ConnectionId Field Value Type System.Guid EventStreamId Declaration public readonly string EventStreamId Field Value Type System.String ResolveLinkTos Declaration public readonly bool ResolveLinkTos Field Value Type System.Boolean Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides ClientMessage.ReadRequestMessage.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ClientMessage.StreamEventAppeared.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ClientMessage.StreamEventAppeared.html",
    "title": "Class ClientMessage.StreamEventAppeared | Event Store",
    "keywords": "Class ClientMessage.StreamEventAppeared Inheritance System.Object Message ClientMessage.StreamEventAppeared Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class StreamEventAppeared : Message Constructors StreamEventAppeared(Guid, ResolvedEvent) Declaration public StreamEventAppeared(Guid correlationId, ResolvedEvent event) Parameters Type Name System.Guid correlationId ResolvedEvent event Fields CorrelationId Declaration public readonly Guid CorrelationId Field Value Type System.Guid Event Declaration public readonly ResolvedEvent Event Field Value Type ResolvedEvent Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ClientMessage.StopDatabaseScavenge.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ClientMessage.StopDatabaseScavenge.html",
    "title": "Class ClientMessage.StopDatabaseScavenge | Event Store",
    "keywords": "Class ClientMessage.StopDatabaseScavenge Inheritance System.Object Message ClientMessage.StopDatabaseScavenge Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class StopDatabaseScavenge : Message Constructors StopDatabaseScavenge(IEnvelope, Guid, IPrincipal, String) Declaration public StopDatabaseScavenge(IEnvelope envelope, Guid correlationId, IPrincipal user, string scavengeId) Parameters Type Name IEnvelope envelope System.Guid correlationId System.Security.Principal.IPrincipal user System.String scavengeId Fields CorrelationId Declaration public readonly Guid CorrelationId Field Value Type System.Guid Envelope Declaration public readonly IEnvelope Envelope Field Value Type IEnvelope ScavengeId Declaration public readonly string ScavengeId Field Value Type System.String User Declaration public readonly IPrincipal User Field Value Type System.Security.Principal.IPrincipal Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.ClientMessage.PersistentSubscriptionNakEvents.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.ClientMessage.PersistentSubscriptionNakEvents.html",
    "title": "Class ClientMessage.PersistentSubscriptionNakEvents | Event Store",
    "keywords": "Class ClientMessage.PersistentSubscriptionNakEvents Inheritance System.Object Message ClientMessage.ReadRequestMessage ClientMessage.PersistentSubscriptionNakEvents Inherited Members ClientMessage.ReadRequestMessage.InternalCorrId ClientMessage.ReadRequestMessage.CorrelationId ClientMessage.ReadRequestMessage.Envelope ClientMessage.ReadRequestMessage.User ClientMessage.ReadRequestMessage.Expires Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class PersistentSubscriptionNakEvents : ClientMessage.ReadRequestMessage Constructors PersistentSubscriptionNakEvents(Guid, Guid, IEnvelope, String, Guid[], IPrincipal) Declaration public PersistentSubscriptionNakEvents(Guid internalCorrId, Guid correlationId, IEnvelope envelope, string subscriptionId, Guid[] processedEventIds, IPrincipal user) Parameters Type Name System.Guid internalCorrId System.Guid correlationId IEnvelope envelope System.String subscriptionId System.Guid [] processedEventIds System.Security.Principal.IPrincipal user Fields ProcessedEventIds Declaration public readonly Guid[] ProcessedEventIds Field Value Type System.Guid [] SubscriptionId Declaration public readonly string SubscriptionId Field Value Type System.String Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides ClientMessage.ReadRequestMessage.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Index.ReverseComparer-1.html": {
    "href": "dotnet-api/code/EventStore.Core.Index.ReverseComparer-1.html",
    "title": "Class ReverseComparer<T> | Event Store",
    "keywords": "Class ReverseComparer<T> Inheritance System.Object ReverseComparer<T> Implements System.Collections.Generic.IComparer <T> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Index Assembly : EventStore.Core.dll Syntax public class ReverseComparer<T> : IComparer<T> where T : IComparable Type Parameters Name Description T Methods Compare(T, T) Declaration public int Compare(T x, T y) Parameters Type Name T x T y Returns Type Description System.Int32 Implements System.Collections.Generic.IComparer<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Helpers.StreamVersionConverter.html": {
    "href": "dotnet-api/code/EventStore.Core.Helpers.StreamVersionConverter.html",
    "title": "Class StreamVersionConverter | Event Store",
    "keywords": "Class StreamVersionConverter Inheritance System.Object StreamVersionConverter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Helpers Assembly : EventStore.Core.dll Syntax public static class StreamVersionConverter Methods Downgrade(Int64) Declaration public static int Downgrade(long expectedVersion) Parameters Type Name System.Int64 expectedVersion Returns Type Description System.Int32 Upgrade(Int64) Declaration public static long Upgrade(long expectedVersion) Parameters Type Name System.Int64 expectedVersion Returns Type Description System.Int64"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Http.IHttpController.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Http.IHttpController.html",
    "title": "Interface IHttpController | Event Store",
    "keywords": "Interface IHttpController Namespace : EventStore.Core.Services.Transport.Http Assembly : EventStore.Core.dll Syntax public interface IHttpController Methods Subscribe(IHttpService) Declaration void Subscribe(IHttpService service) Parameters Type Name IHttpService service Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Http.HttpService.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Http.HttpService.html",
    "title": "Class HttpService | Event Store",
    "keywords": "Class HttpService Inheritance System.Object HttpService Implements IHttpService IHandle < SystemMessage.SystemInit > IHandle < SystemMessage.BecomeShuttingDown > IHandle < HttpMessage.PurgeTimedOutRequests > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Transport.Http Assembly : EventStore.Core.dll Syntax public class HttpService : IHttpService, IHandle<SystemMessage.SystemInit>, IHandle<SystemMessage.BecomeShuttingDown>, IHandle<HttpMessage.PurgeTimedOutRequests> Constructors HttpService(ServiceAccessibility, IPublisher, IUriRouter, MultiQueuedHandler, Boolean, IPAddress, Int32, String[]) Declaration public HttpService(ServiceAccessibility accessibility, IPublisher inputBus, IUriRouter uriRouter, MultiQueuedHandler multiQueuedHandler, bool logHttpRequests, IPAddress advertiseAsAddress, int advertiseAsPort, params string[] prefixes) Parameters Type Name ServiceAccessibility accessibility IPublisher inputBus IUriRouter uriRouter MultiQueuedHandler multiQueuedHandler System.Boolean logHttpRequests System.Net.IPAddress advertiseAsAddress System.Int32 advertiseAsPort System.String [] prefixes Properties Accessibility Declaration public ServiceAccessibility Accessibility { get; } Property Value Type ServiceAccessibility IsListening Declaration public bool IsListening { get; } Property Value Type System.Boolean ListenPrefixes Declaration public IEnumerable<string> ListenPrefixes { get; } Property Value Type System.Collections.Generic.IEnumerable < System.String > Methods CreateAndSubscribePipeline(IBus, HttpAuthenticationProvider[]) Declaration public static void CreateAndSubscribePipeline(IBus bus, HttpAuthenticationProvider[] httpAuthenticationProviders) Parameters Type Name IBus bus HttpAuthenticationProvider [] httpAuthenticationProviders GetAllUriMatches(Uri) Declaration public List<UriToActionMatch> GetAllUriMatches(Uri uri) Parameters Type Name System.Uri uri Returns Type Description System.Collections.Generic.List < UriToActionMatch > Handle(HttpMessage.PurgeTimedOutRequests) Declaration public void Handle(HttpMessage.PurgeTimedOutRequests message) Parameters Type Name HttpMessage.PurgeTimedOutRequests message Handle(SystemMessage.BecomeShuttingDown) Declaration public void Handle(SystemMessage.BecomeShuttingDown message) Parameters Type Name SystemMessage.BecomeShuttingDown message Handle(SystemMessage.SystemInit) Declaration public void Handle(SystemMessage.SystemInit message) Parameters Type Name SystemMessage.SystemInit message RegisterAction(ControllerAction, Action<HttpEntityManager, UriTemplateMatch>) Declaration public void RegisterAction(ControllerAction action, Action<HttpEntityManager, UriTemplateMatch> handler) Parameters Type Name ControllerAction action System.Action < HttpEntityManager , System.UriTemplateMatch > handler RegisterCustomAction(ControllerAction, Func<HttpEntityManager, UriTemplateMatch, RequestParams>) Declaration public void RegisterCustomAction(ControllerAction action, Func<HttpEntityManager, UriTemplateMatch, RequestParams> handler) Parameters Type Name ControllerAction action System.Func < HttpEntityManager , System.UriTemplateMatch , RequestParams > handler SetupController(IHttpController) Declaration public void SetupController(IHttpController controller) Parameters Type Name IHttpController controller Shutdown() Declaration public void Shutdown() Implements IHttpService IHandle<T> IHandle<T> IHandle<T> Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Http.HttpResponseFormatterArgs.html",
    "title": "Class HttpResponseFormatterArgs | Event Store",
    "keywords": "Class HttpResponseFormatterArgs Inheritance System.Object HttpResponseFormatterArgs Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Transport.Http Assembly : EventStore.Core.dll Syntax public class HttpResponseFormatterArgs Constructors HttpResponseFormatterArgs(Uri, Uri, ICodec) Declaration public HttpResponseFormatterArgs(Uri responseUrl, Uri requestedUrl, ICodec responseCodec) Parameters Type Name System.Uri responseUrl System.Uri requestedUrl ICodec responseCodec Fields RequestedUrl Declaration public readonly Uri RequestedUrl Field Value Type System.Uri ResponseCodec Declaration public readonly ICodec ResponseCodec Field Value Type ICodec ResponseUrl Declaration public readonly Uri ResponseUrl Field Value Type System.Uri Operators Implicit(HttpEntityManager to HttpResponseFormatterArgs) Declaration public static implicit operator HttpResponseFormatterArgs(HttpEntityManager entity) Parameters Type Name HttpEntityManager entity Returns Type Description HttpResponseFormatterArgs Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Http.HttpResponseConfiguratorArgs.html",
    "title": "Class HttpResponseConfiguratorArgs | Event Store",
    "keywords": "Class HttpResponseConfiguratorArgs Inheritance System.Object HttpResponseConfiguratorArgs Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Transport.Http Assembly : EventStore.Core.dll Syntax public class HttpResponseConfiguratorArgs Constructors HttpResponseConfiguratorArgs(Uri, Uri, ICodec) Declaration public HttpResponseConfiguratorArgs(Uri responseUrl, Uri requestedUrl, ICodec responseCodec) Parameters Type Name System.Uri responseUrl System.Uri requestedUrl ICodec responseCodec Fields RequestedUrl Declaration public readonly Uri RequestedUrl Field Value Type System.Uri ResponseCodec Declaration public readonly ICodec ResponseCodec Field Value Type ICodec ResponseUrl Declaration public readonly Uri ResponseUrl Field Value Type System.Uri Operators Implicit(HttpEntityManager to HttpResponseConfiguratorArgs) Declaration public static implicit operator HttpResponseConfiguratorArgs(HttpEntityManager entity) Parameters Type Name HttpEntityManager entity Returns Type Description HttpResponseConfiguratorArgs Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Http.HttpMessagePipe.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Http.HttpMessagePipe.html",
    "title": "Class HttpMessagePipe | Event Store",
    "keywords": "Class HttpMessagePipe Inheritance System.Object HttpMessagePipe Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Transport.Http Assembly : EventStore.Core.dll Syntax public class HttpMessagePipe Methods Push(Message, IPEndPoint) Declaration public void Push(Message message, IPEndPoint endPoint) Parameters Type Name Message message System.Net.IPEndPoint endPoint RegisterSender<T>(ISender<T>) Declaration public void RegisterSender<T>(ISender<T> sender) where T : Message Parameters Type Name ISender <T> sender Type Parameters Name Description T Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Transport.Http.Format.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Transport.Http.Format.html",
    "title": "Class Format | Event Store",
    "keywords": "Class Format Inheritance System.Object Format Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.Transport.Http Assembly : EventStore.Core.dll Syntax public static class Format Methods DeleteStreamCompleted(HttpResponseFormatterArgs, Message) Declaration public static string DeleteStreamCompleted(HttpResponseFormatterArgs entity, Message message) Parameters Type Name HttpResponseFormatterArgs entity Message message Returns Type Description System.String EventEntry(HttpResponseFormatterArgs, Message, EmbedLevel) Declaration public static object EventEntry(HttpResponseFormatterArgs entity, Message message, EmbedLevel embed) Parameters Type Name HttpResponseFormatterArgs entity Message message EmbedLevel embed Returns Type Description System.Object GetDescriptionDocument(HttpResponseFormatterArgs, String, String[]) Declaration public static string GetDescriptionDocument(HttpResponseFormatterArgs entity, string streamId, string[] persistentSubscriptionStats) Parameters Type Name HttpResponseFormatterArgs entity System.String streamId System.String [] persistentSubscriptionStats Returns Type Description System.String GetFreshStatsCompleted(HttpResponseFormatterArgs, Message) Declaration public static string GetFreshStatsCompleted(HttpResponseFormatterArgs entity, Message message) Parameters Type Name HttpResponseFormatterArgs entity Message message Returns Type Description System.String GetFreshTcpConnectionStatsCompleted(HttpResponseFormatterArgs, Message) Declaration public static string GetFreshTcpConnectionStatsCompleted(HttpResponseFormatterArgs entity, Message message) Parameters Type Name HttpResponseFormatterArgs entity Message message Returns Type Description System.String GetReplicationStatsCompleted(HttpResponseFormatterArgs, Message) Declaration public static string GetReplicationStatsCompleted(HttpResponseFormatterArgs entity, Message message) Parameters Type Name HttpResponseFormatterArgs entity Message message Returns Type Description System.String GetStreamEventsBackward(HttpResponseFormatterArgs, Message, EmbedLevel, Boolean) Declaration public static string GetStreamEventsBackward(HttpResponseFormatterArgs entity, Message message, EmbedLevel embed, bool headOfStream) Parameters Type Name HttpResponseFormatterArgs entity Message message EmbedLevel embed System.Boolean headOfStream Returns Type Description System.String GetStreamEventsForward(HttpResponseFormatterArgs, Message, EmbedLevel) Declaration public static string GetStreamEventsForward(HttpResponseFormatterArgs entity, Message message, EmbedLevel embed) Parameters Type Name HttpResponseFormatterArgs entity Message message EmbedLevel embed Returns Type Description System.String ReadAllEventsBackwardCompleted(HttpResponseFormatterArgs, Message, EmbedLevel) Declaration public static string ReadAllEventsBackwardCompleted(HttpResponseFormatterArgs entity, Message message, EmbedLevel embed) Parameters Type Name HttpResponseFormatterArgs entity Message message EmbedLevel embed Returns Type Description System.String ReadAllEventsForwardCompleted(HttpResponseFormatterArgs, Message, EmbedLevel) Declaration public static string ReadAllEventsForwardCompleted(HttpResponseFormatterArgs entity, Message message, EmbedLevel embed) Parameters Type Name HttpResponseFormatterArgs entity Message message EmbedLevel embed Returns Type Description System.String ReadNextNPersistentMessagesCompleted(HttpResponseFormatterArgs, Message, String, String, Int32, EmbedLevel) Declaration public static string ReadNextNPersistentMessagesCompleted(HttpResponseFormatterArgs entity, Message message, string streamId, string groupName, int count, EmbedLevel embed) Parameters Type Name HttpResponseFormatterArgs entity Message message System.String streamId System.String groupName System.Int32 count EmbedLevel embed Returns Type Description System.String SendGossip(HttpResponseFormatterArgs, Message) Declaration public static string SendGossip(HttpResponseFormatterArgs entity, Message message) Parameters Type Name HttpResponseFormatterArgs entity Message message Returns Type Description System.String TextMessage(HttpResponseFormatterArgs, Message) Declaration public static string TextMessage(HttpResponseFormatterArgs entity, Message message) Parameters Type Name HttpResponseFormatterArgs entity Message message Returns Type Description System.String WriteEventsCompleted(HttpResponseFormatterArgs, Message) Declaration public static string WriteEventsCompleted(HttpResponseFormatterArgs entity, Message message) Parameters Type Name HttpResponseFormatterArgs entity Message message Returns Type Description System.String"
  },
  "dotnet-api/code/EventStore.Core.Services.SystemMetadata.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.SystemMetadata.html",
    "title": "Class SystemMetadata | Event Store",
    "keywords": "Class SystemMetadata Inheritance System.Object SystemMetadata Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services Assembly : EventStore.Core.dll Syntax public static class SystemMetadata Fields Acl Declaration public const string Acl = \"$acl\" Field Value Type System.String AclDelete Declaration public const string AclDelete = \"$d\" Field Value Type System.String AclMetaRead Declaration public const string AclMetaRead = \"$mr\" Field Value Type System.String AclMetaWrite Declaration public const string AclMetaWrite = \"$mw\" Field Value Type System.String AclRead Declaration public const string AclRead = \"$r\" Field Value Type System.String AclWrite Declaration public const string AclWrite = \"$w\" Field Value Type System.String CacheControl Declaration public const string CacheControl = \"$cacheControl\" Field Value Type System.String MaxAge Declaration public const string MaxAge = \"$maxAge\" Field Value Type System.String MaxCount Declaration public const string MaxCount = \"$maxCount\" Field Value Type System.String SystemStreamAcl Declaration public const string SystemStreamAcl = \"$systemStreamAcl\" Field Value Type System.String TempStream Declaration public const string TempStream = \"$tmp\" Field Value Type System.String TruncateBefore Declaration public const string TruncateBefore = \"$tb\" Field Value Type System.String UserStreamAcl Declaration public const string UserStreamAcl = \"$userStreamAcl\" Field Value Type System.String"
  },
  "dotnet-api/code/EventStore.Core.Services.SystemHeaders.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.SystemHeaders.html",
    "title": "Class SystemHeaders | Event Store",
    "keywords": "Class SystemHeaders Inheritance System.Object SystemHeaders Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services Assembly : EventStore.Core.dll Syntax public static class SystemHeaders Fields CurrentVersion Declaration public const string CurrentVersion = \"ES-CurrentVersion\" Field Value Type System.String EventId Declaration public const string EventId = \"ES-EventId\" Field Value Type System.String EventType Declaration public const string EventType = \"ES-EventType\" Field Value Type System.String ExpectedVersion Declaration public const string ExpectedVersion = \"ES-ExpectedVersion\" Field Value Type System.String HardDelete Declaration public const string HardDelete = \"ES-HardDelete\" Field Value Type System.String LongPoll Declaration public const string LongPoll = \"ES-LongPoll\" Field Value Type System.String ProjectionPosition Declaration public const string ProjectionPosition = \"ES-Position\" Field Value Type System.String RequireMaster Declaration public const string RequireMaster = \"ES-RequireMaster\" Field Value Type System.String ResolveLinkTos Declaration public const string ResolveLinkTos = \"ES-ResolveLinkTos\" Field Value Type System.String TrustedAuth Declaration public const string TrustedAuth = \"ES-TrustedAuth\" Field Value Type System.String"
  },
  "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionAckEvents.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.PersistentSubscriptionAckEvents.html",
    "title": "Class TcpClientMessageDto.PersistentSubscriptionAckEvents | Event Store",
    "keywords": "Class TcpClientMessageDto.PersistentSubscriptionAckEvents Inheritance System.Object TcpClientMessageDto.PersistentSubscriptionAckEvents Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax [Serializable] [ProtoContract(Name = \"PersistentSubscriptionAckEvents\")] public class PersistentSubscriptionAckEvents Constructors PersistentSubscriptionAckEvents(String, Byte[][]) Declaration public PersistentSubscriptionAckEvents(string subscriptionId, byte[][] processedEventIds) Parameters Type Name System.String subscriptionId System.Byte [][] processedEventIds Fields ProcessedEventIds Declaration [ProtoMember(2, Name = \"processed_event_ids\", DataFormat = DataFormat.Default)] public readonly byte[][] ProcessedEventIds Field Value Type System.Byte [][] SubscriptionId Declaration [ProtoMember(1, IsRequired = true, Name = \"subscription_id\", DataFormat = DataFormat.Default)] public readonly string SubscriptionId Field Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.OperationResult.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.OperationResult.html",
    "title": "Enum TcpClientMessageDto.OperationResult | Event Store",
    "keywords": "Enum TcpClientMessageDto.OperationResult Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax [ProtoContract(Name = \"OperationResult\")] public enum OperationResult Fields Name Description AccessDenied CommitTimeout ForwardTimeout InvalidTransaction PrepareTimeout StreamDeleted Success WrongExpectedVersion Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<TcpClientMessageDto.OperationResult>() ProtobufExtensions.Serialize<TcpClientMessageDto.OperationResult>() ProtobufExtensions.SerializeToArray<TcpClientMessageDto.OperationResult>()"
  },
  "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.NotHandled.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.NotHandled.html",
    "title": "Class TcpClientMessageDto.NotHandled | Event Store",
    "keywords": "Class TcpClientMessageDto.NotHandled Inheritance System.Object TcpClientMessageDto.NotHandled Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax [Serializable] [ProtoContract(Name = \"NotHandled\")] public class NotHandled Constructors NotHandled(TcpClientMessageDto.NotHandled.NotHandledReason, Byte[]) Declaration public NotHandled(TcpClientMessageDto.NotHandled.NotHandledReason reason, byte[] additionalInfo) Parameters Type Name TcpClientMessageDto.NotHandled.NotHandledReason reason System.Byte [] additionalInfo Fields AdditionalInfo Declaration [ProtoMember(2, IsRequired = false, Name = \"additional_info\", DataFormat = DataFormat.Default)] public readonly byte[] AdditionalInfo Field Value Type System.Byte [] Reason Declaration [ProtoMember(1, IsRequired = true, Name = \"reason\", DataFormat = DataFormat.TwosComplement)] public readonly TcpClientMessageDto.NotHandled.NotHandledReason Reason Field Value Type TcpClientMessageDto.NotHandled.NotHandledReason Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.NotHandled.NotHandledReason.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.TcpClientMessageDto.NotHandled.NotHandledReason.html",
    "title": "Enum TcpClientMessageDto.NotHandled.NotHandledReason | Event Store",
    "keywords": "Enum TcpClientMessageDto.NotHandled.NotHandledReason Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax [ProtoContract(Name = \"NotHandledReason\")] public enum NotHandledReason Fields Name Description NotMaster NotReady TooBusy Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<TcpClientMessageDto.NotHandled.NotHandledReason>() ProtobufExtensions.Serialize<TcpClientMessageDto.NotHandled.NotHandledReason>() ProtobufExtensions.SerializeToArray<TcpClientMessageDto.NotHandled.NotHandledReason>()"
  },
  "dotnet-api/code/EventStore.Core.Messages.SystemMessage.BecomeClone.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.SystemMessage.BecomeClone.html",
    "title": "Class SystemMessage.BecomeClone | Event Store",
    "keywords": "Class SystemMessage.BecomeClone Inheritance System.Object Message SystemMessage.StateChangeMessage SystemMessage.ReplicaStateMessage SystemMessage.BecomeClone Inherited Members SystemMessage.ReplicaStateMessage.Master SystemMessage.StateChangeMessage.CorrelationId SystemMessage.StateChangeMessage.State Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class BecomeClone : SystemMessage.ReplicaStateMessage Constructors BecomeClone(Guid, VNodeInfo) Declaration public BecomeClone(Guid correlationId, VNodeInfo master) Parameters Type Name System.Guid correlationId VNodeInfo master Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides SystemMessage.ReplicaStateMessage.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.SystemMessage.BecomeCatchingUp.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.SystemMessage.BecomeCatchingUp.html",
    "title": "Class SystemMessage.BecomeCatchingUp | Event Store",
    "keywords": "Class SystemMessage.BecomeCatchingUp Inheritance System.Object Message SystemMessage.StateChangeMessage SystemMessage.ReplicaStateMessage SystemMessage.BecomeCatchingUp Inherited Members SystemMessage.ReplicaStateMessage.Master SystemMessage.StateChangeMessage.CorrelationId SystemMessage.StateChangeMessage.State Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class BecomeCatchingUp : SystemMessage.ReplicaStateMessage Constructors BecomeCatchingUp(Guid, VNodeInfo) Declaration public BecomeCatchingUp(Guid correlationId, VNodeInfo master) Parameters Type Name System.Guid correlationId VNodeInfo master Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides SystemMessage.ReplicaStateMessage.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Messages.SubscriptionMessage.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.SubscriptionMessage.html",
    "title": "Class SubscriptionMessage | Event Store",
    "keywords": "Class SubscriptionMessage Inheritance System.Object SubscriptionMessage Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public static class SubscriptionMessage"
  },
  "dotnet-api/code/EventStore.Core.Messages.SubscriptionMessage.PollStream.html": {
    "href": "dotnet-api/code/EventStore.Core.Messages.SubscriptionMessage.PollStream.html",
    "title": "Class SubscriptionMessage.PollStream | Event Store",
    "keywords": "Class SubscriptionMessage.PollStream Inheritance System.Object Message SubscriptionMessage.PollStream Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Messages Assembly : EventStore.Core.dll Syntax public class PollStream : Message Constructors PollStream(String, Int64, Nullable<Int64>, DateTime, Message) Declaration public PollStream(string streamId, long lastCommitPosition, long? lastEventNumber, DateTime expireAt, Message originalRequest) Parameters Type Name System.String streamId System.Int64 lastCommitPosition System.Nullable < System.Int64 > lastEventNumber System.DateTime expireAt Message originalRequest Fields ExpireAt Declaration public readonly DateTime ExpireAt Field Value Type System.DateTime LastCommitPosition Declaration public readonly long LastCommitPosition Field Value Type System.Int64 LastEventNumber Declaration public readonly long? LastEventNumber Field Value Type System.Nullable < System.Int64 > OriginalRequest Declaration public readonly Message OriginalRequest Field Value Type Message StreamId Declaration public readonly string StreamId Field Value Type System.String Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.ProjectionCoreWorkersNode.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.ProjectionCoreWorkersNode.html",
    "title": "Class ProjectionCoreWorkersNode | Event Store",
    "keywords": "Class ProjectionCoreWorkersNode Inheritance System.Object ProjectionCoreWorkersNode Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core Assembly : EventStore.Projections.Core.dll Syntax public static class ProjectionCoreWorkersNode Methods CreateCoreWorkers(StandardComponents, ProjectionsStandardComponents) Declaration public static Dictionary<Guid, IQueuedHandler> CreateCoreWorkers(StandardComponents standardComponents, ProjectionsStandardComponents projectionsStandardComponents) Parameters Type Name StandardComponents standardComponents ProjectionsStandardComponents projectionsStandardComponents Returns Type Description System.Collections.Generic.Dictionary < System.Guid , IQueuedHandler > CreateTimeoutSchedulers(Int32) Declaration public static TimeoutScheduler[] CreateTimeoutSchedulers(int count) Parameters Type Name System.Int32 count Returns Type Description TimeoutScheduler []"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messaging.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messaging.html",
    "title": "Namespace EventStore.Projections.Core.Messaging | Event Store",
    "keywords": "Namespace EventStore.Projections.Core.Messaging Classes UnwrapEnvelopeHandler UnwrapEnvelopeMessage"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messaging.UnwrapEnvelopeMessage.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messaging.UnwrapEnvelopeMessage.html",
    "title": "Class UnwrapEnvelopeMessage | Event Store",
    "keywords": "Class UnwrapEnvelopeMessage Inheritance System.Object Message UnwrapEnvelopeMessage Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messaging Assembly : EventStore.Projections.Core.dll Syntax public class UnwrapEnvelopeMessage : Message Constructors UnwrapEnvelopeMessage(Action) Declaration public UnwrapEnvelopeMessage(Action action) Parameters Type Name System.Action action Properties Action Declaration public Action Action { get; } Property Value Type System.Action MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.Post.html",
    "title": "Class ProjectionManagementMessage.Command.Post | Event Store",
    "keywords": "Class ProjectionManagementMessage.Command.Post Inheritance System.Object Message ProjectionManagementMessage.Command.ControlMessage ProjectionManagementMessage.Command.Post Inherited Members ProjectionManagementMessage.Command.ControlMessage.RunAs ProjectionManagementMessage.Command.ControlMessage.Envelope Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class Post : ProjectionManagementMessage.Command.ControlMessage Constructors Post(IEnvelope, ProjectionManagementMessage.RunAs, String, Boolean) Declaration public Post(IEnvelope envelope, ProjectionManagementMessage.RunAs runAs, string query, bool enabled) Parameters Type Name IEnvelope envelope ProjectionManagementMessage.RunAs runAs System.String query System.Boolean enabled Post(IEnvelope, ProjectionMode, String, ProjectionManagementMessage.RunAs, String, String, Boolean, Boolean, Boolean, Boolean, Boolean) Declaration public Post(IEnvelope envelope, ProjectionMode mode, string name, ProjectionManagementMessage.RunAs runAs, string handlerType, string query, bool enabled, bool checkpointsEnabled, bool emitEnabled, bool trackEmittedStreams, bool enableRunAs = false) Parameters Type Name IEnvelope envelope ProjectionMode mode System.String name ProjectionManagementMessage.RunAs runAs System.String handlerType System.String query System.Boolean enabled System.Boolean checkpointsEnabled System.Boolean emitEnabled System.Boolean trackEmittedStreams System.Boolean enableRunAs Post(IEnvelope, ProjectionMode, String, ProjectionManagementMessage.RunAs, Type, String, Boolean, Boolean, Boolean, Boolean, Boolean) Declaration public Post(IEnvelope envelope, ProjectionMode mode, string name, ProjectionManagementMessage.RunAs runAs, Type handlerType, string query, bool enabled, bool checkpointsEnabled, bool emitEnabled, bool trackEmittedStreams, bool enableRunAs = false) Parameters Type Name IEnvelope envelope ProjectionMode mode System.String name ProjectionManagementMessage.RunAs runAs System.Type handlerType System.String query System.Boolean enabled System.Boolean checkpointsEnabled System.Boolean emitEnabled System.Boolean trackEmittedStreams System.Boolean enableRunAs Properties CheckpointsEnabled Declaration public bool CheckpointsEnabled { get; } Property Value Type System.Boolean EmitEnabled Declaration public bool EmitEnabled { get; } Property Value Type System.Boolean Enabled Declaration public bool Enabled { get; } Property Value Type System.Boolean EnableRunAs Declaration public bool EnableRunAs { get; } Property Value Type System.Boolean HandlerType Declaration public string HandlerType { get; } Property Value Type System.String Mode Declaration public ProjectionMode Mode { get; } Property Value Type ProjectionMode MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides ProjectionManagementMessage.Command.ControlMessage.MsgTypeId Name Declaration public string Name { get; } Property Value Type System.String Query Declaration public string Query { get; } Property Value Type System.String TrackEmittedStreams Declaration public bool TrackEmittedStreams { get; } Property Value Type System.Boolean Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetStatistics.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetStatistics.html",
    "title": "Class ProjectionManagementMessage.Command.GetStatistics | Event Store",
    "keywords": "Class ProjectionManagementMessage.Command.GetStatistics Inheritance System.Object Message ProjectionManagementMessage.Command.GetStatistics Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class GetStatistics : Message Constructors GetStatistics(IEnvelope, Nullable<ProjectionMode>, String, Boolean) Declaration public GetStatistics(IEnvelope envelope, ProjectionMode? mode, string name, bool includeDeleted) Parameters Type Name IEnvelope envelope System.Nullable < ProjectionMode > mode System.String name System.Boolean includeDeleted Properties Envelope Declaration public IEnvelope Envelope { get; } Property Value Type IEnvelope IncludeDeleted Declaration public bool IncludeDeleted { get; } Property Value Type System.Boolean Mode Declaration public ProjectionMode? Mode { get; } Property Value Type System.Nullable < ProjectionMode > MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Name Declaration public string Name { get; } Property Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetState.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetState.html",
    "title": "Class ProjectionManagementMessage.Command.GetState | Event Store",
    "keywords": "Class ProjectionManagementMessage.Command.GetState Inheritance System.Object Message ProjectionManagementMessage.Command.GetState Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class GetState : Message Constructors GetState(IEnvelope, String, String) Declaration public GetState(IEnvelope envelope, string name, string partition) Parameters Type Name IEnvelope envelope System.String name System.String partition Properties Envelope Declaration public IEnvelope Envelope { get; } Property Value Type IEnvelope MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Name Declaration public string Name { get; } Property Value Type System.String Partition Declaration public string Partition { get; } Property Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetResult.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetResult.html",
    "title": "Class ProjectionManagementMessage.Command.GetResult | Event Store",
    "keywords": "Class ProjectionManagementMessage.Command.GetResult Inheritance System.Object Message ProjectionManagementMessage.Command.GetResult Inherited Members Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class GetResult : Message Constructors GetResult(IEnvelope, String, String) Declaration public GetResult(IEnvelope envelope, string name, string partition) Parameters Type Name IEnvelope envelope System.String name System.String partition Properties Envelope Declaration public IEnvelope Envelope { get; } Property Value Type IEnvelope MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides Message.MsgTypeId Name Declaration public string Name { get; } Property Value Type System.String Partition Declaration public string Partition { get; } Property Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetQuery.html": {
    "href": "dotnet-api/code/EventStore.Projections.Core.Messages.ProjectionManagementMessage.Command.GetQuery.html",
    "title": "Class ProjectionManagementMessage.Command.GetQuery | Event Store",
    "keywords": "Class ProjectionManagementMessage.Command.GetQuery Inheritance System.Object Message ProjectionManagementMessage.Command.ControlMessage ProjectionManagementMessage.Command.GetQuery Inherited Members ProjectionManagementMessage.Command.ControlMessage.RunAs ProjectionManagementMessage.Command.ControlMessage.Envelope Message.NextMsgId System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Projections.Core.Messages Assembly : EventStore.Projections.Core.dll Syntax public class GetQuery : ProjectionManagementMessage.Command.ControlMessage Constructors GetQuery(IEnvelope, String, ProjectionManagementMessage.RunAs) Declaration public GetQuery(IEnvelope envelope, string name, ProjectionManagementMessage.RunAs runAs) Parameters Type Name IEnvelope envelope System.String name ProjectionManagementMessage.RunAs runAs Properties MsgTypeId Declaration public override int MsgTypeId { get; } Property Value Type System.Int32 Overrides ProjectionManagementMessage.Command.ControlMessage.MsgTypeId Name Declaration public string Name { get; } Property Value Type System.String Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Storage.ReaderIndex.IReadIndex.html",
    "title": "Interface IReadIndex | Event Store",
    "keywords": "Interface IReadIndex Namespace : EventStore.Core.Services.Storage.ReaderIndex Assembly : EventStore.Core.dll Syntax public interface IReadIndex Properties IndexWriter Declaration IIndexWriter IndexWriter { get; } Property Value Type IIndexWriter LastCommitPosition Declaration long LastCommitPosition { get; } Property Value Type System.Int64 LastReplicatedPosition Declaration long LastReplicatedPosition { get; } Property Value Type System.Int64 Methods CheckStreamAccess(String, StreamAccessType, IPrincipal) Declaration StreamAccess CheckStreamAccess(string streamId, StreamAccessType streamAccessType, IPrincipal user) Parameters Type Name System.String streamId StreamAccessType streamAccessType System.Security.Principal.IPrincipal user Returns Type Description StreamAccess Close() Declaration void Close() Dispose() Declaration void Dispose() GetEventStreamIdByTransactionId(Int64) Declaration string GetEventStreamIdByTransactionId(long transactionId) Parameters Type Name System.Int64 transactionId Returns Type Description System.String GetStatistics() Declaration ReadIndexStats GetStatistics() Returns Type Description ReadIndexStats GetStreamLastEventNumber(String) Declaration long GetStreamLastEventNumber(string streamId) Parameters Type Name System.String streamId Returns Type Description System.Int64 GetStreamMetadata(String) Declaration StreamMetadata GetStreamMetadata(string streamId) Parameters Type Name System.String streamId Returns Type Description StreamMetadata Init(Int64) Declaration void Init(long buildToPosition) Parameters Type Name System.Int64 buildToPosition IsStreamDeleted(String) Declaration bool IsStreamDeleted(string streamId) Parameters Type Name System.String streamId Returns Type Description System.Boolean ReadAllEventsBackward(TFPos, Int32) Returns event records in the reverse sequence they were committed into TF. Positions is specified as post-positions (pointer after the end of record). Declaration IndexReadAllResult ReadAllEventsBackward(TFPos pos, int maxCount) Parameters Type Name TFPos pos System.Int32 maxCount Returns Type Description IndexReadAllResult ReadAllEventsForward(TFPos, Int32) Returns event records in the sequence they were committed into TF. Positions is specified as pre-positions (pointer at the beginning of the record). Declaration IndexReadAllResult ReadAllEventsForward(TFPos pos, int maxCount) Parameters Type Name TFPos pos System.Int32 maxCount Returns Type Description IndexReadAllResult ReadEvent(String, Int64) Declaration IndexReadEventResult ReadEvent(string streamId, long eventNumber) Parameters Type Name System.String streamId System.Int64 eventNumber Returns Type Description IndexReadEventResult ReadStreamEventsBackward(String, Int64, Int32) Declaration IndexReadStreamResult ReadStreamEventsBackward(string streamId, long fromEventNumber, int maxCount) Parameters Type Name System.String streamId System.Int64 fromEventNumber System.Int32 maxCount Returns Type Description IndexReadStreamResult ReadStreamEventsForward(String, Int64, Int32) Declaration IndexReadStreamResult ReadStreamEventsForward(string streamId, long fromEventNumber, int maxCount) Parameters Type Name System.String streamId System.Int64 fromEventNumber System.Int32 maxCount Returns Type Description IndexReadStreamResult Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.Storage.ReaderIndex.IIndexWriter.html",
    "title": "Interface IIndexWriter | Event Store",
    "keywords": "Interface IIndexWriter Namespace : EventStore.Core.Services.Storage.ReaderIndex Assembly : EventStore.Core.dll Syntax public interface IIndexWriter Properties CachedTransInfo Declaration long CachedTransInfo { get; } Property Value Type System.Int64 NotCachedTransInfo Declaration long NotCachedTransInfo { get; } Property Value Type System.Int64 Methods CheckCommit(String, Int64, IEnumerable<Guid>) Declaration CommitCheckResult CheckCommit(string streamId, long expectedVersion, IEnumerable<Guid> eventIds) Parameters Type Name System.String streamId System.Int64 expectedVersion System.Collections.Generic.IEnumerable < System.Guid > eventIds Returns Type Description CommitCheckResult CheckCommitStartingAt(Int64, Int64) Declaration CommitCheckResult CheckCommitStartingAt(long transactionPosition, long commitPosition) Parameters Type Name System.Int64 transactionPosition System.Int64 commitPosition Returns Type Description CommitCheckResult GetStreamLastEventNumber(String) Declaration long GetStreamLastEventNumber(string streamId) Parameters Type Name System.String streamId Returns Type Description System.Int64 GetStreamMetadata(String) Declaration StreamMetadata GetStreamMetadata(string streamId) Parameters Type Name System.String streamId Returns Type Description StreamMetadata GetStreamRawMeta(String) Declaration RawMetaInfo GetStreamRawMeta(string streamId) Parameters Type Name System.String streamId Returns Type Description RawMetaInfo GetTransactionInfo(Int64, Int64) Declaration TransactionInfo GetTransactionInfo(long writerCheckpoint, long transactionId) Parameters Type Name System.Int64 writerCheckpoint System.Int64 transactionId Returns Type Description TransactionInfo IsSoftDeleted(String) Declaration bool IsSoftDeleted(string streamId) Parameters Type Name System.String streamId Returns Type Description System.Boolean PreCommit(CommitLogRecord) Declaration void PreCommit(CommitLogRecord commit) Parameters Type Name CommitLogRecord commit PreCommit(IList<PrepareLogRecord>) Declaration void PreCommit(IList<PrepareLogRecord> commitedPrepares) Parameters Type Name System.Collections.Generic.IList < PrepareLogRecord > commitedPrepares PurgeNotProcessedCommitsTill(Int64) Declaration void PurgeNotProcessedCommitsTill(long checkpoint) Parameters Type Name System.Int64 checkpoint PurgeNotProcessedTransactions(Int64) Declaration void PurgeNotProcessedTransactions(long checkpoint) Parameters Type Name System.Int64 checkpoint Reset() Declaration void Reset() UpdateTransactionInfo(Int64, Int64, TransactionInfo) Declaration void UpdateTransactionInfo(long transactionId, long logPosition, TransactionInfo transactionInfo) Parameters Type Name System.Int64 transactionId System.Int64 logPosition TransactionInfo transactionInfo Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.html",
    "title": "Namespace EventStore.Core.Services.PersistentSubscription.ConsumerStrategy | Event Store",
    "keywords": "Namespace EventStore.Core.Services.PersistentSubscription.ConsumerStrategy Classes PersistentSubscriptionConsumerStrategyRegistry Interfaces IPersistentSubscriptionConsumerStrategy IPersistentSubscriptionConsumerStrategyFactory Enums ConsumerPushResult"
  },
  "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.PersistentSubscriptionConsumerStrategyRegistry.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.PersistentSubscriptionConsumerStrategyRegistry.html",
    "title": "Class PersistentSubscriptionConsumerStrategyRegistry | Event Store",
    "keywords": "Class PersistentSubscriptionConsumerStrategyRegistry Inheritance System.Object PersistentSubscriptionConsumerStrategyRegistry Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : EventStore.Core.Services.PersistentSubscription.ConsumerStrategy Assembly : EventStore.Core.dll Syntax public class PersistentSubscriptionConsumerStrategyRegistry Constructors PersistentSubscriptionConsumerStrategyRegistry(IPublisher, ISubscriber, IPersistentSubscriptionConsumerStrategyFactory[]) Declaration public PersistentSubscriptionConsumerStrategyRegistry(IPublisher mainQueue, ISubscriber mainBus, IPersistentSubscriptionConsumerStrategyFactory[] additionalConsumerStrategies) Parameters Type Name IPublisher mainQueue ISubscriber mainBus IPersistentSubscriptionConsumerStrategyFactory [] additionalConsumerStrategies Methods GetInstance(String, String) Declaration public IPersistentSubscriptionConsumerStrategy GetInstance(string namedConsumerStrategy, string subscriptionId) Parameters Type Name System.String namedConsumerStrategy System.String subscriptionId Returns Type Description IPersistentSubscriptionConsumerStrategy ValidateStrategy(String) Declaration public bool ValidateStrategy(string name) Parameters Type Name System.String name Returns Type Description System.Boolean Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.IPersistentSubscriptionConsumerStrategyFactory.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.IPersistentSubscriptionConsumerStrategyFactory.html",
    "title": "Interface IPersistentSubscriptionConsumerStrategyFactory | Event Store",
    "keywords": "Interface IPersistentSubscriptionConsumerStrategyFactory Namespace : EventStore.Core.Services.PersistentSubscription.ConsumerStrategy Assembly : EventStore.Core.dll Syntax public interface IPersistentSubscriptionConsumerStrategyFactory Properties StrategyName Declaration string StrategyName { get; } Property Value Type System.String Methods Create(String, IPublisher, ISubscriber) Declaration IPersistentSubscriptionConsumerStrategy Create(string subscriptionId, IPublisher mainQueue, ISubscriber mainBus) Parameters Type Name System.String subscriptionId IPublisher mainQueue ISubscriber mainBus Returns Type Description IPersistentSubscriptionConsumerStrategy Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.IPersistentSubscriptionConsumerStrategy.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.IPersistentSubscriptionConsumerStrategy.html",
    "title": "Interface IPersistentSubscriptionConsumerStrategy | Event Store",
    "keywords": "Interface IPersistentSubscriptionConsumerStrategy Namespace : EventStore.Core.Services.PersistentSubscription.ConsumerStrategy Assembly : EventStore.Core.dll Syntax public interface IPersistentSubscriptionConsumerStrategy Properties Name Declaration string Name { get; } Property Value Type System.String Methods ClientAdded(PersistentSubscriptionClient) Declaration void ClientAdded(PersistentSubscriptionClient client) Parameters Type Name PersistentSubscriptionClient client ClientRemoved(PersistentSubscriptionClient) Declaration void ClientRemoved(PersistentSubscriptionClient client) Parameters Type Name PersistentSubscriptionClient client PushMessageToClient(ResolvedEvent, Int32) Declaration ConsumerPushResult PushMessageToClient(ResolvedEvent ev, int retryCount) Parameters Type Name ResolvedEvent ev System.Int32 retryCount Returns Type Description ConsumerPushResult Extension Methods Json.ToJsonBytes(Object) Json.ToJson(Object) Json.ToCanonicalJson(Object) ProtobufExtensions.Serialize<T>(T) ProtobufExtensions.SerializeToArray<T>(T)"
  },
  "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.ConsumerPushResult.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.ConsumerStrategy.ConsumerPushResult.html",
    "title": "Enum ConsumerPushResult | Event Store",
    "keywords": "Enum ConsumerPushResult Namespace : EventStore.Core.Services.PersistentSubscription.ConsumerStrategy Assembly : EventStore.Core.dll Syntax public enum ConsumerPushResult Fields Name Description NoMoreCapacity Sent Skipped Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<ConsumerPushResult>() ProtobufExtensions.Serialize<ConsumerPushResult>() ProtobufExtensions.SerializeToArray<ConsumerPushResult>()"
  },
  "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.BufferedStreamReaderState.html": {
    "href": "dotnet-api/code/EventStore.Core.Services.PersistentSubscription.BufferedStreamReaderState.html",
    "title": "Enum BufferedStreamReaderState | Event Store",
    "keywords": "Enum BufferedStreamReaderState Namespace : EventStore.Core.Services.PersistentSubscription Assembly : EventStore.Core.dll Syntax public enum BufferedStreamReaderState Fields Name Description CatchingUp Live Unknown Extension Methods Json.ToJsonBytes() Json.ToJson() Json.ToCanonicalJson() EnumExtensions.EnumValueName<BufferedStreamReaderState>() ProtobufExtensions.Serialize<BufferedStreamReaderState>() ProtobufExtensions.SerializeToArray<BufferedStreamReaderState>()"
  },
  "http-api/swagger/Streams/Page forward through events.html": {
    "href": "http-api/swagger/Streams/Page forward through events.html",
    "title": "Page forward through events | Event Store",
    "keywords": "Page forward through events Paginate forwards though stream events by a specified amount. Request GET /streams/{stream}/{event}/forward/{count}[?embed] Parameters Name Type Value Notes *stream string The stream ID *event string The event ID *count integer How many events to skip forwards in the request. embed string application/json application/json Responses Status Code Description Samples one two 200 OK one two 404 Not found"
  },
  "http-api/swagger/Streams/Read stream metadata.html": {
    "href": "http-api/swagger/Streams/Read stream metadata.html",
    "title": "Read stream metadata | Event Store",
    "keywords": "Read stream metadata Returns metadata of a stream, typically information associated with an event that is not part of the event. Request GET /streams/{stream}/metadata[?embed] Parameters Name Type Value Notes *stream string The stream ID embed string application/json application/json Responses Status Code Description Samples one two 200 OK"
  },
  "http-api/swagger/Streams/Update stream metadata.html": {
    "href": "http-api/swagger/Streams/Update stream metadata.html",
    "title": "Update stream metadata | Event Store",
    "keywords": "Update stream metadata Update the metadata of a stream. Request POST /streams/{stream}/metadata Parameters Name Type Value Notes *stream string The name of the stream streamMetadataItem Metadata object application/json application/json Responses Status Code Description Samples one two 201 New stream created one two 400 Bad request"
  },
  "http-api/swagger/Streams/Get all events.html": {
    "href": "http-api/swagger/Streams/Get all events.html",
    "title": "Get all events | Event Store",
    "keywords": "Get all events Returns all events from all streams, you must provide user details. Request GET /streams/$all[?embed] Parameters Name Type Value Notes embed string application/json application/json Responses Status Code Description Samples one two 200 OK one two 404 Not found"
  },
  "http-api/swagger/Subscriptions/Get all subscriptions.html": {
    "href": "http-api/swagger/Subscriptions/Get all subscriptions.html",
    "title": "Get all subscriptions | Event Store",
    "keywords": "Get all subscriptions Returns all subscriptions from all streams. Request GET /subscriptions application/vnd.eventstore.competingatom+json application/vnd.eventstore.competingatom+json Responses Status Code Description Samples one two 200 New persistant subscription one two 400 bad input parameter"
  },
  "http-api/swagger/Subscriptions/Get subscription stream information.html": {
    "href": "http-api/swagger/Subscriptions/Get subscription stream information.html",
    "title": "Get subscription stream information | Event Store",
    "keywords": "Get subscription stream information Needed Request GET /subscriptions/{stream} Parameters Name Type Value Notes *stream string The stream name application/vnd.eventstore.competingatom+json application/vnd.eventstore.competingatom+json Responses Status Code Description Samples one two 200 OK"
  },
  "http-api/swagger/Subscriptions/Get subscription information.html": {
    "href": "http-api/swagger/Subscriptions/Get subscription information.html",
    "title": "Get subscription information | Event Store",
    "keywords": "Get subscription information Needed Request GET /subscriptions/{stream}/{subscription}/info Parameters Name Type Value Notes *stream string The stream the persistent subscription is on *subscription string The name of the subscription group application/vnd.eventstore.competingatom+json application/vnd.eventstore.competingatom+json Responses Status Code Description Samples one two 200 OK"
  },
  "http-api/swagger/Subscriptions/Get a stream.html": {
    "href": "http-api/swagger/Subscriptions/Get a stream.html",
    "title": "Get a stream | Event Store",
    "keywords": "Get a stream Read a specified stream by a persistent subscription. Request GET /subscriptions/{stream}/{subscription}[?embed] Parameters Name Type Value Notes *stream string The stream the persistent subscription is on *subscription string The name of the subscription group embed string Needed application/vnd.eventstore.competingatom+json application/vnd.eventstore.competingatom+json Responses Status Code Description Samples one two 200 OK"
  },
  "http-api/swagger/Subscriptions/Update subscription.html": {
    "href": "http-api/swagger/Subscriptions/Update subscription.html",
    "title": "Update subscription | Event Store",
    "keywords": "Update subscription You can edit the settings of an existing subscription while it is running. This will drop the current subscribers and will reset the subscription internally. Request POST /subscriptions/{stream}/{subscription} Parameters Name Type Value Notes *stream string The stream the persistent subscription is on *subscription string The name of the subscription group subscriptionItem Subscription to create application/vnd.eventstore.competingatom+json application/vnd.eventstore.competingatom+json Responses Status Code Description Samples one two 200 Subscription updated"
  },
  "http-api/swagger/Subscriptions/Create subscription.html": {
    "href": "http-api/swagger/Subscriptions/Create subscription.html",
    "title": "Create subscription | Event Store",
    "keywords": "Create subscription Before interacting with a subscription group, you need to create one. You will receive an error if you attempt to create a subscription group more than once. This requires admin permissions . Request PUT /subscriptions/{stream}/{subscription} Parameters Name Type Value Notes *stream string The stream the persistent subscription is on *subscription string The name of the subscription group subscriptionItem Subscription to create application/vnd.eventstore.competingatom+json application/vnd.eventstore.competingatom+json Responses Status Code Description Samples one two 200 Subscription created"
  },
  "http-api/swagger/Subscriptions/Delete subscription.html": {
    "href": "http-api/swagger/Subscriptions/Delete subscription.html",
    "title": "Delete subscription | Event Store",
    "keywords": "Delete subscription Deletes a subscription Request DELETE /subscriptions/{stream}/{subscription} Parameters Name Type Value Notes *stream string The stream the persistent subscription is on *subscription string The name of the subscription group application/vnd.eventstore.competingatom+json application/vnd.eventstore.competingatom+json Responses Status Code Description Samples one two 200 OK"
  },
  "http-api/swagger/Subscriptions/Get {n} subscription events.html": {
    "href": "http-api/swagger/Subscriptions/Get {n} subscription events.html",
    "title": "Get {n} subscription events | Event Store",
    "keywords": "Get {n} subscription events Reads a stream via a persistent subscription and return a specific number of events Request GET /subscriptions/{stream}/{subscription}/{count}[?embed] Parameters Name Type Value Notes *stream string The stream the persistent subscription is on *subscription string The name of the subscription group *count integer How many events to return for the request. embed string application/vnd.eventstore.competingatom+json application/vnd.eventstore.competingatom+json Responses Status Code Description Samples one two 200 OK"
  },
  "http-api/swagger/Subscriptions/Acknowledge a single message.html": {
    "href": "http-api/swagger/Subscriptions/Acknowledge a single message.html",
    "title": "Acknowledge a single message | Event Store",
    "keywords": "Acknowledge a single message Clients must acknowledge (or not acknowledge) messages in the competing consumer model. If the client fails to respond in the given timeout period, the message will be retried. You should use the rel links in the feed for acknowledgements not bookmark URIs as they are subject to change in future versions. Request POST /subscriptions/{stream}/{subscription}/ack/{messageid} Parameters Name Type Value Notes *stream string The stream the persistent subscription is on *subscription string The name of the subscription group *messageid string The id of the message that needs to be acked application/vnd.eventstore.competingatom+json application/vnd.eventstore.competingatom+json Responses Status Code Description Samples one two 200 New persistant subscription one two 400 bad input parameter"
  },
  "http-api/swagger/Subscriptions/Acknowledge multiple messages.html": {
    "href": "http-api/swagger/Subscriptions/Acknowledge multiple messages.html",
    "title": "Acknowledge multiple messages | Event Store",
    "keywords": "Acknowledge multiple messages Clients must acknowledge (or not acknowledge) messages in the competing consumer model. If the client fails to respond in the given timeout period, the message will be retried. You should use the rel links in the feed for acknowledgements not bookmark URIs as they are subject to change in future versions. Request POST /subscriptions/{stream}/{subscription}/ack[?ids] Parameters Name Type Value Notes *stream string The stream the persistent subscription is on *subscription string The name of the subscription group ids string The ids of the messages that need to be acked separated by commas application/vnd.eventstore.competingatom+json application/vnd.eventstore.competingatom+json Responses Status Code Description Samples one two 200 New persistant subscription one two 400 bad input parameter"
  },
  "http-api/swagger/Subscriptions/Don't acknowledge a single message.html": {
    "href": "http-api/swagger/Subscriptions/Don't acknowledge a single message.html",
    "title": "Don't acknowledge a single message | Event Store",
    "keywords": "Don't acknowledge a single message Clients must acknowledge (or not acknowledge) messages in the competing consumer model. If the client fails to respond in the given timeout period, the message will be retried. You should use the rel links in the feed for acknowledgements not bookmark URIs as they are subject to change in future versions. Request POST /subscriptions/{stream}/{subscription}/nack/{messageid}[?action] Parameters Name Type Value Notes *stream string The stream the persistent subscription is on *subscription string The name of the subscription group *messageid string The id of the message that needs to be nacked action string Park - Don't retry the message, park it until a request is sent to reply the parked messages Retry - Retry the message Skip - Discard the message Stop - Stop the subscription application/vnd.eventstore.competingatom+json application/vnd.eventstore.competingatom+json Responses Status Code Description Samples one two 200 New persistant subscription one two 400 bad input parameter"
  },
  "http-api/swagger/Subscriptions/Don't acknowledge multiple messages.html": {
    "href": "http-api/swagger/Subscriptions/Don't acknowledge multiple messages.html",
    "title": "Don't acknowledge multiple messages | Event Store",
    "keywords": "Don't acknowledge multiple messages Clients must acknowledge (or not acknowledge) messages in the competing consumer model. If the client fails to respond in the given timeout period, the message will be retried. You should use the rel links in the feed for acknowledgements not bookmark URIs as they are subject to change in future versions. Request POST /subscriptions/{stream}/{subscription}/nack[?ids&action] Parameters Name Type Value Notes *stream string The stream the persistent subscription is on *subscription string The name of the subscription group ids string The ids of the messages that need to be nacked separated by commas action string Park - Don't retry the message, park it until a request is sent to reply the parked messages Retry - Retry the message Skip - Discard the message Stop - Stop the subscription application/vnd.eventstore.competingatom+json application/vnd.eventstore.competingatom+json Responses Status Code Description Samples one two 200 New persistant subscription one two 400 bad input parameter"
  }
}